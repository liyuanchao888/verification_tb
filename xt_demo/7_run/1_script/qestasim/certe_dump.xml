<certe_dump>
  <instance type=" uvm_component "> 
     m_cpu_op 
  </instance> 
  
  
  <instance type=" c_simple_test_rw "> 
     uvm_test_top 
  
     <instance type=" c_env "> 
        m_env 
  
        <instance type=" c_agt_apb "> 
           m_agt_apb 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              item_collected_port 
           </port> 
  
           <port if_type = "uvm_put_port" txn_type = "anonymous"> 
              m_agt_port 
              <connection>  uvm_test_top.m_env.m_fifo_apb_to_rm.put_export  </connection> 
           </port> 
  
           <port if_type = "uvm_put_port" txn_type = "anonymous"> 
              m_apb_to_axi_port 
              <connection>  uvm_test_top.m_env.m_fifo_apb_to_axi.put_export  </connection> 
           </port> 
  
           <port if_type = "uvm_put_port" txn_type = "anonymous"> 
              m_apb_to_sif_port 
              <connection>  uvm_test_top.m_env.m_fifo_apb_to_sif.put_export  </connection> 
           </port> 
  
           <instance type=" c_drv_apb "> 
              m_drv 
  
              <port if_type = "uvm_put_port" txn_type = "anonymous"> 
                 m_apb_to_axi_port 
                 <connection>  uvm_test_top.m_env.m_agt_apb.m_apb_to_axi_port  </connection> 
              </port> 
  
              <port if_type = "uvm_put_port" txn_type = "anonymous"> 
                 m_apb_to_sif_port 
                 <connection>  uvm_test_top.m_env.m_agt_apb.m_apb_to_sif_port  </connection> 
              </port> 
  
              <port if_type = "uvm_put_port" txn_type = "anonymous"> 
                 m_drv_port 
                 <connection>  uvm_test_top.m_env.m_agt_apb.m_agt_port  </connection> 
              </port> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 rsp_port 
              </port> 
  
              <port if_type = "uvm_seq_item_pull_port" txn_type = "anonymous"> 
                 seq_item_port 
                 <connection>  uvm_test_top.m_env.m_agt_apb.m_sqr.seq_item_export  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" c_mon_apb "> 
              m_mon 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 ap 
                 <connection>  uvm_test_top.m_env.m_agt_apb.item_collected_port  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" c_sqr_apb "> 
              m_sqr 
  
              <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
                 rsp_export 
                 <connection>  uvm_test_top.m_env.m_agt_apb.m_sqr.sqr_rsp_analysis_fifo.analysis_export  </connection> 
              </export> 
  
              <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
                 seq_item_export 
              </imp> 
           </instance> 
  
        </instance> 
  
  
        <instance type=" c_agt_axi "> 
           m_agt_axi 
  
           <port if_type = "uvm_put_port" txn_type = "anonymous"> 
              m_agt_port 
              <connection>  uvm_test_top.m_env.m_fifo_axi_to_rm.put_export  </connection> 
           </port> 
  
           <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
              m_apb_to_axi_port  
              <connection>  uvm_test_top.m_env.m_fifo_apb_to_axi.get_peek_export  </connection> 
           </port> 
  
           <instance type=" c_drv_axi "> 
              m_drv 
  
              <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
                 m_apb_to_axi_port  
                 <connection>  uvm_test_top.m_env.m_agt_axi.m_apb_to_axi_port   </connection> 
              </port> 
  
              <port if_type = "uvm_put_port" txn_type = "anonymous"> 
                 m_drv_port 
                 <connection>  uvm_test_top.m_env.m_agt_axi.m_agt_port  </connection> 
              </port> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 rsp_port 
              </port> 
  
              <port if_type = "uvm_seq_item_pull_port" txn_type = "anonymous"> 
                 seq_item_port 
                 <connection>  uvm_test_top.m_env.m_agt_axi.m_sqr.seq_item_export  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" c_mon_axi "> 
              m_mon 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 ap 
                 <connection>  uvm_test_top.m_env.m_mon_scb_dn_fifo.analysis_export  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" c_sqr_axi "> 
              m_sqr 
  
              <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
                 rsp_export 
                 <connection>  uvm_test_top.m_env.m_agt_axi.m_sqr.sqr_rsp_analysis_fifo.analysis_export  </connection> 
              </export> 
  
              <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
                 seq_item_export 
              </imp> 
           </instance> 
  
        </instance> 
  
  
        <instance type=" c_agt_sif "> 
           m_agt_sif 
  
           <port if_type = "uvm_put_port" txn_type = "anonymous"> 
              m_agt_port 
              <connection>  uvm_test_top.m_env.m_fifo_sif_to_rm.put_export  </connection> 
           </port> 
  
           <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
              m_apb_to_sif_port  
              <connection>  uvm_test_top.m_env.m_fifo_apb_to_sif.get_peek_export  </connection> 
           </port> 
  
           <instance type=" c_drv_sif "> 
              m_drv 
  
              <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
                 m_apb_to_sif_port  
                 <connection>  uvm_test_top.m_env.m_agt_sif.m_apb_to_sif_port   </connection> 
              </port> 
  
              <port if_type = "uvm_put_port" txn_type = "anonymous"> 
                 m_drv_port 
                 <connection>  uvm_test_top.m_env.m_agt_sif.m_agt_port  </connection> 
              </port> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 rsp_port 
              </port> 
  
              <port if_type = "uvm_seq_item_pull_port" txn_type = "anonymous"> 
                 seq_item_port 
                 <connection>  uvm_test_top.m_env.m_agt_sif.m_sqr.seq_item_export  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" c_mon_sif "> 
              m_mon 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 ap 
                 <connection>  uvm_test_top.m_env.m_mon_scb_up_fifo.analysis_export  </connection> 
              </port> 
           </instance> 
  
  
           <instance type=" c_sqr_sif "> 
              m_sqr 
  
              <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
                 rsp_export 
                 <connection>  uvm_test_top.m_env.m_agt_sif.m_sqr.sqr_rsp_analysis_fifo.analysis_export  </connection> 
              </export> 
  
              <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
                 seq_item_export 
              </imp> 
           </instance> 
  
        </instance> 
  
  
        <instance type=" uvm_tlm_fifo #(T) "> 
           m_fifo_apb_to_axi 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              get_ap 
           </port> 
  
           <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
              get_peek_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              put_ap 
           </port> 
  
           <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
              put_export 
           </imp> 
        </instance> 
  
  
        <instance type=" uvm_tlm_fifo #(T) "> 
           m_fifo_apb_to_rm 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              get_ap 
           </port> 
  
           <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
              get_peek_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              put_ap 
           </port> 
  
           <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
              put_export 
           </imp> 
        </instance> 
  
  
        <instance type=" uvm_tlm_fifo #(T) "> 
           m_fifo_apb_to_sif 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              get_ap 
           </port> 
  
           <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
              get_peek_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              put_ap 
           </port> 
  
           <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
              put_export 
           </imp> 
        </instance> 
  
  
        <instance type=" uvm_tlm_fifo #(T) "> 
           m_fifo_axi_to_rm 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              get_ap 
           </port> 
  
           <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
              get_peek_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              put_ap 
           </port> 
  
           <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
              put_export 
           </imp> 
        </instance> 
  
  
        <instance type=" uvm_tlm_fifo #(T) "> 
           m_fifo_sif_to_rm 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              get_ap 
           </port> 
  
           <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
              get_peek_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              put_ap 
           </port> 
  
           <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
              put_export 
           </imp> 
        </instance> 
  
  
        <instance type=" uvm_tlm_analysis_fifo #(T) "> 
           m_mon_scb_dn_fifo 
  
           <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
              analysis_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              get_ap 
           </port> 
  
           <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
              get_peek_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              put_ap 
           </port> 
  
           <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
              put_export 
           </imp> 
        </instance> 
  
  
        <instance type=" uvm_tlm_analysis_fifo #(T) "> 
           m_mon_scb_up_fifo 
  
           <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
              analysis_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              get_ap 
           </port> 
  
           <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
              get_peek_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              put_ap 
           </port> 
  
           <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
              put_export 
           </imp> 
        </instance> 
  
  
        <instance type=" c_rm "> 
           m_rm 
  
           <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
              m_port_apb_in  
              <connection>  uvm_test_top.m_env.m_fifo_apb_to_rm.get_peek_export  </connection> 
           </port> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              m_port_apb_out 
           </port> 
  
           <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
              m_port_axi_in  
              <connection>  uvm_test_top.m_env.m_fifo_axi_to_rm.get_peek_export  </connection> 
           </port> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              m_port_axi_out 
              <connection>  uvm_test_top.m_env.m_rm_scb_dn_fifo.analysis_export  </connection> 
           </port> 
  
           <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
              m_port_sif_in  
              <connection>  uvm_test_top.m_env.m_fifo_sif_to_rm.get_peek_export  </connection> 
           </port> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              m_port_sif_out 
              <connection>  uvm_test_top.m_env.m_rm_scb_up_fifo.analysis_export  </connection> 
           </port> 
        </instance> 
  
  
        <instance type=" uvm_tlm_analysis_fifo #(T) "> 
           m_rm_scb_dn_fifo 
  
           <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
              analysis_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              get_ap 
           </port> 
  
           <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
              get_peek_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              put_ap 
           </port> 
  
           <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
              put_export 
           </imp> 
        </instance> 
  
  
        <instance type=" uvm_tlm_analysis_fifo #(T) "> 
           m_rm_scb_up_fifo 
  
           <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
              analysis_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              get_ap 
           </port> 
  
           <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
              get_peek_export 
           </imp> 
  
           <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
              put_ap 
           </port> 
  
           <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
              put_export 
           </imp> 
        </instance> 
  
  
        <instance type=" c_scb "> 
           m_scb 
  
           <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
              act_dn_port 
              <connection>  uvm_test_top.m_env.m_mon_scb_dn_fifo.get_peek_export  </connection> 
           </port> 
  
           <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
              act_up_port 
              <connection>  uvm_test_top.m_env.m_mon_scb_up_fifo.get_peek_export  </connection> 
           </port> 
  
           <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
              exp_dn_port 
              <connection>  uvm_test_top.m_env.m_rm_scb_dn_fifo.get_peek_export  </connection> 
           </port> 
  
           <port if_type = "uvm_blocking_get_port" txn_type = "anonymous"> 
              exp_up_port 
              <connection>  uvm_test_top.m_env.m_rm_scb_up_fifo.get_peek_export  </connection> 
           </port> 
        </instance> 
  
  
        <instance type=" c_sqr_apb "> 
           m_sqr 
  
           <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
              rsp_export 
              <connection>  uvm_test_top.m_env.m_sqr.sqr_rsp_analysis_fifo.analysis_export  </connection> 
           </export> 
  
           <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
              seq_item_export 
           </imp> 
        </instance> 
  
     </instance> 
  
  </instance> 
  
  </certe_dump>