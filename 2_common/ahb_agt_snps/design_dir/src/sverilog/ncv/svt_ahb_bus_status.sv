
`ifndef GUARD_SVT_AHB_BUS_INFO_SV
`define GUARD_SVT_AHB_BUS_INFO_SV

`include "svt_ahb_defines.svi"

/**
  * Defines attributes that are shared between the arbiter, decoder
  */

class svt_ahb_bus_status extends `SVT_DATA_TYPE; 

/** @cond PRIVATE */
  /**
   * Current hmaster: generated by arbiter
   *
   */
  bit [(`SVT_AHB_HMASTER_PORT_WIDTH-1):0] curr_hmaster;

  /**
   * Previous hmaster: registered version of curr_hmaster
   */
  bit [(`SVT_AHB_HMASTER_PORT_WIDTH-1):0] prev_hmaster;

  /**
   * Currently selected slave: generated by decoder
   */
  int curr_sel_slave;

  /**
   * Previously selected slave: registered version of curr_sel_slave
   */
  int prev_sel_slave;  

  /**
   * Indicates currently selected hsel index of selected slave having multiple HSEL signals: generated by decoder
   */
  int curr_slave_multi_sel_idx;

  /**
   * Indicates previously selected hsel index of selected slave having multiple HSEL signals: generated by decoder
   */
  int prev_slave_multi_sel_idx;

/** @endcond */

`ifdef SVT_VMM_TECHNOLOGY
  /**
   * CONSTUCTOR: Create a new slave address range
   *
   * @param log Instance name of the log. 
   */
`svt_vmm_data_new(svt_ahb_bus_status)
  extern function new (vmm_log log = null);
`else
  //----------------------------------------------------------------------------
  /**
   * CONSTUCTOR: Create a new slave address range
   *
   * @param name Instance name of the configuration
   */
  extern function new (string name = "svt_ahb_bus_status");
`endif

  //----------------------------------------------------------------------------
  /**
   * Returns the class name for the object used for logging.
   */
  extern function string get_mcd_class_name ();


`ifdef SVT_VMM_TECHNOLOGY
  // ---------------------------------------------------------------------------
  /**
   * Compares the object with to, based on the requested compare kind.
   * Differences are placed in diff.
   *
   * @param to vmm_data object to be compared against.
   * 
   * @param diff String indicating the differences between this and to.
   * 
   * @param kind This int indicates the type of compare to be attempted. Only
   * supported kind value is svt_data::COMPLETE, which results in comparisons of
   * the non-static configuration members. All other kind values result in a return
   * value of 1.
   */
  extern virtual function bit do_compare(vmm_data to, output string diff, input int kind = -1);

  /**
   * Returns the size (in bytes) required by the byte_pack operation based on
   * the requested byte_size kind.
   *
   * @param kind This int indicates the type of byte_size being requested.
   */
  extern virtual function int unsigned byte_size(int kind = -1);
  
  // ---------------------------------------------------------------------------
  /**
   * Packs the object into the bytes buffer, beginning at offset. based on the
   * requested byte_pack kind
   */
  extern virtual function int unsigned do_byte_pack(ref logic [7:0] bytes[], input int unsigned offset = 0, input int kind = -1);

  // ---------------------------------------------------------------------------
  /**
   * Unpacks len bytes of the object from the bytes buffer, beginning at
   * offset, based on the requested byte_unpack kind.
   */
  extern virtual function int unsigned do_byte_unpack(const ref logic [7:0] bytes[], input int unsigned    offset = 0, input int len = -1, input int kind = -1);
`endif

  //----------------------------------------------------------------------------
  /** Used to limit a copy to the static configuration members of the object. */
  extern virtual function void copy_static_data(`SVT_DATA_BASE_TYPE to);

  //----------------------------------------------------------------------------
  /** Used to limit a copy to the dynamic configuration members of the object.*/
  extern virtual function void copy_dynamic_data(`SVT_DATA_BASE_TYPE to);

  // ---------------------------------------------------------------------------
  /**
   * HDL Support: For <i>read</i> access to public configuration members of 
   * this class.
   */
  extern virtual function bit get_prop_val(string prop_name, ref bit [1023:0] prop_val, input int array_ix, ref `SVT_DATA_TYPE data_obj);

  //----------------------------------------------------------------------------
  /**
   * HDL Support: For <i>write</i> access to public configuration members of
   * this class.
   */
  extern virtual function bit set_prop_val(string prop_name, bit [1023:0] prop_val, int array_ix);

  // ---------------------------------------------------------------------------
  /**
   * This method allocates a pattern containing svt_pattern_data instances for
   * all of the primitive configuration fields in the object. The 
   * svt_pattern_data::name is set to the corresponding field name, the 
   * svt_pattern_data::value is set to 0.
   *
   * @return An svt_pattern instance containing entries for all of the 
   * configuration fields.
   */
  extern virtual function svt_pattern allocate_pattern();


  // ***************************************************************************
  //   SVT shorthand macros 
  // ***************************************************************************

  `svt_data_member_begin(svt_ahb_bus_status)
    `svt_field_int(curr_hmaster ,`SVT_HEX| `SVT_ALL_ON)
    `svt_field_int(prev_hmaster ,`SVT_HEX| `SVT_ALL_ON)
    `svt_field_int(curr_sel_slave ,`SVT_DEC | `SVT_ALL_ON)
    `svt_field_int(prev_sel_slave ,`SVT_DEC | `SVT_ALL_ON)
    `svt_field_int(curr_slave_multi_sel_idx,`SVT_DEC | `SVT_ALL_ON)
    `svt_field_int(prev_slave_multi_sel_idx,`SVT_DEC | `SVT_ALL_ON)
  `svt_data_member_end(svt_ahb_bus_status)

endclass

// -----------------------------------------------------------------------------

//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
BO/Ojbz4LMvZekX4VnkxKwy0ri+qo3NUSazLe6i19wHxjuCTu06weAT4wfvD8JCs
SH47teSTf22iqWetDzfCdg3EbsqzYbeIBWZoMyzIXKJYojepqkp0qoyi2bXepecp
0xkHWwT8bYpP6G7FQNQ5LwOmagfAJrmFiVkpQxr9FDKey4HKFdHaXg==
//pragma protect end_key_block
//pragma protect digest_block
AGgMZDeQWId0wz2CN7stgohb6kI=
//pragma protect end_digest_block
//pragma protect data_block
VRJpQoICTxnohwkOZJ4bwq8TXZYcZt4ivY7W+OJw2GYT+F+ym6GpMN0AITARTjq+
Ai2BgxEUCuzzkV4o1jozyc0jROLzhHxTuC4QymGzrmYXkszaB05qHty/vOz4njoM
KF1FzofZCAjJDkJdFzulZHp4bUzyZHPloB1+vgcmZ8rPXHEfanqIom4qBeH2l+mT
081CnP17OnPzUth7+VHTJHnqtDi2tj8aZivFXG060ebsBMoSjSiEYZjSQ1PL33ec
YOzh/2nLDUOyJU7RyqOPnU7QfA67l2RrvC28NxjUXKKXYroWUNi6ZJZxKdqkzyAw
BzRc6PzWClJcnl+zYbe/SatF8FYK6aGeYCMt8Id3SmUCqpCkkesRgrFLgBBcujt6
Jyynh9tlEo3p51kYDkX7mjM1ODsfacyFW98WeQjWrhPnc74pSA0P2oMKKTMn6Z4X
Az4vF8zVccHdUCQMkVXY8Hm6sh0vIB09iM2O4CDJI46HayaUf7n8z1s/Gkh22L6o
iJL6gjmXGFu8RPDqLWf52/d8O3Rp6xwxmoI7vde2vXaRIJfkouAgWMfV6IAsrDx3
7HOtQUVm/F9BMmpu6MvsZMok8WueLZ3Tl2Wk7JJYMq4BuxdHgCixMhtBvnUPPQu2
0nrPCkcPBEPidycyibzuPFf5fwGucIzOFdC7oxwXRjf3zW2440KRB+l6tKeLlGbg
aAfSW+yNPRfWYEpsjD/BZxLJGSJHqXwSYaQ2uG4BWNQ=
//pragma protect end_data_block
//pragma protect digest_block
o/KSNR/KoKEpUgV6yXMGXWhLNKs=
//pragma protect end_digest_block
//pragma protect end_protected

// -----------------------------------------------------------------------------
//vcs_vip_protect
//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
f633YWpQ6ZjVnCn5PIz7kRtolVGGLZ30WfOADl3UYOHLj94tbhs+ybkerlfUMs84
ZLYq0gDre/JVgEn88Y1lRlMfSnvE4+9YWwF98ThDzmkW5CbJqKZTpxkR+yTqnN2t
LbNMwdr88jRB/7rAzTJAYFBGyfguxNEIUX9fheusw84gMapc6/2zzg==
//pragma protect end_key_block
//pragma protect digest_block
U63h5DqNe7jaX/+XhkDbBvyfMUw=
//pragma protect end_digest_block
//pragma protect data_block
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
mjmrom36c1JDCNc/5NDq9g==
//pragma protect end_data_block
//pragma protect digest_block
SiuuvBLQs5YXHJMGjjXO1FxyeGk=
//pragma protect end_digest_block
//pragma protect end_protected

`endif // GUARD_SVT_AHB_BUS_INFO_SV
