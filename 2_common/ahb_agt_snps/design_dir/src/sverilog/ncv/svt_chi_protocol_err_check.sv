//--------------------------------------------------------------------------
// COPYRIGHT (C) 2013-2020 SYNOPSYS INC.
// This software and the associated documentation are confidential and
// proprietary to Synopsys, Inc. Your use or disclosure of this software
// is subject to the terms and conditions of a written license agreement
// between you, or your company, and Synopsys, Inc. In the event of
// publications, the following notice is applicable:
//
// ALL RIGHTS RESERVED
//
// The entire notice above must be reproduced on all authorized copies.
//--------------------------------------------------------------------------

`ifndef GUARD_SVT_CHI_PROTOCOL_ERR_CHECK_SV
`define GUARD_SVT_CHI_PROTOCOL_ERR_CHECK_SV
/**
 * Class declaration of each of the error check stats instances using the 
 * `SVT_ERR_CHECK_STATS_COV_PREFIX_EXTENDED_CLASS_DECL(svt_chi_prot,stats_name) MACRO.
 * 
 * Each call of the MACRO would declare an extended "svt_err_check_stats_cov.sv" class
 * named as "svt_err_check_stats_cov_<stats_name>".
 */
`ifndef SVT_VMM_TECHNOLOGY
`ifndef SVT_AMBA_EXCLUDE_CHI_NODE_PL_CHECK_COVERAGE
//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
yj3dQKFnk2NMrzu04wEITmfBHN6ZnrYCiUF07wyACoRUaDzEHWhLrJKW1FhhzKAA
Nh5Y2Jt5dGeOp7RcKR0KYVz1jBvT8UWpifhAbvDwA9zgqJ8M4Bf2drb4PMImltLI
qkrxf3MuGu8w5OaAj3w9/Grybggodqg7U8nJDb7RrR/RCUoeMaCBQA==
//pragma protect end_key_block
//pragma protect digest_block
0euKEAMoSNJizo3SHJmTD5V9Mfo=
//pragma protect end_digest_block
//pragma protect data_block
XLZDBZ5vRfUe0B2A4efrXocomOcHUN+JPnVBZGWbGQi5GyuWTmsYevAm4AkVRajO
2dLI1HPKskTLzLHb4GVT8hrt6gNb3FsnCF/L9XqLKHTfyNeOm+SEM6CylkbZ9LP+
CiK+L0EjPzaxIUjiGTjefO1DRkro5Wz0S9XbHcQePXtd4tvn59hlF7hvGrpsrcbf
FPL6o4t9OHi+SV3Ce5JWSDJMCdruanzvWn/tAsRkqSpZ+xHt/CUj9NPwO1hdMm7f
YP9ZTdcVnjqTV/Bdesc31WdgYuuvy9LEFmZdl/ojiVZF2m0Lqvh94x3z6Br+g8lc
VMcPOaMsWdsKIHe5WkiaSejV0GVUSdJk7FhoJP2H7Og+Ej1poyegViMGvU/Q0Kkr
MNF0wyauC0ftHsQZIIQDYw==
//pragma protect end_data_block
//pragma protect digest_block
/vwLb0QzLExm+r4f2w/ZW0fUVkA=
//pragma protect end_digest_block
//pragma protect end_protected
//vcs_lic_vip_protect
//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
/BK7163RaWzgmXJTewAUam+Yyxchb/yDBMPnIDIeUbQzf3sffe8ptScPjR30L1oJ
YoahaZuNP7jgA3Gd6hBIdKfM00H3x5k6FfXn0S0ym03Q4bLoAbwlyH+/PIZeY3JO
18NeLpQHnuKJmE0KzGgx4X2ulC+LDEmMhXEVDBR4ZYJoZW8x9fWD4w==
//pragma protect end_key_block
//pragma protect digest_block
hcgWTIgWdxvGCN5sHKQ2zfvKCkY=
//pragma protect end_digest_block
//pragma protect data_block
73XFX+0RxAqwZRQloO/ZTkQvcj3+STXkyheT6dJrNQlKzCEVcs1rGUDZVfT7vaoz
Ysz2fnOeB9eaqo62q45rH5XML7SgpgHTG2nDckygQKZxmp/AVyHN8Rewgz5gWmj8
refElX/bAbBSVgS662Ae6mWkIhUruZv0Nnepa/vrnQBotCG41uMecqF4GR2hjSQS
4iW3nhUYcbCy5+xFR/TbkGewa1qqMjPuj2yUCdoR6DiuQYEogrtocmyAC0GZqfhp
whGP0T+RLkLAgk8ZA6+B8Gq0bEUQFZhzxr053x+Xtbjz0LTqTSNU7d/TOJlEcwZq
7UHTvO83KLwNOAxqy23SeahyhOVEmJ+4G6MFq3jeSJzKIHQzVAZzwCxuRF7GHvTc
6Dq2yxmEfkNHZeTR3o3FfuvMEj8PlVXIJ9/V99hRKfhvaoRT3E0yFuuWViUshmSC
W6uzBpVDD7Ha1zJAKdE1fxTRVPBSuCttkdjmjcE2aUjBUtMbWkFNqgQzUIoNkz44
1nXihJglPLqyVumZ2u5TfH2uQfFDLxPg49LvR8wmdQ8JP5yw8H+VREsBBFBryjCe
bioLr1kr3uES/WTNLd1iBLpL2qMJvQty7Dew/cqPHLNXDkddTYhUxl1cwOjwu8WQ
rDOP2A9MtPPyCyLjOW1tXolZEmWzhKayLAM+gZcOaNJyhxZVKYKYf6R4NSDtKvnV
0vr1ZEdqnIDYiYmdrTxZWc2QPA7NpzZIbBMIZ99gnZ+YJDhF/h/8tfi9gwPMq/Pt

//pragma protect end_data_block
//pragma protect digest_block
/ab9fAgQqplt6stJx3MfYXP+TSc=
//pragma protect end_digest_block
//pragma protect end_protected
//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
BuuLmcqgZCzX1qnblG0Qxx3O+pqW6Isk8sPijL1+N9t4F6osuzoaSERENb7K4GKh
2qtZsDr7DTKJMhhdNs1DWmM+jm2arPDN9BrTrW57HlYd0xUi0UKsSRJ+VzeWSWgh
t+CG2VZ16fyOZh/CFZci93+VYV4lBxZpayptie5DwMiF5cIcr7V5DQ==
//pragma protect end_key_block
//pragma protect digest_block
x8+9QYVsCknRvTxXYfPp6ny9bdg=
//pragma protect end_digest_block
//pragma protect data_block
xFV3RJkjX6n+vkWgi8x1tZZu7Z3Ved+86iChUaThy0KK6tNDrxMeir27Rap5ncKJ
li+SusXe5fBJVJM0rJpzTcofinNmAtCs4omiQGp8tBlqgorPc9YdJZSUJbbZDlEG
JikC+/+AQzTOzpZLJPI07OYNibHx39Zn7GTtOJzFQUFeU8z/jemyuDXC/TR58XUP
7npYrwW/RJXQmQ5H27uL/7dMhqWf8TeZX5ylpZfvw1qTzgfnpJuJBO7gn9yLtS8q
F+mF7VhZglaUnxVbaWtejVVXGRYmpC/3jPhyPrYKwtze0MBpkS0H88p6gEEZBhX5
PmxYAc+hFSqaRUgs2qyc8eD85WXtvAE827Xh4kKcUk7Pi2BQx28gL7Jt970APZlf
Rl/lykgXfgaZ+dNX1KFFB+yKanMbENFwgDdoCL+BC/lLLF9tcZBEc/tDYH89WfJW
bQunP3OqWzV13imGYRndS7bDK4ULIUCyiG25nh6ZrmI/ddHNx26tXKqJHFa/O7XV
Sr+V4LfshjEvqUDcCbIpZw==
//pragma protect end_data_block
//pragma protect digest_block
sD/r3aOLNgyi9eMsPFsQfyYP+Y4=
//pragma protect end_digest_block
//pragma protect end_protected
//vcs_lic_vip_protect
//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
1quiVx1vaNYW7KGGfgguwqW5C5LeZ6t5XbudcEIrWVOffStdP4sJ7ryKETeyei5g
+CwXqMT2TuBw4WK5pf0pmjR41fNJ5ZrC+0qctKfvFtsIQJIbCejS9rtc5qA0vpeM
bRMs1vT2U1wNDp5MX/85umHL/tVw2aLEopISSThm5lXZUKB79HYOVg==
//pragma protect end_key_block
//pragma protect digest_block
zzweSm9s3Qfw94rwjtqlQ0zwk/0=
//pragma protect end_digest_block
//pragma protect data_block
mFBUV7/TB7n6W60pCls6RFL3USdJNUbV6Oow8G/m9vvk3HmPo2ZxFsD4P0Nb/XTK
6cgRucv5YMt2mLyyo9qmXLY81nM4NrEtM4SbwRuCW32Iy7gVQyTP/PyehFVvsyyZ
5EP6WEGUcrzO8qFsTTxTUtHZkBuQ4D/RqbOeMZvIKBAlsqYxIN3OuEPZHVhSgncx
28iYrnRdmmWvT4kPy4+z4zq/BGkv2GrIu4UkbCQSJffEAKZZTUIq7XHC+/tn6O1O
fu2XvuG+CaaWCMcfoEWbLHwK/LjC51p0pV4MME01hXYxYWTN6wGJuV2MyRBBiA9y
coIor13bv4H/IXL8UVWK/wy9Vn3FkPsn4G/29IpnJ+ZbeNDtmJeFuGgF2sY/paS9
0oWCYUYVzDqgEGxUiqWnMnkr7OB4IDOAHy3I3avS7H4IYupBuxjq4hs0yQfVNpgk
4YRhKTZUgQoscvrAhraYUtKlxAwR66a60yJ7GBKCOshsEHZy653aLvDXBQP3QXy2
q4NKXJRCeqGoEVvj4yxU/Q==
//pragma protect end_data_block
//pragma protect digest_block
xSwYehKwikSJwEV3MFn8jbxx0TY=
//pragma protect end_digest_block
//pragma protect end_protected
//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
MIDvG65JrhWyIDLJ5/8qsFU9H4XmXENTsdIVbRdlo7OTuhXh7ggXULwrp+kzjInM
HggPPvvZNuuk+dp/5C/vV5dpb+qWiHRziP8YzANI9pcjX3CS+OafNPfpkatH+Dk9
cxVz+EAFnzibCoobmouiCwVdEgadjqOqjDB1L42DjmECAUmQT5X5jA==
//pragma protect end_key_block
//pragma protect digest_block
aN1yfYNuwyCqAoLxewrOaCxjvOM=
//pragma protect end_digest_block
//pragma protect data_block
ueUC6uTBlBtPQJTTf0p1Fij/IGWFWzHWhNGEJnlJC3bdY6aqHp9enqPPVFhs61ec
YBPI+x4/ZdlT6551d/rlkvUgo81W8p/bEgu8wfdKyrsugUG7DeZ7zZTQlQ5PuGCg
92lgaF13jB9BUA40lIt6xTO3d7udX/4cl0bBM0to+2j/8J5rsgTeVjkXVaNFgwl3
LCfRCSpzISv2gIpDJkjAQxHQUyzK93/kVO+pMqRuxbWiR4iauo7K6PzmgL1IUaD9
poeiuKwKUGTcp+JXOpi3s8tbLpDI93xpVUM6YboungJxw3RRzeKg9mlOWzW+oTH4
0mrVct6jhi62FWPibZVU+gDlK4YPD2xtQwq52iTuLVm0npUcaCehBRqh8/XCEgsR
thguwpWHrjS23WZAJ46BMnM45MPiC1zZMeB6UFcthK4=
//pragma protect end_data_block
//pragma protect digest_block
wovPWVcg7EnMlfZRLIjlhHOHypA=
//pragma protect end_digest_block
//pragma protect end_protected
//vcs_lic_vip_protect
//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
qPB3i7alUT+FIFdqmoTzt32ECfyDyvK1VyojHceSJbOAGs472ESLJWIgOyg6hboc
4Zwo+xUW1AL+6zT3ZYdFo82Ym3aNFvSN1M2XF+Fx7rKQKeGkmH5kj6cS/6b7HK4t
XjOwZrmTci9s97hwCszA29fjWL4oT9yM4YZAWCqMSePsHnKlx+7Wog==
//pragma protect end_key_block
//pragma protect digest_block
zZWuL4rJV2SP5+jPzb4RkNRP5cc=
//pragma protect end_digest_block
//pragma protect data_block
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

//pragma protect end_data_block
//pragma protect digest_block
qJ3UG62tSw6wZD3jetAabNVxm3A=
//pragma protect end_digest_block
//pragma protect end_protected
`endif //  `ifndef SVT_AMBA_EXCLUDE_CHI_NODE_PL_CHECK_COVERAGE

`endif //  `ifndef SVT_VMM_TECHNOLOGY



// =============================================================================
/**
 * Derived sampling and checking class used by CHI Protocol components to 
 * register layer wide checks.
 */
class svt_chi_protocol_err_check extends svt_err_check;

  /**
    @grouphdr chi_protocol_err_valid_data_flit_check Valid DAT flit checks
    This group contains checks for Data flits.
    */

  /**
    @grouphdr chi_protocol_err_ordering_check Request ordering checks
    This group contains ordering related checks.
    */

  /**
    @grouphdr chi_protocol_err_valid_response_flit_check Valid RSP flit checks
    This group contains checks for Response flits.
    */

  /**
    @grouphdr chi_protocol_err_valid_request_flit_check Valid REQ flit checks
    This group contains checks for Request flits.
    */

  /**
    @grouphdr chi_protocol_err_response_ordering_check Response sequencing checks 
    This group contains checks related to the ordering of response flits.
    */

  /**
    @grouphdr chi_protocol_err_response_flit_to_xact_association_check RSP flit to transaction association checks
    This group contains checks related to the association of Response flits to coherent transactions.
    */

  /**
    @grouphdr chi_protocol_err_data_flit_to_xact_association_check DAT flit to transaction association checks
    This group contains checks related to the association of Data flits to coherent transactions.
    */

  /**
    @grouphdr chi_protocol_err_retry_check Retry related checks
    This group contains retry related checks.
    */

  /**
    @grouphdr chi_protocol_err_dvmop_check DVMOp related checks
    This group contains DVMOp related checks.
    */

  /**
    @grouphdr chi_protocol_err_valid_snoop_req_check SNP REQ flit checks
    This group contains checks for Snoop Request flits.
    */

  /**
    @grouphdr chi_protocol_err_valid_resperr_check RespErr field checks
    This group contains checks for the RespErr field.
    */

  /**
    @grouphdr chi_protocol_err_valid_data_source_checks data_source field checks
    This group contains checks for the data_source field.
    */

  /**
    @grouphdr chi_protocol_err_valid_cache_state_in_resp_check Resp cache state checks
    This group contains checks the validity of the cache state in the Resp field.
    */

  /**
    @grouphdr chi_protocol_err_valid_sactive_check SACTIVE signal validity checks
    This group contains checks for SACTIVE signal.
    */

  /**
    @grouphdr chi_protocol_err_perf_cst_check Built-in perf monitor checks
    This group contains checks for performance metrics constraints violations.
    */
  
  /**
    @grouphdr chi_protocol_transaction_inactivity_check transaction timeout related checks
    This group contains checks for transaction inactivity timeout.
    */
  
  /**
    @grouphdr chi_protocol_exclusive_access_check Exclusive access related checks
    This group contains checks for Exclusive Access.
    */
  
  /**
    @grouphdr chi_protocol_dmt_check DMT related checks
    This group contains checks for DMT feature.
    */
  
  /**
    @grouphdr chi_protocol_dwt_check DWT related checks
    This group contains checks for DWT feature.
    */
  
  /**
    @grouphdr chi_protocol_trace_tag_check trace_tag related checks
    This group contains checks for trace_tag feature.
    */
  
  /**
    @grouphdr chi_protocol_sysco_interface_check sysco interface related checks
    This group contains checks for sysco interface feature.
    */
  
  /**
    @grouphdr chi_custom_check custom related checks
    This group contains custom checks.
    */
  
  /** @cond PRIVATE */
  // ****************************************************************************
  // Local Data
  // ****************************************************************************

  /**
   * The group name of the checks defined in this class.
   */
  local string group_name = "protocol";

  /**
   * The sub-group name of the <specify sub-group purpose> checks defined in this class.
   */
  local string sub_group_name = "";

  /**
   * Controls whether checks are enabled by default
   */
  local bit enable_default_chks;

  local svt_chi_node_configuration node_cfg;

  /** Enables protocol check coverage provided it pl_protocol_checks_coverage_enable is set
  * in the node configuration as well. If enable_pc_cov is 0, then protocol checks coverage
  * will not be enabled, even if it is set in configuration
  */
  local bit enable_pc_cov = 1;

  /** @endcond */
  
  // ****************************************************************************
  // Public Data Properties
  // ****************************************************************************

//  /**
//   * Check: <Description of failure situation>
//   */
//  svt_err_check_stats <check_name>_check;
`ifndef __SVDOC__
  /** @cond DEPRECATED_CHECK */
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * This check is deprecated. Please refer to the documentation of the checks 
   * svt_chi_protocol_err_check::tx_dat_flit_data_id_check and
   * svt_chi_protocol_err_check::rx_dat_flit_data_id_check.
   * Check the DataId field value related to data size and the width of the 
   * of DAT Flit.
   * ARM-IHI0050A: 11.9.23
   */
  svt_err_check_stats dat_flit_data_id_check;
  /** @endcond */
`endif //  `ifndef __SVDOC__
  
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check the DataId field value of transmitted DAT flits from the monitored DUT. <br>
   * This is determined based on data width of DAT VC along with data size of the 
   * corresponding transaction. <br>
   * Note that this check, in case CCF Wrap Order is set to True at the sender, checks that the first data flit transmitted corresponds to the critical chunk indicated by CCID (,ie, the data_id of the first data flit matches the CCID value). 
   * For the subsequent flits, the check ensures that the data_id values are set correctly. <br>
   * In case CCF Wrap Order is set to False at the sender, this check only verifies that the data_id takes one of the legal values prescribed in Table 11-29 (ARM-IHI0050A) and Table 12-41(ARM IHI 0050B-ID080717). <br>
   * Following are the Tx DAT flit types considered by this check. <br>. 
   * If the monitored DUT is RN: <br>
   * - CopyBackWrData
   * - NonCopyBackWrData
   * - SnpRespData
   * - SnpRespDataPtl
   * .
   * If the monitored DUT is SN: <br>
   * - CompData
   * . 
   * @end_check_description
   *
   * @check_pass
   * DataID value in the data flit transmitted by the active RN/SN agent is as per Table 11-29 (ARM-IHI0050A) and Table 12-41 (ARM IHI 0050B-ID080717).
   * @end_check_pass
   *
   * @check_fail
   * DataID value in the data flit transmitted by the active RN/SN agent violates the legal values specified in Table 11-29 (ARM-IHI0050A) and Table 12-41 (ARM IHI 0050B-ID080717).
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN and Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats tx_dat_flit_data_id_check;


  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check the DataId field value of received DAT flits by the monitored DUT. <br>
   * This is determined based on data width of DAT VC along with data size of the 
   * corresponding transaction. <br>
   * Note that this check, in case of in-order Interconnect, checks that the first data flit transmitted corresponds to the critical chunk indicated by CCID (,ie, the data_id of the first data flit matches the CCID value). 
   * For the subsequent flits, the check ensures that the data_id values are set correctly. <br>
   * Incase of out-of-order interconnect, this check only verifies that the Data_ID takes one of the legal values prescribed in Table 11-29 (ARM-IHI0050A) and Table 12-41(ARM IHI 0050B-ID080717). <br>
   * Following are the Rx DAT flit types considered by this check. <br>. 
   * If the monitored DUT is RN: <br>
   * - CompData
   * .
   * If the monitored DUT is SN: <br>
   * - NonCopyBackWrData
   * . 
   * @end_check_description
   *
   * @check_pass
   * DataID value in the data flit received by the RN/SN agent is as per Table 11-29 (ARM-IHI0050A) and Table 12-41(ARM IHI 0050B-ID080717).
   * @end_check_pass
   *
   * @check_fail
   * DataID value in the data flit received by the RN/SN agent violates the legal values specified in Table 11-29 (ARM-IHI0050A) and Table 12-41 (ARM IHI 0050B-ID080717).
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats rx_dat_flit_data_id_check;
  
  /**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that single ordered stream of requests from RN are ordered as per Request Ordering rules. <br>
   * Request Ordering Rules update from CHI Issue D onwards:
   * - In CHI Issue C or earlier, the Endpoint ordering guarantees the order of multiple transactions, from the same agent, to the same endpoint address range and includes the guarantee of Request Order. 
   * - In CHI Issue D or later, there will be no ordering guarantees between two ordered transactions from the same source that have different ordering requirements. In other words, Endpoint ordering guarantees the order of multiple transactions, from the same agent, to the same endpoint address range, but doesn’t include the guarantee of Request Order.
   * .
   * @end_check_description
   *
   * @check_pass
   * In CHI Issue C or earlier:   
   * - When a new Ordered transaction is observed and there are either no preceding Ordered transactions or there are preceding Ordered transactions whose ordering conditions are already met.
   * .
   * In CHI Issue D or later:
   * - When a new Request_Ordered transaction is observed and there are either no preceding Request_Ordered transactions or there are preceding Request_Ordered transactions whose ordering conditions are already met.
   * - When a new Endpoint_Ordered transaction is observed and there are either no preceding Endpoint_Ordered transactions or there are preceding Endpoint_Ordered transactions whose ordering conditions are already met.
   * .
   * @end_check_pass
   *
   * @check_fail
   * In CHI Issue C or earlier:   
   * - When a new Ordered transaction is observed and there are preceding Ordered transactions whose ordering requirements are not yet met.
   * .
   * In CHI Issue D or later:
   * - When a new Request_Ordered transaction is observed and there are preceding Request_Ordered transactions whose ordering requirements are not yet met.
   * - When a new Endpoint_Ordered transaction is observed and there are preceding Endpoint_Ordered transactions whose ordering requirements are not yet met.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * - svt_chi_node_configuration::num_req_order_streams should reflect the number
   *   of request order streams that the RN has. 
   * - The passive RN agent performs this check only when the number of request
   *   order streams is one, ie, svt_chi_node_configuration::num_req_order_streams is set to 1. 
   *   This is because the stream ID to which a given transaction
   *   belongs is not transmitted on the interface. So it is important to make 
   *   sure that the passive RN agent is configured appropriately for this.
   * - The passive RN agent can track the transactions those have the ReqOrder
   *   information transmitted on the interface, that is available through
   *   svt_chi_base_transaction::order_type. Note that the CopyBack type transactions 
   *   do not transmit the ReqOrder information on the interface through REQ VC Flit.
   * .
   * @end_check_additional_information
   */
  svt_err_check_stats single_req_order_stream_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the DBID field value of the following RSP flits is as follows. <br>
   * This check is applicable only when svt_chi_system_configuration::chi_version is 
   * set to svt_chi_system_configuration::VERSION_3_0. <br>
   * RSP flits: <br>
   * - SnpResp, RetryAck, ReadReceipt: In case of CHI v3.0 DBID field must be set to either zeroes or
   *   TxnID of originating request if applicable. For SnpResp, originating request
   *   is the Snoop request.
   * - Comp/DBID/CompDBIDResp: DBID field must be unique for a given transaction and can be reused only after the transaction completes
   * .
   * In case of WriteNoSnpZero and WriteUniqueZero transactions dbid field in Comp/DBID/COMPSBISREesp is inapplicable and can take any value.
   * @end_check_description
   *
   * @check_pass
   * For Dataless transactions with ExpCompAck asserted, the DBID field in the Comp response is unique and there are no other outstanding non-DMT and non-DCT transactions that have received the same DBID value. <br>
   * For Read transactions with ExpCompAck asserted, the DBID field in the RespSepData response is unique and there are no other outstanding non-DMT and non-DCT transactions that have received the same DBID value. <br>
   * For Write transactions(except WriteNoSnpZero and WriteUniqueZero), the DBID field in Comp (for Issue B or lower revisions) or DBIDResp or CompDBIDResp is unique and there are no other outstanding non-DMT and non-DCT transactions that have received the same DBID value.
   * @end_check_pass
   *
   * @check_fail
   * For Dataless transactions with ExpCompAck asserted, the DBID field in the Comp response is not unique; there is already an outstanding non-DMT and non-DCT transaction with the same DBID value. <br>
   * For Read transactions with ExpCompAck asserted, the DBID field in the RespSepData response is not unique; there is already an outstanding non-DMT and non-DCT transaction with the same DBID value. <br>
   * For Write transactions(except WriteNoSnpZero and WriteUniqueZero), the DBID field in Comp (for Issue B or lower revisions) DBIDResp or CompDBIDResp is not unique; there is already an outstanding non-DMT and non-DCT transaction with the same DBID value. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats rsp_flit_dbid_check;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the DBID field value of the following DAT flits is as follows. <br>
   * DAT flits: <br>
   * - SnpRespData, SnpRespDataPtl, NonCopyBackWrData, CopyBackWrData: In case of CHI-A nodes, DBID field
   *   must be zeroes or must be set to TxnID of originating request. For SnpRespData*, 
   *   originating request is the Snoop request.
   * - CompData: DBID field must be unique for a given non-DMT and non-DCT Read transaction with ExpCompAck asserted
   *   and can be reused only after the transaction completes.
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * For Write/Snoop transactions, the DBID of the observed Data flit is either zero or equal to the TxnID of the associated transaction. <br>
   * SCENARIO 2: <br>
   * For Read transactions with ExpCompAck asserted, the DBID of the observed Data flits is unique and there are no other
   * Outstanding non-DMT and non-DCT transactions that have received read data with the same DBID value. <br>
   * @end_check_pass
   *
   * @check_fail
   * In case of Write/Snoop transactions, the DBID of the observed Data flit is neither zero or equal to the TxnID of the associated transaction. <br>
   * In case of non-DMT and non-DCT Read transactions with ExpCompAck asserted, the DBID of the observed Data flits is not unique; there already is an
   * outstanding non-DMT and non-DCT transaction that has received read data with the same DBID value.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats dat_flit_dbid_check;  

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * - A Comp response sent separate from a DBIDResp or DBIDRespOrd response for a write transaction (except Atomic transactions) must include the same DBID field value in the Comp and DBIDResp or DBIDRespOrd message.
   * - Applicable only in case of non-copyback Write transactions and non-copyback Combined Write plus CMO transactions as the copyback transactions always include a combined CompDBIDResp response. Applicable only if the Direct Write Data transfer is not exercised for the Write transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A same DBID field value is observed in Comp and DBIDResp or DBIDRespOrd reponses for a non-copyback Write transaction or non-copyback Combined Write plus CMO transaction with separate comp and DBIDResp or DBIDRespOrd reponses.
   * @end_check_pass
   *
   * @check_fail
   * A different DBID field value is observed in Comp and DBIDResp or DBIDRespOrd reponses for a non-copyback Write transaction or non-copyback Combined Write plus CMO transaction with separate comp and DBIDResp or DBIDRespOrd reponses.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats separate_dbidresp_and_comp_must_include_same_dbid_value_check;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * For a Read transaction, if the DBID is valid then the DBID field must take same value in all the corresponding read data flits. DBID is valid if ExpCompAck is set to 1 for the corresponding Read transaction.
   * @end_check_description
   * 
   * @check_pass
   * A same DBID field value is observed in all the read data flits (CompData or DataSepResp) corresponding to a Read request with ExpCompAck set to 1.
   * @end_check_pass
   *
   * @check_fail
   * A difference in DBID field value is observed across the read data flits (CompData or DataSepResp) corresponding to a Read request with ExpCompAck set to 1. 
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats dbid_value_must_be_same_across_read_data_flits_check;

  /**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that the Ordering field of the transaction corresponding to the readreceipt is set. <br>
   * @end_check_description
   *
   * @check_pass
   * A ReadReceipt response is received for an Ordered Read transaction.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A ReadReceipt is received for a Read transaction whose request order field was set to "NO ORDERING REQUIRED". <br>
   * SCENARIO 2: <br>
   * A ReadReceipt is received, at a CHI Issue C RN, for an Ordered Read transaction which has already received RESPSEPDATA. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * If the request Order field indicates that ordering is required then
   * a ReadReceipt response must be returned on the CRSP channel when order has been established.
   * @end_check_additional_information
   * 
   */
  svt_err_check_stats associate_readreceipt_to_xact_check;

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the CCID field value in the data flit is set correctly. <br>
   * - CCID of all the data packets belonging to a transaction must be the same and equal to addr[5:4] of the corresponding Request.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The CCID field in the Data flit does not match with addr[5:4] of the corresponding transaction.
   * @end_check_pass
   *
   * @check_fail
   * The CCID field in the Data flit are equal to addr[5:4] of the corresponding transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_ccid_in_dat_flit_check;
  
/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - Data flit type must be set to one of the permitted values for the Snoop Request
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * A SnpRespData or SnpRespDataPtl response is observed for a non-forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * A SnpRespDataFwded, CompData or SnpRespDataPtl response is observed for a forward type Snoop request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A data response other than SnpRespData and SnpRespDataPtl is observed for a non-forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * A data response other than SnpRespDataFwded, CompData and SnpRespDataPtl is observed for a forward type Snoop request. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_dat_flit_type_for_snp_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - NONCOPYBACKWRDATA is valid only in case of WriteNoSnoop, WriteUnique and DVMOp type transactions
   * .
   * @end_check_description
   * 
   * @check_pass
   * A NonCopyBackWrData flit is received for a WriteNoSnoop, WriteUnique or DVMOp type transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CopyBackWrData flit is received for a transaction type other than WriteNoSnoop, WriteUnique and DVMOp.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_noncbwrdata_flit_for_xact_check;

  `ifdef SVT_CHI_ISSUE_C_ENABLE
    /**
     * @groupname chi_protocol_err_valid_response_flit_check
     * @check_description
     * Check that RespSepData response is seen only for Read transactions with:
     * - exclusive bit de-asserted.
     * - order field de-asserted or order field asserted along with ExpCompAck.
     * .
     * Also, if order field is asserted in the request, there should be no READRECEIPT response in case RespSepData flow is seen.
     * @end_check_description
     *
     * @check_pass
     * SCENARIO 1: <br>
     * A RespSepData is received for an unordered, non-exclusive Read transaction. <br>
     * SCENARIO 2: <br>
     * A RespSepData is received for an ordered Read transaction with ExpCompAck asserted and the Read has not received READRECEIPT response. <br>
     * SCENARIO 3: <br>
     * A RespSepData is received for the HN with sep read and sep resp enabled.
     * @end_check_pass
     *
     * @check_fail
     * SCENARIO 1: <br>
     * A RespSepData is received for an Exclusive Read other than ReadPreferUnique and MakeReadUnique transaction. <br>
     * SCENARIO 2: <br>
     * A RespSepData is received for an ordered Read transaction with ExpCompAck de-asserted. <br>
     * SCENARIO 3: <br>
     * A RespSepData is received for an ordered Read transaction which has already received READRECEIPT. <br>
     * SCENARIO 4: <br>
     * A RespSepData is received for the HN with sep read and sep resp disabled.
     * @end_check_fail
     *
     * @applicable_device_type
     * RN
     * @end_applicable_device_type
     * 
     * @check_additional_information
     * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
     * and if any of the HNs uses RespSepData DataSepResp Flow 
     * @end_check_additional_information
     * 
     */
    svt_err_check_stats associate_respsepdata_to_xact_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C, check that NCBWRDATACOMPACK flits are seen only for WriteUnique* transactions with ExpCompAck asserted. <br>
    * When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later, check that NCBWRDATACOMPACK flits are seen only for WriteUnique* or  WriteNoSnp* transactions with ExpCompAck asserted. <br>
    * @end_check_description
    * 
    * @check_pass
    * Check is passed for one of the below scenraios:
    * - A NCBWRDATACOMPACK flit is seen for a WriteUnique* transaction with ExpCompAck asserted.
    * - A NCBWRDATACOMPACK flit is seen for a WriteNoSnp* transacion with ExpCompAck asserted when svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later.
    * .
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique* transaction with ExpCompAck de-asserted. <br>
    * SCENARIO 2: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteNoSnp* transaction with any of the following attribute settings:
    * - ExpCompAck de-asserted
    * - svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or earlier
    * .
    * SCENARIO 3:
    * - When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or earlier, NCBWRDATACOMPACK flit is seen for a transaction other than WriteUnique* .
    * - When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later, NCBWRDATACOMPACK flit is seen for a transaction other than WriteUnique* or WriteNoSnp*.
    * .
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later.
    * @end_check_additional_information
    */
   svt_err_check_stats valid_ncbwrdatacompack_flit_for_xact_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * Check that NCBWRDATACOMPACK flits are seen for WriteUnique transactions only after the reception of both Comp and DBIDResp, or, CompDBIDResp response. <br>
    * Additionally checks that, in case separate Comp and DBID responses were observed, NCBWRDATACOMPACK flits are seen only if the Comp response was received first followed by the DBIDResp Response.
    * @end_check_description
    * 
    * @check_pass
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique transaction after the reception of both Comp and DBIDResp, or, CompDBIDResp response.
    * In case separate Comp and DBID responses were observed, the Comp response was received first followed by the DBIDResp Response.
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique transaction before the corresponding Comp and DBIDResp, or, CompDBIDResp is received. <br>
    * SCENARIO 2: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique transaction which received a DBIDResp before Comp response. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C.
    * This check won't be constructed and executed for svt_chi_node_configuration::chi_spec_revision set to ISSUE_D or later as the rule related to this check is relaxed.
    * @end_check_additional_information
    */
   svt_err_check_stats ncbwrdatacompack_after_comp_and_dbid_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * Check that the NCBWRDATACOMPACK response for an Ordered Write Observation Write* transaction is seen after all earlier OWO Write* transactions which are required to be ordered with respect to the current OWO Write* transaction received Comp responses. 
    * @end_check_description
    * 
    * @check_pass
    * A NCBWRDATACOMPACK flit is seen for a OWO Write* transaction after all earlier OWO Write* transactions which are required to be ordered with respect to the current OWO Write* transaction received Comp responses.
    * @end_check_pass
    *
    * @check_fail
    * A NCBWRDATACOMPACK flit is seen for a OWO Write* transaction before all earlier OWO Write* transactions which are required to be ordered with respect to the current OWO Write* transaction received Comp responses.
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later and svt_chi_node_configuration::num_req_order_streams is set to 1. <br>
    * This check is performed on OWO WriteUnique transactions when svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later whereas for
    * OWO WriteNoSnp transactions when svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later.
    * NOTE: OWO Write* transactions includes Combined Write and (P)CMO transactions as well.
    * @end_check_additional_information
    */
   svt_err_check_stats ncbwrdatacompack_flit_timing_check;
   
   /**
    * @groupname chi_protocol_err_valid_response_flit_check
    * @check_description
    * Snoop response, SnpResp, SnpRespFwded, SnpRespData or SnpRespDataFwded, must wait for receiving of all read data packets, CompData.
    * @end_check_description
    * 
    * @check_pass
    * Snoop response is seen while there are no outstanding reads to the same cacheline that have received at least one data flit but waiting to receive the remaining data flits.
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * Snoop response with data, SnpRespData or SnpRespDataFwded, is seen before an outstanding Read transaction to the same cacheline has received of all read data packets, CompData or DataSepResp. <br>
    * SCENARIO 2: <br>
    * Snoop response, SnpResp or SnpRespFwded, is seen before an outstanding Read transaction to the same cacheline has received of all read data packets, CompData or DataSepResp. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN-F
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later.
    * @end_check_additional_information
    */
   svt_err_check_stats valid_snp_response_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * Check that the DBID and HomeNID values in the DataSepResp flits match the DBID and SrcID values in the corresponding RespSepData. <br>
    * @end_check_description
    * 
    * @check_pass
    * SCENARIO 1: <br>
    * A DATASEPRESP flit is seen after the reception of the corresponding RESPSEPDATA, and, the DBID and HomeNID values in the DATASEPRESP match with the DBID and SrcID values in the RESPSEPDATA. <br>
    * SCENARIO 2: <br>
    * RESPSEPDATA flit is seen after the reception of one or more DATASEPRESP, and, the DBID and SrcID values in the RESPSEPDATA match with the DBID and HomeNID values in the DATASEPRESP. <br>
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * A DATASEPRESP flit is seen after the reception of the corresponding RESPSEPDATA, and, the DBID and HomeNID values in the DATASEPRESP don't match with the DBID and SrcID values in the RESPSEPDATA. <br>
    * SCENARIO 2: <br>
    * RESPSEPDATA flit is seen after the reception of one or more DATASEPRESP, and, the DBID and SrcID values in the RESPSEPDATA don't match with the DBID and HomeNID values in the DATASEPRESP. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
    * and if any of the HNs uses RespSepData DataSepResp Flow 
    * @end_check_additional_information
    */
    svt_err_check_stats matching_dbid_home_nid_in_respsepdata_datasepresp_check;

   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * For a given RN transactions, if resp_err_status set to NON_DATA_ERROR in one of the responses RespSepData or DataSepResp then both the responses RespSepData and DataSepResp
    * must have the resp_err_status as NON_DATA_ERROR and must have been generated from the same HN. Which also means that there must not be a scenario Where one of the responses
    * RespSepData or DataSepResp having NON_DATA_ERROR.
    * @end_check_description
    * 
    * @check_pass
    * One of the responses RespSepData or DataSepResp having resp_err_status set to NON_DATA_ERROR:
    * - Both the responses RespSepData and DataSepResp must have the resp_err_status as NON_DATA_ERROR. 
    * - Both the responses RespSepData and DataSepResp must have been generated from the same HN.
    * .
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * DataSepResp flits are not marked with resp_err_status NON_DATA_ERROR when RespSepData flit includes resp_err_status NON_DATA_ERROR. <br>
    * SCENARIO 2: <br>
    * RespSepData flits are not marked with resp_err_status NON_DATA_ERROR when DataSepResp flit includes resp_err_status NON_DATA_ERROR. <br>
    * SCENARIO 3: <br>
    * RespSepData and associated DataSepResp flits are not generated from the same HN when both RespSepData and associated DataSepResp flits resp_err_status set to NON_DATA_ERROR. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later.
    * and if any of the HNs uses RespSepData DataSepResp Flow 
    * @end_check_additional_information
    */
    svt_err_check_stats matching_resp_err_nderr_in_respsepdata_datasepresp_check;
  `endif

  `ifdef SVT_CHI_ISSUE_B_ENABLE
    /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that the data type of the flit matches the expected value. <br>
       * - WRITEDATACANCEL is valid only in case of WriteNoSnoop transactions with mem_attr other than DEVICE memory type  and WriteUniquePtl type transactions
       * .
       * @end_check_description
       * 
       * @check_pass
       * A WriteDataCancel flit is received for a WriteNoSnoop with mem_attr other than DEVICE memory type and WriteUniqueptl type transaction.
       * @end_check_pass
       *
       * @check_fail
       * A WriteDataCancel flit is not received for a transaction with mem_attr other than DEVICE memory type 
       * and WriteUniqueptl type transactions, when BE and data are set to zero.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN and SN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_writedatacancel_flit_for_xact_check;

      /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that in Write Data, a byte enable value of zero must set the associated data byte value to zero. <br>
       * @end_check_description
       * 
       * @check_pass
       * For a Write transaction, data byte lanes whose corresponding BE is de-asserted are zeroed out.
       * @end_check_pass
       *
       * @check_fail
       * For a Write transaction, data byte lanes whose corresponding BE is de-asserted take a non-zero value.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN and SN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_write_data_when_be_is_zero_check;

      /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that in Write Data with TagOp Update, a TU value of zero must set the associated Tag value to zero. <br>
       * @end_check_description
       * 
       * @check_pass
       * For a Write transaction with data_tag_op set to Update, Tag nibbles whose corresponding TU is de-asserted are zeroed out.
       * @end_check_pass
       *
       * @check_fail
       * For a Write transaction with data_tag_op set to Update, Tag nibbles whose corresponding TU is de-asserted take a non-zero value.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN and SN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_tag_when_tu_is_zero_in_tag_update_write_check;

      /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that in Snoop Data, a byte enable value of zero must set the associated data byte value to zero. <br>
       * @end_check_description
       * 
       * @check_pass
       * For a Snoop transaction, data byte lanes whose corresponding BE is de-asserted are zeroed out.
       * @end_check_pass
       *
       * @check_fail
       * For a Snoop transaction, data byte lanes whose corresponding BE is de-asserted take a non-zero value.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_snprespdata_when_be_is_zero_check;
  `endif

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - COPYBACKWRDATA is valid only in case of WriteBack, WriteClean and WriteEvict type transactions
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CopyBackWrData flit is received for a WriteBack, WriteClean or WriteEvict transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CopyBackWrData flit is received for a transaction type other than WriteBack, WriteClean and WriteEvict.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_cbwrdata_flit_for_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - COMPDATA is valid only in case of Read type transactions
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CompData flit is received for a Read transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CompData flit is received for a non-Read type transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_compdata_flit_for_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_request_flit_check
   * @check_description
   * Check that the Target ID field in the transaction request is set to the node ID of the HN as per the RN SAM. <br>
   * - When Target ID is not expected to be remapped at the Interconnect, RN must program the tgt_id of the request flit to the
   * correct value as per the SAM.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A request is received with the tgt_id set to the expected HN node ID.
   * @end_check_pass
   *
   * @check_fail
   * A request is received with the tgt_id set to a value other than the expected HN node ID.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN 
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when svt_chi_system_configuration::expect_target_id_remapping_by_interconnect is set to 0.
   * @end_check_additional_information
   */
  svt_err_check_stats expected_tgt_id_in_rn_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the Target ID is remapped correctly at the Interconnect. <br>
   * - When Target ID remapping is expected at the Interconnect, the Target ID field in the received
   * request must be remapped correctly as per the SAM.
   * - This check is performed when target ID is remapped by the Interconnect and the SAM is 
   * specified correctly in the system configuration.
   * .
   * @end_check_description
   * 
   * @check_pass
   * Remapped Target ID received in the response from the Interconnect matches the HN node ID as per the SAM.
   * @end_check_pass
   *
   * @check_fail
   * Remapped Target ID received in the response from the Interconnect does not match the HN node ID as per the SAM.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when svt_chi_system_configuration::expect_target_id_remapping_by_interconnect and 
   * svt_chi_system_configuration::rn_sam_specified_with_exp_tgt_id_remap_at_icn_enabled are set to 1.
   * @end_check_additional_information
   */
  svt_err_check_stats expected_remapped_tgt_id_in_response_check;
  
/**
   * @groupname chi_protocol_err_valid_request_flit_check
   * @check_description
   * Check that there are no multiple outstanding transactions from the same source with the same transaction IDs. <br>
   * - The TxnID must be unique for a given Requester. The Requester can reuse the ID only after
   *   it has received all responses associated with a previous transaction that has used the same TxnID
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * A request is received at an RN, and there are no outstanding transactions with the same TxnID. <br>
   * SCENARIO 2: <br>
   * A request is received at an SN, and there are no outstanding non-DMT transactions with the same TxnID. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A request is received at an RN, but there already is an outstanding request with the same TxnID. <br>
   * SCENARIO 2: <br>
   * A request is received at an SN, but there already is an outstanding non-DMT request with the same TxnID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats single_outstanding_req_per_txn_id_check;
   
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TransactionID, TargetID and SourceID fields are set correctly in the CompAck response. <br>
   * - The TgtID and SrcID must be set to the the SrcID and TgtID of the read data respectively. 
   *   The TxnID is set to the same value as the DBID value provided in the read data response.
   * .
   * @end_check_description
   *
   * @check_pass
   * A CompAck response is received and there's an outstanding transaction with ExpCompAck asserted, whose Source ID, Target ID and DBID
   * match with the TargetID, Source ID and TxnID of the CompAck respectively.
   * @end_check_pass
   *
   * @check_fail
   * A CompAck response is received when there are no outstanding transactions with expcompack asserted, whose Source ID, Target ID and DBID
   * match with the TargetID, Source ID and TxnID of the CompAck respectively.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_compack_rsp_flit_check;
   
/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response is sent only afer Comp/CompData response. <br>
   * - CompAck, if part of the transaction, must be observed only after Comp or all CompData responses are received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * A CompAck response is received for a transaction with ExpCompAck set and whose data phase is complete. <br>
   * For OWO Write transactions(svt_chi_transaction::exp_comp_ack set to 1 and svt_chi_transaction::order_type set to REQ_ORDERING_REQUIRED),:
   * -  When svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Compack must be send out after reception of Comp response.
   * -  When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, Compack must be send out after reception of one of the response Comp or DBIDResp or CompDBIDResp.
   * .
   * In case of WriteEvictorEvict transaction, the check will pass when CompAck response is received after the reception of Comp response (When req_status will be set to ACCEPT).
   * @end_check_pass
   *
   * @check_fail
   * A CompAck response is received for a transaction with ExpCompAck set but whose data phase is not yet complete. <br>
   * For OWO Write transactions(svt_chi_transaction::exp_comp_ack set to 1 and svt_chi_transaction::order_type set to REQ_ORDERING_REQUIRED),:
   * -  When svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Compack send out before reception of Comp response.
   * -  When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, Compack received before reception of one of the responses Comp or DBIDResp or CompDBIDResp.
   * .
   * In case of WriteEvictorEvict transaction, the check will fail when CompAck response is received before the reception of any response (When req_status other than ACCEPT) from the Completer.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * The data phase status can be known by looking at the data_status field in the transaction handle:
   * - data_status == INITIAL implies the data transfer hasn't yet begun for the transaction
   * - data_status == PARTIAL_ACCEPT implies the data transfer for the transaction is in progress
   * - data_status == ACCEPT implies the data transfer is complete.
   * .
   * @end_check_additional_information 
   */
  svt_err_check_stats expected_compack_check;
   
/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the SnpDVMOpResp is observed only after both SnpDVMOp request packets. <br>
   * - An RN must provide a response to a SnpDVMOp transaction only after it has received both SnpDVMOp request packets corresponding to that transaction.
   *   The TgtID and SrcID must be set to the the SrcID and TgtID of the read data respectively. 
   * .
   * @end_check_description
   *
   * @check_pass
   * A SnpResp flit is observed for a SnpDVMOp transaction, after both parts of the SnpDVMOp request are received 
   * @end_check_pass
   *
   * @check_fail
   * A SnpResp flit is observed for a SnpDVMOp transaction, while only one part of the SnpDVMOp request is received
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_snprsp_for_snpdvmop_check;

 /**
   * @groupname cache_state
   * @check_description
   * Check if the RN has transitioned from UCE to UD/UDP state while there is an ongoing READSHARED, READNOTSHAREDDIRTY,READCLEAN,  READONCE, 
   * READONCECLEANINVALID,READONCEMAKEINVALID transactions. 
   * This check will flag an error in case the cache is updated via frontdoor or backdoor accesses to move from UCE to dirty state while there is an outstanding Read.
   * .
   * @end_check_description
   *
   * @check_pass
   * If the RN has not transitioned to UD/UDP state from UCE state for READSHARED, READNOTSHAREDDIRTY,READCLEAN,  READONCE, 
   * READONCECLEANINVALID,READONCEMAKEINVALID transactions.
   * @end_check_pass
   *
   * @check_fail
   * If the RN has transitioned to UD/UDP state from UCE state for READSHARED, READNOTSHAREDDIRTY,READCLEAN,  READONCE, 
   * READONCECLEANINVALID,READONCEMAKEINVALID transactions.
   * @end_check_fail
   *
   * @applicable_device_type
   * Active RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is constructed only when partial_cache states are enabled at RN (svt_chi_node_configuration partial_cache_line_states_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats cache_transitioned_to_dirty_from_uce_for_read; 

  `ifdef SVT_CHI_ISSUE_E_ENABLE
  /**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the Range, Num, Scale, TG and TTL fields are set to valid values in a TLB Invalidate Type DVMOp transaction. <br>
   * - Range bit can be set to 1 only in case of DVMOp TLBI requests that are invalidate by VA or PA.
   * - Num and Scale fields can be set to non-zero values only in case of Range based DVMOp TLBI requests.
   * - TG and TTL can be set to non-zero values only in case of TLBI requests that are invalidate by VA or PA. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG and TTL fields are all set to zero in a DVMOp TLBI transaction. <br>
   * SCENARIO 2: <br>
   * Range is set to 1, TG is set to one of the permitted values and VA[15:12] is zeroed out based on the TG value in a DVMOp TLBI request that is Invalidate by VA or PA. <br>
   * SCENARIO 3: <br>
   * Range, Num and Scale are set to 0, and TG and TTL take legal combinations in a DVMOp TLBI with Leaf Hint request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG or TTL is set to a non-zero value in a DVMOp TLBI request that is not invalidate by VA or PA. <br>
   * SCENARIO 2: <br>
   * TG is set to zero in a Range based DVMOp TLBI request. <br>
   * SCENARIO 3: <br>
   * TG is set to 2'b10 in a Range based DVMOp TLBI request but VA[13:12] is not set to 0. <br>
   * SCENARIO 4: <br>
   * TG is set to 2'b11 in a Range based DVMOp TLBI request but VA[15:12] is not set to 0. <br>
   * SCENARIO 5: <br>
   * Num or Scale is set to a non-zero value in a non-Range based DVMOp TLBI request. <br>
   * SCENARIO 6: <br>
   * TTL is set to a non-zero value when TGT is 0 in a DVMOp TLBI request with Leaf Hint. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or greater  
   * svt_chi_node_configuration::dvm_version_support is set to DVM_v8_4 or greater and
   * DVM support is enabled in the RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
    svt_err_check_stats valid_tlbi_fields_in_dvmop_check;

  /**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the Range, Num, Scale, TG and TTL fields are set to valid values in a TLB Invalidate Type SnpDVMOp transaction. <br>
   * - Range bit can be set to 1 only in case of SnpDVMOp TLBI requests that are invalidate by VA or PA.
   * - Num and Scale fields can be set to non-zero values only in case of Range based SnpDVMOp TLBI requests.
   * - TG and TTL can be set to non-zero values only in case of TLBI requests that are invalidate by VA or PA. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG and TTL fields are all set to zero in a SnpDVMOp TLBI request. <br>
   * SCENARIO 2: <br>
   * Range is set to 1, TG is set to one of the permitted values and VA[15:12] is zeroed out based on the TG value in a SnpDVMOp TLBI transaction that is Invalidate by VA or PA. <br>
   * SCENARIO 3: <br>
   * Range, Num and Scale are set to 0, and TG and TTL take legal combinations in a SnpDVMOp TLBI with Leaf Hint request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG or TTL is set to a non-zero value in a SnpDVMOp TLBI request that is not invalidate by VA or PA. <br>
   * SCENARIO 2: <br>
   * TG is set to zero in a Range based SnpDVMOp TLBI transaction. <br>
   * SCENARIO 3: <br>
   * TG is set to 2'b10 in a Range based SnpDVMOp TLBI transaction but VA[13:12] is not set to 0. <br>
   * SCENARIO 4: <br>
   * TG is set to 2'b11 in a Range based SnpDVMOp TLBI transaction but VA[15:12] is not set to 0. <br>
   * SCENARIO 5: <br>
   * Num or Scale is set to a non-zero value in a non-Range based SnpDVMOp TLBI request. <br>
   * SCENARIO 6: <br>
   * TTL is set to a non-zero value when TGT is 0 in a SnpDVMOp TLBI request with Leaf Hint. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or greater  
   * svt_chi_node_configuration::dvm_version_support is set to DVM_v8_4 or greater and
   * DVM support is enabled in the RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
    svt_err_check_stats valid_tlbi_fields_in_snpdvmop_check;
  `endif

/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered WriteUnique transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteUnique transaction are received. 
   * - When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, DBIDResp or CompDBIDResp or Comp response for the current OWO WriteUnique is received whereas for 
       svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Comp response for the current OWO WriteUnique is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered WriteUnique transaction is sent only after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteUnique transactions are received.
   * - When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, DBIDResp or CompDBIDResp or Comp response for the current OWO WriteUnique is received whereas for 
       svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Comp response for the current OWO WriteUnique is received 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered WriteUnique transaction is sent before Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteUnique transactions are received.
   * - When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, CompAck response for an ordered WriteUnique transaction is sent before DBIDResp or CompDBIDResp or Comp response for the current OWO WriteUnique is received whereas for svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, CompAck response for an ordered WriteUnique transaction is sent before Comp response for the current OWO WriteUnique is received.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_writeunique_enable set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. <br>
   * This check is performed only on OWO WriteUnique transactions for which order field set to REQ_ORDERING_REQUIRED and exp_comp_Ack is set to 1.  
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_writeunique_compack_timing_check;
   
`ifdef SVT_CHI_ISSUE_D_ENABLE
/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered WriteNoSnp transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteNoSnp transaction are received. 
   * - DBIDResp or CompDBIDResp or Comp response for the current OWO WriteNoSnp transaction is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered WriteNoSnp transaction is sent only after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteNoSnp transactions are received.
   * - DBIDResp or CompDBIDResp or Comp response for the current OWO WriteNoSnp is received. 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered WriteNoSnp transaction is sent before Comp response of all earlier ordered Write transactions which are required to be ordered with respect to the current WriteNoSnp transactions are received.
   * - CompAck response for an ordered WriteNoSnp transaction is sent before DBIDResp or CompDBIDResp or Comp response for the current OWO WriteNoSnp is received.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_D_ENABLE macro is defined and svt_chi_node_configuration::chi_spec_revision is ISSUE_D or later. <br>
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_writenosnp_enable set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. <br>
   * This check is performed only on OWO WriteNoSnp transactions for which order field set to REQ_ORDERING_REQUIRED and exp_comp_Ack is set to 1.  
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_writenosnp_compack_timing_check;
  
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * Persist response seen for CleanSharedPersistSep or Combined Write_CleanSharedPersistSep transaction.
   * @end_check_pass
   *
   * @check_fail
   * Persist seen for transactions other than CleanSharedPersistSep and Combined Write_CleanSharedPersistSep
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_persist_flit_type_for_xact_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * CompPersist response seen for CleanSharedPersistSep or Combined Write_CleanSharedPersistSep transaction.
   * @end_check_pass
   *
   * @check_fail
   * CompPersist seen for transactions other than CleanSharedPersistSep and Combined Write_CleanSharedPersistSep
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In  case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_comppersist_flit_type_for_xact_check;

   /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response type must correspond to one of the permitted combinations for the CleanSharedPersistSep transaction 
   * @end_check_description
   * 
   * @check_pass
   * CompPersist response seen for CleanSharedPersistSep transaction.
   * Comp and Persist response is seen for CleansharedpersistSep transaction
   * @end_check_pass
   *
   * @check_fail
   * CompPersist response and Comp response is seen for  CleanSharedPersistSep transaction.
   * CompPersist response and Persist response is seen for  CleanSharedPersistSep transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later.
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_response_combinations_for_cleansharedpersistsep_check;
  
 /**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp/Persist/CompPersist response packet has valid resp_err value for CleanSharedPersistSep transaction. <br>
   * The associated comp/persist/comppersist response packet's resp_err field should not take EXOK value for CleanSharedPersistSep transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp/Persist/CompPersist response flits of a CleanSharedPersistSep transaction are as per Table 9-4 in the CHI-D or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp/Persist/CompPersist response flits of a CleanSharedPersistSep transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleansharedpersistsep_associated_response_legal_resperr_check;

  /**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp/CompPersist response packet has valid cache state value for a CleanSharedPersistSep transaction. <br>
   * The cache state in the associated comp/comppersist response packets of a CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp/CompPersist response of a CleanSharedPersistSep transaction is set to UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp/CompPersist response of a CleanSharedPersistSep transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleansharedpersistsep_associated_response_legal_cache_state_check;

`endif //issue_d_enable
   
`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Checks that a transaction receives either (COMP)DBIDResp or DBIDRespOrd, but not both. 
   * @end_check_description
   * 
   * @check_pass
   * When the transaction has received either (Comp)DBIDResp or DBIDREspOrd, but not both.
   * @end_check_pass
   *
   * @check_fail
   * When the transaction has received both (Comp)DBIDResp and DBIDREspOrd.  
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dbidresp_or_dbidresoprd_response_received_check;

 /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that DBIDRespOrd Response flit is seen only in case of non-Copyback Write or atomic transactions. <br>
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * DBIDRespOrd is received for a WriteNoSnp or WriteUnique or NoncopybackwriteCmos, Atomic request.
   * @end_check_pass
   *
   * @check_fail
   * DBIDRespOrd is received for a Copyback request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
 svt_err_check_stats valid_dbidrespord_flit_type_for_xact_check;

 /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The data_pull in the Snoop response to a stash snoop should be set to 0 when there exists outstanding transactions to the cache line which have received DBIDRespOrd response.
   * @end_check_description
   * 
   * @check_pass
   * If data_pull in the Snoop response for a Stash type snoop is set to 1 and there are no outstanding transactions targeting the same cacheline that have received a DBIDRespOrd response . <br>
   * @end_check_pass
   *
   * @check_fail
   * If data_pull in the Snoop response for a Stash type snoop is set to 1 and there are outstanding transactions targeting the same cacheline that have received a DBIDRespOrd response. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_E_ENABLE defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_E or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats data_pull_set_for_stash_snoop_when_outstanding_xacts_with_dbidrespord;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TargetID, TagGroupID and GroupIDExt fields are set correctly in TagMatch responses. <br>
   * - A TagMatch response can be received only for Write or Atomic transactions whose TagOp is set to Match.
   * - The TgtID and TagGroupID fields in a TagMatch response must match the SrcID and TagGroupID fields
   *   of the corresponding Write transaction with TagOp set to Match.
   * .
   * @end_check_description
   *
   * @check_pass
   * A TagMatch response is received and the TgtID and TagGroupID fields match with the SrcID and TagGroupID of an outstanding
   * Write transaction whose TagOp is set to Match.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A TagMatch response is received while there are no outstaning Writes or Atomics with TagOp set to Match. <br>
   * SCENARIO 2: <br>
   * A TagMatch response is received while there are outstaning Writes or Atomics with TagOp set to Match but
   * the TgtID and TagGroupID fields does not match with the SrcID or TagGroupID of an outstanding. <br>
   * Write transaction whose TagOp is set to Match.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats associate_tagmatch_to_xact_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the resp field is as per the expectation.The Resp value in the TagMatch response must be:
   * - A Fail when MTE is not supported.
   * - A Pass when MTE is supported but the Tag Match is not performed.
   * - A Pass if BE is all zeroes.
   * - A Pass if Write transaction is cancelled.
   * - A Fail when tag_match response is received and we see that data status is not ACCEPT
   * . 
   * @end_check_description
   *
   * @check_pass
   * The resp field is valid. The resp field is as below
   * - A Fail when MTE is not supported.
   * - A Pass when MTE is supported but the Tag Match is not performed.
   * - A Pass if BE is all zeroes.
   * - A Pass if Write transaction is cancelled.
   * - A Fail when tag_match response is received and we see that data status is not ACCEPT
   * . 
   * @end_check_pass
   *
   * @check_fail
   * The resp field is not valid. The resp field violates one or more of the below rules:
   * - A Fail when MTE is not supported.
   * - A Pass when MTE is supported but the Tag Match is not performed.
   * - A Pass if BE is all zeroes.
   * - A Pass if Write transaction is cancelled.
   * - A Fail when tag_match response is received and we see that data status is not ACCEPT
   * . 
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats associated_tagmatch_response_legal_resp_check;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multiple Write data flits corresponding to a Write or Atomic type transaction, the TagOp field
   * is set to the same value across all the Write data flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the Write data flits corresponding to a Write or Atomic type transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different value in the Write data flits corresponding to a Write or Atomic type transaction. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN, SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_write_data_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multiple Snoop data response flits corresponding to a Snoop transaction, the TagOp field
   * is set to the same value across all the Snoop data response flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the SnpRespData* flits corresponding to a Snoop transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different value in the SnpRespData* flits corresponding to a Snoop transaction. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_snoop_data_response_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multiple Read data flits corresponding to a Read type transaction, the TagOp field
   * is set to the same value across all the Read data flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the Read data flits corresponding to a Read or Atomic type transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different value in the Read data flits corresponding to a Read or Atomic type transaction. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_read_data_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multipe Forwarded CompData flits corresponding to a Forward type Snoop, the TagOp field
   * is set to the same value in all the Forwarded Compdata flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the Compdata flits corresponding to a Forward type Snoop. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different values in the Compdata flits corresponding to a Forward type Snoop. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1, DCT is enabled for atleast one of the HN-Fs and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_fwded_compdata_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multipe DataPull CompData flits corresponding to a Stash type Snoop involving DataPull, the TagOp field
   * is set to the same value in all the DataPull Compdata flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the DataPull Compdata flits corresponding to a Stash type Snoop. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different values in the DataPull flits corresponding to a Stash type Snoop. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1, Cache Stash and Data Pull are enabled for at least one HN-F
   * and the flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_data_pull_compdata_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in a Read data flit is set to a valid value for the corresponding Atomic or Read transaction type. <br>
   * This check is not performed in case the Read transaction has received a NON_DATA_ERROR response as the TagOp in the Read data can take
   * any value in such a case. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Read data flit is set to TAG_TRANSFER when the Target HN supports memory tagging. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the request TagOp is not TAG_INVALID,
   * the transaction type is not Atomic*, ReadNoSnp or ReadOnce* and the Target HN supports memory tagging. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_FETCH_MATCH. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Read data flit is set to TAG_TRANSFER when the Target HN does not support memory tagging. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the Target HN does not support memory tagging. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the transaction type is Atomic*, ReadNoSnp or ReadOnce*. <br>
   * SCENARIO 5: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the TagOp in the request is TAG_INVALID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_read_data_check;

 /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in a Read data flit is not set to Invalid when the Read Request TagOp is Transfer or Fetch and the 
   * target HN supports memory tagging. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_TRANSFER or TAG_UPDATE when the Read request TagOp is TAG_TRANSFER or TAG_FETCH_MATCH. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_INVALID when the Read request TagOp is TAG_TRANSFER or TAG_FETCH_MATCH. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and 
   * svt_chi_system_configuration::mem_tagging_setting_applicable_for_all_addresses_at_completer is set to 1. <br>
   * The check is applicable only in case of Read transactions targeting an HN that supports memory tagging.
   * @end_check_additional_information 
   */
 svt_err_check_stats read_data_tagop_not_invalid_for_transfer_fetch_req_tagop;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in a Write data flit is set to a valid value for the corresponding Atomic or Write transaction type. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Write data flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Write data flit is set to TAG_TRANSFER and the TagOp in the Write transaction request is TAG_TRANSFER. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Write data flit is set to TAG_TRANSFER and the TagOp in the corresponding CopyBack Write transaction request is TAG_UPDATE. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Write data flit is set to TAG_UPDATE and the TagOp in the Write transaction request is TAG_UPDATE. <br>
   * SCENARIO 5: <br>
   * The TagOp field in a Write data flit is set to TAG_FETCH_MATCH and the TagOp in the corresponding Write or Atomic transaction request is TAG_FETCH_MATCH. <br>
   * SCENARIO 6: <br>
   * The TagOp field in a Write data flit corresponding to a DVMOp transaction is set to TAG_INVALID. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Write data flit is set to TAG_UPDATE but the TagOp in the Write transaction request is TAG_TRANSFER. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Write data flit is set to TAG_FETCH_MATCH but the TagOp in the corresponding Write or Atomic transaction request is not TAG_FETCH_MATCH. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Write data flit is set to TAG_FETCH_MATCH, TAG_TRANSFER or TAG_UPDATE and the TagOp in the corresponding Write transaction request is TAG_INVALID. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Write data flit is set to TAG_TRANSFER but the TagOp in the corresponding Non-CopyBack Write transaction request is TAG_UPDATE. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Write data flit corresponding to a DVMOp transaction is set to a value other than TAG_INVALID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN, SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_write_data_check;
 
  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TagOp field in the Comp response is set to a value that is permitted by the specification for the corresponding transaction type. <br>
   * This check is not performed in case the Comp response has RespErr set to NON_DATA_ERROR as the TagOp in the response can take any value in case of
   * a Non-Data Error.
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Comp response flit is set to TAG_INVALID (irrespective of the transaction type). <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Comp response flit corresponding to a MakeReadUnique transaction is set to TAG_UPDATE and
   * the TagOp in the MakeReadUnique transaction request is TAG_TRANSFER. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Comp response flit corresponding to a transaction type other than MakeReadUnque is set to a value other than
   * TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Comp response flit corresponding to a MakeReadUnique transaction is set to TAG_UPDATE but
   * the TagOp in the MakeReadUnique transaction request is TAG_INVALID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_comp_response_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in the Comp response is set to a value that is permitted by the specification for the corresponding transaction type. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_TRANSFER. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_UPDATE. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_FETCH_MATCH. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and DCT is enabled for atleast one of the HN-Fs. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_fwded_compdata_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in the DataPull Compdata response corresponding to a Stash type Snoop involving DataPull
   * is set to a value that is permitted by the specification. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_TRANSFER. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_UPDATE. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_FETCH_MATCH. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later, , Cache Stash and Data Pull are enabled for at least one HN-F and
   * svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_data_pull_compdata_check;

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TU bits are set correctly in the Write data responses seen for Write transactions. <br>
   * - For all Write transactions with TagOp set to Update, TU bits that are not within the data window, specified by Addr and Size, 
   *   must be deasserted.
   * - In case of full cacheline Write transactions (Write*Full) with TagOp set to Update, all TU bits must be asserted.
   * - In case of Writes with TagOp set to a value other than TAG_UPDATE, the TU bits are inappicable and must be set to zero.
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * For a full cacheline Write transaction with TagOp in the data set to TAG_UPDATE, all TU bits are asserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write with TagOp in the data set to TAG_UPDATE, none of the TU bits outside of the data window are set. <br>
   * SCENARIO 3: <br>
   * For a Write with TagOp in the data set to a value other than TAG_UPDATE, none of the TU bits are set.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * For a full cacheline Write with TagOp in the data set to TAG_UPDATE, one or more TU bits are deasserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write with TagOp in the data set to TAG_UPDATE, any of the TU bits outside of the data window are set. <br> 
   * SCENARIO 3: <br>
   * For a Write with TagOp in the data set to a value other than TAG_UPDATE, one or more TU bits are asserted.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * This check is only applicable for Write type transactions. <br>
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_tag_update_value_in_write_data_check;

  /**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteNoSnp_CMO type transaction are received. 
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteNoSnp_(P)CMO type transaction is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is seen after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteNoSnp_CMO type transaction are received.
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteNoSnp_(P)CMO type transaction is received. 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is seen before Comp response of all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteNoSnp_(P)CMO type transaction are received.
   * - CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is seen before the reception of associated DBIDResp or CompDBIDResp or Comp response.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined and svt_chi_node_configuration::chi_spec_revision is ISSUE_E or later. <br>
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_combined_writenosnp_cmo_enable is set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. 
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_combined_writenosnp_cmo_compack_timing_check;

/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteUnique_(P)CMO type transaction are received. 
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteUnique_(P)CMO type transaction is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is seen after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteUnique_(P)CMO type transaction are received.
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteUnique_(P)CMO type transaction is received. 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is seen before Comp response of all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteUnique_(P)CMO type transaction are received.
   * - CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is seen before the reception of associated DBIDResp or CompDBIDResp or Comp response.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined and svt_chi_node_configuration::chi_spec_revision is ISSUE_E or later. <br>
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_combined_writeunique_cmo_enable is set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. 
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_combined_writeunique_cmo_compack_timing_check;

 /**
   * @groupname chi_protocol_dwt_check
   * @check_description
   * DWT is applicable only for non-copyback write transactions.
   * @end_check_description
   * 
   * @check_pass
   * DWT is used for non-copyback writes.
   * @end_check_pass
   *
   * @check_fail
   * DWT is used for transactions other than non-copyback writes.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DWT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_transaction_supporting_dwt_check;

 /**
   * @groupname chi_protocol_dwt_check
   * @check_description
   * DWT is not permitted in Non-CopyBack writes that are OWO writes.
   * DWT for Non-CopyBack writes cannot be used with ordering set to REQ_ORDERING_REQUIRED and exp_comp_ack set to 1. 
   * @end_check_description
   * 
   * @check_pass
   * DWT is used for non OWO writes.
   * @end_check_pass
   *
   * @check_fail
   * DWT is used for OWO writes.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DWT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_ordering_and_compack_combination_for_dwt_check;

 
 /**
   * @groupname chi_protocol_dwt_check
   * @check_description
   * DWT can be used by an HN only when DWT is enabled for that HN through svt_chi_system_configuration::set_hn_dwt_enable()
   * @end_check_description
   * 
   * @check_pass
   * DWT is used by an HN and DWT is enabled for that HN through svt_chi_system_configuration::set_hn_dwt_enable()
   * @end_check_pass
   *
   * @check_fail
   * DWT is used by an HN and DWT is not enabled for that HN through svt_chi_system_configuration::set_hn_dwt_enable()
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dwt_used_by_hn_with_dwt_enabled_check;

  
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packet has valid resp_err value for StashOnceSepUnique transaction. <br>
   * The associated response packet's resp_err field should not take EXOK value for StashOnceSepUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits of a StashOnceSepUnique transaction are as per CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits of a StashOnceSepUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashoncesepunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response has valid cache state value for a StashOnceSepUnique transaction. <br>
   * The cache state in the associated response of a StashOnceSepUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the response of a StashOnceSepUnique transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the response of a StashOnceSepUnique transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashoncesepunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packet has valid resp_err value for StashOnceSepShared transaction. <br>
   * The associated response packet's resp_err field should not take EXOK value for StashOnceSepShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits of a StashOnceSepShared transaction are as per the CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits of a StashOnceSepShared transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashoncesepshared_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response has valid cache state value for a StashOnceSepShared transaction. <br>
   * The cache state in the associated response of a StashOnceSepShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the response of a StashOnceSepShared transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the response of a StashOnceSepShared transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashoncesepshared_associated_comp_response_legal_cache_state_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that STASHDONE Response flit is seen only in case of StashOnceSepUnique and StashOnceSepShared transaction.
   * @end_check_description
   * 
   * @check_pass
   * STASHDONE response is received for StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_pass
   *
   * @check_fail
   * STASHDONE response is received for a transaction for non StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_stashdone_flit_type_for_xact_check;
  
  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that COMPSTASHDONE Response flit is seen only in case of StashOnceSepUnique and StashOnceSepShared transaction.
   * @end_check_description
   * 
   * @check_pass
   * COMPSTASHDONE response is received for StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_pass
   *
   * @check_fail
   * COMPSTASHDONE response is received for a transaction for non StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_compstashdone_flit_type_for_xact_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TargetID, DBID[7:0] and GroupIDExt fields are set correctly in StashDone responses. <br>
   * A StashDone response can be received only for StashOnceSep* transaction.
   * @end_check_description
   *
   * @check_pass
   * A StashDone response is received and the TgtID and DBID[7:0] fields match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_pass
   *
   * @check_fail
   * A StashDone response is received and the TgtID and DBID[7:0] fields does not match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   */
 svt_err_check_stats associate_stashdone_to_xact_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TargetID, DBID[7:0] and GroupIDExt fields are set correctly in CompStashDone responses. <br>
   * A CompStashDone response can be received only for StashOnceSep* transaction.
   * @end_check_description
   *
   * @check_pass
   * A CompStashDone response is received and the TgtID and DBID[7:0] fields match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CompStashDone response is received and the TgtID and DBID[7:0] fields does not match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   */
 svt_err_check_stats associate_compstashdone_to_xact_check;
 
`endif
   
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the SnpResp is observerd for a SnpDVMOp(sync) only when there are no outstanding DVMOp transactions at the RN. <br>
   * - Sending of a SnpResp implies that all DVM related operations have completed at the RN structures. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpResp flit is observed for a SnpDVMOp(sync) and there are no outstanding DVMOp transactions at the RN
   * @end_check_pass
   *
   * @check_fail
   * A SnpResp flit is observed for a SnpDVMOp(sync) while there are outstanding DVMOp transactions at the RN
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1) and
   * svt_chi_node_configuration::snp_dvmop_sync_response_policy is set to WAIT_FOR_ALL_OUTSTANDING_DVM_NON_SYNC_TO_COMPLETE.
   * @end_check_additional_information 
   */
  svt_err_check_stats snpresp_for_snpdvmop_sync_only_after_completion_of_all_non_dvm_sync_check;
    
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Snoop response flits. <br>
   * - The TgtID must be set to the the SrcID of the Snoop request. 
   *   The TxnID is set to the same value as the TxnID of the Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpResp is observed corresponding to one of the outstanding Snoop requests at the RN
   * @end_check_pass
   *
   * @check_fail
   * A SnpResp is observed but there are no outstanding Snoop requests with matching SourceID and TxnID values
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_snprsp_flit_check;
    
`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Snoop response flits. <br>
   * - The TgtID must be set to the the Src of the Forward type Snoop request. 
   *   The TxnID must be set to the same value as the TxnID of the Forward type Snoop request. 
   *   The SrcID must be set to the same value as the TgtID of the Forward type Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpRespFwded is observed corresponding to one of the outstanding Forward type Snoop requests at the RN.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A SnpRespFwded is observed but there are no outstanding Snoop requests with matching SourceID and TxnID values. <br>
   * SCENARIO 2: <br>
   * A SnpRespFwded is observed but the corresponding Snoop request with matching SourceID and TxnID values, is not a forward type Snoop. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_snprspfwded_flit_check;
  
/**  
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that SnpRespFwded is issued from the snooped RN to the Interconnect in case DCT is observed for a Forward type snoop with RetToSrc asserted. <br>
   * @end_check_description
   * 
   * @check_pass
   * A SnpRespDataFwded response corresponding to one of the outstanding Forward type Snoop requests with RetToSrc set to 1 is observed.
   * @end_check_pass
   *
   * @check_fail
   * A SnpRespFwded response corresponding to one of the outstanding Forward type Snoop requests with RetToSrc set to 1 is observed.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_fwded_response_type_for_ret_to_src_check;
  
/**  
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the FwdState indicated in the SnpRespFwded or SnpRespDataFwded response matches with the Resp field in the forwarded CompData. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * The FwdState field in the SnpRespDataFwded response matches with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * The FwdState field in the SnpRespFwded response matches with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The FwdState field in the SnpRespDataFwded response does not match with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * The FwdState field in the SnpRespFwded response does not match with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_fwd_state_in_fwded_snoop_response_check;
  
/**  
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data sent in the SnpRespDataFwded response matches with the data sent in the forwarded CompData for a given Forward type Snoop request. <br>
   * @end_check_description
   * 
   * @check_pass
   * The data in the SnpRespDataFwded response matches with the data in the CompData for a Forward type Snoop request.
   * @end_check_pass
   *
   * @check_fail
   * The data in the SnpRespDataFwded response does not match with the data in the CompData for a Forward type Snoop request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats snprspdatafwded_compdata_data_integrity_check;
  
/**  
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that when Byte Enables in the CopyBackWriteData are all de-asserted during CopyBack cancellation the Write Data bytes are all zeroed. <br>
   * @end_check_description
   * 
   * @check_pass
   * The byte enables in the CopyBackWriteData_I are all de-asserted and the Write Data bytes are all zeroed.
   * @end_check_pass
   *
   * @check_fail
   * The byte enables in the CopyBackWriteData_I are all de-asserted but the Write Data is not zeroed.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats copyback_cancellation_write_data_check;
`endif     

/**
   * @groupname chi_protocol_err_response_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in the Response flits. <br>
   * - The SrcID and TgtID of the response flit must match the TgtID and SrcID of the request while
   *   the Txn ID of the response flit must be the same as that of the Request 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A response flit is received for one of the outstanding transactions which is yet to receive a coherent response.
   * @end_check_pass
   *
   * @check_fail
   * A response flit is received but there are no outstanding transactions whose SrcID,TgtID and TxnID match the TgtID,SrcID and TxnID of the response.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * In case svt_chi_system_configuration::expect_target_id_remapping_by_interconnect is set to 1,
   * the SrcID of the response flit will not be compared with the TgtID of the outstanding requests at the RN.
   * @end_check_additional_information 
   */
  svt_err_check_stats associate_rsp_flit_to_xact_check;
      
/**
   * @groupname chi_protocol_err_response_flit_to_xact_association_check
   * @check_description
   * Check that the transaction for which the coherent response is received has not already received a coherent response <br>
   * - The number of Response flits received for a transaction must match the number of responses,
   *   specified in the spec, for that transaction type.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A response flit is received for one of the outstanding transactions which is yet to receive a coherent response.
   * @end_check_pass
   *
   * @check_fail
   * A response flit is received for one of the outstanding transactions which has already received all applicable coherent responses (resp_status == ACCEPT).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats expected_rsp_flit_for_xact_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Read Data flits. <br>
   * - When SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE  macro is not defined:
   * - The TgtID of the Read data flit must match the SrcID of the Request
   * - The SrcID of the Read data flit must match the TgtID of the Request
   * - The TxnID of the Read data flit must be the same as that of the Request 
   * .
   * - When SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE macro is defined:
   * - For RN: The TgtID of the Read data flit must match the SrcID of the Request irrespective of spec revision 
   * - For SN/HN: The TgtID of the Read data flit must match the SrcID of the Request for spec revision ISSUE_A 
   * - For SN/HN: The TgtID of the Read data flit must match the ReturnNID of the Request for spec revision ISSUE_B or later 
   * - For RN: The SrcID of the Read data flit must match the TgtID of the Request for ISSUE_A
   * - For RN: The HomeNID of the Read data flit must match the TgtID of the Request for ISSUE_B or later
   * - For SN/HN: The SrcID of the Read data flit must match the TgtID of the Request irrespective of spec revision 
   * - For RN: The TxnID of the Read data flit must be the same as that of the Request irrespective of spec revision
   * - For SN/HN: The TxnID of the Read data flit must be the same as that of the Request for spec revision ISSUE_A 
   * - For SN/HN: The TxnID of the Read data flit must be the same as that of the ReturnTxnID Request for spec revision ISSUE_B or later
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CompData flit is received for one of the outstanding Read transactions whose data phase isn't complete yet.
   * @end_check_pass
   *
   * @check_fail
   * In case of a CHI-A node, a CompData flit is received but there are no outstanding transactions whose TgtID,SrcID and TxnID match with the SrcID,TgtID and TxnID of the CompData.
   * In case of CHI-B or later RN, a CompData flit is received but there are no outstanding transactions whose TgtID,SrcID and TxnID match with the HomeNID,TgtID and TxnID of the CompData.
   * In case of CHI-B or later SN, a CompData flit is received but there are no outstanding transactions whose TgtID,ReturnNID and ReturnTxnID match with the HomeNID,TgtID and TxnID of the CompData.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_read_dat_flit_with_xact_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the number of Read Data flits is equal to the expected value <br>
   * The number of data flits for a transaction is determined by number of bytes to be transferred and data bus width
   * @end_check_description
   * 
   * @check_pass
   * A Read Data flit is received for a Read transaction whose data phase is not yet complete  (data_status is either INITIAL or PARTIAL_ACCEPT)
   * @end_check_pass
   *
   * @check_fail
   * A Read Data flit is received for a Read transaction whose data phase is complete (data_status == ACCEPT)
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats expected_num_read_data_flits_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Write Data flits. <br>
   * - The SrcID of the Write data flit must match the Tgt ID of the request while
   *   the Txn ID of the response flit must be the same as that of the Request 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Write Data flit is received for one of the outstanding transactions whose data phase isn't yet complete (data_status is either INITIAL or PARTIAL_ACCEPT).
   * @end_check_pass
   *
   * @check_fail
   * A Write Data flit is received but there are no outstanding transactions whose SrcID,TgtID and TxnID match the SrcID, TgtID and TxnID of the Write Data.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_write_dat_flit_with_xact_check;
 
/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Write Data flits are transmitted only after CompDBIDResp/DBIDResp. <br>
   * @end_check_description
   * 
   * @check_pass
   * A Write Data flit is received and there is an active xact with matching
   * src_id, tgt_id and txn_id which has received a DBIDResp/CompDBIDResp
   * @end_check_pass
   *
   * @check_fail
   * A Write Data flit is received and there is an active transaction with matching
   * src_id, tgt_id and txn_id which hasn't yet received a DBIDResp/CompDBIDResp
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats write_dat_xfer_after_dbid_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the number of Write Data flits is equal to the expected value <br>
   * The number of data flits for a transaction is determined by number of bytes to be transferred and data bus width
   * @end_check_description
   * 
   * @check_pass
   * A Write Data flit is received and there is an active xact with matching
   * src_id, tgt_id and txn_id whose data_status is either INITIAL or PARTIAL_ACCEPT.
   * @end_check_pass
   *
   * @check_fail
   * A Write Data flit is received and there is an active xact with matching
   * src_id, tgt_id and txn_id whose data_status is ACCEPT.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats expected_num_write_data_flits_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Byte Enables are set correctly for Write Data <br>
   * - For all Write transactions, byte enables that are not within the data window, specified by Addr and Size, must be deasserted.
   * - For DVMOp transactions, only the least significant 8 bits must be asserted.
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * For a full cacheline Write transaction, all Byte Enable bits are asserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write, none of the Byte Enable bits outside of the data window are set. <br>
   * SCENARIO 3: <br>
   * When chi_spec_revision is ISSUE_B or greater, the cache state in the CopyBackWriteData is set to I and all BE bits are set to zero. <br>
   * SCENARIO 4: <br>
   * For a DVMOp, Byte Enable is set to 'hff. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * For a full cacheline Write transaction, one or more Byte Enable bits are deasserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write, any of the Byte Enable bits outside of the data window are set.  <br>
   * SCENARIO 3: <br>
   * When chi_spec_revision is ISSUE_B or greater, the cache state in the CopyBackWriteData is set to I but one or more Byte Enable bits are asserted. <br>
   * SCENARIO 4: <br>
   * For a DVMOp, Byte Enable is not set to 'hff. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check currently supports full Cacheline Write transaction types only.
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_byte_enable_for_write_data_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/** @cond PRIVATE */
/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Poison is set correctly for valid bytes of Write Data <br>
   * - For all transactions, poison bit is set to 1 only for the data with  valid byte enable asserted.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Write Data, the poison bit is set to 0 for all chunks of 8 data bytes whose Byte Enables are all de-asserted. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Write Data, the poison bit is set to 1 for any 8 byte data chunk whose Byte Enables are not all de-asserted. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::poison_enable is set to 1 
   *  .
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_poison_for_write_data_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Datacheck is set correctly for valid bytes of Write Data <br>
   * - For all transactions, datacheck bit is set to 1 only for the data with  valid byte enable asserted.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Write Data, the datacheck bit is set to 0 for all data bytes whose Byte Enable is de-asserted. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Write Data, the datacheck bit is set to 1 for any of the data bytes whose Byte Enable is de-asserted. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_datacheck_for_write_data_check;  
/** @endcond */

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Checks that the Datacheck is set correctly such that ODD Byte parity is generated for Write Data <br>
   * - For all transactions, datacheck bit is set appropriatly such that ODD Byte parity is generated across the data that is being transmited.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Write Data, when the datacheck along with data maintains ODD parity. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Write Data, when the datacheck along with data does not maintain ODD parity. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN and passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   *  The error message currently displays the expected and received datacheck values without masking out the invalid and poisoned byte lanes.
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_parity_datacheck_for_write_data_check;  

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Datacheck is set correctly such that ODD Byte parity is generated for Read Data <br>
   * - For all transactions, datacheck bit is set appropriatly such that ODD Byte parity is generated across the data that is being received.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Read Data, when the datacheck along with data maintains ODD parity. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Read Data, when the datacheck along with data does not maintain ODD parity. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   *  The error message currently displays the expected and received datacheck values without masking out the invalid and poisoned byte lanes.
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_parity_datacheck_for_read_data_check;  

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Checks that the Datacheck is set correctly such that ODD Byte parity is generated for Snoop Data <br>
   * - For all snoop transactions that involve data transfers, datacheck bit is set appropriatly such that ODD Byte parity is generated across the data that is being transmited.
   * .
   * @end_check_description
   * 
   * @check_pass
   * All SnpRespData flits corresponding to a Snoop request are received, and the datacheck in the SnpRespData was set such that ODD Byte parity is generated. <br>
   * @end_check_pass
   *
   * @check_fail
   * All SnpRespData flits corresponding to a Snoop request are received, and the datacheck in the SnpRespData was set such that ODD Byte parity is not generated <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_parity_datacheck_for_snoop_data_check; 
`endif 

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in SnpResp Data flits. <br>
   * - The TgtID must be set to the the SrcID of the Snoop request.
   *   The TxnID must be set to the same value as the TxnID of the Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * A SnpRespData is received whose TgtID and TxnID match with the SrcID and TxnID of one of the outstanding Snoop requests. <br>
   * Scenario 2: <br>
   * In a CHI-B or later system, a SnpRespDataFwded response is received whose TgtID and TxnID match with the SrcID and TxnID of one of the outstanding Forward type Snoop requests. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * A SnpRespData is received but there are no Snoop requests whose SrcID and TxnID match with the TgtID and TxnID of the SnpRespData flit. <br>
   * Scenario 2: <br>
   * In a CHI-B or later system, a SnpRespDataFwded response is received but there are no Forward type Snoops SrcID and TxnID match with the TgtID and TxnID of the SnpRespDataFwded flit. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_snprspdata_flit_with_snp_xact_check;
 
  `ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the SourceID, TargetID, Transaction ID and DBID fields are set correctly in the CompData flits used for DCT. <br>
   * - The TgtID must be set to the the FwdNID of the Snoop request.
   *   The SrcID must be set to the the TgtID of the Snoop request.
   *   The TxnID must be set to the FwdTxnID of the Snoop request. 
   *   The DBID must be set to the TxnID of the Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CompData is received from an RN whose SrcID, TgtID, TxnID and DBID match with the TgtID, FwdNID, FwdTxnID and TxnID of one of the outstanding Forward type Snoop requests.
   * @end_check_pass
   *
   * @check_fail
   * A CompData is received from an RN but there are no forward type Snoop requests whose TgtID, FwdNID, FwdTxnID and TxnID match with the SrcID, TgtID, TxnID and DBID of the CompData flit
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_compdata_flit_with_fwd_type_snp_xact_check;
`endif

/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that the credit type field in a PCrdReturn transaction is set correctly. <br>
   * Before the PCrdReturn flit, a PCrdGrant must have been received with the same PCrdType
   * @end_check_description
   * 
   * @check_pass
   * A PCrdReturn flit is seen after the reception of a corresponding PCrdGrant with the same PCrdType value.
   * @end_check_pass
   *
   * @check_fail
   * A PCrdReturn flit is seen without prior reception of a PCrdGrant with the same PCrdType value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_p_crd_type_in_pcrdreturn_flit_check;

/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * The transaction must only be retried by the Requester when a PCrdGrant is received with the correct PCrdType 
   * @end_check_description
   * 
   * @check_pass
   * A retry transaction is received while there are available granted credits for the PCrdType.
   * @end_check_pass
   *
   * @check_fail
   * A retry transaction is received while there are no available granted credits for the PCrdType,ie,
   * the retry tranaction is received without the recpetion of a PCrdGrant with the same PCrdType
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_retry_xact_after_pcrdcgrant_check;
  
/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that the transaction is retried only after RetryAck and PCrdGrant responses are received from the Target node. <br>
   * The transaction with credit must only be sent by the Requester after both the RetryAck response and an appropriate PCrdGrant response are received, and
   * the transaction attributes other than PCrdType, AllowRetry and QoS must be the same as the original request.
   * @end_check_description
   * 
   * @check_pass
   * A retry transaction is seen after the prior reception of PCrdGrant and RetryAck, with the SrcID and PCrdType set to the same value as the TgtID and PCrdType of the retry transaction, and, <br>
   * The attributes of the retry transaction match with those of the original request.
   * @end_check_pass
   *
   * @check_fail
   * A retry transaction is seen but there were no corresponding PCrdGrant and RetryAck, whose SrcID and PCrdType match the TgtID and PCrdType of the retry transaction, or, <br>
   * One or more attributes of the retry transaction do not match with those of the Original request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_retry_xact_check;
   
/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that PCrdReturn is sent only after RetryAck and PCrdGrant flits are received from the Target node. <br>
   * PcrdReturn transaction can only be sent after the reception of a PcrdGrant flit 
   * @end_check_description
   * 
   * @check_pass
   * A PCrdReturn transaction is seen after the prior reception of PCrdGrant and RetryAck, with the SrcID and PCrdType set to the same value as the TgtID and PCrdType of the PCrdReturn.
   * @end_check_pass
   *
   * @check_fail
   * A PCrdReturn transaction is seen but there were no corresponding PCrdGrant and RetryAck, whose SrcID and PCrdType match the TgtID and PCrdType of the PCrdReturn.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_pcrdreturn_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Checks PcrdGrant is not seen without any outstanding transaction. 
   * @end_check_description
   * 
   * @check_pass
   * PcrdGrant is seen and there are outstanding transaction.
   * @end_check_pass
   *
   * @check_fail
   * PcrdGrant is seen without any outstanding transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
 svt_err_check_stats valid_pcrdgrant_check;

/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that there shouldn't be any outstanding protocol credits at the end of simulation. Protocol credits must be utilized by retrying the original transaction or returned via PCRDRETURN.
   * @end_check_description
   * 
   * @check_pass
   * There are no outstanding protocol credits at the end of simulation.
   * @end_check_pass
   *
   * @check_fail
   * There are outstanding protocol credits at the end of simulation.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when svt_chi_node_configuration::end_of_simulation_checks_enable is set to 1.
   * @end_check_additional_information 
   *  
   */
 svt_err_check_stats end_of_simulation_outstanding_protocol_credit_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that there is only one outstanding DVMOp sync transaction at a given point in time. <br>
   * Only one SnpDVMOp(Sync) transaction can be outstanding from an MN to an RN. 
   * @end_check_description
   * 
   * @check_pass
   * A SnpDVMOp(Sync) request is received and there are no outstanding SnpDVMOp(Sync) requests at the RN.
   * @end_check_pass
   *
   * @check_fail
   * A SnpDVMOp(Sync) request is received but there are already outstanding SnpDVMOp(Sync) requests at the RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats single_outstanding_snpdvmop_sync_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the TxnID of a SnpDVMOp must be unique for a given Requester. <br>
   * - The TxnID must be unique for a given Requester.
   * - The Requester can reuse the ID only after it has received all responses associated with
   * - a previous transaction that has used the same TxnID 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpDVMOp request is received and there are no outstanding SnpDVMOp requests with the same TxnID value.
   * @end_check_pass
   *
   * @check_fail
   * A SnpDVMOp request is received but there is already an outstanding SnpDVMOp request with the same TxnID value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats single_outstanding_snpdvmop_per_txn_id_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a request to a cache line is issued when there are no outstanding Copyback transactions that are expecting CompDBIDResp. <br>
   * - An RN-F must wait for the CompDBIDResp response to be received for an outstanding CopyBack transaction before issuing another request
   *   to the same cache line.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A request flit is received and there are no pending Copybacks to the same address that are yet to receive CompDBIDResp.
   * @end_check_pass
   *
   * @check_fail
   * A request flit is received and there is an outstanding Copyback to the same address which is yet to receive CompDBIDResp.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable for all the Copyback transactions except WriteEvictorEvict transaction which are introduced in CHI ISSUE E. Similar kind of check for WriteEvictorEvict transaction is new_req_before_comp_or_compdbid_resp_for_copyback_writes_with_optional_data_to_same_cacheline_check.
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_compdbid_resp_for_copyback_to_same_cacheline_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a request to a cache line is issued when there are no outstanding Copyback Writes with Optional Data transactions (WriteEvictorEvict) that are expecting Comp/CompDBIDResp. <br>
   * - An RN-F must wait for the Comp/CompDBIDResp response to be received for an outstanding WriteEvictorEvict transaction before issuing another request
   *   to the same cache line.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A request flit is received and there are no pending WriteEvictorEvict transactions to the same address that are yet to receive Comp/CompDBIDResp.
   * @end_check_pass
   *
   * @check_fail
   * A request flit is received and there is an outstanding WriteEvictorEvict transaction to the same address which is yet to receive Comp/CompDBIDResp.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_comp_or_compdbid_resp_for_copyback_writes_with_optional_data_to_same_cacheline_check;
`endif

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that for an RN-F node, Snoop request is observed when there are no outstanding Snoop transactions targetting the same cache line.
   * @end_check_description
   * 
   * @check_pass
   * A Snoop request flit is received and there are no outstanding Snoop transactions targetting the same cache line.
   * @end_check_pass
   *
   * @check_fail
   * A Snoop request flit is received and there are one or more outstanding Snoop transactions targetting the same cache line.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats new_snp_req_before_completion_of_previous_snp_xact_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that for an RN-F node, Snoop request is observed when there are no outstanding coherent transactions targetting the same cache line that received completion response and has not yet sent out the CompAck or Write Data. <br>
   * Once a completion is received for a transaction, the completer must not send a snoop request to the same cache line until it receives:
   * - A CompAck for any Read and Dataless requests except for ReadOnce* and ReadNoSnp.
   * - A WriteData response for CopyBack and Atomic requests.
   * - For WriteUnique, a WriteData response and, if applicable, CompAck.
     * .
   * @end_check_description
   * 
   * @check_pass
   * A Snoop request flit is received and there are no outstanding coherent transactions targetting the same cache line that received completion response and has not yet sent out the CompAck/WrData.
   * @end_check_pass
   *
   * @check_fail
   * A Snoop request flit is received and there are outstanding coherent transactions targetting the same cache line that received completion response and has not yet sent out the CompAck/WrData.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats new_snp_req_before_compack_of_coherent_xact_which_received_comp_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a Read, Write, Dataless or Atomic request is issued when there are no outstanding Read or Write transactions to the same cache line. <br>
   * - "Outstanding Read" refers to all Read as well as dataless transactions other than CMOs.  
   * - "Outstanding Write" refers to all Write and Atomic transactions.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Read, Write, Dataless or Atomic request flit is received and there are no outstanding Read, Write, Dataless or Atomic transactions to the same cache line.
   * @end_check_pass
   *
   * @check_fail
   * A Read, Write, Dataless or Atomic request flit is received and there are one or more outstanding Read, Write, Dataless or Atomic transactions to the same cache line.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN, SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - In case there are multiple sources within an RN, it cannot be determined if the requests are issued by the
   *   same source based on the request fields. Therefore, this check will not be performed at passive RN when 
   *   svt_chi_node_configuration::multiple_req_sources_within_rn_node is set to 1.
   * - In case DMT Reads are issued at the SN, it is possible that the Interconnect de-allocates the Reads before SN
   *   sends CompData to the RN. In such a case, it is possible that the Interconnect issues a second request to the same address
   *   while the CompData of the previous DMT Read is in progress or is yet to be sent to the RN. 
   *   Therefore, this check will not consider DMT Reads at the SN while looking for outstanding transactions to a given cacheline.
   * .
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_completion_of_previous_read_write_xact_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a request, other than Evict, WriteEvictFull, WriteEvictorEvict and Prefetch, is issued when there are no outstanding CMO transactions to the same cache line. <br>
   * @end_check_description
   * 
   * @check_pass
   * A request flit is received and there are no pending CMOs to the same cache line.
   * @end_check_pass
   *
   * @check_fail
   * A request flit is received and there is an outstanding CMO to the same cache line.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * Propogation of CMOs to Slave nodes is currently not supported by the VIP.
   * Therefore, this check is not applicable for SN.
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_completion_of_previous_cmo_xacts_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a CMO request is issued when there are no outstanding transactions of type mentioned below to the same cache line that can allocate the received data in the Requester caches:
   * - ReadShared, ReadClean, ReadUnique, ReadNotSharedDirty, CleanUnique, MakeUnique
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CMO request flit is received and there are no pending transactions of type mentioned below to the same cache line that can allocate the received data in the Requester caches:
   * - ReadShared, ReadClean, ReadUnique, ReadNotSharedDirty, CleanUnique, MakeUnique
   * .
   * @end_check_pass
   *
   * @check_fail
   * A CMO request flit is received and there are one or more pending transactions of type mentioned below to the same cache line that can allocate the received data in the Requester caches:
   * - ReadShared, ReadClean, ReadUnique, ReadNotSharedDirty, CleanUnique, MakeUnique
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * Propagation of CMOs to Slave nodes is currently not supported by the VIP.
   * Therefore, this check is not applicable for SN.
   * @end_check_additional_information 
   */
  svt_err_check_stats cmo_xact_before_completion_of_previous_xacts_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that there are no outstanding Normal Non-cacheable or Device type writes, that are targeting an HN-I, which haven't
   * received a Comp Repsonse, before a Barrier is issued by an RN. <br>
   * - An RN must wait until all Normal Non-cacheable writes, and all Device type writes, that are targeting an
   *   HN-I, have received a completion response before issuing an EOBarrier or an ECBarrier request.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Barrier is received and there are no pending normal,non-cacheable or 
   * Device type Writes to the same address that are yet to receive Comp Response
   * @end_check_pass
   *
   * @check_fail
   * A Barrier is received and there are one or more pending normal,non-cacheable or 
   * Device type Writes to the same address that are yet to receive Comp Response
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when Barrier support is enabled in the passive RN node (svt_chi_node_configuration::barrier_enable == 1)
   * @end_check_additional_information 
   */
  svt_err_check_stats comp_received_for_normal_non_cacheable_or_device_writes_before_barrier_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that Normal Non-cacheable or Device type writes were received, prior to the current Barrier and
   * after the previous Barrier transaction <br>
   * - It is recommended that an RN only issues an EOBarrier or ECBarrier if it has issued a Normal Non-cacheable, or
   *   Device type memory write request since previously completing an EOBarrier or ECBarrier.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Barrier transaction is received and there were normal,non-cacheable or 
   * Device type Writes seen before the Barrier, and after the previous Barrier if any.
   * @end_check_pass
   *
   * @check_fail
   * A Barrier transaction is received and there were no normal,non-cacheable or 
   * Device type Writes seen before the Barrier, and after the previous Barrier if any.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when Barrier support is enabled in the passive RN node (svt_chi_node_configuration::barrier_enable == 1)
   * @end_check_additional_information 
   */
  svt_err_check_stats normal_non_cacheable_or_device_writes_between_barriers_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that both parts of a SnpDVMOp request are received at the RN. <br>
   * -SnpDVMOp requests consist of two parts. Both SnpDVMOp request packets corresponding to a single transaction must use the same TxnID  
   * .
   * @end_check_description
   * 
   * @check_pass
   * At the end of the simulation, there are no SnpDVMOp transactions for which only one part of the SnpDVMOp request was received.
   * @end_check_pass
   *
   * @check_fail
   * At the end of the simulation, there are one or more SnpDVMOp transactions for which only one part of the SnpDVMOp request was received.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_snpdvmop_part_check;

/**
   * @groupname chi_protocol_err_valid_snoop_req_check
   * @check_description
   * Check that only DVMOp related snoop transactions are seen on the Snoop Channel in case of RN-D. <br>
   * Use of the SNP channel is limited to DVM data transfers in case of RN-D nodes.  
   * @end_check_description
   * 
   * @check_pass
   * A SnpDVMOp is received for an RN-D node.
   * @end_check_pass
   *
   * @check_fail
   * A Snoop transaction, other than a SnpDVMOp, is received for an RN-D node.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_rn_d_snoop_flit_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_snoop_req_check
   * @check_description
   * Check that only supported snoop transactions are seen on the Snoop Channel in case of RN-F. <br>
   * SYNOPSYS DEFINED : <br>
   * - Stash and Forward type snoops are expected to be received only by a CHI-B or later compliant RN-F, when Stashing and DCT features are enabled in the corresponding HN, respectively.  
   * - SnpNotSharedDirty, Stash and Forward type snoops are expected to be received only by a CHI-B or later compliant RN-F.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * A Snoop request other than SnpNotSharedDirty, Stash and Forward type snoop is received by a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A Snoop request other than Stash/Forward type snoop is received by a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A Forward type Snoop request is received by a CHI-B or later RN-F from an HN-F for which DCT is enabled through svt_chi_system_configuration::set_hn_dct_enable(). <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * A SnpNotSharedDirty/Stash/Forward type snoop is received by a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A Stash/Forward type snoop is received by a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A Forward type Snoop request is received by a CHI-B or later RN-F from an HN-F for which DCT is not enabled through svt_chi_system_configuration::set_hn_dct_enable(). <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined. <br>
   * Once support for Stashing is added, Stash type snoops will be expected to be received only by a CHI-B or later compliant RN-F, 
   * when the feature is enabled in the corresponding HN.  
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats expected_snoop_xact_type_check;
`endif

/**
   * @groupname chi_protocol_err_valid_request_flit_check
   * @check_description
   * Check that only supported transaction types are received for a given node. <br>
   * SYNOPSYS DEFINED: <br> 
   * - DVMOp transactions are epected to be seen only for RNs with svt_chi_node_configuration::dvm_enable set to 1
   * - CHI-B or later specific transactions (RNSD, ROMI, ROCI, CSP, PrefetchTgt, AtomicOps) are expected to be seen only for a CHI-B or later compliant RN.  
   * - CHI-E or later specific transactions (Write*Zero, WriteEvictorEivct,...) are expected to be seen only for a CHI-E or later compliant RN.  
   * - VIP currently does not support PrefetchTgt transactions.
   * .
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * A request other than PrefetchTgt, ReadNotSharedDirty, ROMI, ROCI, PrefetchTgt and AtomicOps is seen for a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A request other than PrefetchTgt is seen for a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A ReadNoSnp or WriteNoSnp transaction is received by an SN. <br>
   * Scenario 4: <br>
   * A DVMOp transaction is seen for an RN-F or RN-D whose svt_chi_node_configuration::dvm_enable is set to 1. <br>
   * Scenario 5: <br>
   * ReadNoSnpSep is seen by an SN for a CHI-C or later. <br>
   * Scenario 6: <br>
   * ReadNoSnpSep is send from an HN with sep read and sep resp enabled.
   * Scenario 7: <br>
   * CHI ISSUE E specific transaction request is seen for a CHI-E or later compliant RN.
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * A PrefetchTgt, ReadNotSharedDirty, ROMI, ROCI, PrefetchTgt or AtomicOps transaction request is seen for a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A PrefetchTgt transaction request is seen for a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A transaction of type other than WriteNoSnp and ReadNoSnp is received by an SN. <br>
   * Scenario 4: <br>
   * A DVMOp transaction is seen for an RN whose svt_chi_node_configuration::dvm_enable is 0. <br>
   * Scenario 5: <br>
   * A DVMOp transaction is seen for an RN-I. <br>
   * Scenario 6: <br>
   * ReadNoSnpSep is seen by an SN for a CHI-B or before. <br>
   * Scenario 7: <br>
   * ReadNoSnpSep is send from an HN with sep read and sep resp disabled. <br>
   * Scenario 8: <br>
   * CHI ISSUE E specific transaction request is seen for a CHI-D or earlier compliant RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * VIP CHI-E or later SN currently does not support combined write and (P)CMO transactions. <br>
   * VIP CHI-B or later RN currently does not support Prefetch transactions. <br>
   * VIP CHI-B or later SN currently does not support AtomicOps and CMO transactions. <br>
   * The check will be updated once support for these transactions is added.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats expected_xact_type_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that there are no outstanding DVMOp(Non-sync) transactions when a DVMOp(Sync) request is received. <br>
   * - All previous DVMOp requests whose completion needs to be guaranteed by the DVMOp(Sync) must have received a
   *   Comp response before the RN can send a DVMOp(Sync).
   * .
   * @end_check_description
   * 
   * @check_pass
   * When svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_ALL_NON_SYNC_TO_COMPLETE and a DVMOp(sync) request is received and there are no outstanding DVM(Non-sync) requests at the RN.
   * When svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_NON_SYNC_FROM_SAME_LPID_TO_COMPLETE and a DVMOp(sync) request is received and there are no outstanding DVM(Non-sync) requests with the same LPID at the RN.
   * @end_check_pass
   *
   * @check_fail
   * When svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_ALL_NON_SYNC_TO_COMPLETE and a DVMOp(sync) request is received but there are one or more outstanding DVM(Non-sync) requests at the RN.
   * svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_NON_SYNC_FROM_SAME_LPID_TO_COMPLETE and a DVMOp(sync) request is received but there are one or more outstanding DVM(Non-sync) requests with the same LPID at the RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1) and 
   * svt_chi_node_configuration::dvm_sync_transmission_policy is set to a value other than DO_NOT_WAIT_FOR_NON_SYNC_TO_COMPLETE.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats expected_dvmop_sync_request_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that there are no outstanding DVMOp(Sync) transactions when a DVMOp(Sync) request is received. <br>
   * SYNOPSYS DEFINED <br> 
   * Not more than one DVMOp(Sync) transaction is expected to be outstanding from an RN at any given point in time, when svt_chi_node_configuration::allow_multiple_dvm_sync_oustanding_xacts is set to 0.
   * @end_check_description
   * 
   * @check_pass
   * A DVMOp(sync) request is received and there are no outstanding DVM(Sync) requests at the RN.
   * @end_check_pass
   *
   * @check_fail
   * A DVMOp(sync) request is received but there already is an outstanding DVM(Sync) requests at the RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1) and svt_chi_node_configuration::allow_multiple_dvm_sync_oustanding_xacts is set to 0.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats single_outstanding_dvmop_sync_request_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the part numbers of the SnpDVMOp request packets are set correctly. <br>
   * Part number must be 0b0 for SnpDVMOp Part 1 and 0b1 for SnpDVMOp Part 2.
   * @end_check_description
   * 
   * @check_pass
   * SnpDVMOp_Part1 and SnpDVMOp_Part2 request flits corresponding to a DVM Snoop transaction are received and the part numbers are set correctly.
   * @end_check_pass
   *
   * @check_fail
   * Two SnpDVMOp_Part request flits corresponding to a DVM Snoop transaction are received but the part numbers of the two parts are the same.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_snpdvmop_req_part_num_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the order of the responses sent by the Completer is correct in case of DVMOp transactions. <br>
   * Completer first returns a DBIDResp indicating that it can receive data and sends a Comp Response after the data transfer is complete.
   * When the spec_revision is ISSUE_D or later and the DVMOp is a Non-sync DVMOp, then the interconnect is permitted but not required to wait for WriteData before sending the Comp.
   * Currently VIP does not support early COMP support for DVM transaction.
   * @end_check_description
   * 
   * @check_pass
   * A Comp response is received after the DBIDResp/WriteData flit.
   * @end_check_pass
   *
   * @check_fail
   * A Comp response is received before DBIDResp/WriteData flit. 
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_order_of_dvmop_rspflits_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that only Comp Response is used for DVMOp transactions, and not CompDBIDResp <br>
   * When the spec_revision is ISSUE_D or later the Completer is permitted to opportunistically combine Comp and DBIDResp into CompDBIDResp response. 
   * This is applicable only in case of early comp support. Currently VIP does not support early COMP support for DVM transaction. 
   * A Comp response, with the Resp field set to zero, is always used for Barrier and DVM transaction completion. 
   * @end_check_description
   * 
   * @check_pass
   * A Comp response is received for a DVMOp transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CompDBIDResp flit is received for a DVMOp transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_rspflit_for_dvmop_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the unused bits in the Write data of a DVMOp transaction are set to zero. <br>
   * @end_check_description
   * 
   * @check_pass
   * All the bits in the DVMOp write data that are not valid or unused are set to zero.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Bits corresponding to data[55:51] are set to a non-zero values. <br>
   * SCENARIO 2: <br>
   * VA Valid is 0, but the bits corresponding to data[50:4] are set to non-zero values. <br>
   * SCENARIO 3: <br>
   * VA Valid is set to 1 in the DVMOp transaction request that is Invalidate by PA, but bits corresponding to data[50:(`SVT_CHI_MAX_PA_WIDTH-2)] are set to non-zero values. <br>
   * SCENARIO 4: <br>
   * VA Valid is set to 1 in the DVMOp transaction request that is not Invalidate by PA, but bits corresponding to data[50:(`SVT_CHI_MAX_VA_WIDTH-2)] are set to non-zero values. <br>
   * SCENARIO 5: <br>
   * In case of CHI-A, bits corresponding to data[63:56] are set to non-zero values. <br>
   * SCENARIO 6: <br>
   * In case of CHI-B or greater revisions, VMID Valid in the DVMOp transaction request is set to 0 but the bits corresponding to data[63:56] are set to non-zero values. <br>
   * SCENARIO 7: <br>
   * In case of CHI-D or earlier revisions, the bits corresponding to data[3:0] are set to non-zero values. <br>
   * SCENARIO 8: <br>
   * In case of CHI-E or greater revisions, for a DVM operation that is not Invalidate by VA type TLBI, the bits corresponding to data[3:0] are set to non-zero values. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1). 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats unused_bits_in_dvm_write_data_check;


/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that a single transaction does not mix OK and EXOK responses within its data packets . <br>
   * A single transaction is not permitted to mix OK and EXOK responses. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the data flits corresponding to a transaction are all set to the same value.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the data flits corresponding to a transaction are not set to the same value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats single_xact_mix_ok_exok_response_check;

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the resp field has the same value for all data flits of a multi-flit data transfer  . <br>
   * The resp field in a response must have the same value for every packet of a data message regardless of whether or not there is an error condition. 
   * @end_check_description
   * 
   * @check_pass
   * The Resp field in the data flits corresponding to a transaction are all set to the same value.
   * @end_check_pass
   *
   * @check_fail
   * The Resp field in the data flits corresponding to a transaction are not set to the same value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_resp_for_data_packet_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadNoSnp transaction. <br>
   * The Exclusive Okay response must only be given for a transaction that has the Excl attribute set. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadNoSnp transaction are as per Table 9-2 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadNoSnp request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadNoSnp request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readnosnp_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadOnce transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadOnce transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadOnce transaction are as per Table 9-2 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadOnce transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readonce_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadClean transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadClean transaction are as per Table 9-2 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadClean request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadClean request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readclean_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadShared transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadShared transaction are as per Table 9-2 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadShared request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadShared request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readshared_associated_compdata_packets_legal_resperr_check;

  `ifdef SVT_CHI_ISSUE_C_ENABLE
  /**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the DataSource field in the associated Compdata packets have a valid value. <br>
   * @end_check_description
   * 
   * @check_pass
   * The DataSource field in the associated DataSepResp flits from the Interconnect are set to zero and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0.
   * The DataSource field in the associated DataSepResp flits from the Interconnect are set and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The DataSource field in the associated DataSepResp flits from the Interconnect are set to non-zero values but svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later. <br>
   * and if any of the HNs uses RespSepData DataSepResp Flow 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_data_source_in_datasepresp_check;
  `endif

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_data_source_checks
   * @check_description
   * Check that the DataSource field in the associated Compdata packets have a valid value. <br>
   * @end_check_description
   * 
   * @check_pass
   * The DataSource field in the associated Compdata flits from the Interconnect are set to zero and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0. <br>
   * The DataSource field in the associated Compdata flits from the Interconnect are set and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The DataSource field in the associated Compdata flits from the Interconnect are set to non-zero values but svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_data_source_in_compdata_check;

/**
   * @groupname chi_protocol_err_valid_data_source_checks
   * @check_description
   * Check that the DataSource field in the associated snprespdataptl,snprespdata packets have a valid value. <br>
   * @end_check_description
   * 
   * @check_pass
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction should not take values DATA_SOURCE_UNSUPPORTED, PREFETCHTGT_WAS_USEFUL, PREFETCHTGT_WAS_NOT_USEFUL when svt_chi_node_configuration::data_source_enable is set to 1. <br>
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction should take value DATA_SOURCE_UNSUPPORTED when svt_chi_node_configuration::data_source_enable is set to 0.
   * @end_check_pass
   *
   * @check_fail
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction set to one of the values DATA_SOURCE_UNSUPPORTED, PREFETCHTGT_WAS_USEFUL, PREFETCHTGT_WAS_NOT_USEFUL when svt_chi_node_configuration::data_source_enable is set to 1.
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction not set to the value DATA_SOURCE_UNSUPPORTED when svt_chi_node_configuration::data_source_enable is set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_data_source_in_snprespdata_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadNotSharedDirty transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadNotSharedDirty transaction are as per Table 9-2 in the CHI-B or later Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadNotSharedDirty request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadNotSharedDirty request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readnotshareddirty_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadSpec transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadSpec transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadSpec transaction are as per the CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadSpec transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response has valid resp_err value for ReadSpec transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for ReadSpec transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response of a ReadSpec transaction is as per the CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response of a ReadSpec transaction is set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadOnceCleanInvalid transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadOnceCleanInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadOnceCleanInvalid transaction are as per Table 9-2 in the CHI-B or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadOnceCleanInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readoncecleaninvalid_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadOnceMakeInvalid transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadOnceMakeInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadOnceMakeInvalid transaction are as per Table 9-2 in the CHI-B or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadOnceMakeInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readoncemakeinvalid_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanSharedPersist transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for CleanSharedPersist transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanSharedPersist transaction are as per Table 9-3 in the CHI-B or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a CleanSharedPersist transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleansharedpersist_associated_comp_response_legal_resperr_check;

`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadUnique transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadUnique transaction are as per Table 9-2 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readunique_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanShared transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for CleanShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanShared transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a CleanShared transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleanshared_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanInvalid transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for CleanInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanInvalid transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a CleanInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleaninvalid_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanUnique transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanUnique transaction are as per Table 9-3 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the CleanUnique request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits are set to EXOK but the Exclusive attribute in the CleanUnique request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleanunique_associated_comp_response_legal_resperr_check;


/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for MakeInvalid transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for MakeInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a MakeInvalid transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a MakeInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makeinvalid_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for MakeUnique transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for MakeUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a MakeUnique transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a MakeUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makeunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for Evict transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK or DERR value for Evict transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of an Evict transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of an Evict transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats evict_associated_comp_response_legal_resperr_check;

  `ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp or RespSepData response flit has valid resp_err value for MakeReadUnique transaction. <br>
   * The associated Comp or RespSepData response flit's resp_err field should not take EXOK for MakeReadUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The RespErr field in the associated Comp response flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated RespSepData response flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The RespErr field in the associated Comp response flit of a MakeReadUnique transaction is set to EXOK. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated RespSepData response flit of a MakeReadUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makereadunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated CompData or DataSepResp flits have valid resp_err value for MakeReadUnique transaction. <br>
   * The associated CompData or DataSepResp flit's resp_err field should not take EXOK for MakeReadUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a MakeReadUnique transaction is set to EXOK. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a MakeReadUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makereadunique_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated CompData or DataSepResp flits have valid resp_err value for ReadPreferUnique transaction. <br>
   * The associated CompData or DataSepResp flit's resp_err field should not take EXOK for ReadPreferUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a ReadPreferUnique transaction is set to EXOK response. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a ReadPreferUnique transaction is set to EXOK response. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a ReadPreferUnique transaction is set to EXOK. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a ReadPreferUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readpreferunique_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp or RespSepData packet has valid cache state value for a MakeReadUnique transaction. <br>
   * The cache state in the associated Comp or RespSepData flits of a MakeReadUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp or RespSepData is set to UC or UD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp or RespSepData is set to SC or SD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makereadunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated CompData or DataSepResp packet has valid cache state value for a MakeReadUnique transaction. <br>
   * The cache state in the associated CompData or DataSepResp flits of a MakeReadUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData or DataSepResp is set to UC or UD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData or DataSepResp is set to SC or SD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makereadunique_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated CompData or DataSepResp packet has valid cache state value for a ReadPreferUnique transaction. <br>
   * The cache state in the associated CompData or DataSepResp flits of a ReadPreferUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData or DataSepResp is set to UC UD or SC for a ReadPreferUnique transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData or DataSepResp is set to I or SD for a ReadPreferUnique transaction. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readpreferunique_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Checks that either all or none of the data flits sent by a completer in response to a READ transaction have the RespErr field set to NDERR. <br> 
   * @end_check_description
   * 
   * @check_pass
   * If RespErr fields in all the data_packets issued in response to READ request is set to NDERR.<br>
   * If RespErr field in none of the data packets issued in response to READ request is set to NDERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * If RespErr field in some of the data packets issued in response to READ request is set to NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN.
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_combination_of_data_resp_err_field_in_read_xact_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the home node sends a data response for a MakeReadUnique transaction if the line is not cached at the requester at the time of response. <br>
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The active RN-F receives a data response for a MakeReadUnique transaction when the line is no longer cached at the RN-F. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The active RN-F receives a dataless response for a MakeReadUnique transaction even though the line is no longer cached at the RN-F. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats expected_response_for_makereadunique_xact_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the data returned in the data response for a MakeReadUnique is the same as the data cached in the Requester when the 
   * cachestate at the requester before receiving the response is SC and the final state in the associated data response is UD. <br>
   * This check is applicable only when there are no error responses seen in the data response for the MakeReadUnique and the data cached in the RN is not poisoned.
   * @end_check_description
   * 
   * @check_pass
   * A data response with final state set to UD is received for a MakeReadUnique transaction even though the line is cached in SC state at the RN and
   * the Read data matches the cache data. <br>
   * @end_check_pass
   *
   * @check_fail
   * A data response with final state set to UD is received for a MakeReadUnique transaction even though the line is cached in SC state at the RN and
   * the Read data does not match the cache data. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * - This check will not be performed in the following cases:
   *   - Error response is received in the received MakeReadUnique read data.
   *   - Poison is set to a non-zero value in the received MakeReadUnique read data.
   *   - DataCheck error is detected in the received MakeReadUnique read data.
   *   - Poison is set to a non-zero value in the RN cache.
   *   .
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makereadunique_data_response_cache_data_match_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the final state in the Snoop response for a non-invaldating type snoop is not I if
   * there is already an outstanding MakeReadUnique transaction to the same cacheline given that the snoop response does not indicate a NON_DATA_ERROR. 
   * The MakeReadUnique transaction will be considered only if there were no prior invalidating type Snoops seen 
   * while the MakeReadUnique was outstanding. In other words, this check will not be performed if the RN had already received a 
   * an invalidating type Snoop overlapping with the MakeReadUnique.
   * @end_check_description
   * 
   * @check_pass
   * There is an outstanding MakeReadUnique transaction when a non-invaldating type Snoop request is received and the RN-F sets the final state
   * in the Snoop response to a value other than I. <br>
   * @end_check_pass
   *
   * @check_fail
   * There is an outstanding MakeReadUnique transaction when a non-invaldating type Snoop request is received but the RN-F sets the final state
   * in the Snoop response to I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_final_state_for_non_invalidating_snp_when_outstanding_makereadunique_to_same_cacheline_check;
  `endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadNoSnp transaction. <br>
   * The cache state in the associated CompData flits of a ReadNoSnp transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to a value other than I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to a value other than I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readnosnp_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadOnce transaction. <br>
   * The cache state in the associated CompData flits of a ReadOnce transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to a value other than I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to a value other than I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readonce_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadClean transaction. <br>
   * The cache state in the associated CompData flits of a ReadClean transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadClean transaction is set to UC or SC. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadClean transaction is set to I, UD or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readclean_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadShared transaction. <br>
   * The cache state in the associated CompData flits of a ReadShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadShared transaction is set to UC, UD, SC or SD. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadShared transaction is set to I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readshared_associated_compdata_packets_legal_cache_state_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadNotSharedDirty transaction. <br>
   * The cache state in the associated CompData flits of a ReadNotSharedDirty transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadNotSharedDirty transaction is set to UC, UD or SC. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadNotSharedDirty transaction is set to I or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readnotshareddirty_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadSpec transaction. <br>
   * The cache state in the associated CompData flits of a ReadSpec transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadSpec transaction is set to UC or SC. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadSpec transaction is set to UD, SD or I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a ReadSpec transaction. <br>
   * The cache state in the associated comp response of a ReadSpec transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a ReadSpec transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a ReadSpec transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadOnceCleanInvalid transaction. <br>
   * The cache state in the associated CompData flits of a ReadOnceCleanInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to I or UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to a value other than I and UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readoncecleaninvalid_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadOnceMakeInvalid transaction. <br>
   * The cache state in the associated CompData flits of a ReadOnceMakeInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to I or UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to a value other than I and UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readoncemakeinvalid_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response packet has valid cache state value for a CleanSharedPersist transaction. <br>
   * The cache state in the associated comp response packets of a CleanSharedPersist transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanSharedPersist transaction is set to UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanSharedPersist transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleansharedpersist_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT is applicable only for the following transactions: Readclean, Readshared, Readunique, RNSD, Readnosnp, Readonce, ROCI, ROMI, ReadPreferUnique and MakeReadUnique
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for the transaction types mentioned in the description.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used for transaction types apart from the ones mentioned in the description.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or later is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_transaction_supporting_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT for Readnosnp, Readonce, ROCI and ROMI can be used only for the following combinations of order and compack
   * - No ordering and No compack
   * - No ordering and compack
   * - Ordering and compack
   * .
   * DMT for Readnosnp, Readonce, ROCI and ROMI cannot be used with ordering and No compack 
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for one of the valid combinations of transaction type, order and compack mentioned in the description.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used for a combination of transaction type, order and compack apart from the ones mentioned in the decription.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or later is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_ordering_and_compack_combination_for_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * Exclusive transaction other than ReadPreferUnique and MakeReadunique that do not fail must not use DMT flow.
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for a Read transaction expect for ReadPreferUnique and MakeReadUnique with excluisve bit set to 0 or
   * when the exclusive read fails with NORMAL_OKAY response.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used for a Read transaction expect for ReadPreferUnique and MakeReadUnique with excluisve bit set to 1 and 
   * the excluisve read passes with EXOKAY response.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or later is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_exclusive_access_for_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * Order field can be set to REQ_ACCEPTED for readnosnp from HN to SN only when DMT is used
   * @end_check_description
   * 
   * @check_pass
   * Order field is set to REQ_ACCEPTED in a DMT ReadNoSnp from HN to SN. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * Order field is set to REQ_ACCEPTED in any transaction request issued by RN. <br> 
   * Scenario 2: <br>
   * Order field is set to REQ_ACCEPTED in a WriteNoSnp request issued by HN. <br>
   * Scenario 3: <br>
   * Order field is set to REQ_ACCEPTED in a ReadNoSnp from HN to SN, but DMT is not used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_order_type_for_non_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * A transaction request from Home to Slave also includes a ReturnTxnID field to convey the value of TxnID in the
   * data response from the Slave. Its value, when applicable, must be either:
   * - The TxnID generated by Home, when the ReturnNID is the Node ID of the Home when DMT is not used
   * - The TxnID of the original Requester, when the ReturnNID is the Node ID of the original Requester when DMT is used
   * .
   * @end_check_description
   * 
   * @check_pass
   * DMT is used and the ReturnTxnID in the request is set to the TxnID of the corresponding request issued by RN.
   * DMT is not used and the ReturnTxnID is set to the same value as the TxnID field.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used but the ReturnTxnID in the request is not set to the TxnID of the corresponding request issued by RN.
   * DMT is not used but the ReturnTxnID is not set to the same value as the TxnID field.
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_return_txn_id_check;
 
 /**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT can be used by an HN only when DMT is enabled for that HN through svt_chi_system_configuration::set_hn_dmt_enable()
   * @end_check_description
   * 
   * @check_pass
   * DMT is used by an HN and DMT is enabled for that HN through svt_chi_system_configuration::set_hn_dmt_enable()
   * @end_check_pass
   *
   * @check_fail
   * DMT is used by an HN and DMT is not enabled for that HN through svt_chi_system_configuration::set_hn_dmt_enable()
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision 
   * is set to ISSUE_B. 
   * - Note that CHI Interconnect VIP doesn't support DMT, so it's not allowed to enable DMT for any HN along with
   * enabling VIP Interconnect (svt_chi_system_configuration::use_interconnect = 1).
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dmt_used_by_hn_with_dmt_enabled_check;

  /**
   * @groupname chi_protocol_cmo_check
   * @check_description
   * SN can receive CleanSharedPersist/CleanSharedPersistSep transaction from HN only when svt_chi_hn_configuration attribute forward_persist_cmos_to_slave_enable is set.
   * @end_check_description
   * 
   * @check_pass
   * If SN receives CleanSharedPersist/CleanSharedPersistSep transaction and the svt_chi_hn_configuration attribute forward_persist_cmos_to_slaves_enable was set.
   * @end_check_pass
   *
   * @check_fail
   * If SN receives CleanSharedPersist/CleanSharedPersistSep transaction and the svt_chi_hn_configuration attribute forward_persist_cmos_to_slaves_enable was set.
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision 
   * is set to ISSUE_B. 
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats persist_cmos_forwarded_to_slave_by_hn_with_forward_persist_cmos_to_slave_enable_check;

  /**
   * @groupname chi_protocol_cmo_check
   * @check_description
   * SN can receive CleanShared, CLeanInvalid, MakeInvalid transaction from HN only when svt_chi_hn_configuration attribute forward_cmos_to_slaves_enable is set.
   * @end_check_description
   * 
   * @check_pass
   * If SN receives CleanShared, CLeanInvalid, MakeInvalid  transaction and the svt_chi_hn_configuration attribute forward_cmos_to_slaves_enable was set.
   * @end_check_pass
   *
   * @check_fail
   * If SN receives CleanShared, CLeanInvalid, MakeInvalid  transaction and the svt_chi_hn_configuration attribute forward_cmos_to_slaves_enable was set.
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision 
   * is set to ISSUE_B. 
   * - Note that CHI Interconnect VIP doesn't support forwarding of CleanShared, CLeanInvalid, MakeInvalid  transaction to SN, so it's not allowed to enable 
   * forward_cmos_to_slaves_enable for any HN along with
   * enabling VIP Interconnect (svt_chi_system_configuration::use_interconnect = 1).
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cmos_forwarded_to_slave_by_hn_with_forward_cmos_to_slave_enable_check;
  
  /**
    * @groupname chi_protocol_trace_tag_check 
    * @check_description 
    * The response or data packet should have the valid trace_tag value in response to the request packet.
    * @end_check_description
    *
    * @check_pass
    * - If trace tag in request is set to 1 and the spawned response or data packet has the same value of trace tag.
    * - If svt_chi_system_configuration::loopback_trace_tag is set to 1 and request's trace_tag is equal to spawned response or data packet's trace_tag.  
    * .
    * @end_check_pass
    *
    * @check_fail
    * - If trace tag in request is set to 1 and the spawned response or data packet has the value set to 0.
    * - If svt_chi_system_configuration::loopback_trace_tag is set to 1 and request's trace_tag is not equal to spawned response or data packet's trace_tag.  
    * .
    * @end_check_fail
    *
    * @applicable_device_type
    * @end_applicable_device_type
    *
    * @check_additional_information
    * @end_check_additional_information      
   */
  svt_err_check_stats trace_tag_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * - A transaction that permits it to cache a coherent location should be issued only in the coherency_enabled state.
    * - If svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1 then any transaction should be issued only in the coherency_enabled state. 
    * .
    * @end_check_description
    *
    * @check_pass
    * A transaction that permits it to cache a coherent location is issued in the coherency_enabled state.
    * @end_check_pass
    *
    * @check_fail
    * A transaction that permits it to cache a coherent location is issued in the state other than coherency_enabled.
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_coherency_enabled_state_traffic_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * - All coherent transactions that can be cached must be completed before entering COHERENCY_DISCONNECT_STATE.
    * - If svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1 then there should not be any outstanding transactions in COHERENCY_DISCONNECT_STATE. 
    * .
    * @end_check_description
    *
    * @check_pass
    * - All coherent transactions that can be cached are completed before entering COHERENCY_DISCONNECT_STATE.
    * - When svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1, there aren't any outstanding transactions in COHERENCY_DISCONNECT_STATE. 
    * .
    * @end_check_pass
    *
    * @check_fail
    * - All coherent transactions that can be cached are not completed before entering COHERENCY_DISCONNECT_STATE.
    * - When svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1, there are still outstanding transactions in COHERENCY_DISCONNECT_STATE. 
    * .
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_coherency_disconnect_state_traffic_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * During COHERENCY_DISABLED_STATE there should not be any outstanding snoop transactions.
    * @end_check_description
    *
    * @check_pass
    * During COHERENCY_DISABLED_STATE there aren't any outstanding snoop transactions.
    * @end_check_pass
    *
    * @check_fail
    * During COHERENCY_DISABLED_STATE there are outstanding snoop transactions.
    * @end_check_fail
    *
    * @applicable_device_type
    * RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_coherency_disabled_state_traffic_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * Interconnect can send snoops only in COHERENCY_CONNECT and COHERENCY_ENABLED state.
    * @end_check_description
    *
    * @check_pass
    * Interconnect sends snoops in COHERENCY_CONNECT and COHERENCY_ENABLED state.
    * @end_check_pass
    *
    * @check_fail
    * Interconnect send snoops in COHERENCY_DISCONNECT or COHERENCY_DISABLED state.
    * @end_check_fail
    *
    * @applicable_device_type
    * RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_snoop_traffic_validity_check;

`endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadUnique transaction. <br>
   * The cache state in the associated CompData flits of a ReadUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadUnique transaction is set to UD or UC.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadUnique transaction is set to SD, SC or I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readunique_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a CleanShared transaction. <br>
   * The cache state in the associated comp response of a CleanShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanShared transaction is set to UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanShared transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleanshared_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a CleanInvalid transaction. <br>
   * The cache state in the associated comp response of a CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanInvalid transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanInvalid transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleaninvalid_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a CleanUnique transaction. <br>
   * The cache state in the associated comp response of a CleanUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanUnique transaction is set to UC.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanUnique transaction is set to a value other than UC.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleanunique_associated_comp_response_legal_cache_state_check;


/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a MakeInvalid transaction. <br>
   * The cache state in the associated comp response of a MakeInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a MakeInvalid transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a MakeInvalid transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makeinvalid_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a MakeUnique transaction. <br>
   * The cache state in the associated comp response of a MakeUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a MakeUnique transaction is set to UC.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a MakeUnique transaction is set to a value other than UC.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makeunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a Evict transaction. <br>
   * The cache state in the associated comp response of an Evict transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of an Evict transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of an Evict transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats evict_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteNoSnp transaction. <br>
   * The associated data packet's resp_err field should not take EXOK or NDERR value for WriteNoSnp transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnp transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteNoSnp transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnp transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteNoSnp transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnp_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteUnique transaction. <br>
   * The associated Comp and CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUnique transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteUnique transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUnique transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteUnique transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeunique_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packets has valid resp_err value for WriteNoSnpZero transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: 
   * - The RespErr field in the associated DBIDResp response of a WriteNoSnpZero transaction is set to NORMAL_OKAY. 
   * - The RespErr field in the associated Comp response of a WriteNoSnpZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR. 
   * .
   * SCENARIO 2: 
   * - The RespErr field in the associated CompDBIDResp response of a WriteNoSnpZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR.
   * .
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1:
   * - The RespErr field in the associated DBIDResp response of a WriteNoSnpZero transaction is set to values other than NORMAL_OKAY. 
   * .
   * SCENARIO 2:
   * - The RespErr field in the associated Comp response of a WriteNoSnpZero transaction is set to EXCLUSIVE_OKAY. 
   * .
   * SCENARIO 3:
   * - The RespErr field in the associated CompDBIDResp response of a WriteNoSnpZero transaction is set to EXCLUSIVE_OKAY. 
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpzero_associated_response_packets_legal_resperr_check;
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packets has valid resp_err value for WriteUniqeZero transaction.
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: 
   * - The RespErr field in the associated DBIDResp response of a WriteUniqeZero transaction is set to NORMAL_OKAY. 
   * - The RespErr field in the associated Comp response of a WriteUniqeZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR. 
   * .
   * SCENARIO 2: 
   * - The RespErr field in the associated CompDBIDResp response of a WriteUniqeZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR.
   * .
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1:
   * - The RespErr field in the associated DBIDResp response of a WriteUniqeZero transaction is set to values other than NORMAL_OKAY. 
   * .
   * SCENARIO 2:
   * - The RespErr field in the associated Comp response of a WriteUniqeZero transaction is set to EXCLUSIVE_OKAY.
   * .
   * SCENARIO 3:
   * - The RespErr field in the associated CompDBIDResp response of a WriteUniqeZero transaction is set to EXCLUSIVE_OKAY.  
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquezero_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated comp response packet has valid resp field for a WriteNoSnpZero transaction. <br>
   * The cache state indicated by resp field in the associated Comp response packet of a WriteNoSnpZero transaction should take a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the comp response flit of a WriteNoSnpZero transaction is set to 'I' (Resp field in the comp response set to zero).
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the comp response flit of a WriteNoSnpZero transaction is set to a value other than 'I' (Resp field in the comp response set to a value other than zero).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpzero_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated comp response packet has valid resp field for a WriteUniqueZero transaction. <br>
   * The cache state indicated by resp field in the associated Comp response packet of a WriteUniqueZero transaction should take a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the comp response flit of a WriteUniqueZero transaction is set to 'I' (Resp field in the comp response set to zero).
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the comp response flit of a WriteUniqueZero transaction is set to a value other than 'I' (Resp field in the comp response set to a value other than zero).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquezero_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_custom_check
   * @check_description
   * Checks that the SNPQUERY is generated for valid transaction types <br>
   * @end_check_description
   * 
   * @check_pass
   * SNPQUERY is generated for exclusive MakereadUnique when Snoop filter is disabled at the Interconnect.
   * @end_check_pass
   *
   * @check_fail
   * - SNPQUERY is issued for transaction other than MakeReadUnique. 
   * - SNPQUERY is issued for non exclusive MakeReadUnique.
   * - SNPQUERY is issued when Snoop filter is enabled at the Interconnect.
   * - SNPQUERY is issued, however there are no outstanding transaction to the same cache line.  
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and 
   * svt_chi_node_configuration::enable_custom_snp_query_check is set to 1.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats expected_snpquery_custom_check;
`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteBack transaction. <br>
   * The associated CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteBack transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBack transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteBack transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBack transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteBack transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeback_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteClean transaction. <br>
   * The associated CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteClean transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteClean transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteClean transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteClean transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteClean transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeclean_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteEvict transaction. <br>
   * The associated CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteEvict transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteEvict transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteEvict transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteEvict transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteEvict transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeevict_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteEvictorEvict transaction.
   * - The associated CompDBIDResp should not take EXOK resp_err value for WriteEvictorEvict transaction.
   * - The associated Comp should not take EXOK or DATA_ERROR resp_err value for WriteEvictorEvict transaction.
   * - The associated write data packets should not take EXOK or NON_DATA_ERROR resp_err value for WriteEvictorEvict transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteEvictorEvict transaction should take a legal value as per CHI ISSUE E Specification. <br>
   * The RespErr field in the associated response flits of a WriteEvictorEvict transaction should take a legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteEvictorEvict transaction are set to EXOK or NDERR. <br>
   * The RespErr field in the associated response flits of a WriteEvictorEvict transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Write data in Passive RN_F. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Comp/CompDBIDResp response in both Active and Passive RN_F.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeevictorevict_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpFull_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpFull_CleanSharedPersitSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpFull_CleanSharedPersitSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanSharedPersitsSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanSharedPersitsSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpFull_CleanSharedPersitsSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpFull_CleanInvalid transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpFull_CleanInvalid transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanInvalid transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanInvalid transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpFull_CleanInvalid transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanInvalid transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanInvalid transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpPtl_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpPtl_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpPtl_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpPtl_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpPtl_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpPtl_CleanSharedPersistSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpPtl_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpPtl_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpPtl_CleanInvalid transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpPtl_CleanInvalid transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanInvalid transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanInvalid transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpPtl_CleanInvalid transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanInvalid transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanInvalid transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniqueFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniqueFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniqueFull_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniqueFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniqueFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniqueFull_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniqueFull_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniqueFull_CleanSharedPersistSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniqueFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniqueFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniquePtl_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniquePtl_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniquePtl_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniquePtl_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniquePtl_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniquePtl_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniquePtl_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniquePtl_CleanSharedPersistSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniquePtl_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniquePtl_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteBackFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteBackFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteBackFull_CleanShared transaction.
   * - The associated responses (CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteBackFull_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteBackFull_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteBackFull_CleanSharedPersistSep transaction.
   * - The associated responses (CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteBackFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteBackFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteBackFull_CleanInvalid transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteBackFull_CleanInvalid transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanInvalid transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanInvalid transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleaninvalid_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteBackFull_CleanInvalid transaction.
   * - The associated responses (CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanInvalid transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanInvalid transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleaninvalid_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteCleanFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteCleanFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteCleanFull_CleanShared transaction.
   * - The associated responses (CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteCleanFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteCleanFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteCleanFull_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteCleanFull_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteCleanFull_CleanSharedPersistSep transaction.
   * - The associated responses (CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteCleanFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteCleanFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

`endif

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets have valid resp_err value for Atomic transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of an Atomic transaction are as per Table 9-7 in the CHI Specification.
   * The RespErr field in the associated Comp/CompDBIDResp flit of an AtomicStore transaction is as per Table 9-6 in the CHI Specification.
   * The RespErr field in the associated CompData flits of an AtomicLoad/Swap/Compare transaction are as per Table 9-6 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp/CompDBIDResp flit of an Atomic Store transaction is set to EXOK.
   * The RespErr field in the associated CompData flits of an Atomic Load/Swap/Compare transaction are set to EXOK or NDERR.
   * The RespErr field in the associated Write data flits of an Atomic transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::atomic_transactions_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats atomic_associated_response_data_packets_legal_resperr_check;

  /**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response and data packets have valid cache state value for an Atomic transaction. <br>
   * The cache state in the associated response and data packets of an Atomic transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data of an Atomic transaction is set to I.
   * Final cache state in the Comp response of an Atomic transaction is set to I.
   * Final cache state in the returned initial data of an Atomic transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data of an Atomic transaction is set to a value other than I.
   * Final cache state in the Comp response of an Atomic transaction is set to a value other than I.
   * Final cache state in the returned initial data of an Atomic transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::atomic_transactions_enable is set to 1.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats atomic_associated_response_data_packets_legal_cache_state_check;
  
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteUniqueptlstash transaction. <br>
   * The associated Comp and CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteUniqueptlstash transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniqueptlstash transaction are as per Table 9-6 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteUniqueptlstash transaction are as per Table 9-5 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniqueptlstash transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteUniqueptlstash transaction violate the legal values specified in Table 9-5 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptlstash_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteUniqueptlstash transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniqueptlstash transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteUniqueptlstash transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteUniqueptlstash transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptlstash_associated_response_data_packets_legal_cache_state_check;
  
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteUniquefullstash transaction. <br>
   * The associated Comp and CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteUniquefullstash transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniquefullstash transaction are as per Table 9-6 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteUniquefullstash transaction are as per Table 9-5 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniquefullstash transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteUniquefullstash transaction violate the legal values specified in Table 9-5 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefullstash_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteUniquefullstash transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniquefullstash transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteUniquefullstash transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteUniquefullstash transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefullstash_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for StashOnceUnique transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for StashOnceUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a StashOnceUnique transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a StashOnceUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashonceunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a StashOnceUnique transaction. <br>
   * The cache state in the associated comp response of a StashOnceUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a StashOnceUnique transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a StashOnceUnique transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashonceunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for StashOnceShared transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for StashOnceShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a StashOnceShared transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a StashOnceShared transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashonceshared_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a StashOnceShared transaction. <br>
   * The cache state in the associated comp response of a StashOnceShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a StashOnceShared transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a StashOnceShared transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashonceshared_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpUniqueStash transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUniqueStash transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUniqueStash transaction is set to OK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in RespSepData of a SnpUniqueStash transaction is set to OK or NDERR. <br>
   * SCENARIO 4: <br>
   * RespErr field in CompData or DataSepResp of a SnpUniqueStash transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUniqueStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUniqueStash transaction is set to EXOK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in RespSepData of a SnpUniqueStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 4: <br>
   * RespErr field in CompData or DataSepResp of a SnpUniqueStash transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquestash_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, RespSepData, DataSepResp or CompData packet has valid resp_err value for SnpMakeInvalidStash transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalidStash transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpMakeInvalidStash transaction is set to OK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpMakeInvalidStash transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalidStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpMakeInvalidStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpMakeInvalidStash transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalidstash_associated_response_data_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpStashUnique transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashUnique transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashunique_associated_response_data_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpStashShared transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashShared transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashShared transaction is set to OK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashShared transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashShared transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashshared_associated_response_data_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp,RespSepData,DataSepResp or CompData has valid cache state for SnpMakeInvalidStash transaction. <br>
   * The cache state in the associated response of a SnpMakeInvalidStash transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Final cache state in the SnpResp of a SnpMakeInvalidStash transaction is set to I. <br>
   * SCENARIO 2: <br>
   * Final cache state in the RespSepData corresponding to a SnpMakeInvalidStash transaction with DataPull is set to I, UC or UD. <br>
   * SCENARIO 3: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpMakeInvalidStash transaction with DataPull is set to UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Final cache state in the SnpResp of a SnpMakeInvalidStash transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the RespSepData corresponding to a SnpMakeInvalidStash transaction with DataPull is set to SC or SD. <br>
   * SCENARIO 3: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpMakeInvalidStash transaction with DataPull is set to I, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalidstash_associated_response_data_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated RespSepData, DataSepResp or CompData has valid cache state for SnpStashUnique transaction. <br>
   * The cache state in the associated response of a SnpStashUnique transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashUnique transaction with DataPull is set to I, UC or UD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashUnique transaction with DataPull is set to UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashUnique transaction with DataPull is set to SC or SD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashUnique transaction with DataPull is set to I, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashunique_associated_response_data_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated RespSepData, DataSepResp or CompData has valid cache state for SnpStashShared transaction. <br>
   * The cache state in the associated response of a SnpStashShared transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashShared transaction with DataPull is set to I, SC, UC or UD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashShared transaction with DataPull is set to SC, UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashShared transaction with DataPull is set to SD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashShared transaction with DataPull is set to I or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashshared_associated_response_data_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespData, RespSepData, DataSepResp or CompData has a valid cache state for SnpUniqueStash transaction. <br>
   * The cache state in the associated response of a SnpUniqueStash transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueStash transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUniqueStash transaction is set I. <br>
   * SCENARIO 3: <br>
   * Final cache state in the RespSepData corresponding to a SnpUniqueStash transaction with DataPull is set to I, UC or UD. <br>
   * SCENARIO 4: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpUniqueStash transaction with DataPull is set to UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueStash transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUniqueStash transaction is set UC, UD, SC or SD. <br>
   * SCENARIO 3: <br>
   * Final cache state in the RespSepData corresponding to a SnpUniqueStash transaction with DataPull is set to SC or SD. <br>
   * SCENARIO 4: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpUniqueStash transaction with DataPull is set to I, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquestash_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the DataPull value in the Snoop response for a Stash type Snoop is set to a valid value. <br>
   * DataPull must not be set if DoNotDataPull in the Snoop requests was set to 1 or if there are ongoing transactions to the same cacheline. 
   * @end_check_description
   * 
   * @check_pass
   * DataPull is set in the Snoop response when the corresponding Snoop request had DoNotDataPull set to 1 and there are no outstanding requests to the same cacheline. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * DataPull is set in the Snoop response but the corresponding Snoop request had DoNotDataPull set to 1. <br>
   * SCENARIO 2 : <br>
   * DataPull is set in the Snoop response but there are outstanding coherent and/or outstanding Stash Snoops involving DataPull targeting the same cacheline. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats invalid_data_pull_in_snoop_response_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the DBID value in the Snoop response for a Stash type Snoop is set to a unique value when DataPull is asserted. <br>
   * The DBID must not coincide with the TxnID of any of the outstanding transactions at the RN or the DBID of any of the outstanding Stash type Snoops involving DataPull. 
   * @end_check_description
   * 
   * @check_pass
   * DBID value in the SnpResp for a Stash type Snoop does not coincide with the TxnID of any of the outstanding transactions at the RN or the DBID of any of the outstanding Stash type Snoops involving DataPull. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * DBID value in the SnpResp for a Stash type Snoop matches with the TxnID of one of the outstanding transactions at the RN. <br>
   * SCENARIO 2 : <br>
   * DBID value in the SnpResp for a Stash type Snoop matches with the DBID of one of the outstanding Stash type Snoops involving DataPull. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash and Data Pull are enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats dbid_in_snoop_response_with_data_pull_check;
`endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteNoSnp transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnp transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteNoSnp transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteNoSnp transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnp_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteUnique transaction. <br>
   * The cache state in the associated Write data flits of a WriteUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteUnique transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteUnique transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeunique_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteBack transaction. <br>
   * The cache state in the associated Write data flits of a WriteBack transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * - Final cache state of the Write data flits in a WriteBackPtl transaction is either UD or I.
   * - Final cache state of the Write data flits in a WriteBackPtl transaction is either UC or SC or SD and byte_enable is set to all 1's.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Final cache state of the Write data flits in a WriteBackPtl transaction is UC, SC or SD and byte_enable is not set to all 1's.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeback_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteClean transaction. <br>
   * The cache state in the associated Write data flits of a WriteClean transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state of the Write data flits in a WriteCleanPtl transaction is either UD or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state of the Write data flits in a WriteCleanPtl transaction is either UC, SC or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeclean_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteEvict transaction. <br>
   * The cache state in the associated Write data flits of a WriteEvict transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state of the Write data flits in a WriteEvict transaction is UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state of the Write data flits in a WriteEvict transaction is UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeevict_associated_response_data_packets_legal_cache_state_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Checks that the memory tag is same in the Tag fields corresponding to the compare and swap data.
   * Applicable only for ATOMICCOMARE transaction when tag_op is set to TAG_FETCH_MATCH.
   * @end_check_description
   * 
   * @check_pass
   * The tag field corresponding to the compare and swap data is same.
   * @end_check_pass
   *
   * @check_fail
   * The tag field corresponding to the compare and swap data is different.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_E_ENABLE or later is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_E or later
   * - svt_chi_node_configuration::atomic_transactions_enable is set to 1.
   * - svt_chi_node_configuration::mem_tagging_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats atomic_compare_valid_tag_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response and data packets has valid resp field {cahe state and resp_pass_dirty} value for a WriteEvictorEvict transaction. <br>
   * The cache state in the associated Write data flits or Comp reponse flits of a WriteEvictorEvict transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state of the Write data flits in a WriteEvictorEvict transaction is either UC or SC or I.
   * - resp_pass_dirty field in write data flits of WriteEvictorEvict transaction is set to 0.
   * .
   * Scenario 2: 
   * - resp field {cahe state and resp_pass_dirty} in the associated comp response flit of WriteEvictorEvict transaction is set to zero.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state of the Write data flits in a WriteEvictorEvict transaction is set to other than UC or SC or I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty field in write data flits of WriteEvictorEvict transaction is set to 1.
   * .
   * Scenario 3: 
   * - resp field {cahe state and resp_pass_dirty} in the associated comp response flit of WriteEvictorEvict transaction is set to non-zero.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN_F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Write data in Passive RN_F. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Comp response in both Active and Passive RN_F.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeevictorevict_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpFull_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpFull_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpFull_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpFull_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanInvalid transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpFull_CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanInvalid transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpFull_CleanInvalid transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanInvalid transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanInvalid transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpPtl_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpPtl_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpPtl_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpPtl_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpPtl_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpPtl_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanInvalid transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpPtl_CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanInvalid transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpPtl_CleanInvalid transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanInvalid transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanInvalid transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniqueFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniqueFull_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniqueFull_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniqueFull_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniqueFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniqueFull_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniqueFull_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniqueFull_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniquePtl_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniquePtl_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniquePtl_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniquePtl_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniquePtl_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniquePtl_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniquePtl_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniquePtl_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteBackFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO response flit of a WriteBackFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanShared transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanShared transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */ 
  svt_err_check_stats writebackfull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteBackFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO/CompPersist response flit of a WriteBackFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteBackFull_CleanSharedPersistSep transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteBackFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteBackFull_CleanSharedPersistSep transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteBackFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writebackfull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteBackFull_CleanInvalid transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO response flit of a WriteBackFull_CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanInvalid transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanInvalid transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanInvalid transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanInvalid transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writebackfull_cleaninvalid_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteCleanFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO response flit of a WriteCleanFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteCleanFull_CleanShared transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteCleanFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteCleanFull_CleanShared transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteCleanFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writecleanfull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteCleanFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO/CompPersist response flit of a WriteCleanFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteCleanFull_CleanSharedPersistSep transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteCleanFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteCleanFull_CleanSharedPersistSep transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteCleanFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writecleanfull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that there are no error responses in case of Barrier transactions . <br>
   * A Barrier transaction response must not include an error response. 
   * @end_check_description
   * 
   * @check_pass
   * RespErr field in the Comp response of a Barrier transaction is set to OK.
   * @end_check_pass
   *
   * @check_fail
   * RespErr field in the Comp response of a Barrier transaction is set to a value other than OK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and Passive SN-I
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * Barrier support is enabled (svt_chi_node_configuration::barrier_enable == 1).
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_resp_err_status_for_barrier_xact_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the comp response has valid resp_err value for DVMop transaction. <br>
   * The associated Comp response should take one of the following resp_err values: 1)NORMAL_OKAY 2)NON_DATA_ERROR 3)in case of svt_chi_node_configuration::chi_spec_revision >= ISSUE_B,DATA_ERROR for DVMop transaction. 
   * @end_check_description
   * 
   * @check_pass
   * If svt_chi_node_configuration::chi_spec_revision>=ISSUE_B RespErr field in the Comp response of a DVMOp transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR. <br>
   * If svt_chi_node_configuration::chi_spec_revision==ISSUE_A RespErr field in the Comp response of a DVMOp transaction is set to NORMAL_OKAY or NON_DATA_ERROR.
   * @end_check_pass
   *
   * @check_fail
   * If svt_chi_node_configuration::chi_spec_revision>=ISSUE_B RespErr field in the Comp response of a DVMOp transaction is set to EXCLUSIVE_OKAY. <br>
   * If svt_chi_node_configuration::chi_spec_revision==ISSUE_A RespErr field in the Comp response of a DVMOp transaction is set to EXCLUSIVE_OKAY or DATA_ERROR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_resp_err_status_for_dvmop_xact_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpOnce transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpOnce transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpOnce transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpOnce transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpOnce transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpOnce transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponce_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpClean transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpClean transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpClean transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpClean transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpClean transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpClean transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpclean_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpShared transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpShared transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpShared transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpShared transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpshared_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpNotSharedDirty transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpNotSharedDirty transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpNotSharedDirty transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpNotSharedDirty transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpNotSharedDirty transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpNotSharedDirty transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirty_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData packet has valid resp_err value for SnpOnceFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packets should not take EXOK or NDERR resp_err value for SnpOnceFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpOnceFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpOnceFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponcefwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has valid resp_err value for SnpCleanFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpCleanFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpCleanFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpCleanFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanfwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData valid resp_err value for SnpSharedFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpSharedFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpSharedFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpSharedFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpsharedfwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid resp_err value for SnpUniqueFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpUniqueFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpUniqueFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpUniqueFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquefwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid resp_err value for SnpNotSharedDirtyFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpNotSharedDirtyFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpNotSharedDirtyFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpNotSharedDirtyFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirtyfwd_associated_response_data_packets_legal_resperr_check;
`endif

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpPreferUnique transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpPreferUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpPreferUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpPreferUnique transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpPreferUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpPreferUnique transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferunique_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid resp_err value for SnpPreferUniqueFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpPreferUniqueFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpPreferUniqueFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpPreferUniqueFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferuniquefwd_associated_response_data_packets_legal_resperr_check;
`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpUnique transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUnique transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUnique transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpunique_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpCleanShared transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpCleanShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanShared transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanShared transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanShared transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanshared_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpCleanInvalid transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpCleanInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanInvalid transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanInvalid transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanInvalid transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanInvalid transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleaninvalid_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpQuery transaction. <br>
   * The associated SnpResp should not take EXOK or DERR resp_err value for SnpQuery transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpQuery transaction is set to OK or NDERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpQuery transaction is set to EXOK or DERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpquery_associated_response_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp has valid cache state for SnpQuery transaction. <br>
   * The resp_pass_dirty attribute in the associated response of a SnpQuery transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * when the resp_pass_dirty in the response flit is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp_pass_dirty in the response flit set to 1.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpquery_associated_response_packets_legal_cache_state_check;

`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpMakeInvalid transaction. <br>
   * The associated SnpResp should not take EXOK or DERR resp_err value for SnpMakeInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalid transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpMakeInvalid transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalid transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpMakeInvalid transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalid_associated_response_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpDVMop transaction. <br>
   * The associated SnpResp should not take EXOK or DERR resp_err value for SnpDVMop transaction. 
   * @end_check_description
   * 
   * @check_pass
   * RespErr field in SnpResp of a SnpDVMOp transaction is set to OK or NDERR.
   * @end_check_pass
   *
   * @check_fail
   * RespErr field in SnpResp of a SnpDVMOp transaction is set to EXOK or DERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpdvmop_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpOnce transaction. <br>
   * The cache state in the associated response of a SnpOnce transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpOnce transaction is set to UC, SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpOnce transaction is set to UC, SC, UD, SD or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the SnpResp of a SnpOnce transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponce_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpClean transaction. <br>
   * The cache state in the associated response of a SnpClean transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpClean transaction is set to SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpClean transaction is set to SD, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpClean transaction is set to UC, UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpClean transaction is set to UC or UD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpclean_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpShared transaction. <br>
   * The cache state in the associated response of a SnpShared transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpShared transaction is set to SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpShared transaction is set to SD, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpShared transaction is set to UC, UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpShared transaction is set to UC or UD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpshared_associated_response_data_packets_legal_cache_state_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpNotSharedDirty transaction. <br>
   * The cache state in the associated response of a SnpNotSharedDirty transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirty transaction is set to SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpNotSharedDirty transaction is set to SD, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirty transaction is set to UC, UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpNotSharedDirty transaction is set to UC or UD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirty_associated_response_data_packets_legal_cache_state_check;
  
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpOnceFwd transaction. <br>
   * The cache state in the associated response of a SnpOnceFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpOnceFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpOnceFwd transaction is set to UC, UD, SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpOnceFwd transaction is set to SC or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpOnceFwd transaction is set to I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpOnceFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpOnceFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpOnceFwd transaction is set to a value other than UC, UD, SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpOnceFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpOnceFwd transaction is set to a value other than SC and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the CompData of a SnpOnceFwd transaction is set to a value other than I. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpOnceFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponcefwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpCleanFwd transaction. <br>
   * The cache state in the associated response of a SnpCleanFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpCleanFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpCleanFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpCleanFwd transaction is set to SC. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpCleanFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpCleanFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpCleanFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpCleanFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpCleanFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the CompData of a SnpCleanFwd transaction is set to a value other than SC. <br>
   * SCENARIO 7 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpCleanFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanfwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpSharedFwd transaction. <br>
   * The cache state in the associated response of a SnpSharedFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpSharedFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpSharedFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpSharedFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to SC or SD. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpSharedFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpSharedFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpSharedFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpSharedFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpSharedFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to a value other than SC and SD. <br>
   * SCENARIO 7 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpsharedfwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpNotSharedDirtyFwd transaction. <br>
   * The cache state in the associated response of a SnpNotSharedDirtyFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirtyFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpNotSharedDirtyFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpNotSharedDirtyFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpNotSharedDirtyFwd transaction is set to SC. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpNotSharedDirtyFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirtyFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpNotSharedDirtyFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpNotSharedDirtyFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpNotSharedDirtyFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpNotSharedDirtyFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the CompData of a SnpNotSharedDirtyFwd transaction is set to a value other than SC. <br>
   * SCENARIO 7 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpNotSharedDirtyFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirtyfwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpUniqueFwd transaction. <br>
   * The cache state in the associated response of a SnpUniqueFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpUniqueFwd transaction is set to I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to UC or UD. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpUniqueFwd transaction is set to a value other than I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to a value other than UC or UD. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquefwd_associated_response_data_packets_legal_cache_state_check;

`endif

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpPreferUnique transaction. <br>
   * The cache state in the associated response of a SnpPreferUnique transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the SnpResp or SnpRespData is I, SC or SD
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the SnpResp or SnpRespData is UC or UD
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferunique_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpPreferUniqueFwd transaction. <br>
   * The cache state in the associated response of a SnpPreferUniqueFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * A Snoopee that is not executing an exclusive sequence treats SnpPreferUniqueFwd as SnpUniqueFwd.
   * Snoopee that is in the process of executing an exclusive sequence treats SnpPreferUniqueFwd as SnpNotSharedDirtyFwd, with the exception that it must not invalidate its cached copy.
   * @end_check_description
   * 
   * @check_pass
   * If SnpPreferUniqueFwd is treated as SnpNotSharedDirtyFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to SC, SD or I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the SnpRespDataFwded of a SnpPreferUniqueFwd transaction is set to SC, SD or I. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to SC. <br>
   *   - SCENARIO 5 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   .
   * If SnpPreferUniqueFwd is treated as SnpUniqueFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to UC or UD. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   .
   * @end_check_pass
   *
   * @check_fail
   *   - If SnpPreferUniqueFwd is treated as SnpNotSharedDirtyFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to a value other than SC, SD and I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the SnpRespDataFwded of a SnpPreferUniqueFwd transaction is set to a value other than SC, SD and I. <br>
   *   - SCENARIO 5 : <br>
   *   - Final cache state in the SnpRespDataFwded of a SnpPreferUniqueFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   *   - SCENARIO 6 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to a value other than SC. <br>
   *   - SCENARIO 7 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   .
   * If SnpPreferUniqueFwd is treated as SnpUniqueFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to a value other than UC or UD. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferuniquefwd_associated_response_data_packets_legal_cache_state_check;

`endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpUnique transaction. <br>
   * The cache state in the associated response of a SnpUnique transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUnique transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUnique transaction is set I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUnique transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUnique transaction is set UC, UD, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpunique_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpCleanShared transaction. <br>
   * The cache state in the associated response of a SnpCleanShared transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanShared transaction is set to UC, SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanShared transaction is set UC, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanShared transaction is set to UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanShared transaction is set UD or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanshared_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpCleanInvalid transaction. <br>
   * The cache state in the associated response of a SnpCleanInvalid transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanInvalid transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanInvalid transaction is set I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanInvalid transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanInvalid transaction is set to UC, UD, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpcleaninvalid_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp has valid cache state for SnpMakeInvalid transaction. <br>
   * The cache state in the associated response of a SnpMakeInvalid transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the SnpResp of a SnpMakeInvalid transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the SnpResp of a SnpMakeInvalid transaction is set to UC, UD, SC or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalid_associated_response_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that Comp Response flit is seen only in case of non-Snoop transactions. <br>
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * Comp response is received for a dataless, DVMOp, WriteEvictorEvict or a non-Copyback Write transaction.
   * @end_check_pass
   *
   * @check_fail
   * Comp response is received for a Read or a Copyback transaction(except WriteEvictorEvict).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_comp_flit_type_for_xact_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that CompCMO Response flit is seen only in case of Combined Write and (P)CMO transactions.
   * @end_check_description
   * 
   * @check_pass
   * CompCMO response is received for a Combined Write and (P)CMO type transaction.
   * @end_check_pass
   *
   * @check_fail
   * CompCMO response is received for a transaction which is not of Combined Write and (P)CMO type.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_compcmo_flit_type_for_xact_check;
`endif

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that DBID Response flit is seen only in case of non-Copyback Write transactions. <br>
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * DBIDResp is received for a WriteNoSnp or WriteUnique request.
   * @end_check_pass
   *
   * @check_fail
   * DBIDResp is received for a Copyback request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_dbid_flit_type_for_xact_check;

 /**
   * @groupname chi_protocol_err_valid_sactive_check
   * @check_description
   * - TXSACTIVE must remain asserted until after the last flit relating to all pending transactions is sent or received.
   * - A transaction that is given a RetryAck response is considered to be in progress, so TXSACTIVE must remain asserted until the associated credit has been supplied, and it's used or returned.
   * - <b> Applicable when </b>: the agent is in PASSIVE mode (svt_chi_node_configuration::is_active = 0), and 
   *   svt_chi_system_configuration::top_layer is set to svt_chi_system_configuration::PROTOCOL, svt_chi_system_configuration::bottom_layer is set to svt_chi_system_configuration::LINK
   * - The check is performed under following conditions: while the link is active and there is no active reset --
   *   - Whenever there is a flit activity observed(TX*FLITV/RX*FLITV asserted), TXSACTIVE must be sampled as HIGH. Otherwise the check fails.
   *     - Following are the specific conditions under which this check is performed:
   *       - REQ flit is received by PASSIVE agent, then txsactive must be HIGH at:
   *         - at the same clock, in case of RN
   *         .
   *       - In case of RN: the same clock where CompAack RSP flit is observed, this must be high
   *       - In case of RN: The same clock where SNPRSP is observed, this must be high
   *       - In the same cycle the RSP flit is received/observed, this must be high
   *       - In the same cycle the Read Data flit is received/observed, this must be high
   *       - In the same cycle the Snp Data flit is received/observed, this must be high
   *       - In the same cycle the Write Data flit is received/observed, this must be high
   *       .
   *     .
   *   - Whenever the signal TXSACTIVE is sampled as LOW, the check passes when there is no pending protocol layer activity. Otherwise the check fails.
   *     - Following is the definition of 'pending protocol layer activity':
   *       - Any in progress transactions (Transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       - Any transactions with pending retries (Transactions that received retry response along with Credit grants; but neither the credits are returned nor used to retry the transactions)
   *       - Any in progress snoop transactions (Snoop transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       .
   *     .
   *   .
   * .
   * @end_check_description
   *
   * @check_pass
   * One of the FLITV signals is asserted and the conditions mentioned in the description are satisfied.
   * @end_check_pass
   *
   * @check_fail
   * One of the FLITV signals is asserted and any of the conditions mentioned in the description are violated.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * svt_chi_system_configuration::top_layer is set to svt_chi_system_configuration::PROTOCOL, svt_chi_system_configuration::bottom_layer is set to svt_chi_system_configuration::LINK.
   * This check will not be constructed when svt_chi_node_configuration::use_external_node_prot_monitor is set to 1.
   * @end_check_additional_information   
   */
  svt_err_check_stats valid_txsactive_signal_check;

 /**
   * @groupname chi_protocol_err_valid_sactive_check
   * @check_description
   * - RXSACTIVE must remain asserted until after the last flit relating to all pending transactions is sent or received at the link partner node.
   * - A transaction that is given a RetryAck response is considered to be in progress, so RXSACTIVE must remain asserted until the associated credit has been supplied, and it's used or returned.
   * - The check is performed under following conditions: while the link is active and there is no active reset --
   *   - Whenever there is a flit activity observed(TX*FLITV/RX*FLITV asserted), RXSACTIVE must be sampled as HIGH. Otherwise the check fails.
   *     - Following are the specific conditions under which this check is performed:
   *       - In case of SN: if REQ flit is received, then rxsactive must be HIGH at the same clock
   *       - In case of RN: The same clock where the CompAck RSP is observed, this must be high
   *       - In case of RN: The same clock where SNPRSP is sampled by all receiving/observing components, this must be high
   *       - In case of RN: The same clock where SNP flit is observed, this must be HIGH
   *       - In the same cycle the RSP flit is received/observed, this must be high
   *       - In the same cycle the Read Data flit is received/observed, this must be high
   *       - In the same cycle the Snp Data flit is received/observed, this must be high
   *       - In the same cycle the Write Data flit is received/observed, this must be high
   *       .
   *     .
   *   - Whenever the signal RXSACTIVE is sampled as LOW, the check passes when there is no pending protocol layer activity at the link partner node. Otherwise the check fails.
   *     - Following is the definition of 'pending protocol layer activity':
   *       - Any in progress transactions (Transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       - Any transactions with pending retries (Transactions that received retry response along with Credit grants; but neither the credits are returned nor used to retry the transactions)
   *       - Any in progress snoop transactions (Snoop transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       .
   *     .
   *   .
   * .
   * @end_check_description
   *
   * @check_pass
   * One of the FLITV signals is asserted and the conditions mentioned in the description are satisfied.
   * @end_check_pass
   *
   * @check_fail
   * One of the FLITV signals is asserted and any of the conditions mentioned in the description are violated.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * svt_chi_system_configuration::top_layer is set to svt_chi_system_configuration::PROTOCOL, svt_chi_system_configuration::bottom_layer is set to svt_chi_system_configuration::LINK
   * This check will not be constructed when svt_chi_node_configuration::use_external_node_prot_monitor is set to 1.
   * @end_check_additional_information 
   * 
   */

  svt_err_check_stats valid_rxsactive_signal_check;

/**
   * @groupname chi_protocol_exclusive_access_check
   * @check_description
   * Check that an exclusive monitor should not have more than one exclusive transaction of the same lpid at any given time. <br>
   * Multiple exclusive transactions to Non-snoopable memory locations, either read or write, to the same or different addresses, from the same LP must not be outstanding at the same time.
   * @end_check_description
   * 
   * @check_pass
   * An Exclusive Read transaction is received while there are no outstanding Exclusive Reads with the same LPID.
   * @end_check_pass
   *
   * @check_fail
   * An Exclusive Read transaction is received but there already is an outstanding Exclusive Read with the same LPID.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters exclusive_access_enable (svt_chi_node_configuration::exclusive_access_enable) and exclusive_monitor_enable (svt_chi_node_configuration::exclusive_monitor_enable) are set to 1.
   * @end_check_additional_information 
   */
  svt_err_check_stats non_coherent_excl_read_multiple_entry_for_same_lpid_check;

  /**
   * @groupname chi_protocol_exclusive_access_check
   * @check_description
   * Check that the address of an exclusive access must be aligned to the total number of bytes in the transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The address of an exclusive transaction is aligned to the Data size.
   * @end_check_pass
   *
   * @check_fail
   * The address of an exclusive transaction is not aligned to the Data size.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters exclusive_access_enable (svt_chi_node_configuration::exclusive_access_enable) and exclusive_monitor_enable (svt_chi_node_configuration::exclusive_monitor_enable) are set to 1.
   * @end_check_additional_information
   */
  
  svt_err_check_stats non_coherent_excl_access_aligned_total_bytes_transaction_check;

  /**
   * @groupname chi_protocol_exclusive_access_check
   * @check_description
   * Check that the number of bytes to be transferred in an exclusive access must be a legal data transfer size, that is, 1, 2,4, 8, 16, 32, or 64 bytes.<br>
   * @end_check_description
   * 
   * @check_pass
   * The Data size of an Exclusive transaction is one of the values specified in the description.
   * @end_check_pass
   *
   * @check_fail
   * The Data size of an Exclusive transaction is set to a value apart from the ones mentioned in the description.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters exclusive_access_enable (svt_chi_node_configuration::exclusive_access_enable) and exclusive_monitor_enable (svt_chi_node_configuration::exclusive_monitor_enable) are set to 1.
   * @end_check_additional_information    
   */

  svt_err_check_stats non_coherent_excl_access_legal_data_size_transfer_check;

  /**
   * @groupname chi_protocol_transaction_inactivity_check
   * @check_description
   * - Checks that a given transaction completes within the number of clock cycles specified by svt_chi_node_configuration::xact_inactivity_timeout.<br>
   * - Vip will continue to process the transaction even the transaction has timedout. The timeout of the transaction doesn't have any impact on the procesing or completion of the transaction.<br>
   * - The timer started for a transaction will continue to increment even there is a link deactivation when transaction is outstanidng.<br>
   * - This check is currently not designed to handle the cases when there is a dynamic reset.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The transaction ends within the programmed number of clock cycles.
   * @end_check_pass
   *
   * @check_fail
   * The transaction does not end within the programmed number of clock cycles.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN,SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters xact_inactivity_timeout (svt_chi_node_configuration::xact_inactivity_timeout) set to non zero values.
   * @end_check_additional_information    
   */
  svt_err_check_stats transaction_inactivity_timeout_check;

  /**
   * @groupname chi_protocol_transaction_inactivity_check
   * @check_description
   * - Checks that a given Snoop transaction completes within the number of clock cycles specified by svt_chi_node_configuration::snp_xact_inactivity_timeout.<br>
   * - Vip will continue to process the snoop transaction even the snoop transaction has timedout. The timeout of the snoop transaction doesn't have any impact on the procesing or completion of the snoop transaction.<br>
   * - The timer started for snoop transaction will continue to increment even there is a link deactivation when snoop transaction is outstanidng.<br>
   * - This check is currently not designed to handle the cases when there is a dynamic reset.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The snoop transaction ends within the programmed number of clock cycles.
   * @end_check_pass
   *
   * @check_fail
   * The snoop transaction does not end within the programmed number of clock cycles.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F, RN-D(when svt_chi_node_configuration::dvm_enable is set to 1)
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters snp_xact_inactivity_timeout (svt_chi_node_configuration::snp_xact_inactivity_timeout) set to non zero values.
   * @end_check_additional_information    
   */
  svt_err_check_stats snp_transaction_inactivity_timeout_check;


//-------------------------------------------------------------
// START OF PERFORMANCE CHECKS
/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a write transaction is not greater than the
  * configured max value svt_chi_node_configuration::perf_max_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Write transaction is less than svt_chi_node_configuration::perf_max_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Write transaction is greater than svt_chi_node_configuration::perf_max_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a write transaction is not lesser than the
  * configured min value svt_chi_node_configuration::perf_min_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Write transaction is greater than svt_chi_node_configuration::perf_min_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Write transaction is less than svt_chi_node_configuration::perf_min_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of write transactions in a given interval
  * is not more than the configured max value svt_chi_node_configuration::perf_avg_max_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Write transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_max_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Write transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_max_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_max_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of write transactions in a given interval
  * is not less than the configured min value svt_chi_node_configuration::perf_avg_min_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Write transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_min_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Write transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_min_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_min_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a read transaction is not greater than the
  * configured max value svt_chi_node_configuration::perf_max_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Read transaction is less than than svt_chi_node_configuration::perf_max_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Read transaction is greater than than svt_chi_node_configuration::perf_max_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a read transaction is not lesser than the
  * configured min value svt_chi_node_configuration::perf_min_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Read transaction is greater than svt_chi_node_configuration::perf_min_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Read transaction is less than than svt_chi_node_configuration::perf_min_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of read transactions in a given interval
  * is not more than the configured max value svt_chi_node_configuration::perf_avg_max_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Read transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_max_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Read transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_max_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_max_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of read transactions in a given interval
  * is not less than the configured min value svt_chi_node_configuration::perf_avg_min_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Read transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_min_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Read transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_min_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_min_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of read transactions in a given interval is
  * not more that the configured max value svt_chi_node_configuration::perf_max_read_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of read transactions in the specified interval is less than svt_chi_node_configuration::perf_max_read_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of read transactions in the specified interval is greater than svt_chi_node_configuration::perf_max_read_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_read_throughput_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of read transactions in a given interval is
  * not less that the configured min value svt_chi_node_configuration::perf_min_read_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of read transactions in the specified interval is greater than svt_chi_node_configuration::perf_min_read_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of read transactions in the specified interval is less than svt_chi_node_configuration::perf_min_read_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_read_throughput_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of write transactions in a given interval is
  * not more that the configured max value svt_chi_node_configuration::perf_max_write_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of write transactions in the specified interval is less than svt_chi_node_configuration::perf_max_write_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of write transactions in the specified interval is greater than svt_chi_node_configuration::perf_max_write_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_write_throughput_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of write transactions in a given interval is
  * not less that the configured min value svt_chi_node_configuration::perf_min_write_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of write transactions in the specified interval is greater than svt_chi_node_configuration::perf_min_write_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of write transactions in the specified interval is less than svt_chi_node_configuration::perf_min_write_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_write_throughput_check;

`ifdef SVT_CHI_ISSUE_C_ENABLE
/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT has to be used for ReadNoSnpSep
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for ReadNoSnpSep
   * @end_check_pass
   *
   * @check_fail
   * DMT is not used for ReadNoSnpSep
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dmt_validity_check_for_readnosnpsep;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * RespSepData seen for read type transactions
   * @end_check_pass
   *
   * @check_fail
   * RespSepData seen for non read type transactions
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
   * and if any of the HNs uses RespSepData DataSepResp Flow 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_respsepdata_flit_type_for_xact_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated RespSepData response packet has valid resp_err value.. <br>
   * The associated RespSepData response packet's resp_err field should not take EXOK or DERR value. 
   * @end_check_description
   * 
   * @check_pass
   * The associated RespSepData response packet's resp_err field does not take EXOK or DERR value. 
   * @end_check_pass
   *
   * @check_fail
   * The associated RespSepData response packet's resp_err field takes EXOK or DERR value. 
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
   * and if any of the HNs uses RespSepData DataSepResp Flow 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats associated_respsepdata_response_legal_resperr_check;

`endif


// END OF PERFORMANCE CHECKS
//-------------------------------------------------------------

  /** @cond PRIVATE */
  // ****************************************************************************
  // Public Methods
  // ****************************************************************************

`ifndef SVT_VMM_TECHNOLOGY
  // ---------------------------------------------------------------------------
  /**
   * CONSTRUCTOR: Create a new svt_chi_protocol_err_check instance.
   * 
   * @param err_check_name A string that identifies this particular svt_err_check
   * instance.
   *
   * @param register_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * registered automatically.
   *
   * @param enable_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * enabled. This bit only has meaning if register_default_checks is set
   * to 1.
   * 
   * @param reporter Report object through which messages are routed
   */
  extern function new(svt_chi_node_configuration node_cfg,
                      bit enable_pc_cov = 1, 
                      string err_check_name = "",
                      bit register_default_chks = 1, 
                      bit enable_default_chks = 1,
                      `SVT_XVM(report_object) reporter = null);
`else
  // ---------------------------------------------------------------------------
  /**
   * CONSTRUCTOR: Create a new svt_chi_protocol_err_check instance.
   * 
   * @param err_check_name A string that identifies this particular svt_err_check
   * instance.
   *
   * @param register_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * registered automatically.
   *
   * @param enable_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * enabled. This bit only has meaning if register_default_checks is set
   * to 1.
   */
  extern function new(svt_chi_node_configuration node_cfg,
                      bit enable_pc_cov = 1, 
                      string err_check_name = "",
                      bit register_default_chks = 1, 
                      bit enable_default_chks = 1);
`endif
  // ---------------------------------------------------------------------------
  /**
   * This method is called by the constructor if the register_default_checks 
   * parameter is set to 1.
   *
   */  
  extern virtual function void register_default_checks();
  /** @endcond */
endclass

// =============================================================================

//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
2GU3mo1xjsdGDyAWXJFIT91AuaqeJSW0ppo/bQzU5W1H8jLr86imIz8xfp95YwLL
tgd9wNS7NwonONF+C1EQpk6k1uv23OaVLJo1BdNtBQ4ZBPXXKDNw8a1izbvKsCH+
1snHLoabbj0WzNF6NiRNYUWzde7i2dWfvqTkQGmZ0FBIfNdbmDG0QA==
//pragma protect end_key_block
//pragma protect digest_block
1lar0N0RyUZiSriXKgFjXTSqZNc=
//pragma protect end_digest_block
//pragma protect data_block
darJnrRN3myEh0YUUUuKqfAHCObCYZzjC2f+mgpTy092djWkuyBrJ68cn6mYszUm
YmtZTkTVdTmTZ5vdMruZnX10X0u5wK9tqi+2K24Y2cjGXAJg8f5Xiovhi/VQBpQJ
NGGmK5UOam2CPE0m572NkqGAT5mkBlPLqbknu6Pd6Vpbuw1Cp5H9e0xu5cDVpzWx
8F5Mfwbuge5keu6OmGEvKpNZMzPHTmo3ZNrbbXwr6q4PvthSJKkfKMvRimXHBMYk
gYNLszboDEnmGw8MgBQDkOWC2PRsp/lU5HvUpn8H7VlagpLkR4bX+sIHhs5ZqNvR
PQZ4rTW1UtoPg3krkwigpsJs1oN5A28jYeroYx0uKLtaYVYDzuIG/oxqFCYDpoSx
GjpFbZ3so+IUzsCEweckk/6d10Lm1DnDaUIx/cdZNlflDltDAEYfFrxz/HWPVEpF
U9NsxYorOFzN6voEfTebYBq8/MFsylNFSzLzqpfBSRjScJStdFfGQpRKErrWYOgc
0sZVKYaGL/IIWu7rbeXRr6cYCXPWqYxhkqn09HwGsLiMx7D9VjXGQiv6qPmlPGOX
WHh+HM1SHzIHnF4ixm58XGOHfMFiGtoRu468UvdMw5GtKzC6LIWDI9f/BFdgS7a7
a9vcpHiduJDrhZEiRsxerBc9j8aQwDftaVjBaWpqMIcDwyTZ3Sj6oSTlOLIhI7zj
atxjejOQQ4xncTmi0LLMi+EqlOMJ/OTqSI+FSmHFuXJAs+We1I5Z6efbJzaSpSMD
NifyYbaz6R7YNIqFiRv5E0vr3JGhM2jS1DvdEu9ghT7w6OcWm9FjtLimIg4Vgd28
pRzvKj75ns9MSb27MfHmsxohuJm32SFf/4NXEvpy2sgBcJ/8chbUn/9qbvD0+2yO
hI0CAvx3ELKlS0YDOvp/Q1qg8If653G2pvConTsJx5NQ/P8yyZZn2M0BsMpgGPSB
FqYmVHn0CriVzX39dvA0N2R+9kJEU7gMNEC+QMJ0oDSlSTSYe3lXIMGt8Y3WO/rP
W/aluNbcLEhCZUg7A52HxBqsSwOyWVwx23FIwH4MwLtDxn/oP09/L1Hp9sF3DxVe
BYuh2UqOm5Os88ybn+BZTg3BcAXn6val9Fq2cD49G2s0VyQzqSB5SMWiM18LIfKx
B1JXQBqUZgGuc/xSwxusNNwcSY2ZG5NtLF8Xcub8l38BGaZlP9V1Y10E/Gd14K1k
Ar1r2lNaSWLxg6qPTHCtxL/qZHlGsmdxuRZ0UY7LlE2E060oIzg8kVud5c7KYIw2
xaBgQQPYtLLPuaHtJHftQ6N3xeT87UB8S/L3cijoTOaBHLIUIJOHaBD0zj2fzjYP
i1KaTanfAn8ZHCLntdB84Y3rEyGVhO1VkJXYaOGrb3Py86LaPRym/R4aW8OOZgEy
M7L61UX4k9ma27ZVEJGTvseLGjHd/81VXKqGrOhBEXZm3RzxHKB20d6KRHS4FxEN
47HZz/ZsRJ+1mlsWZr4HVBrGf5wH26tzQsPTftOaOzeFiql6HoeWHzclLUt9uJ0k
yg1NVCTn65OurPrw1TKXYXR1Jfnu1GM0I0KCXi1lP16a3Mx2Mu/Zg960DA0c76Qe
9YeblKBz2bF/6aEX68QOmE/l8qGjRkyuoOJusNaToPDclekOxXyUJaTrzWCOoIu8
RADw084UbynSJS60A4HxJwG/pAK3J3xyG+vb5djvWyKiyT5xWVPlEZtSjI/npFWT
QUol17SJuAPKlDsA1osSKozSxHUsQLQFj7o01W74miPZz+bOg1M5hinT2NoVAQhG
Ij89AYPLOK5iagaQmEPc0XXQ/2WbbTkhEOSpGsnlmAqvAoUF9nRDhnuwY1XDI9up
bxLK0Du86GxEUPzRM6vGu9GvJyq1JGxn5R9dC8W48Wo5FWqGy5+ZrWMjwqXF07Bf
n4d4d8RxJeRp6ahm6yYLib21WBQKYrL1MlgxwbilRkQtqs/fcR5uns7Xp+KCsBN4
cnn/01lT0GnR7w7D6rJ3fI/k2fWhFw8dv6NvACSbuRSuwV+F4fP99PHjP9/wJjLW
mE0BxBNuttgglgaiIYSf7U74HJdIbzVVVXYcdnIJEE6GJJ3c48GwtU6KEG3YSlKK
TjlVlG1m5NlBShqPobTIiKguFgZK9cJe95E1C1oBL00Y29av5a6AzgkqvQQuNwJw
QOISu3M3wZc5FOThru4tkIjVCY8QUbdCdPbLrhzc5/+JwWefSxw8d0KQ3oS5njGb
07YED7gEKiSHYIWZ8e66QLyoMiCsXntvpyBcaC4HmnuvpWILkh16gLjI6p3YHL22
/gsHV77sF6X53AHpSwcei5W5xD4JM7cp7IfIRDzLqoIptURseJOIO4AbUnmJh2Tr
rxFVcTgMymad7pQWmDRAtpqoRYiCBenK7IXILie43K/KiOs3QKZ9PrK6xpnVAKlf
jI/WjOW/eGb4EywSWRzdaKDsHx/O828FJYe5kLQYc0ZMytY9TeuAQS19GN6YQOKC
gq3zHHypXmIE53tmSfGB6feyu2ZBf3MH8vgWXH8fqi211RgZ0OCoa5Orwsi+8Ozt
but7dhmWnvxEev2dh2GwJgXxjPMUECGJhgBL2raSG0thUtRKEm6H9m47UDgMGcu7
N4rzeDyiwboLSm6eWRZHI52nb5XY3DX7qtxkdJb9O5Ytc3D4UmlJqvLj9bUOvenq
p9sifJCaTIx+rbJuFuM5vzg1ypy+RQZ1f7P+0LFScncT3fBpEAzlkGp35ijzypVx
I8X9OzlOGy7E1yLuhSmpe/9pLE2O3UVW1LZF8x3hfyJoU1wMii3plVHgoZePh1SZ
qNC3GByTNtFHq+Z/v20cqdjTK46ed/3+VB35EFQW8YOk4XxH7hP9O1DlWNPIrhJ6
qwTwan4p0S7r7yYufVML9m7hWfpFUBzpm3zCE6kLQbFSPH6CSm6P7zg1suvmgI6b
UrZBSTiX7lhhlhKocvHmrMOpcXB7z4Xy24V1guxTg+jEm7KDjv+lLPnDHsDeSsP4
kCDPsC83KTk33leeByz5wKE7sNyLUPt+tbpzol9ujFEsBp6HqxJwabNJ/QWcGcBI
96xv/CTWPMxcEDwhHxHa89+wzyVbCdQUQwGgWgNZKohjhgXBS6xE9RPJfW9BylVR
J4Kpgs/FjWgwgueDNKsUGzhT1hz3PQh0X+Cd930NmQS/Dht51cHSEyLbYJZxU/Xr
mDVahUZlK6SdqTQcOCy/3uDtJCtIgQf/pKMB5BR7pk2Rvm0uE5xFAPt2yz43f+sI
MriYyiXxw7cdLrZbkCmi7+Kqo7zxPBaSwDG2evyg9x7m9y/lmtGvRwKV7BAJf+FQ
Q8UmMYts7bLjdrxlC1RFgZ66SFVjqNskt2WpbrveI8+6y22r0rGzqyqx54CvfwYE
tSE4A8nJmCNqD9tH4FGyZttD9jA+AnrjgBKFMGb1Sb0Div3wCCKHWjWAA6Kgwc6d
1ljnzHi8dJx5u2Q2uNw1W6qnI6mk/LOpEUxatRFHiT81dAVCyDJas5lcWsXDU1qI
xul8sRyqZa/EhcXTrRy7KjIDIsGknZrz9O48uxnuZHPMzGnmqWK4CedZCH6OM2bo
jI69eAiRUlX69VmCE/QCZrSBH89j+aRbrXH6ob8QNBarieIG6btLb9kQlzT/5IU1
y8GzlNA9GHAw4zs+sA9ZXP8abCS9qyrJuxq5StPcm+tKqg9S+ps4MGQFDOuDuBXU
aA86LLKMZNBZAx6mftLnxWl+7bbQaEW5s3923NwnT3MfjyMGRwPdntocsa82SIbY
7Pb5Y6VfZZk0+DIsenNEVgP6h8KN86x4gtzuo5Mzj2ViJO2nV7qszGzyu+YI6ZAz
8mRstFlMKvEsroILj21Ijo471QwMoSGKinAC80P+HdE=
//pragma protect end_data_block
//pragma protect digest_block
n3fuFtantWR9hiSRJ+wCl/FaVZY=
//pragma protect end_digest_block
//pragma protect end_protected

//vcs_lic_vip_protect
//pragma protect begin_protected
//pragma protect key_keyowner=Cadence Design Systems.
//pragma protect key_keyname=CDS_KEY
//pragma protect key_method=RC5
//pragma protect key_block
gbvs14TUIutGs0Xkojp+KrpcROQ/g9S6jFFKDpD/i3Bfllp2ocW0m7dYN0IZE+jV
L2un/8yHHusPR78hrEB9Cx1NZM5muPdulKR559Rd66K78XgiK1hTnyhKWlp9o1xJ
mcbzKs5oCw8LdtD1JLBHxv8PCmWng2qowtqFiSaJTySejcEtqTjy6w==
//pragma protect end_key_block
//pragma protect digest_block
r93Lkn3Qo/fNkNpIPLT8ODrutuc=
//pragma protect end_digest_block
//pragma protect data_block
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
//pragma protect end_data_block
//pragma protect digest_block
gxahfs26GJYwmGdxOyBfX+d2ils=
//pragma protect end_digest_block
//pragma protect end_protected

`endif // GUARD_SVT_CHI_PROTOCOL_ERR_CHECK_SV
