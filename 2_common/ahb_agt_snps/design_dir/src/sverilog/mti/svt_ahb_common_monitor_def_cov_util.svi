
`ifndef GUARD_SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SVI
`define GUARD_SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SVI

`ifndef SVT_AHB_MON_CFG_BASED_COV_GRP_DEF

/** @cond PRIVATE */

//======================================================================
// Transaction level coverage macros 
//====================================================================== 

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_CREATE_CG_INST(group_name, signal_enable) \
  if(signal_enable) begin \
    group_name       = new(); \
    group_name.set_inst_name($sformatf("%0s_%0s", cfg.inst, `SVT_DATA_UTIL_ARG_TO_STRING(group_name))); \
  end  

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_ALL_MASTERS_GRANT \
    ahb_all_masters_grant : coverpoint master_id_with_grant { \
      bins master_0_grant = {0}; \
      bins master_1_grant = {1}; \
      bins master_2_grant = {2}; \
      bins master_3_grant = {3}; \
      bins master_4_grant = {4}; \
      bins master_5_grant = {5}; \
      bins master_6_grant = {6}; \
      bins master_7_grant = {7}; \
      bins master_8_grant = {8}; \
      bins master_9_grant = {9}; \
      bins master_10_grant = {10}; \
      bins master_11_grant = {11}; \
      bins master_12_grant = {12}; \
      bins master_13_grant = {13}; \
      bins master_14_grant = {14}; \
      bins master_15_grant = {15}; \
      bins master_16_grant = {16}; \
      bins master_17_grant = {17}; \
      bins master_18_grant = {18}; \
      bins master_19_grant = {19}; \
      bins master_20_grant = {20}; \
      bins master_21_grant = {21}; \
      bins master_22_grant = {22}; \
      bins master_23_grant = {23}; \
      bins master_24_grant = {24}; \
      bins master_25_grant = {25}; \
      bins master_26_grant = {26}; \
      bins master_27_grant = {27}; \
      bins master_28_grant = {28}; \
      bins master_29_grant = {29}; \
      bins master_30_grant = {30}; \
      bins master_31_grant = {31}; \
      bins master_32_grant = {32}; \
      bins master_33_grant = {33}; \
      bins master_34_grant = {34}; \
      bins master_35_grant = {35}; \
      bins master_36_grant = {36}; \
      bins master_37_grant = {37}; \
      bins master_38_grant = {38}; \
      bins master_39_grant = {39}; \
      bins master_40_grant = {40}; \
      bins master_41_grant = {41}; \
      bins master_42_grant = {42}; \
      bins master_43_grant = {43}; \
      bins master_44_grant = {44}; \
      bins master_45_grant = {45}; \
      bins master_46_grant = {46}; \
      bins master_47_grant = {47}; \
      bins master_48_grant = {48}; \
      bins master_49_grant = {49}; \
      bins master_50_grant = {50}; \
      bins master_51_grant = {51}; \
      bins master_52_grant = {52}; \
      bins master_53_grant = {53}; \
      bins master_54_grant = {54}; \
      bins master_55_grant = {55}; \
      bins master_56_grant = {56}; \
      bins master_57_grant = {57}; \
      bins master_58_grant = {58}; \
      bins master_59_grant = {59}; \
      bins master_60_grant = {60}; \
      bins master_61_grant = {61}; \
      bins master_62_grant = {62}; \
      bins master_63_grant = {63}; \
      bins master_64_grant = {64}; \
      bins master_65_grant = {65}; \
      bins master_66_grant = {66}; \
      bins master_67_grant = {67}; \
      bins master_68_grant = {68}; \
      bins master_69_grant = {69}; \
      bins master_70_grant = {70}; \
      bins master_71_grant = {71}; \
      bins master_72_grant = {72}; \
      bins master_73_grant = {73}; \
      bins master_74_grant = {74}; \
      bins master_75_grant = {75}; \
      bins master_76_grant = {76}; \
      bins master_77_grant = {77}; \
      bins master_78_grant = {78}; \
      bins master_79_grant = {79}; \
      bins master_80_grant = {80}; \
      bins master_81_grant = {81}; \
      bins master_82_grant = {82}; \
      bins master_83_grant = {83}; \
      bins master_84_grant = {84}; \
      bins master_85_grant = {85}; \
      bins master_86_grant = {86}; \
      bins master_87_grant = {87}; \
      bins master_88_grant = {88}; \
      bins master_89_grant = {89}; \
      bins master_90_grant = {90}; \
      bins master_91_grant = {91}; \
      bins master_92_grant = {92}; \
      bins master_93_grant = {93}; \
      bins master_94_grant = {94}; \
      bins master_95_grant = {95}; \
      bins master_96_grant = {96}; \
      bins master_97_grant = {97}; \
      bins master_98_grant = {98}; \
      bins master_99_grant = {99}; \
      bins master_100_grant = {100}; \
      bins master_101_grant = {101}; \
      bins master_102_grant = {102}; \
      bins master_103_grant = {103}; \
      bins master_104_grant = {104}; \
      bins master_105_grant = {105}; \
      bins master_106_grant = {106}; \
      bins master_107_grant = {107}; \
      bins master_108_grant = {108}; \
      bins master_109_grant = {109}; \
      bins master_110_grant = {110}; \
      bins master_111_grant = {111}; \
      bins master_112_grant = {112}; \
      bins master_113_grant = {113}; \
      bins master_114_grant = {114}; \
      bins master_115_grant = {115}; \
      bins master_116_grant = {116}; \
      bins master_117_grant = {117}; \
      bins master_118_grant = {118}; \
      bins master_119_grant = {119}; \
      bins master_120_grant = {120}; \
      bins master_121_grant = {121}; \
      bins master_122_grant = {122}; \
      bins master_123_grant = {123}; \
      bins master_124_grant = {124}; \
      bins master_125_grant = {125}; \
      bins master_126_grant = {126}; \
      bins master_127_grant = {127}; \
      ignore_bins ignore_master_0_grant = {0} iff ((sys_cfg.num_masters < 1) || (sys_cfg.dummy_master == 0)); \
      ignore_bins ignore_master_1_grant = {1} iff ((sys_cfg.num_masters < 2) || (sys_cfg.dummy_master == 1)); \
      ignore_bins ignore_master_2_grant = {2} iff ((sys_cfg.num_masters < 3) || (sys_cfg.dummy_master == 2)); \
      ignore_bins ignore_master_3_grant = {3} iff ((sys_cfg.num_masters < 4) || (sys_cfg.dummy_master == 3)); \
      ignore_bins ignore_master_4_grant = {4} iff ((sys_cfg.num_masters < 5) || (sys_cfg.dummy_master == 4)); \
      ignore_bins ignore_master_5_grant = {5} iff ((sys_cfg.num_masters < 6) || (sys_cfg.dummy_master == 5)); \
      ignore_bins ignore_master_6_grant = {6} iff ((sys_cfg.num_masters < 7) || (sys_cfg.dummy_master == 6)); \
      ignore_bins ignore_master_7_grant = {7} iff ((sys_cfg.num_masters < 8) || (sys_cfg.dummy_master == 7)); \
      ignore_bins ignore_master_8_grant = {8} iff ((sys_cfg.num_masters < 9) || (sys_cfg.dummy_master == 8)); \
      ignore_bins ignore_master_9_grant = {9} iff ((sys_cfg.num_masters < 10) || (sys_cfg.dummy_master == 9)); \
      ignore_bins ignore_master_10_grant = {10} iff ((sys_cfg.num_masters < 11) || (sys_cfg.dummy_master == 10)); \
      ignore_bins ignore_master_11_grant = {11} iff ((sys_cfg.num_masters < 12) || (sys_cfg.dummy_master == 11)); \
      ignore_bins ignore_master_12_grant = {12} iff ((sys_cfg.num_masters < 13) || (sys_cfg.dummy_master == 12)); \
      ignore_bins ignore_master_13_grant = {13} iff ((sys_cfg.num_masters < 14) || (sys_cfg.dummy_master == 13)); \
      ignore_bins ignore_master_14_grant = {14} iff ((sys_cfg.num_masters < 15) || (sys_cfg.dummy_master == 14)); \
      ignore_bins ignore_master_15_grant = {15} iff ((sys_cfg.num_masters < 16) || (sys_cfg.dummy_master == 15)); \
      ignore_bins ignore_master_16_grant = {16} iff ((sys_cfg.num_masters < 17) || (sys_cfg.dummy_master == 16)); \
      ignore_bins ignore_master_17_grant = {17} iff ((sys_cfg.num_masters < 18) || (sys_cfg.dummy_master == 17)); \
      ignore_bins ignore_master_18_grant = {18} iff ((sys_cfg.num_masters < 19) || (sys_cfg.dummy_master == 18)); \
      ignore_bins ignore_master_19_grant = {19} iff ((sys_cfg.num_masters < 20) || (sys_cfg.dummy_master == 19)); \
      ignore_bins ignore_master_20_grant = {20} iff ((sys_cfg.num_masters < 21) || (sys_cfg.dummy_master == 20)); \
      ignore_bins ignore_master_21_grant = {21} iff ((sys_cfg.num_masters < 22) || (sys_cfg.dummy_master == 21)); \
      ignore_bins ignore_master_22_grant = {22} iff ((sys_cfg.num_masters < 23) || (sys_cfg.dummy_master == 22)); \
      ignore_bins ignore_master_23_grant = {23} iff ((sys_cfg.num_masters < 24) || (sys_cfg.dummy_master == 23)); \
      ignore_bins ignore_master_24_grant = {24} iff ((sys_cfg.num_masters < 25) || (sys_cfg.dummy_master == 24)); \
      ignore_bins ignore_master_25_grant = {25} iff ((sys_cfg.num_masters < 26) || (sys_cfg.dummy_master == 25)); \
      ignore_bins ignore_master_26_grant = {26} iff ((sys_cfg.num_masters < 27) || (sys_cfg.dummy_master == 26)); \
      ignore_bins ignore_master_27_grant = {27} iff ((sys_cfg.num_masters < 28) || (sys_cfg.dummy_master == 27)); \
      ignore_bins ignore_master_28_grant = {28} iff ((sys_cfg.num_masters < 29) || (sys_cfg.dummy_master == 28)); \
      ignore_bins ignore_master_29_grant = {29} iff ((sys_cfg.num_masters < 30) || (sys_cfg.dummy_master == 29)); \
      ignore_bins ignore_master_30_grant = {30} iff ((sys_cfg.num_masters < 31) || (sys_cfg.dummy_master == 30)); \
      ignore_bins ignore_master_31_grant = {31} iff ((sys_cfg.num_masters < 32) || (sys_cfg.dummy_master == 31)); \
      ignore_bins ignore_master_32_grant = {32} iff ((sys_cfg.num_masters < 33) || (sys_cfg.dummy_master == 32)); \
      ignore_bins ignore_master_33_grant = {33} iff ((sys_cfg.num_masters < 34) || (sys_cfg.dummy_master == 33)); \
      ignore_bins ignore_master_34_grant = {34} iff ((sys_cfg.num_masters < 35) || (sys_cfg.dummy_master == 34)); \
      ignore_bins ignore_master_35_grant = {35} iff ((sys_cfg.num_masters < 36) || (sys_cfg.dummy_master == 35)); \
      ignore_bins ignore_master_36_grant = {36} iff ((sys_cfg.num_masters < 37) || (sys_cfg.dummy_master == 36)); \
      ignore_bins ignore_master_37_grant = {37} iff ((sys_cfg.num_masters < 38) || (sys_cfg.dummy_master == 37)); \
      ignore_bins ignore_master_38_grant = {38} iff ((sys_cfg.num_masters < 39) || (sys_cfg.dummy_master == 38)); \
      ignore_bins ignore_master_39_grant = {39} iff ((sys_cfg.num_masters < 40) || (sys_cfg.dummy_master == 39)); \
      ignore_bins ignore_master_40_grant = {40} iff ((sys_cfg.num_masters < 41) || (sys_cfg.dummy_master == 40)); \
      ignore_bins ignore_master_41_grant = {41} iff ((sys_cfg.num_masters < 42) || (sys_cfg.dummy_master == 41)); \
      ignore_bins ignore_master_42_grant = {42} iff ((sys_cfg.num_masters < 43) || (sys_cfg.dummy_master == 42)); \
      ignore_bins ignore_master_43_grant = {43} iff ((sys_cfg.num_masters < 44) || (sys_cfg.dummy_master == 43)); \
      ignore_bins ignore_master_44_grant = {44} iff ((sys_cfg.num_masters < 45) || (sys_cfg.dummy_master == 44)); \
      ignore_bins ignore_master_45_grant = {45} iff ((sys_cfg.num_masters < 46) || (sys_cfg.dummy_master == 45)); \
      ignore_bins ignore_master_46_grant = {46} iff ((sys_cfg.num_masters < 47) || (sys_cfg.dummy_master == 46)); \
      ignore_bins ignore_master_47_grant = {47} iff ((sys_cfg.num_masters < 48) || (sys_cfg.dummy_master == 47)); \
      ignore_bins ignore_master_48_grant = {48} iff ((sys_cfg.num_masters < 49) || (sys_cfg.dummy_master == 48)); \
      ignore_bins ignore_master_49_grant = {49} iff ((sys_cfg.num_masters < 50) || (sys_cfg.dummy_master == 49)); \
      ignore_bins ignore_master_50_grant = {50} iff ((sys_cfg.num_masters < 51) || (sys_cfg.dummy_master == 50)); \
      ignore_bins ignore_master_51_grant = {51} iff ((sys_cfg.num_masters < 52) || (sys_cfg.dummy_master == 51)); \
      ignore_bins ignore_master_52_grant = {52} iff ((sys_cfg.num_masters < 53) || (sys_cfg.dummy_master == 52)); \
      ignore_bins ignore_master_53_grant = {53} iff ((sys_cfg.num_masters < 54) || (sys_cfg.dummy_master == 53)); \
      ignore_bins ignore_master_54_grant = {54} iff ((sys_cfg.num_masters < 55) || (sys_cfg.dummy_master == 54)); \
      ignore_bins ignore_master_55_grant = {55} iff ((sys_cfg.num_masters < 56) || (sys_cfg.dummy_master == 55)); \
      ignore_bins ignore_master_56_grant = {56} iff ((sys_cfg.num_masters < 57) || (sys_cfg.dummy_master == 56)); \
      ignore_bins ignore_master_57_grant = {57} iff ((sys_cfg.num_masters < 58) || (sys_cfg.dummy_master == 57)); \
      ignore_bins ignore_master_58_grant = {58} iff ((sys_cfg.num_masters < 59) || (sys_cfg.dummy_master == 58)); \
      ignore_bins ignore_master_59_grant = {59} iff ((sys_cfg.num_masters < 60) || (sys_cfg.dummy_master == 59)); \
      ignore_bins ignore_master_60_grant = {60} iff ((sys_cfg.num_masters < 61) || (sys_cfg.dummy_master == 60)); \
      ignore_bins ignore_master_61_grant = {61} iff ((sys_cfg.num_masters < 62) || (sys_cfg.dummy_master == 61)); \
      ignore_bins ignore_master_62_grant = {62} iff ((sys_cfg.num_masters < 63) || (sys_cfg.dummy_master == 62)); \
      ignore_bins ignore_master_63_grant = {63} iff ((sys_cfg.num_masters < 64) || (sys_cfg.dummy_master == 63)); \
      ignore_bins ignore_master_64_grant = {64} iff ((sys_cfg.num_masters < 65) || (sys_cfg.dummy_master == 64)); \
      ignore_bins ignore_master_65_grant = {65} iff ((sys_cfg.num_masters < 66) || (sys_cfg.dummy_master == 65)); \
      ignore_bins ignore_master_66_grant = {66} iff ((sys_cfg.num_masters < 67) || (sys_cfg.dummy_master == 66)); \
      ignore_bins ignore_master_67_grant = {67} iff ((sys_cfg.num_masters < 68) || (sys_cfg.dummy_master == 67)); \
      ignore_bins ignore_master_68_grant = {68} iff ((sys_cfg.num_masters < 69) || (sys_cfg.dummy_master == 68)); \
      ignore_bins ignore_master_69_grant = {69} iff ((sys_cfg.num_masters < 70) || (sys_cfg.dummy_master == 69)); \
      ignore_bins ignore_master_70_grant = {70} iff ((sys_cfg.num_masters < 71) || (sys_cfg.dummy_master == 70)); \
      ignore_bins ignore_master_71_grant = {71} iff ((sys_cfg.num_masters < 72) || (sys_cfg.dummy_master == 71)); \
      ignore_bins ignore_master_72_grant = {72} iff ((sys_cfg.num_masters < 73) || (sys_cfg.dummy_master == 72)); \
      ignore_bins ignore_master_73_grant = {73} iff ((sys_cfg.num_masters < 74) || (sys_cfg.dummy_master == 73)); \
      ignore_bins ignore_master_74_grant = {74} iff ((sys_cfg.num_masters < 75) || (sys_cfg.dummy_master == 74)); \
      ignore_bins ignore_master_75_grant = {75} iff ((sys_cfg.num_masters < 76) || (sys_cfg.dummy_master == 75)); \
      ignore_bins ignore_master_76_grant = {76} iff ((sys_cfg.num_masters < 77) || (sys_cfg.dummy_master == 76)); \
      ignore_bins ignore_master_77_grant = {77} iff ((sys_cfg.num_masters < 78) || (sys_cfg.dummy_master == 77)); \
      ignore_bins ignore_master_78_grant = {78} iff ((sys_cfg.num_masters < 79) || (sys_cfg.dummy_master == 78)); \
      ignore_bins ignore_master_79_grant = {79} iff ((sys_cfg.num_masters < 80) || (sys_cfg.dummy_master == 79)); \
      ignore_bins ignore_master_80_grant = {80} iff ((sys_cfg.num_masters < 81) || (sys_cfg.dummy_master == 80)); \
      ignore_bins ignore_master_81_grant = {81} iff ((sys_cfg.num_masters < 82) || (sys_cfg.dummy_master == 81)); \
      ignore_bins ignore_master_82_grant = {82} iff ((sys_cfg.num_masters < 83) || (sys_cfg.dummy_master == 82)); \
      ignore_bins ignore_master_83_grant = {83} iff ((sys_cfg.num_masters < 84) || (sys_cfg.dummy_master == 83)); \
      ignore_bins ignore_master_84_grant = {84} iff ((sys_cfg.num_masters < 85) || (sys_cfg.dummy_master == 84)); \
      ignore_bins ignore_master_85_grant = {85} iff ((sys_cfg.num_masters < 86) || (sys_cfg.dummy_master == 85)); \
      ignore_bins ignore_master_86_grant = {86} iff ((sys_cfg.num_masters < 87) || (sys_cfg.dummy_master == 86)); \
      ignore_bins ignore_master_87_grant = {87} iff ((sys_cfg.num_masters < 88) || (sys_cfg.dummy_master == 87)); \
      ignore_bins ignore_master_88_grant = {88} iff ((sys_cfg.num_masters < 89) || (sys_cfg.dummy_master == 88)); \
      ignore_bins ignore_master_89_grant = {89} iff ((sys_cfg.num_masters < 90) || (sys_cfg.dummy_master == 89)); \
      ignore_bins ignore_master_90_grant = {90} iff ((sys_cfg.num_masters < 91) || (sys_cfg.dummy_master == 90)); \
      ignore_bins ignore_master_91_grant = {91} iff ((sys_cfg.num_masters < 92) || (sys_cfg.dummy_master == 91)); \
      ignore_bins ignore_master_92_grant = {92} iff ((sys_cfg.num_masters < 93) || (sys_cfg.dummy_master == 92)); \
      ignore_bins ignore_master_93_grant = {93} iff ((sys_cfg.num_masters < 94) || (sys_cfg.dummy_master == 93)); \
      ignore_bins ignore_master_94_grant = {94} iff ((sys_cfg.num_masters < 95) || (sys_cfg.dummy_master == 94)); \
      ignore_bins ignore_master_95_grant = {95} iff ((sys_cfg.num_masters < 96) || (sys_cfg.dummy_master == 95)); \
      ignore_bins ignore_master_96_grant = {96} iff ((sys_cfg.num_masters < 97) || (sys_cfg.dummy_master == 96)); \
      ignore_bins ignore_master_97_grant = {97} iff ((sys_cfg.num_masters < 98) || (sys_cfg.dummy_master == 97)); \
      ignore_bins ignore_master_98_grant = {98} iff ((sys_cfg.num_masters < 99) || (sys_cfg.dummy_master == 98)); \
      ignore_bins ignore_master_99_grant = {99} iff ((sys_cfg.num_masters < 100) || (sys_cfg.dummy_master == 99)); \
      ignore_bins ignore_master_100_grant = {100} iff ((sys_cfg.num_masters < 101) || (sys_cfg.dummy_master == 100)); \
      ignore_bins ignore_master_101_grant = {101} iff ((sys_cfg.num_masters < 102) || (sys_cfg.dummy_master == 101)); \
      ignore_bins ignore_master_102_grant = {102} iff ((sys_cfg.num_masters < 103) || (sys_cfg.dummy_master == 102)); \
      ignore_bins ignore_master_103_grant = {103} iff ((sys_cfg.num_masters < 104) || (sys_cfg.dummy_master == 103)); \
      ignore_bins ignore_master_104_grant = {104} iff ((sys_cfg.num_masters < 105) || (sys_cfg.dummy_master == 104)); \
      ignore_bins ignore_master_105_grant = {105} iff ((sys_cfg.num_masters < 106) || (sys_cfg.dummy_master == 105)); \
      ignore_bins ignore_master_106_grant = {106} iff ((sys_cfg.num_masters < 107) || (sys_cfg.dummy_master == 106)); \
      ignore_bins ignore_master_107_grant = {107} iff ((sys_cfg.num_masters < 108) || (sys_cfg.dummy_master == 107)); \
      ignore_bins ignore_master_108_grant = {108} iff ((sys_cfg.num_masters < 109) || (sys_cfg.dummy_master == 108)); \
      ignore_bins ignore_master_109_grant = {109} iff ((sys_cfg.num_masters < 110) || (sys_cfg.dummy_master == 109)); \
      ignore_bins ignore_master_110_grant = {110} iff ((sys_cfg.num_masters < 111) || (sys_cfg.dummy_master == 110)); \
      ignore_bins ignore_master_111_grant = {111} iff ((sys_cfg.num_masters < 112) || (sys_cfg.dummy_master == 111)); \
      ignore_bins ignore_master_112_grant = {112} iff ((sys_cfg.num_masters < 113) || (sys_cfg.dummy_master == 112)); \
      ignore_bins ignore_master_113_grant = {113} iff ((sys_cfg.num_masters < 114) || (sys_cfg.dummy_master == 113)); \
      ignore_bins ignore_master_114_grant = {114} iff ((sys_cfg.num_masters < 115) || (sys_cfg.dummy_master == 114)); \
      ignore_bins ignore_master_115_grant = {115} iff ((sys_cfg.num_masters < 116) || (sys_cfg.dummy_master == 115)); \
      ignore_bins ignore_master_116_grant = {116} iff ((sys_cfg.num_masters < 117) || (sys_cfg.dummy_master == 116)); \
      ignore_bins ignore_master_117_grant = {117} iff ((sys_cfg.num_masters < 118) || (sys_cfg.dummy_master == 117)); \
      ignore_bins ignore_master_118_grant = {118} iff ((sys_cfg.num_masters < 119) || (sys_cfg.dummy_master == 118)); \
      ignore_bins ignore_master_119_grant = {119} iff ((sys_cfg.num_masters < 120) || (sys_cfg.dummy_master == 119)); \
      ignore_bins ignore_master_120_grant = {120} iff ((sys_cfg.num_masters < 121) || (sys_cfg.dummy_master == 120)); \
      ignore_bins ignore_master_121_grant = {121} iff ((sys_cfg.num_masters < 122) || (sys_cfg.dummy_master == 121)); \
      ignore_bins ignore_master_122_grant = {122} iff ((sys_cfg.num_masters < 123) || (sys_cfg.dummy_master == 122)); \
      ignore_bins ignore_master_123_grant = {123} iff ((sys_cfg.num_masters < 124) || (sys_cfg.dummy_master == 123)); \
      ignore_bins ignore_master_124_grant = {124} iff ((sys_cfg.num_masters < 125) || (sys_cfg.dummy_master == 124)); \
      ignore_bins ignore_master_125_grant = {125} iff ((sys_cfg.num_masters < 126) || (sys_cfg.dummy_master == 125)); \
      ignore_bins ignore_master_126_grant = {126} iff ((sys_cfg.num_masters < 127) || (sys_cfg.dummy_master == 126)); \
      ignore_bins ignore_master_127_grant = {127} iff ((sys_cfg.num_masters < 128) || (sys_cfg.dummy_master == 127)); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_ALL_MASTERS_BUSREQ \
    ahb_all_masters_busreq : coverpoint master_id_busreq { \
      bins master_0_busreq = {0}; \
      bins master_1_busreq = {1}; \
      bins master_2_busreq = {2}; \
      bins master_3_busreq = {3}; \
      bins master_4_busreq = {4}; \
      bins master_5_busreq = {5}; \
      bins master_6_busreq = {6}; \
      bins master_7_busreq = {7}; \
      bins master_8_busreq = {8}; \
      bins master_9_busreq = {9}; \
      bins master_10_busreq = {10}; \
      bins master_11_busreq = {11}; \
      bins master_12_busreq = {12}; \
      bins master_13_busreq = {13}; \
      bins master_14_busreq = {14}; \
      bins master_15_busreq = {15}; \
      bins master_16_busreq = {16}; \
      bins master_17_busreq = {17}; \
      bins master_18_busreq = {18}; \
      bins master_19_busreq = {19}; \
      bins master_20_busreq = {20}; \
      bins master_21_busreq = {21}; \
      bins master_22_busreq = {22}; \
      bins master_23_busreq = {23}; \
      bins master_24_busreq = {24}; \
      bins master_25_busreq = {25}; \
      bins master_26_busreq = {26}; \
      bins master_27_busreq = {27}; \
      bins master_28_busreq = {28}; \
      bins master_29_busreq = {29}; \
      bins master_30_busreq = {30}; \
      bins master_31_busreq = {31}; \
      bins master_32_busreq = {32}; \
      bins master_33_busreq = {33}; \
      bins master_34_busreq = {34}; \
      bins master_35_busreq = {35}; \
      bins master_36_busreq = {36}; \
      bins master_37_busreq = {37}; \
      bins master_38_busreq = {38}; \
      bins master_39_busreq = {39}; \
      bins master_40_busreq = {40}; \
      bins master_41_busreq = {41}; \
      bins master_42_busreq = {42}; \
      bins master_43_busreq = {43}; \
      bins master_44_busreq = {44}; \
      bins master_45_busreq = {45}; \
      bins master_46_busreq = {46}; \
      bins master_47_busreq = {47}; \
      bins master_48_busreq = {48}; \
      bins master_49_busreq = {49}; \
      bins master_50_busreq = {50}; \
      bins master_51_busreq = {51}; \
      bins master_52_busreq = {52}; \
      bins master_53_busreq = {53}; \
      bins master_54_busreq = {54}; \
      bins master_55_busreq = {55}; \
      bins master_56_busreq = {56}; \
      bins master_57_busreq = {57}; \
      bins master_58_busreq = {58}; \
      bins master_59_busreq = {59}; \
      bins master_60_busreq = {60}; \
      bins master_61_busreq = {61}; \
      bins master_62_busreq = {62}; \
      bins master_63_busreq = {63}; \
      bins master_64_busreq = {64}; \
      bins master_65_busreq = {65}; \
      bins master_66_busreq = {66}; \
      bins master_67_busreq = {67}; \
      bins master_68_busreq = {68}; \
      bins master_69_busreq = {69}; \
      bins master_70_busreq = {70}; \
      bins master_71_busreq = {71}; \
      bins master_72_busreq = {72}; \
      bins master_73_busreq = {73}; \
      bins master_74_busreq = {74}; \
      bins master_75_busreq = {75}; \
      bins master_76_busreq = {76}; \
      bins master_77_busreq = {77}; \
      bins master_78_busreq = {78}; \
      bins master_79_busreq = {79}; \
      bins master_80_busreq = {80}; \
      bins master_81_busreq = {81}; \
      bins master_82_busreq = {82}; \
      bins master_83_busreq = {83}; \
      bins master_84_busreq = {84}; \
      bins master_85_busreq = {85}; \
      bins master_86_busreq = {86}; \
      bins master_87_busreq = {87}; \
      bins master_88_busreq = {88}; \
      bins master_89_busreq = {89}; \
      bins master_90_busreq = {90}; \
      bins master_91_busreq = {91}; \
      bins master_92_busreq = {92}; \
      bins master_93_busreq = {93}; \
      bins master_94_busreq = {94}; \
      bins master_95_busreq = {95}; \
      bins master_96_busreq = {96}; \
      bins master_97_busreq = {97}; \
      bins master_98_busreq = {98}; \
      bins master_99_busreq = {99}; \
      bins master_100_busreq = {100}; \
      bins master_101_busreq = {101}; \
      bins master_102_busreq = {102}; \
      bins master_103_busreq = {103}; \
      bins master_104_busreq = {104}; \
      bins master_105_busreq = {105}; \
      bins master_106_busreq = {106}; \
      bins master_107_busreq = {107}; \
      bins master_108_busreq = {108}; \
      bins master_109_busreq = {109}; \
      bins master_110_busreq = {110}; \
      bins master_111_busreq = {111}; \
      bins master_112_busreq = {112}; \
      bins master_113_busreq = {113}; \
      bins master_114_busreq = {114}; \
      bins master_115_busreq = {115}; \
      bins master_116_busreq = {116}; \
      bins master_117_busreq = {117}; \
      bins master_118_busreq = {118}; \
      bins master_119_busreq = {119}; \
      bins master_120_busreq = {120}; \
      bins master_121_busreq = {121}; \
      bins master_122_busreq = {122}; \
      bins master_123_busreq = {123}; \
      bins master_124_busreq = {124}; \
      bins master_125_busreq = {125}; \
      bins master_126_busreq = {126}; \
      bins master_127_busreq = {127}; \
      ignore_bins ignore_master_0_busreq = {0} iff ((sys_cfg.num_masters < 1) || (sys_cfg.dummy_master == 0)); \
      ignore_bins ignore_master_1_busreq = {1} iff ((sys_cfg.num_masters < 2) || (sys_cfg.dummy_master == 1)); \
      ignore_bins ignore_master_2_busreq = {2} iff ((sys_cfg.num_masters < 3) || (sys_cfg.dummy_master == 2)); \
      ignore_bins ignore_master_3_busreq = {3} iff ((sys_cfg.num_masters < 4) || (sys_cfg.dummy_master == 3)); \
      ignore_bins ignore_master_4_busreq = {4} iff ((sys_cfg.num_masters < 5) || (sys_cfg.dummy_master == 4)); \
      ignore_bins ignore_master_5_busreq = {5} iff ((sys_cfg.num_masters < 6) || (sys_cfg.dummy_master == 5)); \
      ignore_bins ignore_master_6_busreq = {6} iff ((sys_cfg.num_masters < 7) || (sys_cfg.dummy_master == 6)); \
      ignore_bins ignore_master_7_busreq = {7} iff ((sys_cfg.num_masters < 8) || (sys_cfg.dummy_master == 7)); \
      ignore_bins ignore_master_8_busreq = {8} iff ((sys_cfg.num_masters < 9) || (sys_cfg.dummy_master == 8)); \
      ignore_bins ignore_master_9_busreq = {9} iff ((sys_cfg.num_masters < 10) || (sys_cfg.dummy_master == 9)); \
      ignore_bins ignore_master_10_busreq = {10} iff ((sys_cfg.num_masters < 11) || (sys_cfg.dummy_master == 10)); \
      ignore_bins ignore_master_11_busreq = {11} iff ((sys_cfg.num_masters < 12) || (sys_cfg.dummy_master == 11)); \
      ignore_bins ignore_master_12_busreq = {12} iff ((sys_cfg.num_masters < 13) || (sys_cfg.dummy_master == 12)); \
      ignore_bins ignore_master_13_busreq = {13} iff ((sys_cfg.num_masters < 14) || (sys_cfg.dummy_master == 13)); \
      ignore_bins ignore_master_14_busreq = {14} iff ((sys_cfg.num_masters < 15) || (sys_cfg.dummy_master == 14)); \
      ignore_bins ignore_master_15_busreq = {15} iff ((sys_cfg.num_masters < 16) || (sys_cfg.dummy_master == 15)); \
      ignore_bins ignore_master_16_busreq = {16} iff ((sys_cfg.num_masters < 17) || (sys_cfg.dummy_master == 16)); \
      ignore_bins ignore_master_17_busreq = {17} iff ((sys_cfg.num_masters < 18) || (sys_cfg.dummy_master == 17)); \
      ignore_bins ignore_master_18_busreq = {18} iff ((sys_cfg.num_masters < 19) || (sys_cfg.dummy_master == 18)); \
      ignore_bins ignore_master_19_busreq = {19} iff ((sys_cfg.num_masters < 20) || (sys_cfg.dummy_master == 19)); \
      ignore_bins ignore_master_20_busreq = {20} iff ((sys_cfg.num_masters < 21) || (sys_cfg.dummy_master == 20)); \
      ignore_bins ignore_master_21_busreq = {21} iff ((sys_cfg.num_masters < 22) || (sys_cfg.dummy_master == 21)); \
      ignore_bins ignore_master_22_busreq = {22} iff ((sys_cfg.num_masters < 23) || (sys_cfg.dummy_master == 22)); \
      ignore_bins ignore_master_23_busreq = {23} iff ((sys_cfg.num_masters < 24) || (sys_cfg.dummy_master == 23)); \
      ignore_bins ignore_master_24_busreq = {24} iff ((sys_cfg.num_masters < 25) || (sys_cfg.dummy_master == 24)); \
      ignore_bins ignore_master_25_busreq = {25} iff ((sys_cfg.num_masters < 26) || (sys_cfg.dummy_master == 25)); \
      ignore_bins ignore_master_26_busreq = {26} iff ((sys_cfg.num_masters < 27) || (sys_cfg.dummy_master == 26)); \
      ignore_bins ignore_master_27_busreq = {27} iff ((sys_cfg.num_masters < 28) || (sys_cfg.dummy_master == 27)); \
      ignore_bins ignore_master_28_busreq = {28} iff ((sys_cfg.num_masters < 29) || (sys_cfg.dummy_master == 28)); \
      ignore_bins ignore_master_29_busreq = {29} iff ((sys_cfg.num_masters < 30) || (sys_cfg.dummy_master == 29)); \
      ignore_bins ignore_master_30_busreq = {30} iff ((sys_cfg.num_masters < 31) || (sys_cfg.dummy_master == 30)); \
      ignore_bins ignore_master_31_busreq = {31} iff ((sys_cfg.num_masters < 32) || (sys_cfg.dummy_master == 31)); \
      ignore_bins ignore_master_32_busreq = {32} iff ((sys_cfg.num_masters < 33) || (sys_cfg.dummy_master == 32)); \
      ignore_bins ignore_master_33_busreq = {33} iff ((sys_cfg.num_masters < 34) || (sys_cfg.dummy_master == 33)); \
      ignore_bins ignore_master_34_busreq = {34} iff ((sys_cfg.num_masters < 35) || (sys_cfg.dummy_master == 34)); \
      ignore_bins ignore_master_35_busreq = {35} iff ((sys_cfg.num_masters < 36) || (sys_cfg.dummy_master == 35)); \
      ignore_bins ignore_master_36_busreq = {36} iff ((sys_cfg.num_masters < 37) || (sys_cfg.dummy_master == 36)); \
      ignore_bins ignore_master_37_busreq = {37} iff ((sys_cfg.num_masters < 38) || (sys_cfg.dummy_master == 37)); \
      ignore_bins ignore_master_38_busreq = {38} iff ((sys_cfg.num_masters < 39) || (sys_cfg.dummy_master == 38)); \
      ignore_bins ignore_master_39_busreq = {39} iff ((sys_cfg.num_masters < 40) || (sys_cfg.dummy_master == 39)); \
      ignore_bins ignore_master_40_busreq = {40} iff ((sys_cfg.num_masters < 41) || (sys_cfg.dummy_master == 40)); \
      ignore_bins ignore_master_41_busreq = {41} iff ((sys_cfg.num_masters < 42) || (sys_cfg.dummy_master == 41)); \
      ignore_bins ignore_master_42_busreq = {42} iff ((sys_cfg.num_masters < 43) || (sys_cfg.dummy_master == 42)); \
      ignore_bins ignore_master_43_busreq = {43} iff ((sys_cfg.num_masters < 44) || (sys_cfg.dummy_master == 43)); \
      ignore_bins ignore_master_44_busreq = {44} iff ((sys_cfg.num_masters < 45) || (sys_cfg.dummy_master == 44)); \
      ignore_bins ignore_master_45_busreq = {45} iff ((sys_cfg.num_masters < 46) || (sys_cfg.dummy_master == 45)); \
      ignore_bins ignore_master_46_busreq = {46} iff ((sys_cfg.num_masters < 47) || (sys_cfg.dummy_master == 46)); \
      ignore_bins ignore_master_47_busreq = {47} iff ((sys_cfg.num_masters < 48) || (sys_cfg.dummy_master == 47)); \
      ignore_bins ignore_master_48_busreq = {48} iff ((sys_cfg.num_masters < 49) || (sys_cfg.dummy_master == 48)); \
      ignore_bins ignore_master_49_busreq = {49} iff ((sys_cfg.num_masters < 50) || (sys_cfg.dummy_master == 49)); \
      ignore_bins ignore_master_50_busreq = {50} iff ((sys_cfg.num_masters < 51) || (sys_cfg.dummy_master == 50)); \
      ignore_bins ignore_master_51_busreq = {51} iff ((sys_cfg.num_masters < 52) || (sys_cfg.dummy_master == 51)); \
      ignore_bins ignore_master_52_busreq = {52} iff ((sys_cfg.num_masters < 53) || (sys_cfg.dummy_master == 52)); \
      ignore_bins ignore_master_53_busreq = {53} iff ((sys_cfg.num_masters < 54) || (sys_cfg.dummy_master == 53)); \
      ignore_bins ignore_master_54_busreq = {54} iff ((sys_cfg.num_masters < 55) || (sys_cfg.dummy_master == 54)); \
      ignore_bins ignore_master_55_busreq = {55} iff ((sys_cfg.num_masters < 56) || (sys_cfg.dummy_master == 55)); \
      ignore_bins ignore_master_56_busreq = {56} iff ((sys_cfg.num_masters < 57) || (sys_cfg.dummy_master == 56)); \
      ignore_bins ignore_master_57_busreq = {57} iff ((sys_cfg.num_masters < 58) || (sys_cfg.dummy_master == 57)); \
      ignore_bins ignore_master_58_busreq = {58} iff ((sys_cfg.num_masters < 59) || (sys_cfg.dummy_master == 58)); \
      ignore_bins ignore_master_59_busreq = {59} iff ((sys_cfg.num_masters < 60) || (sys_cfg.dummy_master == 59)); \
      ignore_bins ignore_master_60_busreq = {60} iff ((sys_cfg.num_masters < 61) || (sys_cfg.dummy_master == 60)); \
      ignore_bins ignore_master_61_busreq = {61} iff ((sys_cfg.num_masters < 62) || (sys_cfg.dummy_master == 61)); \
      ignore_bins ignore_master_62_busreq = {62} iff ((sys_cfg.num_masters < 63) || (sys_cfg.dummy_master == 62)); \
      ignore_bins ignore_master_63_busreq = {63} iff ((sys_cfg.num_masters < 64) || (sys_cfg.dummy_master == 63)); \
      ignore_bins ignore_master_64_busreq = {64} iff ((sys_cfg.num_masters < 65) || (sys_cfg.dummy_master == 64)); \
      ignore_bins ignore_master_65_busreq = {65} iff ((sys_cfg.num_masters < 66) || (sys_cfg.dummy_master == 65)); \
      ignore_bins ignore_master_66_busreq = {66} iff ((sys_cfg.num_masters < 67) || (sys_cfg.dummy_master == 66)); \
      ignore_bins ignore_master_67_busreq = {67} iff ((sys_cfg.num_masters < 68) || (sys_cfg.dummy_master == 67)); \
      ignore_bins ignore_master_68_busreq = {68} iff ((sys_cfg.num_masters < 69) || (sys_cfg.dummy_master == 68)); \
      ignore_bins ignore_master_69_busreq = {69} iff ((sys_cfg.num_masters < 70) || (sys_cfg.dummy_master == 69)); \
      ignore_bins ignore_master_70_busreq = {70} iff ((sys_cfg.num_masters < 71) || (sys_cfg.dummy_master == 70)); \
      ignore_bins ignore_master_71_busreq = {71} iff ((sys_cfg.num_masters < 72) || (sys_cfg.dummy_master == 71)); \
      ignore_bins ignore_master_72_busreq = {72} iff ((sys_cfg.num_masters < 73) || (sys_cfg.dummy_master == 72)); \
      ignore_bins ignore_master_73_busreq = {73} iff ((sys_cfg.num_masters < 74) || (sys_cfg.dummy_master == 73)); \
      ignore_bins ignore_master_74_busreq = {74} iff ((sys_cfg.num_masters < 75) || (sys_cfg.dummy_master == 74)); \
      ignore_bins ignore_master_75_busreq = {75} iff ((sys_cfg.num_masters < 76) || (sys_cfg.dummy_master == 75)); \
      ignore_bins ignore_master_76_busreq = {76} iff ((sys_cfg.num_masters < 77) || (sys_cfg.dummy_master == 76)); \
      ignore_bins ignore_master_77_busreq = {77} iff ((sys_cfg.num_masters < 78) || (sys_cfg.dummy_master == 77)); \
      ignore_bins ignore_master_78_busreq = {78} iff ((sys_cfg.num_masters < 79) || (sys_cfg.dummy_master == 78)); \
      ignore_bins ignore_master_79_busreq = {79} iff ((sys_cfg.num_masters < 80) || (sys_cfg.dummy_master == 79)); \
      ignore_bins ignore_master_80_busreq = {80} iff ((sys_cfg.num_masters < 81) || (sys_cfg.dummy_master == 80)); \
      ignore_bins ignore_master_81_busreq = {81} iff ((sys_cfg.num_masters < 82) || (sys_cfg.dummy_master == 81)); \
      ignore_bins ignore_master_82_busreq = {82} iff ((sys_cfg.num_masters < 83) || (sys_cfg.dummy_master == 82)); \
      ignore_bins ignore_master_83_busreq = {83} iff ((sys_cfg.num_masters < 84) || (sys_cfg.dummy_master == 83)); \
      ignore_bins ignore_master_84_busreq = {84} iff ((sys_cfg.num_masters < 85) || (sys_cfg.dummy_master == 84)); \
      ignore_bins ignore_master_85_busreq = {85} iff ((sys_cfg.num_masters < 86) || (sys_cfg.dummy_master == 85)); \
      ignore_bins ignore_master_86_busreq = {86} iff ((sys_cfg.num_masters < 87) || (sys_cfg.dummy_master == 86)); \
      ignore_bins ignore_master_87_busreq = {87} iff ((sys_cfg.num_masters < 88) || (sys_cfg.dummy_master == 87)); \
      ignore_bins ignore_master_88_busreq = {88} iff ((sys_cfg.num_masters < 89) || (sys_cfg.dummy_master == 88)); \
      ignore_bins ignore_master_89_busreq = {89} iff ((sys_cfg.num_masters < 90) || (sys_cfg.dummy_master == 89)); \
      ignore_bins ignore_master_90_busreq = {90} iff ((sys_cfg.num_masters < 91) || (sys_cfg.dummy_master == 90)); \
      ignore_bins ignore_master_91_busreq = {91} iff ((sys_cfg.num_masters < 92) || (sys_cfg.dummy_master == 91)); \
      ignore_bins ignore_master_92_busreq = {92} iff ((sys_cfg.num_masters < 93) || (sys_cfg.dummy_master == 92)); \
      ignore_bins ignore_master_93_busreq = {93} iff ((sys_cfg.num_masters < 94) || (sys_cfg.dummy_master == 93)); \
      ignore_bins ignore_master_94_busreq = {94} iff ((sys_cfg.num_masters < 95) || (sys_cfg.dummy_master == 94)); \
      ignore_bins ignore_master_95_busreq = {95} iff ((sys_cfg.num_masters < 96) || (sys_cfg.dummy_master == 95)); \
      ignore_bins ignore_master_96_busreq = {96} iff ((sys_cfg.num_masters < 97) || (sys_cfg.dummy_master == 96)); \
      ignore_bins ignore_master_97_busreq = {97} iff ((sys_cfg.num_masters < 98) || (sys_cfg.dummy_master == 97)); \
      ignore_bins ignore_master_98_busreq = {98} iff ((sys_cfg.num_masters < 99) || (sys_cfg.dummy_master == 98)); \
      ignore_bins ignore_master_99_busreq = {99} iff ((sys_cfg.num_masters < 100) || (sys_cfg.dummy_master == 99)); \
      ignore_bins ignore_master_100_busreq = {100} iff ((sys_cfg.num_masters < 101) || (sys_cfg.dummy_master == 100)); \
      ignore_bins ignore_master_101_busreq = {101} iff ((sys_cfg.num_masters < 102) || (sys_cfg.dummy_master == 101)); \
      ignore_bins ignore_master_102_busreq = {102} iff ((sys_cfg.num_masters < 103) || (sys_cfg.dummy_master == 102)); \
      ignore_bins ignore_master_103_busreq = {103} iff ((sys_cfg.num_masters < 104) || (sys_cfg.dummy_master == 103)); \
      ignore_bins ignore_master_104_busreq = {104} iff ((sys_cfg.num_masters < 105) || (sys_cfg.dummy_master == 104)); \
      ignore_bins ignore_master_105_busreq = {105} iff ((sys_cfg.num_masters < 106) || (sys_cfg.dummy_master == 105)); \
      ignore_bins ignore_master_106_busreq = {106} iff ((sys_cfg.num_masters < 107) || (sys_cfg.dummy_master == 106)); \
      ignore_bins ignore_master_107_busreq = {107} iff ((sys_cfg.num_masters < 108) || (sys_cfg.dummy_master == 107)); \
      ignore_bins ignore_master_108_busreq = {108} iff ((sys_cfg.num_masters < 109) || (sys_cfg.dummy_master == 108)); \
      ignore_bins ignore_master_109_busreq = {109} iff ((sys_cfg.num_masters < 110) || (sys_cfg.dummy_master == 109)); \
      ignore_bins ignore_master_110_busreq = {110} iff ((sys_cfg.num_masters < 111) || (sys_cfg.dummy_master == 110)); \
      ignore_bins ignore_master_111_busreq = {111} iff ((sys_cfg.num_masters < 112) || (sys_cfg.dummy_master == 111)); \
      ignore_bins ignore_master_112_busreq = {112} iff ((sys_cfg.num_masters < 113) || (sys_cfg.dummy_master == 112)); \
      ignore_bins ignore_master_113_busreq = {113} iff ((sys_cfg.num_masters < 114) || (sys_cfg.dummy_master == 113)); \
      ignore_bins ignore_master_114_busreq = {114} iff ((sys_cfg.num_masters < 115) || (sys_cfg.dummy_master == 114)); \
      ignore_bins ignore_master_115_busreq = {115} iff ((sys_cfg.num_masters < 116) || (sys_cfg.dummy_master == 115)); \
      ignore_bins ignore_master_116_busreq = {116} iff ((sys_cfg.num_masters < 117) || (sys_cfg.dummy_master == 116)); \
      ignore_bins ignore_master_117_busreq = {117} iff ((sys_cfg.num_masters < 118) || (sys_cfg.dummy_master == 117)); \
      ignore_bins ignore_master_118_busreq = {118} iff ((sys_cfg.num_masters < 119) || (sys_cfg.dummy_master == 118)); \
      ignore_bins ignore_master_119_busreq = {119} iff ((sys_cfg.num_masters < 120) || (sys_cfg.dummy_master == 119)); \
      ignore_bins ignore_master_120_busreq = {120} iff ((sys_cfg.num_masters < 121) || (sys_cfg.dummy_master == 120)); \
      ignore_bins ignore_master_121_busreq = {121} iff ((sys_cfg.num_masters < 122) || (sys_cfg.dummy_master == 121)); \
      ignore_bins ignore_master_122_busreq = {122} iff ((sys_cfg.num_masters < 123) || (sys_cfg.dummy_master == 122)); \
      ignore_bins ignore_master_123_busreq = {123} iff ((sys_cfg.num_masters < 124) || (sys_cfg.dummy_master == 123)); \
      ignore_bins ignore_master_124_busreq = {124} iff ((sys_cfg.num_masters < 125) || (sys_cfg.dummy_master == 124)); \
      ignore_bins ignore_master_125_busreq = {125} iff ((sys_cfg.num_masters < 126) || (sys_cfg.dummy_master == 125)); \
      ignore_bins ignore_master_126_busreq = {126} iff ((sys_cfg.num_masters < 127) || (sys_cfg.dummy_master == 126)); \
      ignore_bins ignore_master_127_busreq = {127} iff ((sys_cfg.num_masters < 128) || (sys_cfg.dummy_master == 127)); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_ALL_SLAVES_SELECTED \
    ahb_all_slaves_hsel: coverpoint slave_id_hsel { \
      bins slave_0_hsel = {0}; \
      bins slave_1_hsel = {1}; \
      bins slave_2_hsel = {2}; \
      bins slave_3_hsel = {3}; \
      bins slave_4_hsel = {4}; \
      bins slave_5_hsel = {5}; \
      bins slave_6_hsel = {6}; \
      bins slave_7_hsel = {7}; \
      bins slave_8_hsel = {8}; \
      bins slave_9_hsel = {9}; \
      bins slave_10_hsel = {10}; \
      bins slave_11_hsel = {11}; \
      bins slave_12_hsel = {12}; \
      bins slave_13_hsel = {13}; \
      bins slave_14_hsel = {14}; \
      bins slave_15_hsel = {15}; \
      bins slave_16_hsel = {16}; \
      bins slave_17_hsel = {17}; \
      bins slave_18_hsel = {18}; \
      bins slave_19_hsel = {19}; \
      bins slave_20_hsel = {20}; \
      bins slave_21_hsel = {21}; \
      bins slave_22_hsel = {22}; \
      bins slave_23_hsel = {23}; \
      bins slave_24_hsel = {24}; \
      bins slave_25_hsel = {25}; \
      bins slave_26_hsel = {26}; \
      bins slave_27_hsel = {27}; \
      bins slave_28_hsel = {28}; \
      bins slave_29_hsel = {29}; \
      bins slave_30_hsel = {30}; \
      bins slave_31_hsel = {31}; \
      bins slave_32_hsel = {32}; \
      bins slave_33_hsel = {33}; \
      bins slave_34_hsel = {34}; \
      bins slave_35_hsel = {35}; \
      bins slave_36_hsel = {36}; \
      bins slave_37_hsel = {37}; \
      bins slave_38_hsel = {38}; \
      bins slave_39_hsel = {39}; \
      bins slave_40_hsel = {40}; \
      bins slave_41_hsel = {41}; \
      bins slave_42_hsel = {42}; \
      bins slave_43_hsel = {43}; \
      bins slave_44_hsel = {44}; \
      bins slave_45_hsel = {45}; \
      bins slave_46_hsel = {46}; \
      bins slave_47_hsel = {47}; \
      bins slave_48_hsel = {48}; \
      bins slave_49_hsel = {49}; \
      bins slave_50_hsel = {50}; \
      bins slave_51_hsel = {51}; \
      bins slave_52_hsel = {52}; \
      bins slave_53_hsel = {53}; \
      bins slave_54_hsel = {54}; \
      bins slave_55_hsel = {55}; \
      bins slave_56_hsel = {56}; \
      bins slave_57_hsel = {57}; \
      bins slave_58_hsel = {58}; \
      bins slave_59_hsel = {59}; \
      bins slave_60_hsel = {60}; \
      bins slave_61_hsel = {61}; \
      bins slave_62_hsel = {62}; \
      bins slave_63_hsel = {63}; \
      bins slave_64_hsel = {64}; \
      bins slave_65_hsel = {65}; \
      bins slave_66_hsel = {66}; \
      bins slave_67_hsel = {67}; \
      bins slave_68_hsel = {68}; \
      bins slave_69_hsel = {69}; \
      bins slave_70_hsel = {70}; \
      bins slave_71_hsel = {71}; \
      bins slave_72_hsel = {72}; \
      bins slave_73_hsel = {73}; \
      bins slave_74_hsel = {74}; \
      bins slave_75_hsel = {75}; \
      bins slave_76_hsel = {76}; \
      bins slave_77_hsel = {77}; \
      bins slave_78_hsel = {78}; \
      bins slave_79_hsel = {79}; \
      bins slave_80_hsel = {80}; \
      bins slave_81_hsel = {81}; \
      bins slave_82_hsel = {82}; \
      bins slave_83_hsel = {83}; \
      bins slave_84_hsel = {84}; \
      bins slave_85_hsel = {85}; \
      bins slave_86_hsel = {86}; \
      bins slave_87_hsel = {87}; \
      bins slave_88_hsel = {88}; \
      bins slave_89_hsel = {89}; \
      bins slave_90_hsel = {90}; \
      bins slave_91_hsel = {91}; \
      bins slave_92_hsel = {92}; \
      bins slave_93_hsel = {93}; \
      bins slave_94_hsel = {94}; \
      bins slave_95_hsel = {95}; \
      bins slave_96_hsel = {96}; \
      bins slave_97_hsel = {97}; \
      bins slave_98_hsel = {98}; \
      bins slave_99_hsel = {99}; \
      bins slave_100_hsel = {100}; \
      bins slave_101_hsel = {101}; \
      bins slave_102_hsel = {102}; \
      bins slave_103_hsel = {103}; \
      bins slave_104_hsel = {104}; \
      bins slave_105_hsel = {105}; \
      bins slave_106_hsel = {106}; \
      bins slave_107_hsel = {107}; \
      bins slave_108_hsel = {108}; \
      bins slave_109_hsel = {109}; \
      bins slave_110_hsel = {110}; \
      bins slave_111_hsel = {111}; \
      bins slave_112_hsel = {112}; \
      bins slave_113_hsel = {113}; \
      bins slave_114_hsel = {114}; \
      bins slave_115_hsel = {115}; \
      bins slave_116_hsel = {116}; \
      bins slave_117_hsel = {117}; \
      bins slave_118_hsel = {118}; \
      bins slave_119_hsel = {119}; \
      bins slave_120_hsel = {120}; \
      bins slave_121_hsel = {121}; \
      bins slave_122_hsel = {122}; \
      bins slave_123_hsel = {123}; \
      bins slave_124_hsel = {124}; \
      bins slave_125_hsel = {125}; \
      bins slave_126_hsel = {126}; \
      bins slave_127_hsel = {127}; \
      ignore_bins ignore_slave_0_hsel = {0} iff ((sys_cfg.num_slaves < 1) || (sys_cfg.default_slave == 0)); \
      ignore_bins ignore_slave_1_hsel = {1} iff ((sys_cfg.num_slaves < 2) || (sys_cfg.default_slave == 1)); \
      ignore_bins ignore_slave_2_hsel = {2} iff ((sys_cfg.num_slaves < 3) || (sys_cfg.default_slave == 2)); \
      ignore_bins ignore_slave_3_hsel = {3} iff ((sys_cfg.num_slaves < 4) || (sys_cfg.default_slave == 3)); \
      ignore_bins ignore_slave_4_hsel = {4} iff ((sys_cfg.num_slaves < 5) || (sys_cfg.default_slave == 4)); \
      ignore_bins ignore_slave_5_hsel = {5} iff ((sys_cfg.num_slaves < 6) || (sys_cfg.default_slave == 5)); \
      ignore_bins ignore_slave_6_hsel = {6} iff ((sys_cfg.num_slaves < 7) || (sys_cfg.default_slave == 6)); \
      ignore_bins ignore_slave_7_hsel = {7} iff ((sys_cfg.num_slaves < 8) || (sys_cfg.default_slave == 7)); \
      ignore_bins ignore_slave_8_hsel = {8} iff ((sys_cfg.num_slaves < 9) || (sys_cfg.default_slave == 8)); \
      ignore_bins ignore_slave_9_hsel = {9} iff ((sys_cfg.num_slaves < 10) || (sys_cfg.default_slave == 9)); \
      ignore_bins ignore_slave_10_hsel = {10} iff ((sys_cfg.num_slaves < 11) || (sys_cfg.default_slave == 10)); \
      ignore_bins ignore_slave_11_hsel = {11} iff ((sys_cfg.num_slaves < 12) || (sys_cfg.default_slave == 11)); \
      ignore_bins ignore_slave_12_hsel = {12} iff ((sys_cfg.num_slaves < 13) || (sys_cfg.default_slave == 12)); \
      ignore_bins ignore_slave_13_hsel = {13} iff ((sys_cfg.num_slaves < 14) || (sys_cfg.default_slave == 13)); \
      ignore_bins ignore_slave_14_hsel = {14} iff ((sys_cfg.num_slaves < 15) || (sys_cfg.default_slave == 14)); \
      ignore_bins ignore_slave_15_hsel = {15} iff ((sys_cfg.num_slaves < 16) || (sys_cfg.default_slave == 15)); \
      ignore_bins ignore_slave_16_hsel = {16} iff ((sys_cfg.num_slaves < 17) || (sys_cfg.default_slave == 16)); \
      ignore_bins ignore_slave_17_hsel = {17} iff ((sys_cfg.num_slaves < 18) || (sys_cfg.default_slave == 17)); \
      ignore_bins ignore_slave_18_hsel = {18} iff ((sys_cfg.num_slaves < 19) || (sys_cfg.default_slave == 18)); \
      ignore_bins ignore_slave_19_hsel = {19} iff ((sys_cfg.num_slaves < 20) || (sys_cfg.default_slave == 19)); \
      ignore_bins ignore_slave_20_hsel = {20} iff ((sys_cfg.num_slaves < 21) || (sys_cfg.default_slave == 20)); \
      ignore_bins ignore_slave_21_hsel = {21} iff ((sys_cfg.num_slaves < 22) || (sys_cfg.default_slave == 21)); \
      ignore_bins ignore_slave_22_hsel = {22} iff ((sys_cfg.num_slaves < 23) || (sys_cfg.default_slave == 22)); \
      ignore_bins ignore_slave_23_hsel = {23} iff ((sys_cfg.num_slaves < 24) || (sys_cfg.default_slave == 23)); \
      ignore_bins ignore_slave_24_hsel = {24} iff ((sys_cfg.num_slaves < 25) || (sys_cfg.default_slave == 24)); \
      ignore_bins ignore_slave_25_hsel = {25} iff ((sys_cfg.num_slaves < 26) || (sys_cfg.default_slave == 25)); \
      ignore_bins ignore_slave_26_hsel = {26} iff ((sys_cfg.num_slaves < 27) || (sys_cfg.default_slave == 26)); \
      ignore_bins ignore_slave_27_hsel = {27} iff ((sys_cfg.num_slaves < 28) || (sys_cfg.default_slave == 27)); \
      ignore_bins ignore_slave_28_hsel = {28} iff ((sys_cfg.num_slaves < 29) || (sys_cfg.default_slave == 28)); \
      ignore_bins ignore_slave_29_hsel = {29} iff ((sys_cfg.num_slaves < 30) || (sys_cfg.default_slave == 29)); \
      ignore_bins ignore_slave_30_hsel = {30} iff ((sys_cfg.num_slaves < 31) || (sys_cfg.default_slave == 30)); \
      ignore_bins ignore_slave_31_hsel = {31} iff ((sys_cfg.num_slaves < 32) || (sys_cfg.default_slave == 31)); \
      ignore_bins ignore_slave_32_hsel = {32} iff ((sys_cfg.num_slaves < 33) || (sys_cfg.default_slave == 32)); \
      ignore_bins ignore_slave_33_hsel = {33} iff ((sys_cfg.num_slaves < 34) || (sys_cfg.default_slave == 33)); \
      ignore_bins ignore_slave_34_hsel = {34} iff ((sys_cfg.num_slaves < 35) || (sys_cfg.default_slave == 34)); \
      ignore_bins ignore_slave_35_hsel = {35} iff ((sys_cfg.num_slaves < 36) || (sys_cfg.default_slave == 35)); \
      ignore_bins ignore_slave_36_hsel = {36} iff ((sys_cfg.num_slaves < 37) || (sys_cfg.default_slave == 36)); \
      ignore_bins ignore_slave_37_hsel = {37} iff ((sys_cfg.num_slaves < 38) || (sys_cfg.default_slave == 37)); \
      ignore_bins ignore_slave_38_hsel = {38} iff ((sys_cfg.num_slaves < 39) || (sys_cfg.default_slave == 38)); \
      ignore_bins ignore_slave_39_hsel = {39} iff ((sys_cfg.num_slaves < 40) || (sys_cfg.default_slave == 39)); \
      ignore_bins ignore_slave_40_hsel = {40} iff ((sys_cfg.num_slaves < 41) || (sys_cfg.default_slave == 40)); \
      ignore_bins ignore_slave_41_hsel = {41} iff ((sys_cfg.num_slaves < 42) || (sys_cfg.default_slave == 41)); \
      ignore_bins ignore_slave_42_hsel = {42} iff ((sys_cfg.num_slaves < 43) || (sys_cfg.default_slave == 42)); \
      ignore_bins ignore_slave_43_hsel = {43} iff ((sys_cfg.num_slaves < 44) || (sys_cfg.default_slave == 43)); \
      ignore_bins ignore_slave_44_hsel = {44} iff ((sys_cfg.num_slaves < 45) || (sys_cfg.default_slave == 44)); \
      ignore_bins ignore_slave_45_hsel = {45} iff ((sys_cfg.num_slaves < 46) || (sys_cfg.default_slave == 45)); \
      ignore_bins ignore_slave_46_hsel = {46} iff ((sys_cfg.num_slaves < 47) || (sys_cfg.default_slave == 46)); \
      ignore_bins ignore_slave_47_hsel = {47} iff ((sys_cfg.num_slaves < 48) || (sys_cfg.default_slave == 47)); \
      ignore_bins ignore_slave_48_hsel = {48} iff ((sys_cfg.num_slaves < 49) || (sys_cfg.default_slave == 48)); \
      ignore_bins ignore_slave_49_hsel = {49} iff ((sys_cfg.num_slaves < 50) || (sys_cfg.default_slave == 49)); \
      ignore_bins ignore_slave_50_hsel = {50} iff ((sys_cfg.num_slaves < 51) || (sys_cfg.default_slave == 50)); \
      ignore_bins ignore_slave_51_hsel = {51} iff ((sys_cfg.num_slaves < 52) || (sys_cfg.default_slave == 51)); \
      ignore_bins ignore_slave_52_hsel = {52} iff ((sys_cfg.num_slaves < 53) || (sys_cfg.default_slave == 52)); \
      ignore_bins ignore_slave_53_hsel = {53} iff ((sys_cfg.num_slaves < 54) || (sys_cfg.default_slave == 53)); \
      ignore_bins ignore_slave_54_hsel = {54} iff ((sys_cfg.num_slaves < 55) || (sys_cfg.default_slave == 54)); \
      ignore_bins ignore_slave_55_hsel = {55} iff ((sys_cfg.num_slaves < 56) || (sys_cfg.default_slave == 55)); \
      ignore_bins ignore_slave_56_hsel = {56} iff ((sys_cfg.num_slaves < 57) || (sys_cfg.default_slave == 56)); \
      ignore_bins ignore_slave_57_hsel = {57} iff ((sys_cfg.num_slaves < 58) || (sys_cfg.default_slave == 57)); \
      ignore_bins ignore_slave_58_hsel = {58} iff ((sys_cfg.num_slaves < 59) || (sys_cfg.default_slave == 58)); \
      ignore_bins ignore_slave_59_hsel = {59} iff ((sys_cfg.num_slaves < 60) || (sys_cfg.default_slave == 59)); \
      ignore_bins ignore_slave_60_hsel = {60} iff ((sys_cfg.num_slaves < 61) || (sys_cfg.default_slave == 60)); \
      ignore_bins ignore_slave_61_hsel = {61} iff ((sys_cfg.num_slaves < 62) || (sys_cfg.default_slave == 61)); \
      ignore_bins ignore_slave_62_hsel = {62} iff ((sys_cfg.num_slaves < 63) || (sys_cfg.default_slave == 62)); \
      ignore_bins ignore_slave_63_hsel = {63} iff ((sys_cfg.num_slaves < 64) || (sys_cfg.default_slave == 63)); \
      ignore_bins ignore_slave_64_hsel = {64} iff ((sys_cfg.num_slaves < 65) || (sys_cfg.default_slave == 64)); \
      ignore_bins ignore_slave_65_hsel = {65} iff ((sys_cfg.num_slaves < 66) || (sys_cfg.default_slave == 65)); \
      ignore_bins ignore_slave_66_hsel = {66} iff ((sys_cfg.num_slaves < 67) || (sys_cfg.default_slave == 66)); \
      ignore_bins ignore_slave_67_hsel = {67} iff ((sys_cfg.num_slaves < 68) || (sys_cfg.default_slave == 67)); \
      ignore_bins ignore_slave_68_hsel = {68} iff ((sys_cfg.num_slaves < 69) || (sys_cfg.default_slave == 68)); \
      ignore_bins ignore_slave_69_hsel = {69} iff ((sys_cfg.num_slaves < 70) || (sys_cfg.default_slave == 69)); \
      ignore_bins ignore_slave_70_hsel = {70} iff ((sys_cfg.num_slaves < 71) || (sys_cfg.default_slave == 70)); \
      ignore_bins ignore_slave_71_hsel = {71} iff ((sys_cfg.num_slaves < 72) || (sys_cfg.default_slave == 71)); \
      ignore_bins ignore_slave_72_hsel = {72} iff ((sys_cfg.num_slaves < 73) || (sys_cfg.default_slave == 72)); \
      ignore_bins ignore_slave_73_hsel = {73} iff ((sys_cfg.num_slaves < 74) || (sys_cfg.default_slave == 73)); \
      ignore_bins ignore_slave_74_hsel = {74} iff ((sys_cfg.num_slaves < 75) || (sys_cfg.default_slave == 74)); \
      ignore_bins ignore_slave_75_hsel = {75} iff ((sys_cfg.num_slaves < 76) || (sys_cfg.default_slave == 75)); \
      ignore_bins ignore_slave_76_hsel = {76} iff ((sys_cfg.num_slaves < 77) || (sys_cfg.default_slave == 76)); \
      ignore_bins ignore_slave_77_hsel = {77} iff ((sys_cfg.num_slaves < 78) || (sys_cfg.default_slave == 77)); \
      ignore_bins ignore_slave_78_hsel = {78} iff ((sys_cfg.num_slaves < 79) || (sys_cfg.default_slave == 78)); \
      ignore_bins ignore_slave_79_hsel = {79} iff ((sys_cfg.num_slaves < 80) || (sys_cfg.default_slave == 79)); \
      ignore_bins ignore_slave_80_hsel = {80} iff ((sys_cfg.num_slaves < 81) || (sys_cfg.default_slave == 80)); \
      ignore_bins ignore_slave_81_hsel = {81} iff ((sys_cfg.num_slaves < 82) || (sys_cfg.default_slave == 81)); \
      ignore_bins ignore_slave_82_hsel = {82} iff ((sys_cfg.num_slaves < 83) || (sys_cfg.default_slave == 82)); \
      ignore_bins ignore_slave_83_hsel = {83} iff ((sys_cfg.num_slaves < 84) || (sys_cfg.default_slave == 83)); \
      ignore_bins ignore_slave_84_hsel = {84} iff ((sys_cfg.num_slaves < 85) || (sys_cfg.default_slave == 84)); \
      ignore_bins ignore_slave_85_hsel = {85} iff ((sys_cfg.num_slaves < 86) || (sys_cfg.default_slave == 85)); \
      ignore_bins ignore_slave_86_hsel = {86} iff ((sys_cfg.num_slaves < 87) || (sys_cfg.default_slave == 86)); \
      ignore_bins ignore_slave_87_hsel = {87} iff ((sys_cfg.num_slaves < 88) || (sys_cfg.default_slave == 87)); \
      ignore_bins ignore_slave_88_hsel = {88} iff ((sys_cfg.num_slaves < 89) || (sys_cfg.default_slave == 88)); \
      ignore_bins ignore_slave_89_hsel = {89} iff ((sys_cfg.num_slaves < 90) || (sys_cfg.default_slave == 89)); \
      ignore_bins ignore_slave_90_hsel = {90} iff ((sys_cfg.num_slaves < 91) || (sys_cfg.default_slave == 90)); \
      ignore_bins ignore_slave_91_hsel = {91} iff ((sys_cfg.num_slaves < 92) || (sys_cfg.default_slave == 91)); \
      ignore_bins ignore_slave_92_hsel = {92} iff ((sys_cfg.num_slaves < 93) || (sys_cfg.default_slave == 92)); \
      ignore_bins ignore_slave_93_hsel = {93} iff ((sys_cfg.num_slaves < 94) || (sys_cfg.default_slave == 93)); \
      ignore_bins ignore_slave_94_hsel = {94} iff ((sys_cfg.num_slaves < 95) || (sys_cfg.default_slave == 94)); \
      ignore_bins ignore_slave_95_hsel = {95} iff ((sys_cfg.num_slaves < 96) || (sys_cfg.default_slave == 95)); \
      ignore_bins ignore_slave_96_hsel = {96} iff ((sys_cfg.num_slaves < 97) || (sys_cfg.default_slave == 96)); \
      ignore_bins ignore_slave_97_hsel = {97} iff ((sys_cfg.num_slaves < 98) || (sys_cfg.default_slave == 97)); \
      ignore_bins ignore_slave_98_hsel = {98} iff ((sys_cfg.num_slaves < 99) || (sys_cfg.default_slave == 98)); \
      ignore_bins ignore_slave_99_hsel = {99} iff ((sys_cfg.num_slaves < 100) || (sys_cfg.default_slave == 99)); \
      ignore_bins ignore_slave_100_hsel = {100} iff ((sys_cfg.num_slaves < 101) || (sys_cfg.default_slave == 100)); \
      ignore_bins ignore_slave_101_hsel = {101} iff ((sys_cfg.num_slaves < 102) || (sys_cfg.default_slave == 101)); \
      ignore_bins ignore_slave_102_hsel = {102} iff ((sys_cfg.num_slaves < 103) || (sys_cfg.default_slave == 102)); \
      ignore_bins ignore_slave_103_hsel = {103} iff ((sys_cfg.num_slaves < 104) || (sys_cfg.default_slave == 103)); \
      ignore_bins ignore_slave_104_hsel = {104} iff ((sys_cfg.num_slaves < 105) || (sys_cfg.default_slave == 104)); \
      ignore_bins ignore_slave_105_hsel = {105} iff ((sys_cfg.num_slaves < 106) || (sys_cfg.default_slave == 105)); \
      ignore_bins ignore_slave_106_hsel = {106} iff ((sys_cfg.num_slaves < 107) || (sys_cfg.default_slave == 106)); \
      ignore_bins ignore_slave_107_hsel = {107} iff ((sys_cfg.num_slaves < 108) || (sys_cfg.default_slave == 107)); \
      ignore_bins ignore_slave_108_hsel = {108} iff ((sys_cfg.num_slaves < 109) || (sys_cfg.default_slave == 108)); \
      ignore_bins ignore_slave_109_hsel = {109} iff ((sys_cfg.num_slaves < 110) || (sys_cfg.default_slave == 109)); \
      ignore_bins ignore_slave_110_hsel = {110} iff ((sys_cfg.num_slaves < 111) || (sys_cfg.default_slave == 110)); \
      ignore_bins ignore_slave_111_hsel = {111} iff ((sys_cfg.num_slaves < 112) || (sys_cfg.default_slave == 111)); \
      ignore_bins ignore_slave_112_hsel = {112} iff ((sys_cfg.num_slaves < 113) || (sys_cfg.default_slave == 112)); \
      ignore_bins ignore_slave_113_hsel = {113} iff ((sys_cfg.num_slaves < 114) || (sys_cfg.default_slave == 113)); \
      ignore_bins ignore_slave_114_hsel = {114} iff ((sys_cfg.num_slaves < 115) || (sys_cfg.default_slave == 114)); \
      ignore_bins ignore_slave_115_hsel = {115} iff ((sys_cfg.num_slaves < 116) || (sys_cfg.default_slave == 115)); \
      ignore_bins ignore_slave_116_hsel = {116} iff ((sys_cfg.num_slaves < 117) || (sys_cfg.default_slave == 116)); \
      ignore_bins ignore_slave_117_hsel = {117} iff ((sys_cfg.num_slaves < 118) || (sys_cfg.default_slave == 117)); \
      ignore_bins ignore_slave_118_hsel = {118} iff ((sys_cfg.num_slaves < 119) || (sys_cfg.default_slave == 118)); \
      ignore_bins ignore_slave_119_hsel = {119} iff ((sys_cfg.num_slaves < 120) || (sys_cfg.default_slave == 119)); \
      ignore_bins ignore_slave_120_hsel = {120} iff ((sys_cfg.num_slaves < 121) || (sys_cfg.default_slave == 120)); \
      ignore_bins ignore_slave_121_hsel = {121} iff ((sys_cfg.num_slaves < 122) || (sys_cfg.default_slave == 121)); \
      ignore_bins ignore_slave_122_hsel = {122} iff ((sys_cfg.num_slaves < 123) || (sys_cfg.default_slave == 122)); \
      ignore_bins ignore_slave_123_hsel = {123} iff ((sys_cfg.num_slaves < 124) || (sys_cfg.default_slave == 123)); \
      ignore_bins ignore_slave_124_hsel = {124} iff ((sys_cfg.num_slaves < 125) || (sys_cfg.default_slave == 124)); \
      ignore_bins ignore_slave_125_hsel = {125} iff ((sys_cfg.num_slaves < 126) || (sys_cfg.default_slave == 125)); \
      ignore_bins ignore_slave_126_hsel = {126} iff ((sys_cfg.num_slaves < 127) || (sys_cfg.default_slave == 126)); \
      ignore_bins ignore_slave_127_hsel = {127} iff ((sys_cfg.num_slaves < 128) || (sys_cfg.default_slave == 127)); \
    } 

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_TWO_SLAVES_SELECTION_SEQUENCE \
    ahb_two_slaves_selection_sequence : coverpoint slave_id_hsel { \
      bins slave_0_slave_1_hsel = (0 => 1); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_FOUR_SLAVES_SELECTION_SEQUENCE \
    ahb_four_slaves_selection_sequence : coverpoint slave_id_hsel { \
      bins slave_0_slave_1_slave_2_slave_3_hsel = (0 => 1 => 2 => 3); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_EIGHT_SLAVES_SELECTION_SEQUENCE \
    ahb_eight_slaves_selection_sequence : coverpoint slave_id_hsel { \
      bins slave_0_to_slave7_hsel = (0 => 1 => 2 => 3 => 4 => 5 => 6 => 7); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_SIXTEEN_SLAVES_SELECTION_SEQUENCE \
    ahb_sixteen_slaves_selection_sequence : coverpoint slave_id_hsel { \
      bins slave_0_to_slave15_hsel = (0 => 1 => 2 => 3 => 4 => 5 => 6 => 7 => 8 => 9 => 10 => 11 => 12 => 13 => 14 => 15); \
    }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
   xact_type : coverpoint cov_xact.xact_type { \
   bins xact   = {svt_ahb_transaction::READ, svt_ahb_transaction::WRITE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE \
   trans_type : coverpoint cov_htrans_type { \
     bins idle = {svt_ahb_transaction::IDLE}; \
     bins busy = {svt_ahb_transaction::BUSY}; \
     bins nseq = {svt_ahb_transaction::NSEQ}; \
     bins seq = {svt_ahb_transaction::SEQ}; \
  }

  `define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE_IDLE_EXCLUDED \
   trans_type : coverpoint cov_htrans_type { \
     bins busy = {svt_ahb_transaction::BUSY}; \
     bins nseq = {svt_ahb_transaction::NSEQ}; \
     bins seq = {svt_ahb_transaction::SEQ}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
  burst_type : coverpoint cov_xact.burst_type { \
    bins single_burst = {svt_ahb_transaction::SINGLE}; \
    bins incr_burst = {svt_ahb_transaction::INCR}; \
    bins wrap4_burst = {svt_ahb_transaction::WRAP4}; \
    bins incr4_burst = {svt_ahb_transaction::INCR4}; \
    bins wrap8_burst = {svt_ahb_transaction::WRAP8}; \
    bins incr8_burst = {svt_ahb_transaction::INCR8}; \
    bins wrap16_burst = {svt_ahb_transaction::WRAP16}; \
    bins incr16_burst = {svt_ahb_transaction::INCR16}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
  lock : coverpoint cov_xact.lock { \
    bins lock_transfer = {1}; \
  }

  /**
   *   This group covers the starting address when a transaction completes.
   *   \- bins for byte, word, half-word, word, double-word and quad-word alignment.
   */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
  addr : coverpoint cov_xact.addr { \
    bins addr_range_min = {0};\
`ifdef SVT_MULTI_SIM_COVPOINT_GREATER_THAN_32_BITS \
    // Need to come up with an alternative \
`else \
    bins addr64_range_mid = {[1:(64'd2**(cfg.addr_width)-2)]}; \
    bins addr64_range_max = {((64'd2**(cfg.addr_width))-1)}; \
    bins addr32_range_mid = {[1:(32'd2**(cfg.addr_width)-2)]}; \
    bins addr32_range_max = {((32'd2**(cfg.addr_width))-1)}; \
    wildcard bins byte_aligned_addr =      {(64'h????_????_????_????)}; \
    wildcard bins half_word_aligned_addr =      {({60'h????_????_????_???,4'b???0})}; \
    wildcard bins word_aligned_addr =      {({60'h????_????_????_???,4'b??00})}; \
    wildcard bins double_word_aligned_addr =      {({60'h????_????_????_???,4'b?000})}; \
    wildcard bins quad_word_aligned_addr =      {(64'h????_????_????_???0)}; \
`endif \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
  addr_page_boundary : coverpoint cov_xact.addr[9:0] { \
    bins addr_page_boundary_start = {[0:3]}; \
    bins addr_page_boundary_end = {[1020:1023]}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SIZE_ADDR_ALIGNMENT \
  burst_size_addr_alignment : coverpoint cov_xact.addr[2:0] { \
    bins burst_size_8bit_byte_aligned_addr = {[0:7]} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_8BIT); \
    bins burst_size_16bit_halfword_aligned_addr_0 = {0} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_16BIT); \
    bins burst_size_16bit_halfword_aligned_addr_2 = {2} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_16BIT); \
    bins burst_size_16bit_halfword_aligned_addr_4 = {4} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_16BIT); \
    bins burst_size_16bit_halfword_aligned_addr_6 = {6} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_16BIT); \
    bins burst_size_32bit_word_aligned_addr_0 = {0}  iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_32BIT); \
    bins burst_size_32bit_word_aligned_addr_4 = {4}  iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_32BIT); \
    bins burst_size_64bit_doubleword_aligned_addr_0 = {0} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_64BIT); \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(num_beats) \
  bins burst_incr_``num_beats``_beat = {num_beats} \
  iff (cov_xact.burst_type == svt_ahb_transaction::INCR);

`define SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEAT_1_TO_32_BINS \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(1) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(2) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(3) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(4) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(5) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(6) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(7) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(8) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(9) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(10) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(11) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(12) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(13) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(14) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(15) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(16) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(17) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(18) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(19) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(20) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(21) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(22) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(23) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(24) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(25) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(26) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(27) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(28) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(29) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(30) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(31) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(32)

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE_NUM_INCR_BEAT \
 burst_incr_number_of_beats : coverpoint cov_xact.num_incr_beats { \
   `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEAT_1_TO_32_BINS \
   bins burst_incr_bin_33_to_63_beats = {[33:63]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_64_beats = {64} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_65_to_127_beats = {[65:127]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_128_beats = {128} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_129_to_255_beats = {[129:255]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_256_beats = {256} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_257_to_511_beats = {[257:511]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_512_beats = {512} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_513_to_1023_beats = {[513:1023]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_1024_beats = {1024} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_BUSY_CYCLES_PER_BEAT \
   num_busy_cycles_per_beat : coverpoint cov_num_busy_cycles_per_beat { \
      bins num_busy_cycles_range_min  = {0}; \
      bins num_busy_cycles_range_mid  = {[1:(`SVT_AHB_MAX_NUM_BUSY_CYCLES-1)]} iff (`SVT_AHB_MAX_NUM_BUSY_CYCLES > 1); \
      bins num_busy_cycles_range_max  = {`SVT_AHB_MAX_NUM_BUSY_CYCLES}; \
    }

`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_WAIT_CYCLES_PER_BEAT \
   num_wait_cycles_per_beat : coverpoint cov_num_wait_cycles_per_beat { \
      bins num_wait_cycles_range_min  = {0}; \
      bins num_wait_cycles_range_mid  = {[1:(`SVT_AHB_MAX_NUM_WAIT_CYCLES-1)]} iff (`SVT_AHB_MAX_NUM_WAIT_CYCLES > 1); \
      bins num_wait_cycles_range_max  = {`SVT_AHB_MAX_NUM_WAIT_CYCLES}; \
    }
  
/**
 *  Following macro defines specific bins of interest to cover if address is wrapped at byte boundary 
 *  for a different WRAP burst types in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_WRAPPED_ADDR_BOUNDARY \
    burst_wrapped_addr_boundary : coverpoint cov_xact.burst_type { \
      bins burst_with_addr_wrap4 = {svt_ahb_transaction::WRAP4} iff(addr_last < cov_xact.addr); \
      bins burst_with_addr_wrap8 = {svt_ahb_transaction::WRAP8} iff(addr_last < cov_xact.addr); \
      bins burst_with_addr_wrap16 = {svt_ahb_transaction::WRAP16} iff(addr_last < cov_xact.addr); \
    }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HRESP \
  response_type : coverpoint cov_response_type { \
    bins okay_resp = {svt_ahb_transaction::OKAY}; \
    bins error_resp = {svt_ahb_transaction::ERROR}; \
    bins retry_resp = {svt_ahb_transaction::RETRY} iff (cfg.sys_cfg.ahb_lite != 1); \
    bins split_resp = {svt_ahb_transaction::SPLIT} iff (cfg.sys_cfg.ahb_lite != 1); \
  }
  
`ifdef SVT_AHB_GEN_COV_DATA_WIDTH_32_BIT
  
  `define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE \
     burst_size : coverpoint cov_xact.burst_size { \
       bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
       bins burst_size_16bit = {svt_ahb_transaction::BURST_SIZE_16BIT}; \
       bins burst_size_32bit = {svt_ahb_transaction::BURST_SIZE_32BIT}; \
     }
`else
  `define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE \
    burst_size : coverpoint cov_xact.burst_size { \
      bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
      bins burst_size_16bit = {svt_ahb_transaction::BURST_SIZE_16BIT} iff (!cfg.data_width < 16); \
      bins burst_size_32bit = {svt_ahb_transaction::BURST_SIZE_32BIT} iff (!cfg.data_width < 32); \
      bins burst_size_64bit = {svt_ahb_transaction::BURST_SIZE_64BIT} iff (!cfg.data_width < 64); \
      bins burst_size_128bit = {svt_ahb_transaction::BURST_SIZE_128BIT} iff (!cfg.data_width < 128); \
      bins burst_size_256bit = {svt_ahb_transaction::BURST_SIZE_256BIT} iff (!cfg.data_width < 256); \
      bins burst_size_512bit = {svt_ahb_transaction::BURST_SIZE_512BIT} iff (!cfg.data_width < 512); \
      bins burst_size_1024bit = {svt_ahb_transaction::BURST_SIZE_1024BIT} iff (!cfg.data_width < 1024); \
     }
  `endif

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT0_TYPE \
  prot0_type : coverpoint cov_xact.prot0_type { \
    bins opcode_fetch = {svt_ahb_transaction::OPCODE_FETCH}; \
    bins data_access  = {svt_ahb_transaction::DATA_ACCESS}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT1_TYPE \
  prot1_type : coverpoint cov_xact.prot1_type { \
    bins user_access = {svt_ahb_transaction::USER_ACCESS}; \
    bins privilidged_access  = {svt_ahb_transaction::PRIVILEDGED_ACCESS}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT2_TYPE \
  prot2_type : coverpoint cov_xact.prot2_type { \
    bins non_bufferable = {svt_ahb_transaction::NON_BUFFERABLE}; \
    bins bufferable  = {svt_ahb_transaction::BUFFERABLE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT3_TYPE \
  prot3_type : coverpoint cov_xact.prot3_type { \
    bins non_cacheable = {svt_ahb_transaction::NON_CACHEABLE}; \
    bins cacheable = {svt_ahb_transaction::CACHEABLE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT3_EX_TYPE \
  prot3_ex_type : coverpoint cov_xact.prot3_ex_type { \
    bins non_modifiable = {svt_ahb_transaction::NON_MODIFIABLE}; \
    bins modifiable = {svt_ahb_transaction::MODIFIABLE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT4_EX_TYPE \
  prot4_ex_type : coverpoint cov_xact.prot4_ex_type { \
    bins no_lookup = {svt_ahb_transaction::NO_LOOKUP}; \
    bins lookup  = {svt_ahb_transaction::LOOKUP}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT5_EX_TYPE \
  prot5_ex_type : coverpoint cov_xact.prot5_ex_type { \
    bins no_allocate = {svt_ahb_transaction::NO_ALLOCATE}; \
    bins allocate  = {svt_ahb_transaction::ALLOCATE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT6_EX_TYPE \
  prot6_ex_type : coverpoint cov_xact.prot6_ex_type { \
    bins non_shareable = {svt_ahb_transaction::NON_SHAREABLE}; \
    bins shareable  = {svt_ahb_transaction::SHAREABLE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_NONSEC_TRANS \
  nonsec_trans : coverpoint cov_xact.nonsec_trans { \
    bins secure_transfer = {svt_ahb_transaction::SECURE_TRANSFER}; \
    bins nonsecure_transfer = {svt_ahb_transaction::NONSECURE_TRANSFER}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_EXCEPTIONS \
  ahb_exceptions : coverpoint cov_xact.exceptions \
  }

/*This Macro is used to create coverpoints for the hmaster
 *It creates bins based on the num_masters specified
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HMASTER \
  hmaster : coverpoint cov_hmaster { \
    bins cov_hmaster[] = {[0 : (cfg.sys_cfg.num_masters)-1]}; \
  }

/*This macro is used to create coverpoints for hready_in 
 *It creates bins based on the values hready_in can take
*/

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HREADY_IN \
   hready_in : coverpoint cov_hready_in{ \
     bins low = {0}; \
     bins high = {1}; \
   }


/* THIS MACRO IS USED TO CREATE COVERPOINT STO SAMPLE AHB FULL RESPONSE TYPE
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE  \
  response_type : coverpoint cov_response_type { \
    bins okay_resp = {svt_ahb_transaction::OKAY}; \
    bins error_resp = {svt_ahb_transaction::ERROR}; \
    bins retry_resp = {svt_ahb_transaction::RETRY}; \
    bins split_resp = {svt_ahb_transaction::SPLIT}; \
  }

/*THIS MACRO IS USED TO CREATE COVERPOINTS TO SAMPLE AHB_LITE RESPONSE TYPE
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE_AHB_LITE \
  response_type : coverpoint cov_response_type { \
    bins okay_resp = {svt_ahb_transaction::OKAY}; \
    bins error_resp = {svt_ahb_transaction::ERROR}; \
  }


  
/*This macro is used to create coverpoints to sample the response transistion between consecutive beats
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE \
  hresp_transistion : coverpoint cov_hresp_transistion_type { \
   bins okay_okay = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::OKAY} ); \
   bins okay_error = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::ERROR} ) ; \
   bins okay_split = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::SPLIT} ); \
   bins okay_retry = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::RETRY} ) ; \
   bins error_okay = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::OKAY} ); \
   bins error_error = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::ERROR} ) ; \
   bins error_split = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::SPLIT} ); \
   bins error_retry = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::RETRY} ); \
   bins split_okay = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::OKAY} ); \
   bins split_error = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::ERROR} ); \
   bins split_split = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::SPLIT} ) ; \
   bins split_retry = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::RETRY} ); \
   bins retry_okay = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::OKAY} ); \
   bins retry_error = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::ERROR} ) ; \
   bins retry_split  = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::SPLIT} ) ; \
   bins retry_retry = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::RETRY} ); \
 }

/*This macro is used to create coverpoints to cover the transistion of hresp for ahb lite
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_AHB_LITE \
  hresp_transistion : coverpoint cov_hresp_transistion_type { \
   bins okay_okay = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::OKAY} ); \
   bins okay_error = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::ERROR} ) ; \
   bins error_okay = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::OKAY} ); \
   bins error_error = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::ERROR} ) ; \
 }

/*This macro is used to create coverpoints to cover transistion of hresp for ahb full on abort on error
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_ABORT_ON_ERROR_AHB_FULL \
  hresp_transistion : coverpoint cov_hresp_transistion_type { \
   bins okay_okay = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::OKAY} ); \
   bins okay_error = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::ERROR} ) ; \
   bins okay_split = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::SPLIT} ); \
   bins okay_retry = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::RETRY} ) ; \
   bins split_okay = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::OKAY} ); \
   bins split_error = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::ERROR} ); \
   bins split_split = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::SPLIT} ) ; \
   bins split_retry = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::RETRY} ); \
   bins retry_okay = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::OKAY} ); \
   bins retry_error = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::ERROR} ) ; \
   bins retry_split  = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::SPLIT} ) ; \
   bins retry_retry = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::RETRY} ); \
 }

/*This macro is used to create coverpoints to cover transistion of hresp for ahb lite on abort on error
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_ABORT_ON_ERROR_AHB_LITE \
  hresp_transistion : coverpoint cov_hresp_transistion_type { \
   bins okay_okay = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::OKAY} ); \
   bins okay_error = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::ERROR} ) ; \
 }


/*This Macro is used to create coverpoint and bins for the htrans_transitions
 *It takes 2 argunments
 * 1) "h_write" to specify the xact_type (0- READ, 1- WRITE)
 *     It is to create transition bins based on the xact type
 * 2) "type" to specify the cover point name based on the xact type
 *     It can be write_xact, write_xact_hready, read_xact and read_xact_hready
 *
 * The calling macro has to provide these information based on its requirement
 */ 

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(h_write, type) \
   htrans_transition : coverpoint cov_htrans_transition_``type { \
    bins nseq_nseq = (3'b10``h_write => 3'b10``h_write); \
    bins nseq_seq  = (3'b10``h_write => 3'b11``h_write); \
    bins seq_seq   = (3'b11``h_write => 3'b11``h_write); \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HBURST_TRANSITION \
  hburst_transition : coverpoint cov_hburst_transition_type { \
    bins single_rd_single_rd = (4'b0000 => 4'b0000); \
    bins single_rd_single_wr = (4'b0000 => 4'b0001); \
    bins single_rd_incr_rd   = (4'b0000 => 4'b0010); \
    bins single_rd_incr_wr   = (4'b0000 => 4'b0011); \
    bins single_rd_wrap4_rd  = (4'b0000 => 4'b0100); \
    bins single_rd_wrap4_wr  = (4'b0000 => 4'b0101); \
    bins single_rd_incr4_rd  = (4'b0000 => 4'b0110); \
    bins single_rd_incr4_wr  = (4'b0000 => 4'b0111); \
    bins single_rd_wrap8_rd  = (4'b0000 => 4'b1000); \
    bins single_rd_wrap8_wr  = (4'b0000 => 4'b1001); \
    bins single_rd_incr8_rd  = (4'b0000 => 4'b1010); \
    bins single_rd_incr8_wr  = (4'b0000 => 4'b1011); \
    bins single_rd_wrap16_rd = (4'b0000 => 4'b1100); \
    bins single_rd_wrap16_wr = (4'b0000 => 4'b1101); \
    bins single_rd_incr16_rd = (4'b0000 => 4'b1110); \
    bins single_rd_incr16_wr = (4'b0000 => 4'b1111); \
    bins single_wr_single_rd = (4'b0001 => 4'b0000); \
    bins single_wr_single_wr = (4'b0001 => 4'b0001); \
    bins single_wr_incr_rd   = (4'b0001 => 4'b0010); \
    bins single_wr_incr_wr   = (4'b0001 => 4'b0011); \
    bins single_wr_wrap4_rd  = (4'b0001 => 4'b0100); \
    bins single_wr_wrap4_wr  = (4'b0001 => 4'b0101); \
    bins single_wr_incr4_rd  = (4'b0001 => 4'b0110); \
    bins single_wr_incr4_wr  = (4'b0001 => 4'b0111); \
    bins single_wr_wrap8_rd  = (4'b0001 => 4'b1000); \
    bins single_wr_wrap8_wr  = (4'b0001 => 4'b1001); \
    bins single_wr_incr8_rd  = (4'b0001 => 4'b1010); \
    bins single_wr_incr8_wr  = (4'b0001 => 4'b1011); \
    bins single_wr_wrap16_rd = (4'b0001 => 4'b1100); \
    bins single_wr_wrap16_wr = (4'b0001 => 4'b1101); \
    bins single_wr_incr16_rd = (4'b0001 => 4'b1110); \
    bins single_wr_incr16_wr = (4'b0001 => 4'b1111); \
    bins incr_rd_single_rd   = (4'b0010 => 4'b0000); \
    bins incr_rd_single_wr   = (4'b0010 => 4'b0001); \
    bins incr_rd_incr_rd     = (4'b0010 => 4'b0010); \
    bins incr_rd_incr_wr     = (4'b0010 => 4'b0011); \
    bins incr_rd_wrap4_rd    = (4'b0010 => 4'b0100); \
    bins incr_rd_wrap4_wr    = (4'b0010 => 4'b0101); \
    bins incr_rd_incr4_rd    = (4'b0010 => 4'b0110); \
    bins incr_rd_incr4_wr    = (4'b0010 => 4'b0111); \
    bins incr_rd_wrap8_rd    = (4'b0010 => 4'b1000); \
    bins incr_rd_wrap8_wr    = (4'b0010 => 4'b1001); \
    bins incr_rd_incr8_rd    = (4'b0010 => 4'b1010); \
    bins incr_rd_incr8_wr    = (4'b0010 => 4'b1011); \
    bins incr_rd_wrap16_rd   = (4'b0010 => 4'b1100); \
    bins incr_rd_wrap16_wr   = (4'b0010 => 4'b1101); \
    bins incr_rd_incr16_rd   = (4'b0010 => 4'b1110); \
    bins incr_rd_incr16_wr   = (4'b0010 => 4'b1111); \
    bins incr_wr_single_rd   = (4'b0011 => 4'b0000); \
    bins incr_wr_single_wr   = (4'b0011 => 4'b0001); \
    bins incr_wr_incr_rd     = (4'b0011 => 4'b0010); \
    bins incr_wr_incr_wr     = (4'b0011 => 4'b0011); \
    bins incr_wr_wrap4_rd    = (4'b0011 => 4'b0100); \
    bins incr_wr_wrap4_wr    = (4'b0011 => 4'b0101); \
    bins incr_wr_incr4_rd    = (4'b0011 => 4'b0110); \
    bins incr_wr_incr4_wr    = (4'b0011 => 4'b0111); \
    bins incr_wr_wrap8_rd    = (4'b0011 => 4'b1000); \
    bins incr_wr_wrap8_wr    = (4'b0011 => 4'b1001); \
    bins incr_wr_incr8_rd    = (4'b0011 => 4'b1010); \
    bins incr_wr_incr8_wr    = (4'b0011 => 4'b1011); \
    bins incr_wr_wrap16_rd   = (4'b0011 => 4'b1100); \
    bins incr_wr_wrap16_wr   = (4'b0011 => 4'b1101); \
    bins incr_wr_incr16_rd   = (4'b0011 => 4'b1110); \
    bins incr_wr_incr16_wr   = (4'b0011 => 4'b1111); \
    bins wrap4_rd_single_rd  = (4'b0100 => 4'b0000); \
    bins wrap4_rd_single_wr  = (4'b0100 => 4'b0001); \
    bins wrap4_rd_incr_rd    = (4'b0100 => 4'b0010); \
    bins wrap4_rd_incr_wr    = (4'b0100 => 4'b0011); \
    bins wrap4_rd_wrap4_rd   = (4'b0100 => 4'b0100); \
    bins wrap4_rd_wrap4_wr   = (4'b0100 => 4'b0101); \
    bins wrap4_rd_incr4_rd   = (4'b0100 => 4'b0110); \
    bins wrap4_rd_incr4_wr   = (4'b0100 => 4'b0111); \
    bins wrap4_rd_wrap8_rd   = (4'b0100 => 4'b1000); \
    bins wrap4_rd_wrap8_wr   = (4'b0100 => 4'b1001); \
    bins wrap4_rd_incr8_rd   = (4'b0100 => 4'b1010); \
    bins wrap4_rd_incr8_wr   = (4'b0100 => 4'b1011); \
    bins wrap4_rd_wrap16_rd  = (4'b0100 => 4'b1100); \
    bins wrap4_rd_wrap16_wr  = (4'b0100 => 4'b1101); \
    bins wrap4_rd_incr16_rd  = (4'b0100 => 4'b1110); \
    bins wrap4_rd_incr16_wr  = (4'b0100 => 4'b1111); \
    bins wrap4_wr_single_rd  = (4'b0101 => 4'b0000); \
    bins wrap4_wr_single_wr  = (4'b0101 => 4'b0001); \
    bins wrap4_wr_incr_rd    = (4'b0101 => 4'b0010); \
    bins wrap4_wr_incr_wr    = (4'b0101 => 4'b0011); \
    bins wrap4_wr_wrap4_rd   = (4'b0101 => 4'b0100); \
    bins wrap4_wr_wrap4_wr   = (4'b0101 => 4'b0101); \
    bins wrap4_wr_incr4_rd   = (4'b0101 => 4'b0110); \
    bins wrap4_wr_incr4_wr   = (4'b0101 => 4'b0111); \
    bins wrap4_wr_wrap8_rd   = (4'b0101 => 4'b1000); \
    bins wrap4_wr_wrap8_wr   = (4'b0101 => 4'b1001); \
    bins wrap4_wr_incr8_rd   = (4'b0101 => 4'b1010); \
    bins wrap4_wr_incr8_wr   = (4'b0101 => 4'b1011); \
    bins wrap4_wr_wrap16_rd  = (4'b0101 => 4'b1100); \
    bins wrap4_wr_wrap16_wr  = (4'b0101 => 4'b1101); \
    bins wrap4_wr_incr16_rd  = (4'b0101 => 4'b1110); \
    bins wrap4_wr_incr16_wr  = (4'b0101 => 4'b1111); \
    bins incr4_rd_single_rd  = (4'b0110 => 4'b0000); \
    bins incr4_rd_single_wr  = (4'b0110 => 4'b0001); \
    bins incr4_rd_incr_rd    = (4'b0110 => 4'b0010); \
    bins incr4_rd_incr_wr    = (4'b0110 => 4'b0011); \
    bins incr4_rd_wrap4_rd   = (4'b0110 => 4'b0100); \
    bins incr4_rd_wrap4_wr   = (4'b0110 => 4'b0101); \
    bins incr4_rd_incr4_rd   = (4'b0110 => 4'b0110); \
    bins incr4_rd_incr4_wr   = (4'b0110 => 4'b0111); \
    bins incr4_rd_wrap8_rd   = (4'b0110 => 4'b1000); \
    bins incr4_rd_wrap8_wr   = (4'b0110 => 4'b1001); \
    bins incr4_rd_incr8_rd   = (4'b0110 => 4'b1010); \
    bins incr4_rd_incr8_wr   = (4'b0110 => 4'b1011); \
    bins incr4_rd_wrap16_rd  = (4'b0110 => 4'b1100); \
    bins incr4_rd_wrap16_wr  = (4'b0110 => 4'b1101); \
    bins incr4_rd_incr16_rd  = (4'b0110 => 4'b1110); \
    bins incr4_rd_incr16_wr  = (4'b0110 => 4'b1111); \
    bins incr4_wr_single_rd  = (4'b0111 => 4'b0000); \
    bins incr4_wr_single_wr  = (4'b0111 => 4'b0001); \
    bins incr4_wr_incr_rd    = (4'b0111 => 4'b0010); \
    bins incr4_wr_incr_wr    = (4'b0111 => 4'b0011); \
    bins incr4_wr_wrap4_rd   = (4'b0111 => 4'b0100); \
    bins incr4_wr_wrap4_wr   = (4'b0111 => 4'b0101); \
    bins incr4_wr_incr4_rd   = (4'b0111 => 4'b0110); \
    bins incr4_wr_incr4_wr   = (4'b0111 => 4'b0111); \
    bins incr4_wr_wrap8_rd   = (4'b0111 => 4'b1000); \
    bins incr4_wr_wrap8_wr   = (4'b0111 => 4'b1001); \
    bins incr4_wr_incr8_rd   = (4'b0111 => 4'b1010); \
    bins incr4_wr_incr8_wr   = (4'b0111 => 4'b1011); \
    bins incr4_wr_wrap16_rd  = (4'b0111 => 4'b1100); \
    bins incr4_wr_wrap16_wr  = (4'b0111 => 4'b1101); \
    bins incr4_wr_incr16_rd  = (4'b0111 => 4'b1110); \
    bins incr4_wr_incr16_wr  = (4'b0111 => 4'b1111); \
    bins wrap8_rd_single_rd  = (4'b1000 => 4'b0000); \
    bins wrap8_rd_single_wr  = (4'b1000 => 4'b0001); \
    bins wrap8_rd_incr_rd    = (4'b1000 => 4'b0010); \
    bins wrap8_rd_incr_wr    = (4'b1000 => 4'b0011); \
    bins wrap8_rd_wrap4_rd   = (4'b1000 => 4'b0100); \
    bins wrap8_rd_wrap4_wr   = (4'b1000 => 4'b0101); \
    bins wrap8_rd_incr4_rd   = (4'b1000 => 4'b0110); \
    bins wrap8_rd_incr4_wr   = (4'b1000 => 4'b0111); \
    bins wrap8_rd_wrap8_rd   = (4'b1000 => 4'b1000); \
    bins wrap8_rd_wrap8_wr   = (4'b1000 => 4'b1001); \
    bins wrap8_rd_incr8_rd   = (4'b1000 => 4'b1010); \
    bins wrap8_rd_incr8_wr   = (4'b1000 => 4'b1011); \
    bins wrap8_rd_wrap16_rd  = (4'b1000 => 4'b1100); \
    bins wrap8_rd_wrap16_wr  = (4'b1000 => 4'b1101); \
    bins wrap8_rd_incr16_rd  = (4'b1000 => 4'b1110); \
    bins wrap8_rd_incr16_wr  = (4'b1000 => 4'b1111); \
    bins wrap8_wr_single_rd  = (4'b1001 => 4'b0000); \
    bins wrap8_wr_single_wr  = (4'b1001 => 4'b0001); \
    bins wrap8_wr_incr_rd    = (4'b1001 => 4'b0010); \
    bins wrap8_wr_incr_wr    = (4'b1001 => 4'b0011); \
    bins wrap8_wr_wrap4_rd   = (4'b1001 => 4'b0100); \
    bins wrap8_wr_wrap4_wr   = (4'b1001 => 4'b0101); \
    bins wrap8_wr_incr4_rd   = (4'b1001 => 4'b0110); \
    bins wrap8_wr_incr4_wr   = (4'b1001 => 4'b0111); \
    bins wrap8_wr_wrap8_rd   = (4'b1001 => 4'b1000); \
    bins wrap8_wr_wrap8_wr   = (4'b1001 => 4'b1001); \
    bins wrap8_wr_incr8_rd   = (4'b1001 => 4'b1010); \
    bins wrap8_wr_incr8_wr   = (4'b1001 => 4'b1011); \
    bins wrap8_wr_wrap16_rd  = (4'b1001 => 4'b1100); \
    bins wrap8_wr_wrap16_wr  = (4'b1001 => 4'b1101); \
    bins wrap8_wr_incr16_rd  = (4'b1001 => 4'b1110); \
    bins wrap8_wr_incr16_wr  = (4'b1001 => 4'b1111); \
    bins incr8_rd_single_rd  = (4'b1010 => 4'b0000); \
    bins incr8_rd_single_wr  = (4'b1010 => 4'b0001); \
    bins incr8_rd_incr_rd    = (4'b1010 => 4'b0010); \
    bins incr8_rd_incr_wr    = (4'b1010 => 4'b0011); \
    bins incr8_rd_wrap4_rd   = (4'b1010 => 4'b0100); \
    bins incr8_rd_wrap4_wr   = (4'b1010 => 4'b0101); \
    bins incr8_rd_incr4_rd   = (4'b1010 => 4'b0110); \
    bins incr8_rd_incr4_wr   = (4'b1010 => 4'b0111); \
    bins incr8_rd_wrap8_rd   = (4'b1010 => 4'b1000); \
    bins incr8_rd_wrap8_wr   = (4'b1010 => 4'b1001); \
    bins incr8_rd_incr8_rd   = (4'b1010 => 4'b1010); \
    bins incr8_rd_incr8_wr   = (4'b1010 => 4'b1011); \
    bins incr8_rd_wrap16_rd  = (4'b1010 => 4'b1100); \
    bins incr8_rd_wrap16_wr  = (4'b1010 => 4'b1101); \
    bins incr8_rd_incr16_rd  = (4'b1010 => 4'b1110); \
    bins incr8_rd_incr16_wr  = (4'b1010 => 4'b1111); \
    bins incr8_wr_single_rd  = (4'b1011 => 4'b0000); \
    bins incr8_wr_single_wr  = (4'b1011 => 4'b0001); \
    bins incr8_wr_incr_rd    = (4'b1011 => 4'b0010); \
    bins incr8_wr_incr_wr    = (4'b1011 => 4'b0011); \
    bins incr8_wr_wrap4_rd   = (4'b1011 => 4'b0100); \
    bins incr8_wr_wrap4_wr   = (4'b1011 => 4'b0101); \
    bins incr8_wr_incr4_rd   = (4'b1011 => 4'b0110); \
    bins incr8_wr_incr4_wr   = (4'b1011 => 4'b0111); \
    bins incr8_wr_wrap8_rd   = (4'b1011 => 4'b1000); \
    bins incr8_wr_wrap8_wr   = (4'b1011 => 4'b1001); \
    bins incr8_wr_incr8_rd   = (4'b1011 => 4'b1010); \
    bins incr8_wr_incr8_wr   = (4'b1011 => 4'b1011); \
    bins incr8_wr_wrap16_rd  = (4'b1011 => 4'b1100); \
    bins incr8_wr_wrap16_wr  = (4'b1011 => 4'b1101); \
    bins incr8_wr_incr16_rd  = (4'b1011 => 4'b1110); \
    bins incr8_wr_incr16_wr  = (4'b1011 => 4'b1111); \
    bins wrap16_rd_single_rd = (4'b1100 => 4'b0000); \
    bins wrap16_rd_single_wr = (4'b1100 => 4'b0001); \
    bins wrap16_rd_incr_rd   = (4'b1100 => 4'b0010); \
    bins wrap16_rd_incr_wr   = (4'b1100 => 4'b0011); \
    bins wrap16_rd_wrap4_rd  = (4'b1100 => 4'b0100); \
    bins wrap16_rd_wrap4_wr  = (4'b1100 => 4'b0101); \
    bins wrap16_rd_incr4_rd  = (4'b1100 => 4'b0110); \
    bins wrap16_rd_incr4_wr  = (4'b1100 => 4'b0111); \
    bins wrap16_rd_wrap8_rd  = (4'b1100 => 4'b1000); \
    bins wrap16_rd_wrap8_wr  = (4'b1100 => 4'b1001); \
    bins wrap16_rd_incr8_rd  = (4'b1100 => 4'b1010); \
    bins wrap16_rd_incr8_wr  = (4'b1100 => 4'b1011); \
    bins wrap16_rd_wrap16_rd = (4'b1100 => 4'b1100); \
    bins wrap16_rd_wrap16_wr = (4'b1100 => 4'b1101); \
    bins wrap16_rd_incr16_rd = (4'b1100 => 4'b1110); \
    bins wrap16_rd_incr16_wr = (4'b1100 => 4'b1111); \
    bins wrap16_wr_single_rd = (4'b1101 => 4'b0000); \
    bins wrap16_wr_single_wr = (4'b1101 => 4'b0001); \
    bins wrap16_wr_incr_rd   = (4'b1101 => 4'b0010); \
    bins wrap16_wr_incr_wr   = (4'b1101 => 4'b0011); \
    bins wrap16_wr_wrap4_rd  = (4'b1101 => 4'b0100); \
    bins wrap16_wr_wrap4_wr  = (4'b1101 => 4'b0101); \
    bins wrap16_wr_incr4_rd  = (4'b1101 => 4'b0110); \
    bins wrap16_wr_incr4_wr  = (4'b1101 => 4'b0111); \
    bins wrap16_wr_wrap8_rd  = (4'b1101 => 4'b1000); \
    bins wrap16_wr_wrap8_wr  = (4'b1101 => 4'b1001); \
    bins wrap16_wr_incr8_rd  = (4'b1101 => 4'b1010); \
    bins wrap16_wr_incr8_wr  = (4'b1101 => 4'b1011); \
    bins wrap16_wr_wrap16_rd = (4'b1101 => 4'b1100); \
    bins wrap16_wr_wrap16_wr = (4'b1101 => 4'b1101); \
    bins wrap16_wr_incr16_rd = (4'b1101 => 4'b1110); \
    bins wrap16_wr_incr16_wr = (4'b1101 => 4'b1111); \
    bins incr16_rd_single_rd = (4'b1110 => 4'b0000); \
    bins incr16_rd_single_wr = (4'b1110 => 4'b0001); \
    bins incr16_rd_incr_rd   = (4'b1110 => 4'b0010); \
    bins incr16_rd_incr_wr   = (4'b1110 => 4'b0011); \
    bins incr16_rd_wrap4_rd  = (4'b1110 => 4'b0100); \
    bins incr16_rd_wrap4_wr  = (4'b1110 => 4'b0101); \
    bins incr16_rd_incr4_rd  = (4'b1110 => 4'b0110); \
    bins incr16_rd_incr4_wr  = (4'b1110 => 4'b0111); \
    bins incr16_rd_wrap8_rd  = (4'b1110 => 4'b1000); \
    bins incr16_rd_wrap8_wr  = (4'b1110 => 4'b1001); \
    bins incr16_rd_incr8_rd  = (4'b1110 => 4'b1010); \
    bins incr16_rd_incr8_wr  = (4'b1110 => 4'b1011); \
    bins incr16_rd_wrap16_rd = (4'b1110 => 4'b1100); \
    bins incr16_rd_wrap16_wr = (4'b1110 => 4'b1101); \
    bins incr16_rd_incr16_rd = (4'b1110 => 4'b1110); \
    bins incr16_rd_incr16_wr = (4'b1110 => 4'b1111); \
    bins incr16_wr_single_rd = (4'b1111 => 4'b0000); \
    bins incr16_wr_single_wr = (4'b1111 => 4'b0001); \
    bins incr16_wr_incr_rd   = (4'b1111 => 4'b0010); \
    bins incr16_wr_incr_wr   = (4'b1111 => 4'b0011); \
    bins incr16_wr_wrap4_rd  = (4'b1111 => 4'b0100); \
    bins incr16_wr_wrap4_wr  = (4'b1111 => 4'b0101); \
    bins incr16_wr_incr4_rd  = (4'b1111 => 4'b0110); \
    bins incr16_wr_incr4_wr  = (4'b1111 => 4'b0111); \
    bins incr16_wr_wrap8_rd  = (4'b1111 => 4'b1000); \
    bins incr16_wr_wrap8_wr  = (4'b1111 => 4'b1001); \
    bins incr16_wr_incr8_rd  = (4'b1111 => 4'b1010); \
    bins incr16_wr_incr8_wr  = (4'b1111 => 4'b1011); \
    bins incr16_wr_wrap16_rd = (4'b1111 => 4'b1100); \
    bins incr16_wr_wrap16_wr = (4'b1111 => 4'b1101); \
    bins incr16_wr_incr16_rd = (4'b1111 => 4'b1110); \
    bins incr16_wr_incr16_wr = (4'b1111 => 4'b1111); \
  }

//======================================================================
// Signal level coverage macros 
//====================================================================== 

/**
 *  Macro consists covergroup having single bit as coverpoint and declaration of
 *  transition bins of single bit signal
 */
  //covergroup toggle_cov @(sample_event); \
  /** Removed the sampling enevt as it will call the sample*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CREATE_CG \
  covergroup toggle_cov ;\
    option.per_instance = 1; \
    option.goal = 100; \
    coverpoint signal_index { \
      bins toggle_bit_0to1 = (0 => 1); \
      bins toggle_bit_1to0 = (1 => 0); \
    } \
  endgroup
/**
 * Macro to give group name by appending signal name and bit index (e.g.
 * signal_toggle_awid_0) for ease of reading coverage report  
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TOGGLE_COV_SIGNAME_TO_GRP_NAME(signal_name, bitindex) \
   $sformatf("%0s_signal_toggle_%0s_bit%0d", cfg.inst, `SVT_DATA_UTIL_ARG_TO_STRING(signal_name), bitindex)
/**
 *  Macro used by variable width AHB,4,Lite signal instaces to trigger the
 *  local event and triggering coverage group.
 */    
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_COVER_SAMPLE_SIGNAL(signal_name) \
  foreach (signal_name``_toggle_cov[i]) begin \
    signal_name``_toggle_cov[i].bit_cov(ahb_monitor_mp.ahb_monitor_cb.signal_name[i]); \
  end 
/**
 *  Macro used by variable width AHB,4,Lite single bit signals to trigger the
 *  local event and triggering coverage group.
 */    
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_COVER_SAMPLE_SIGNAL_BIT(signal_name) \
  foreach (signal_name``_toggle_cov[i]) begin \
    signal_name``_toggle_cov[i].bit_cov(ahb_monitor_mp.ahb_monitor_cb.signal_name); \
  end 
/**
 * Macro used to create number of instances as per the respective width of the
 * signal 
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CREATE_REQ_INSTANCES(signal_name, signal_width, signal_enable) \
 if(signal_enable) begin \
  signal_name``_toggle_cov = new[signal_width]; \
  for (int i=0; i < signal_width; i++) begin \
    string s_inst_name = `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TOGGLE_COV_SIGNAME_TO_GRP_NAME(signal_name, i); \
    svt_toggle_cov_bit toggle_bit_inst = new(); \
    toggle_bit_inst.toggle_cov_bit.set_inst_name(s_inst_name); \
    signal_name``_toggle_cov[i] = toggle_bit_inst; \
  end \
 end \
 else begin \
 end
 /**
 * Macro used to create number of instances as per the respective width of the
 * signal 
 */
`define SVT_AHB_MASTER_MONITOR_DEF_COV_UTIL_CREATE_REQ_INSTANCES(signal_name, signal_width, signal_enable) \
 if(signal_enable) begin \
  signal_name``_toggle_cov = new[signal_width]; \
  for (int i=0; i < signal_width; i++) begin \
    string s_inst_name = `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TOGGLE_COV_SIGNAME_TO_GRP_NAME(signal_name, i); \
    svt_ahb_master_toggle_bit_cov toggle_bit_inst = new(); \
    toggle_bit_inst.toggle_cov_bit.set_inst_name(s_inst_name); \
    signal_name``_toggle_cov[i] = toggle_bit_inst; \
  end \
 end \
 else begin \
 end
/**
 * Macro used to create number of instances as per the respective width of the
 * signal 
 */
`define SVT_AHB_SLAVE_MONITOR_DEF_COV_UTIL_CREATE_REQ_INSTANCES(signal_name, signal_width, signal_enable) \
 if(signal_enable) begin \
  signal_name``_toggle_cov = new[signal_width]; \
  for (int i=0; i < signal_width; i++) begin \
    string s_inst_name = `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TOGGLE_COV_SIGNAME_TO_GRP_NAME(signal_name, i); \
    svt_ahb_slave_toggle_bit_cov toggle_bit_inst = new(); \
    toggle_bit_inst.toggle_cov_bit.set_inst_name(s_inst_name); \
    signal_name``_toggle_cov[i] = toggle_bit_inst; \
  end \
 end \
 else begin \
 end

/**
 * Macro to declare covergroup template
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
  covergroup signal_state_``signal_name @(sample_event); \
   option.per_instance = 1; \
    option.goal = 100; 
/**
 * Macro to create cross covergroup instances 
 */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(elements_name, sample_event) \
  covergroup trans_cross_ahb_``elements_name @(sample_event); \
   option.per_instance = 1; 
/**
 * Macro to create state covergroup instances 
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SET_STATE_CG_INST_NAME(signal_name) \
   signal_state_``signal_name = new(); \
   s_inst_name = `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_STATE_COV_SIGNAME_TO_GRP_NAME(signal_name); \
   signal_state_``signal_name.set_inst_name(s_inst_name); 
/** 
 * Macro to give cover group name by appending class name for ease of reading of
 * coverage report in case of state coverage
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_STATE_COV_SIGNAME_TO_GRP_NAME(signal_name) \
   $sformatf("%0s_signal_state_%0s", cfg.inst, `SVT_DATA_UTIL_ARG_TO_STRING(signal_name))

/**
 *  Following macros takes protocol signal, it's respective maximum value
 *  defined in *defines.svi and sample event as arguements and defines signal's
 *  min,mid,max bin value ranges in covergroup.
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RANGE_CG(signal_name, signal_max_val, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name``_min_mid_max : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
                { \
                   bins signal_name``_range_min = {0};\
`ifdef SVT_MULTI_SIM_COVPOINT_GREATER_THAN_32_BITS \
  // Need to come up with an alternative \
`else \
                   bins signal_name``_range_mid = {[1:(1024'd2**(signal_max_val)-2)]}; \
                   bins signal_name``_range_max = {((1024'd2**(signal_max_val))-1)}; \
`endif \
                } \
  endgroup

/**
 *  Following macro takes protocol signal related to transfer type (htrans) as arguement and defines
 *  specific bins of interest in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_transaction_trans_idle = {`SVT_AHB_TRANSACTION_TRANS_TYPE_IDLE}; \
       bins svt_ahb_transaction_trans_busy = {`SVT_AHB_TRANSACTION_TRANS_TYPE_BUSY}; \
       bins svt_ahb_transaction_trans_nseq = {`SVT_AHB_TRANSACTION_TRANS_TYPE_NSEQ}; \
       bins svt_ahb_transaction_trans_seq  = {`SVT_AHB_TRANSACTION_TRANS_TYPE_SEQ}; \
   } \
  endgroup
/**
 *  Following macro takes protocol signal related to size as arguement and defines
 *  specific bins of interest in covergroup
 */
`ifdef SVT_AHB_GEN_COV_DATA_WIDTH_32_BIT
  `define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SIZE_CG(signal_name, sample_event) \
 \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_transaction_burst_size_8 =    {`SVT_AHB_TRANSACTION_BURST_SIZE_8}; \
       bins svt_ahb_transaction_burst_size_16 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_16}; \
       bins svt_ahb_transaction_burst_size_32 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_32}; \
       } \
endgroup
`else
  `define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SIZE_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_transaction_burst_size_8 =    {`SVT_AHB_TRANSACTION_BURST_SIZE_8}; \
       bins svt_ahb_transaction_burst_size_16 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_16}; \
       bins svt_ahb_transaction_burst_size_32 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_32}; \
       bins svt_ahb_transaction_burst_size_64 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_64}; \
       bins svt_ahb_transaction_burst_size_128 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_128}; \
       bins svt_ahb_transaction_burst_size_256 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_256}; \
       bins svt_ahb_transaction_burst_size_512 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_512}; \
       bins svt_ahb_transaction_burst_size_1024 = {`SVT_AHB_TRANSACTION_BURST_SIZE_1024}; \
       ignore_bins ignore_burst_size_16 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_16} iff (cfg.data_width < 16); \
       ignore_bins ignore_burst_size_32 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_32} iff (cfg.data_width < 32); \
       ignore_bins ignore_burst_size_64 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_64} iff (cfg.data_width < 64); \
       ignore_bins ignore_burst_size_128 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_128} iff (cfg.data_width < 128); \
       ignore_bins ignore_burst_size_256 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_256} iff (cfg.data_width < 256); \
       ignore_bins ignore_burst_size_512 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_512} iff (cfg.data_width < 512); \
       ignore_bins ignore_burst_size_1024 = {`SVT_AHB_TRANSACTION_BURST_SIZE_1024} iff (cfg.data_width < 1024); \
   } \
  endgroup
  `endif

/**
 *  Following macro takes protocol signal related to burst as arguement and defines
 *  specific bins of interest in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_transaction_burst_single = {`SVT_AHB_TRANSACTION_BURST_TYPE_SINGLE}; \
       bins svt_ahb_transaction_burst_incr  = {`SVT_AHB_TRANSACTION_BURST_TYPE_INCR}; \
       bins svt_ahb_transaction_burst_wrap4  = {`SVT_AHB_TRANSACTION_BURST_TYPE_WRAP4}; \
       bins svt_ahb_transaction_burst_incr4  = {`SVT_AHB_TRANSACTION_BURST_TYPE_INCR4}; \
       bins svt_ahb_transaction_burst_wrap8  = {`SVT_AHB_TRANSACTION_BURST_TYPE_WRAP8}; \
       bins svt_ahb_transaction_burst_incr8  = {`SVT_AHB_TRANSACTION_BURST_TYPE_INCR8}; \
       bins svt_ahb_transaction_burst_wrap16  = {`SVT_AHB_TRANSACTION_BURST_TYPE_WRAP16}; \
       bins svt_ahb_transaction_burst_incr16  = {`SVT_AHB_TRANSACTION_BURST_TYPE_INCR16}; \
   } \
  endgroup
/**
 *  Following macro takes protocol signal related to protection as arguement and defines
 *  specific bins of interest in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_opcode_fetch        = {`SVT_AHB_TRANSACTION_PROT0_TYPE_OPCODE_FETCH}; \
       bins svt_ahb_data_access         = {`SVT_AHB_TRANSACTION_PROT0_TYPE_DATA_ACCESS}; \
       bins svt_ahb_user_access         = {`SVT_AHB_TRANSACTION_PROT1_TYPE_USER_ACCESS}; \
       bins svt_ahb_privilidged_access  = {`SVT_AHB_TRANSACTION_PROT1_TYPE_PRIVILEDGED_ACCESS}; \
       bins svt_ahb_non_bufferable      = {`SVT_AHB_TRANSACTION_PROT2_TYPE_NON_BUFFERABLE}; \
       bins svt_ahb_bufferable          = {`SVT_AHB_TRANSACTION_PROT2_TYPE_BUFFERABLE}; \
       bins svt_ahb_non_cacheable       = {`SVT_AHB_TRANSACTION_PROT3_TYPE_NON_CACHEABLE}; \
       bins svt_ahb_cacheable           = {`SVT_AHB_TRANSACTION_PROT3_TYPE_CACHEABLE}; \
   } \
  endgroup
/**
 *  Following macro takes protocol signal related to response as arguement and defines
 *  specific bins of interest in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESP_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name[1:0] \
   { \
       bins svt_ahb_okay_response  = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_OKAY}; \
       bins svt_ahb_error_response = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_ERROR}; \
       bins svt_ahb_retry_response = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_RETRY}; \
       bins svt_ahb_split_response = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_SPLIT}; \
       ignore_bins ignore_retry_split = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_RETRY, `SVT_AHB_TRANSACTION_RESPONSE_TYPE_SPLIT} iff \
       ((cfg.sys_cfg.ahb_lite == 1)) ; \
   } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst, sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
   ahb_hburst : cross xact_type, burst_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hsize
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HSIZE(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hsize, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE \
    ahb_hburst_hsize : cross xact_type, burst_type, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    ahb_hburst_haddr : cross xact_type, burst_type, addr { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hresp 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HRESP(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hresp, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HRESP \
    ahb_hburst_hresp : cross xact_type, burst_type, cov_response_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr_hsize 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR_HSIZE(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr_hsize, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE \
    ahb_hburst_haddr_hsize : cross xact_type, burst_type, addr, burst_size { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot0 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT0(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot0, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT0_TYPE \
    ahb_hburst_hprot0 : cross xact_type, burst_type, prot0_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot1 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT1(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot1, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT1_TYPE \
    ahb_hburst_hprot1 : cross xact_type, burst_type, prot1_type { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot2 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT2(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot2, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT2_TYPE \
    ahb_hburst_hprot2 : cross xact_type, burst_type, prot2_type { \
      option.weight = 1; \
    } \
  endgroup  
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot3 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT3(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot3, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT3_TYPE \
    ahb_hburst_hprot3 : cross xact_type, burst_type, prot3_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot3_ex 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT3_EX(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot3_ex, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT3_EX_TYPE \
    ahb_hburst_hprot3_ex : cross xact_type, burst_type, prot3_ex_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot4_ex 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT4_EX(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot4_ex, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT4_EX_TYPE \
    ahb_hburst_hprot4_ex : cross xact_type, burst_type, prot4_ex_type { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot5_ex 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT5_EX(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot5_ex, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT5_EX_TYPE \
    ahb_hburst_hprot5_ex : cross xact_type, burst_type, prot5_ex_type { \
      option.weight = 1; \
    } \
  endgroup  
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot6_ex 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT6_EX(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot6_ex, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT6_EX_TYPE \
    ahb_hburst_hprot6_ex : cross xact_type, burst_type, prot6_ex_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hnonsec 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HNONSEC(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hnonsec, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_NONSEC_TRANS \
    ahb_hburst_hnonsec : cross xact_type, burst_type, nonsec_trans { \
      option.weight = 1; \
    } \
  endgroup  

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    ahb_hburst_hlock : cross xact_type, burst_type, lock { \
      option.weight = 1; \
    } \
  endgroup  

  /**
   * Macro to create covergroup: trans_cross_ahb_page_boundary_size 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_PAGE_BOUNDARY_SIZE(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(page_boundary_size, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
    ahb_page_boundary_size : cross xact_type, addr_page_boundary, burst_size { \
      option.weight = 1; \
      ignore_bins addr_page_boundary_end_burst_size = \
      binsof(addr_page_boundary) intersect {[1020:1023]} && \
      binsof(burst_size) intersect { \
      svt_ahb_transaction::BURST_SIZE_64BIT,svt_ahb_transaction::BURST_SIZE_128BIT, \
      svt_ahb_transaction::BURST_SIZE_256BIT,svt_ahb_transaction::BURST_SIZE_512BIT, \
      svt_ahb_transaction::BURST_SIZE_1024BIT}; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_size_addr_align 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_SIZE_ADDR_ALIGN(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(size_addr_align, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SIZE_ADDR_ALIGNMENT \
    ahb_size_addr_align : cross xact_type, burst_size_addr_alignment { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_burst_incr_number_of_beats 
   */


`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_BURST_INCR_NUM_BEATS(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(burst_incr_number_of_beats, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE_NUM_INCR_BEAT \
    ahb_burst_incr_number_of_beats : cross xact_type, burst_incr_number_of_beats { \
      option.weight = 1; \
      bins rd_wr_incr_number_of_beats = \
      binsof(xact_type) && binsof(burst_incr_number_of_beats);  \
    } \
  endgroup



  /**
   * Macro to create covergroup: trans_cross_ahb_num_busy_cycles 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_XACT_NUM_BUSY_CYCLES(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(num_busy_cycles, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_BUSY_CYCLES_PER_BEAT \
    ahb_num_busy_cycles: cross xact_type, num_busy_cycles_per_beat{ \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_num_wait_cycles
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_XACT_NUM_WAIT_CYCLES(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(num_wait_cycles, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_WAIT_CYCLES_PER_BEAT \
    ahb_num_wait_cycles: cross xact_type, num_wait_cycles_per_beat{ \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_num_wait_cycles
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_NUM_WAIT_CYCLES(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_num_wait_cycles, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_WAIT_CYCLES_PER_BEAT \
    ahb_hburst_num_wait_cycles: cross xact_type, burst_type, num_wait_cycles_per_beat{ \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock_hsize
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK_HSIZE(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock_hsize, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE \
    ahb_hburst_hlock_hsize: cross xact_type,burst_type,lock,burst_size{ \
      option.weight = 1; \
    } \
  endgroup  
  
  /**
   * Macro to create covergroup: trans_cross_ahb_burst_wrapped_addr_boundary 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_BURST_WRAPPED_ADDR_BOUNDARY(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(burst_wrapped_addr_boundary, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_WRAPPED_ADDR_BOUNDARY \
    ahb_burst_wrapped_addr_boundary : cross xact_type, burst_wrapped_addr_boundary { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_burst_with_busy
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_BURST_WITH_BUSY(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(burst_with_busy, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE \
    ahb_burst_with_busy : cross xact_type, burst_type, trans_type { \
      option.weight = 1; \
      ignore_bins ahb_single_burst = \
      binsof(burst_type) intersect {svt_ahb_transaction::SINGLE}; \
      ignore_bins ahb_non_busy_trans_type = binsof(trans_type) intersect { \
      svt_ahb_transaction::NSEQ,svt_ahb_transaction::SEQ, \
      svt_ahb_transaction::IDLE}; \
    } \
  endgroup

/**
   * Macro to create covergroup: trans_cross_ahb_htrans_xact 
   */
`ifndef SVT_AHB_GEN_IDLE_BIN
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HTRANS_XACT(sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(htrans_xact, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE_IDLE_EXCLUDED \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    ahb_htrans_xact : cross trans_type, xact_type { \
      option.weight = 1; \
    } \
  endgroup 
`else
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HTRANS_XACT(sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(htrans_xact, sample_event) 
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    ahb_htrans_xact : cross trans_type, xact_type { \
      option.weight = 1; \
    } \
  endgroup
`endif
   
/**
   * Macro to create covergroup: trans_ahb_hmaster 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HMASTER(sample_event) \
  covergroup trans_ahb_hmaster @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HMASTER \
  endgroup

/**
   * Macro to create covergroup:trans_ahb_hready_in_when_hsel_high
   */
 `define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HREADY_IN_WHEN_HSEL_HIGH(sample_event) \
 covergroup trans_ahb_hready_in_when_hsel_high @(sample_event); \
    option.per_instance = 1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HREADY_IN \
  endgroup


/**
   * MACRO TO CREATE COVERGROUP FOR FIRST BEAT OF A TRANSACTION AHB FULLL MODE
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HRESP_FIRST_BEAT(sample_event) \
 covergroup trans_ahb_hresp_first_beat @(sample_event); \
    option.per_instance = 1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE \
  endgroup

/**
   * MACRO TO CREATE COVERGRPUP TO SAMPLE RESPONSE TYOE FOR FIRST BEAT OF TRANSACTION FOR AHB LITE MODE
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HRESP_FIRST_BEAT_AHB_LITE(sample_event) \
 covergroup trans_ahb_hresp_first_beat_ahb_lite @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE_AHB_LITE \
  endgroup


/**
   * MACRO to create covergroup to see hresp transistion in single transaction for ahb full
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_BEAT_HRESP_TRANSISTION_CONTINUE_ON_ERROR_AHB_FULL(sample_event) \
 covergroup trans_ahb_beat_hresp_transistion_continue_on_error_ahb_full @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE \
  endgroup

/**
   * MACRO covergroup to see hresp transistion for ahb lite in single transaction for ahb lite
   */ 
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_BEAT_HRESP_TRANSISTION_CONTINUE_ON_ERROR_AHB_LITE(sample_event) \
 covergroup trans_ahb_beat_hresp_transistion_continue_on_error_ahb_lite @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_AHB_LITE \
  endgroup


/**
   * MACRO to create covergroup to see the hresp transistion for abort_on_error in ahb full mode
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_BEAT_HRESP_TRANSISTION_ABORT_ON_ERROR_AHB_FULL(sample_event) \
 covergroup trans_ahb_beat_hresp_transistion_abort_on_error_ahb_full @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_ABORT_ON_ERROR_AHB_FULL \
  endgroup

/**
   * MACRO to create covergroup to see the hresp transistion for abort_on_error in ahb full mode
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_BEAT_HRESP_TRANSISTION_ABORT_ON_ERROR_AHB_LITE(sample_event) \
 covergroup trans_ahb_beat_hresp_transistion_abort_on_error_ahb_lite @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_ABORT_ON_ERROR_AHB_LITE \
  endgroup

/**
   * MACRO to create covergroup to see the hresp transistionfrom idle to nseq
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_IDLE_TO_NSEQ_HREADY_LOW(sample_event) \
 covergroup trans_ahb_idle_to_nseq_hready_low @(sample_event); \
  htrans_transistion : coverpoint cov_htrans_transistion { \
   bins idle_nseq = ( {svt_ahb_transaction::IDLE} => {svt_ahb_transaction::NSEQ} ) ; \
  } \
  option.per_instance =1 ; \
endgroup

/**
   * MACRO to create covergroup to see the hresp transistion for consecutive transactions
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_COV_DIFF_XACT_AHB_FULL(sample_event) \
  covergroup trans_ahb_htrans_cov_diff_xact_ahb_full @(sample_event); \
     option.per_instance =1 ; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE \
  endgroup

/**
   * MACRO to create covergroup to sample hresp for all beat of transaction fotr ahb full mode
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HRESP_ALL_BEAT_AHB_FULL(sample_event) \
 covergroup trans_ahb_hresp_all_beat_ahb_full @(sample_event); \
    option.per_instance =1 ; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE \
  endgroup
 
/**
   * MACRO to create covergroup to sample hresp for all beat of transaction for ahb lite mode
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HRESP_ALL_BEAT_AHB_LITE(sample_event) \
 covergroup trans_ahb_hresp_all_beat_ahb_lite @(sample_event); \
    option.per_instance =1 ; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE_AHB_LITE \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_htrans_transition_write_xact 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_TRANSITION_WRITE_XACT(sample_event) \
  covergroup trans_ahb_htrans_transition_write_xact @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(1, write_xact) \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_htrans_transition_write_xact_hready
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_TRANSITION_WRITE_XACT_HREADY(sample_event) \
  covergroup trans_ahb_htrans_transition_write_xact_hready @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(1, write_xact_hready) \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_htrans_transition_read_xact
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_TRANSITION_READ_XACT(sample_event) \
  covergroup trans_ahb_htrans_transition_read_xact @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(0, read_xact) \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_htrans_transition_read_xact_hready
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_TRANSITION_READ_XACT_HREADY(sample_event) \
  covergroup trans_ahb_htrans_transition_read_xact_hready @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(0, read_xact_hready) \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_hburst_transition
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HBURST_TRANSITION(sample_event) \
  covergroup trans_ahb_hburst_transition @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HBURST_TRANSITION \
  endgroup
  
/** @endcond */

`else //SVT_AHB_MON_CFG_BASED_COV_GRP_DEF

/** @cond PRIVATE */

//======================================================================
// Transaction level coverage macros 
//====================================================================== 

`undef SVT_MULTI_SIM_COVPOINT_GREATER_THAN_32_BITS

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_CREATE_CG_INST(group_name, signal_enable) \
  if(signal_enable) begin \
    group_name       = new(); \
    group_name.set_inst_name($sformatf("%0s_%0s", cfg.inst, `SVT_DATA_UTIL_ARG_TO_STRING(group_name))); \
  end  

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_ALL_MASTERS_GRANT \
    ahb_all_masters_grant : coverpoint master_id_with_grant { \
      bins master_0_grant = {0}; \
      bins master_1_grant = {1}; \
      bins master_2_grant = {2}; \
      bins master_3_grant = {3}; \
      bins master_4_grant = {4}; \
      bins master_5_grant = {5}; \
      bins master_6_grant = {6}; \
      bins master_7_grant = {7}; \
      bins master_8_grant = {8}; \
      bins master_9_grant = {9}; \
      bins master_10_grant = {10}; \
      bins master_11_grant = {11}; \
      bins master_12_grant = {12}; \
      bins master_13_grant = {13}; \
      bins master_14_grant = {14}; \
      bins master_15_grant = {15}; \
      bins master_16_grant = {16}; \
      bins master_17_grant = {17}; \
      bins master_18_grant = {18}; \
      bins master_19_grant = {19}; \
      bins master_20_grant = {20}; \
      bins master_21_grant = {21}; \
      bins master_22_grant = {22}; \
      bins master_23_grant = {23}; \
      bins master_24_grant = {24}; \
      bins master_25_grant = {25}; \
      bins master_26_grant = {26}; \
      bins master_27_grant = {27}; \
      bins master_28_grant = {28}; \
      bins master_29_grant = {29}; \
      bins master_30_grant = {30}; \
      bins master_31_grant = {31}; \
      bins master_32_grant = {32}; \
      bins master_33_grant = {33}; \
      bins master_34_grant = {34}; \
      bins master_35_grant = {35}; \
      bins master_36_grant = {36}; \
      bins master_37_grant = {37}; \
      bins master_38_grant = {38}; \
      bins master_39_grant = {39}; \
      bins master_40_grant = {40}; \
      bins master_41_grant = {41}; \
      bins master_42_grant = {42}; \
      bins master_43_grant = {43}; \
      bins master_44_grant = {44}; \
      bins master_45_grant = {45}; \
      bins master_46_grant = {46}; \
      bins master_47_grant = {47}; \
      bins master_48_grant = {48}; \
      bins master_49_grant = {49}; \
      bins master_50_grant = {50}; \
      bins master_51_grant = {51}; \
      bins master_52_grant = {52}; \
      bins master_53_grant = {53}; \
      bins master_54_grant = {54}; \
      bins master_55_grant = {55}; \
      bins master_56_grant = {56}; \
      bins master_57_grant = {57}; \
      bins master_58_grant = {58}; \
      bins master_59_grant = {59}; \
      bins master_60_grant = {60}; \
      bins master_61_grant = {61}; \
      bins master_62_grant = {62}; \
      bins master_63_grant = {63}; \
      bins master_64_grant = {64}; \
      bins master_65_grant = {65}; \
      bins master_66_grant = {66}; \
      bins master_67_grant = {67}; \
      bins master_68_grant = {68}; \
      bins master_69_grant = {69}; \
      bins master_70_grant = {70}; \
      bins master_71_grant = {71}; \
      bins master_72_grant = {72}; \
      bins master_73_grant = {73}; \
      bins master_74_grant = {74}; \
      bins master_75_grant = {75}; \
      bins master_76_grant = {76}; \
      bins master_77_grant = {77}; \
      bins master_78_grant = {78}; \
      bins master_79_grant = {79}; \
      bins master_80_grant = {80}; \
      bins master_81_grant = {81}; \
      bins master_82_grant = {82}; \
      bins master_83_grant = {83}; \
      bins master_84_grant = {84}; \
      bins master_85_grant = {85}; \
      bins master_86_grant = {86}; \
      bins master_87_grant = {87}; \
      bins master_88_grant = {88}; \
      bins master_89_grant = {89}; \
      bins master_90_grant = {90}; \
      bins master_91_grant = {91}; \
      bins master_92_grant = {92}; \
      bins master_93_grant = {93}; \
      bins master_94_grant = {94}; \
      bins master_95_grant = {95}; \
      bins master_96_grant = {96}; \
      bins master_97_grant = {97}; \
      bins master_98_grant = {98}; \
      bins master_99_grant = {99}; \
      bins master_100_grant = {100}; \
      bins master_101_grant = {101}; \
      bins master_102_grant = {102}; \
      bins master_103_grant = {103}; \
      bins master_104_grant = {104}; \
      bins master_105_grant = {105}; \
      bins master_106_grant = {106}; \
      bins master_107_grant = {107}; \
      bins master_108_grant = {108}; \
      bins master_109_grant = {109}; \
      bins master_110_grant = {110}; \
      bins master_111_grant = {111}; \
      bins master_112_grant = {112}; \
      bins master_113_grant = {113}; \
      bins master_114_grant = {114}; \
      bins master_115_grant = {115}; \
      bins master_116_grant = {116}; \
      bins master_117_grant = {117}; \
      bins master_118_grant = {118}; \
      bins master_119_grant = {119}; \
      bins master_120_grant = {120}; \
      bins master_121_grant = {121}; \
      bins master_122_grant = {122}; \
      bins master_123_grant = {123}; \
      bins master_124_grant = {124}; \
      bins master_125_grant = {125}; \
      bins master_126_grant = {126}; \
      bins master_127_grant = {127}; \
      ignore_bins ignore_master_0_grant = {0} iff ((sys_cfg.num_masters < 1) || (sys_cfg.dummy_master == 0)); \
      ignore_bins ignore_master_1_grant = {1} iff ((sys_cfg.num_masters < 2) || (sys_cfg.dummy_master == 1)); \
      ignore_bins ignore_master_2_grant = {2} iff ((sys_cfg.num_masters < 3) || (sys_cfg.dummy_master == 2)); \
      ignore_bins ignore_master_3_grant = {3} iff ((sys_cfg.num_masters < 4) || (sys_cfg.dummy_master == 3)); \
      ignore_bins ignore_master_4_grant = {4} iff ((sys_cfg.num_masters < 5) || (sys_cfg.dummy_master == 4)); \
      ignore_bins ignore_master_5_grant = {5} iff ((sys_cfg.num_masters < 6) || (sys_cfg.dummy_master == 5)); \
      ignore_bins ignore_master_6_grant = {6} iff ((sys_cfg.num_masters < 7) || (sys_cfg.dummy_master == 6)); \
      ignore_bins ignore_master_7_grant = {7} iff ((sys_cfg.num_masters < 8) || (sys_cfg.dummy_master == 7)); \
      ignore_bins ignore_master_8_grant = {8} iff ((sys_cfg.num_masters < 9) || (sys_cfg.dummy_master == 8)); \
      ignore_bins ignore_master_9_grant = {9} iff ((sys_cfg.num_masters < 10) || (sys_cfg.dummy_master == 9)); \
      ignore_bins ignore_master_10_grant = {10} iff ((sys_cfg.num_masters < 11) || (sys_cfg.dummy_master == 10)); \
      ignore_bins ignore_master_11_grant = {11} iff ((sys_cfg.num_masters < 12) || (sys_cfg.dummy_master == 11)); \
      ignore_bins ignore_master_12_grant = {12} iff ((sys_cfg.num_masters < 13) || (sys_cfg.dummy_master == 12)); \
      ignore_bins ignore_master_13_grant = {13} iff ((sys_cfg.num_masters < 14) || (sys_cfg.dummy_master == 13)); \
      ignore_bins ignore_master_14_grant = {14} iff ((sys_cfg.num_masters < 15) || (sys_cfg.dummy_master == 14)); \
      ignore_bins ignore_master_15_grant = {15} iff ((sys_cfg.num_masters < 16) || (sys_cfg.dummy_master == 15)); \
      ignore_bins ignore_master_16_grant = {16} iff ((sys_cfg.num_masters < 17) || (sys_cfg.dummy_master == 16)); \
      ignore_bins ignore_master_17_grant = {17} iff ((sys_cfg.num_masters < 18) || (sys_cfg.dummy_master == 17)); \
      ignore_bins ignore_master_18_grant = {18} iff ((sys_cfg.num_masters < 19) || (sys_cfg.dummy_master == 18)); \
      ignore_bins ignore_master_19_grant = {19} iff ((sys_cfg.num_masters < 20) || (sys_cfg.dummy_master == 19)); \
      ignore_bins ignore_master_20_grant = {20} iff ((sys_cfg.num_masters < 21) || (sys_cfg.dummy_master == 20)); \
      ignore_bins ignore_master_21_grant = {21} iff ((sys_cfg.num_masters < 22) || (sys_cfg.dummy_master == 21)); \
      ignore_bins ignore_master_22_grant = {22} iff ((sys_cfg.num_masters < 23) || (sys_cfg.dummy_master == 22)); \
      ignore_bins ignore_master_23_grant = {23} iff ((sys_cfg.num_masters < 24) || (sys_cfg.dummy_master == 23)); \
      ignore_bins ignore_master_24_grant = {24} iff ((sys_cfg.num_masters < 25) || (sys_cfg.dummy_master == 24)); \
      ignore_bins ignore_master_25_grant = {25} iff ((sys_cfg.num_masters < 26) || (sys_cfg.dummy_master == 25)); \
      ignore_bins ignore_master_26_grant = {26} iff ((sys_cfg.num_masters < 27) || (sys_cfg.dummy_master == 26)); \
      ignore_bins ignore_master_27_grant = {27} iff ((sys_cfg.num_masters < 28) || (sys_cfg.dummy_master == 27)); \
      ignore_bins ignore_master_28_grant = {28} iff ((sys_cfg.num_masters < 29) || (sys_cfg.dummy_master == 28)); \
      ignore_bins ignore_master_29_grant = {29} iff ((sys_cfg.num_masters < 30) || (sys_cfg.dummy_master == 29)); \
      ignore_bins ignore_master_30_grant = {30} iff ((sys_cfg.num_masters < 31) || (sys_cfg.dummy_master == 30)); \
      ignore_bins ignore_master_31_grant = {31} iff ((sys_cfg.num_masters < 32) || (sys_cfg.dummy_master == 31)); \
      ignore_bins ignore_master_32_grant = {32} iff ((sys_cfg.num_masters < 33) || (sys_cfg.dummy_master == 32)); \
      ignore_bins ignore_master_33_grant = {33} iff ((sys_cfg.num_masters < 34) || (sys_cfg.dummy_master == 33)); \
      ignore_bins ignore_master_34_grant = {34} iff ((sys_cfg.num_masters < 35) || (sys_cfg.dummy_master == 34)); \
      ignore_bins ignore_master_35_grant = {35} iff ((sys_cfg.num_masters < 36) || (sys_cfg.dummy_master == 35)); \
      ignore_bins ignore_master_36_grant = {36} iff ((sys_cfg.num_masters < 37) || (sys_cfg.dummy_master == 36)); \
      ignore_bins ignore_master_37_grant = {37} iff ((sys_cfg.num_masters < 38) || (sys_cfg.dummy_master == 37)); \
      ignore_bins ignore_master_38_grant = {38} iff ((sys_cfg.num_masters < 39) || (sys_cfg.dummy_master == 38)); \
      ignore_bins ignore_master_39_grant = {39} iff ((sys_cfg.num_masters < 40) || (sys_cfg.dummy_master == 39)); \
      ignore_bins ignore_master_40_grant = {40} iff ((sys_cfg.num_masters < 41) || (sys_cfg.dummy_master == 40)); \
      ignore_bins ignore_master_41_grant = {41} iff ((sys_cfg.num_masters < 42) || (sys_cfg.dummy_master == 41)); \
      ignore_bins ignore_master_42_grant = {42} iff ((sys_cfg.num_masters < 43) || (sys_cfg.dummy_master == 42)); \
      ignore_bins ignore_master_43_grant = {43} iff ((sys_cfg.num_masters < 44) || (sys_cfg.dummy_master == 43)); \
      ignore_bins ignore_master_44_grant = {44} iff ((sys_cfg.num_masters < 45) || (sys_cfg.dummy_master == 44)); \
      ignore_bins ignore_master_45_grant = {45} iff ((sys_cfg.num_masters < 46) || (sys_cfg.dummy_master == 45)); \
      ignore_bins ignore_master_46_grant = {46} iff ((sys_cfg.num_masters < 47) || (sys_cfg.dummy_master == 46)); \
      ignore_bins ignore_master_47_grant = {47} iff ((sys_cfg.num_masters < 48) || (sys_cfg.dummy_master == 47)); \
      ignore_bins ignore_master_48_grant = {48} iff ((sys_cfg.num_masters < 49) || (sys_cfg.dummy_master == 48)); \
      ignore_bins ignore_master_49_grant = {49} iff ((sys_cfg.num_masters < 50) || (sys_cfg.dummy_master == 49)); \
      ignore_bins ignore_master_50_grant = {50} iff ((sys_cfg.num_masters < 51) || (sys_cfg.dummy_master == 50)); \
      ignore_bins ignore_master_51_grant = {51} iff ((sys_cfg.num_masters < 52) || (sys_cfg.dummy_master == 51)); \
      ignore_bins ignore_master_52_grant = {52} iff ((sys_cfg.num_masters < 53) || (sys_cfg.dummy_master == 52)); \
      ignore_bins ignore_master_53_grant = {53} iff ((sys_cfg.num_masters < 54) || (sys_cfg.dummy_master == 53)); \
      ignore_bins ignore_master_54_grant = {54} iff ((sys_cfg.num_masters < 55) || (sys_cfg.dummy_master == 54)); \
      ignore_bins ignore_master_55_grant = {55} iff ((sys_cfg.num_masters < 56) || (sys_cfg.dummy_master == 55)); \
      ignore_bins ignore_master_56_grant = {56} iff ((sys_cfg.num_masters < 57) || (sys_cfg.dummy_master == 56)); \
      ignore_bins ignore_master_57_grant = {57} iff ((sys_cfg.num_masters < 58) || (sys_cfg.dummy_master == 57)); \
      ignore_bins ignore_master_58_grant = {58} iff ((sys_cfg.num_masters < 59) || (sys_cfg.dummy_master == 58)); \
      ignore_bins ignore_master_59_grant = {59} iff ((sys_cfg.num_masters < 60) || (sys_cfg.dummy_master == 59)); \
      ignore_bins ignore_master_60_grant = {60} iff ((sys_cfg.num_masters < 61) || (sys_cfg.dummy_master == 60)); \
      ignore_bins ignore_master_61_grant = {61} iff ((sys_cfg.num_masters < 62) || (sys_cfg.dummy_master == 61)); \
      ignore_bins ignore_master_62_grant = {62} iff ((sys_cfg.num_masters < 63) || (sys_cfg.dummy_master == 62)); \
      ignore_bins ignore_master_63_grant = {63} iff ((sys_cfg.num_masters < 64) || (sys_cfg.dummy_master == 63)); \
      ignore_bins ignore_master_64_grant = {64} iff ((sys_cfg.num_masters < 65) || (sys_cfg.dummy_master == 64)); \
      ignore_bins ignore_master_65_grant = {65} iff ((sys_cfg.num_masters < 66) || (sys_cfg.dummy_master == 65)); \
      ignore_bins ignore_master_66_grant = {66} iff ((sys_cfg.num_masters < 67) || (sys_cfg.dummy_master == 66)); \
      ignore_bins ignore_master_67_grant = {67} iff ((sys_cfg.num_masters < 68) || (sys_cfg.dummy_master == 67)); \
      ignore_bins ignore_master_68_grant = {68} iff ((sys_cfg.num_masters < 69) || (sys_cfg.dummy_master == 68)); \
      ignore_bins ignore_master_69_grant = {69} iff ((sys_cfg.num_masters < 70) || (sys_cfg.dummy_master == 69)); \
      ignore_bins ignore_master_70_grant = {70} iff ((sys_cfg.num_masters < 71) || (sys_cfg.dummy_master == 70)); \
      ignore_bins ignore_master_71_grant = {71} iff ((sys_cfg.num_masters < 72) || (sys_cfg.dummy_master == 71)); \
      ignore_bins ignore_master_72_grant = {72} iff ((sys_cfg.num_masters < 73) || (sys_cfg.dummy_master == 72)); \
      ignore_bins ignore_master_73_grant = {73} iff ((sys_cfg.num_masters < 74) || (sys_cfg.dummy_master == 73)); \
      ignore_bins ignore_master_74_grant = {74} iff ((sys_cfg.num_masters < 75) || (sys_cfg.dummy_master == 74)); \
      ignore_bins ignore_master_75_grant = {75} iff ((sys_cfg.num_masters < 76) || (sys_cfg.dummy_master == 75)); \
      ignore_bins ignore_master_76_grant = {76} iff ((sys_cfg.num_masters < 77) || (sys_cfg.dummy_master == 76)); \
      ignore_bins ignore_master_77_grant = {77} iff ((sys_cfg.num_masters < 78) || (sys_cfg.dummy_master == 77)); \
      ignore_bins ignore_master_78_grant = {78} iff ((sys_cfg.num_masters < 79) || (sys_cfg.dummy_master == 78)); \
      ignore_bins ignore_master_79_grant = {79} iff ((sys_cfg.num_masters < 80) || (sys_cfg.dummy_master == 79)); \
      ignore_bins ignore_master_80_grant = {80} iff ((sys_cfg.num_masters < 81) || (sys_cfg.dummy_master == 80)); \
      ignore_bins ignore_master_81_grant = {81} iff ((sys_cfg.num_masters < 82) || (sys_cfg.dummy_master == 81)); \
      ignore_bins ignore_master_82_grant = {82} iff ((sys_cfg.num_masters < 83) || (sys_cfg.dummy_master == 82)); \
      ignore_bins ignore_master_83_grant = {83} iff ((sys_cfg.num_masters < 84) || (sys_cfg.dummy_master == 83)); \
      ignore_bins ignore_master_84_grant = {84} iff ((sys_cfg.num_masters < 85) || (sys_cfg.dummy_master == 84)); \
      ignore_bins ignore_master_85_grant = {85} iff ((sys_cfg.num_masters < 86) || (sys_cfg.dummy_master == 85)); \
      ignore_bins ignore_master_86_grant = {86} iff ((sys_cfg.num_masters < 87) || (sys_cfg.dummy_master == 86)); \
      ignore_bins ignore_master_87_grant = {87} iff ((sys_cfg.num_masters < 88) || (sys_cfg.dummy_master == 87)); \
      ignore_bins ignore_master_88_grant = {88} iff ((sys_cfg.num_masters < 89) || (sys_cfg.dummy_master == 88)); \
      ignore_bins ignore_master_89_grant = {89} iff ((sys_cfg.num_masters < 90) || (sys_cfg.dummy_master == 89)); \
      ignore_bins ignore_master_90_grant = {90} iff ((sys_cfg.num_masters < 91) || (sys_cfg.dummy_master == 90)); \
      ignore_bins ignore_master_91_grant = {91} iff ((sys_cfg.num_masters < 92) || (sys_cfg.dummy_master == 91)); \
      ignore_bins ignore_master_92_grant = {92} iff ((sys_cfg.num_masters < 93) || (sys_cfg.dummy_master == 92)); \
      ignore_bins ignore_master_93_grant = {93} iff ((sys_cfg.num_masters < 94) || (sys_cfg.dummy_master == 93)); \
      ignore_bins ignore_master_94_grant = {94} iff ((sys_cfg.num_masters < 95) || (sys_cfg.dummy_master == 94)); \
      ignore_bins ignore_master_95_grant = {95} iff ((sys_cfg.num_masters < 96) || (sys_cfg.dummy_master == 95)); \
      ignore_bins ignore_master_96_grant = {96} iff ((sys_cfg.num_masters < 97) || (sys_cfg.dummy_master == 96)); \
      ignore_bins ignore_master_97_grant = {97} iff ((sys_cfg.num_masters < 98) || (sys_cfg.dummy_master == 97)); \
      ignore_bins ignore_master_98_grant = {98} iff ((sys_cfg.num_masters < 99) || (sys_cfg.dummy_master == 98)); \
      ignore_bins ignore_master_99_grant = {99} iff ((sys_cfg.num_masters < 100) || (sys_cfg.dummy_master == 99)); \
      ignore_bins ignore_master_100_grant = {100} iff ((sys_cfg.num_masters < 101) || (sys_cfg.dummy_master == 100)); \
      ignore_bins ignore_master_101_grant = {101} iff ((sys_cfg.num_masters < 102) || (sys_cfg.dummy_master == 101)); \
      ignore_bins ignore_master_102_grant = {102} iff ((sys_cfg.num_masters < 103) || (sys_cfg.dummy_master == 102)); \
      ignore_bins ignore_master_103_grant = {103} iff ((sys_cfg.num_masters < 104) || (sys_cfg.dummy_master == 103)); \
      ignore_bins ignore_master_104_grant = {104} iff ((sys_cfg.num_masters < 105) || (sys_cfg.dummy_master == 104)); \
      ignore_bins ignore_master_105_grant = {105} iff ((sys_cfg.num_masters < 106) || (sys_cfg.dummy_master == 105)); \
      ignore_bins ignore_master_106_grant = {106} iff ((sys_cfg.num_masters < 107) || (sys_cfg.dummy_master == 106)); \
      ignore_bins ignore_master_107_grant = {107} iff ((sys_cfg.num_masters < 108) || (sys_cfg.dummy_master == 107)); \
      ignore_bins ignore_master_108_grant = {108} iff ((sys_cfg.num_masters < 109) || (sys_cfg.dummy_master == 108)); \
      ignore_bins ignore_master_109_grant = {109} iff ((sys_cfg.num_masters < 110) || (sys_cfg.dummy_master == 109)); \
      ignore_bins ignore_master_110_grant = {110} iff ((sys_cfg.num_masters < 111) || (sys_cfg.dummy_master == 110)); \
      ignore_bins ignore_master_111_grant = {111} iff ((sys_cfg.num_masters < 112) || (sys_cfg.dummy_master == 111)); \
      ignore_bins ignore_master_112_grant = {112} iff ((sys_cfg.num_masters < 113) || (sys_cfg.dummy_master == 112)); \
      ignore_bins ignore_master_113_grant = {113} iff ((sys_cfg.num_masters < 114) || (sys_cfg.dummy_master == 113)); \
      ignore_bins ignore_master_114_grant = {114} iff ((sys_cfg.num_masters < 115) || (sys_cfg.dummy_master == 114)); \
      ignore_bins ignore_master_115_grant = {115} iff ((sys_cfg.num_masters < 116) || (sys_cfg.dummy_master == 115)); \
      ignore_bins ignore_master_116_grant = {116} iff ((sys_cfg.num_masters < 117) || (sys_cfg.dummy_master == 116)); \
      ignore_bins ignore_master_117_grant = {117} iff ((sys_cfg.num_masters < 118) || (sys_cfg.dummy_master == 117)); \
      ignore_bins ignore_master_118_grant = {118} iff ((sys_cfg.num_masters < 119) || (sys_cfg.dummy_master == 118)); \
      ignore_bins ignore_master_119_grant = {119} iff ((sys_cfg.num_masters < 120) || (sys_cfg.dummy_master == 119)); \
      ignore_bins ignore_master_120_grant = {120} iff ((sys_cfg.num_masters < 121) || (sys_cfg.dummy_master == 120)); \
      ignore_bins ignore_master_121_grant = {121} iff ((sys_cfg.num_masters < 122) || (sys_cfg.dummy_master == 121)); \
      ignore_bins ignore_master_122_grant = {122} iff ((sys_cfg.num_masters < 123) || (sys_cfg.dummy_master == 122)); \
      ignore_bins ignore_master_123_grant = {123} iff ((sys_cfg.num_masters < 124) || (sys_cfg.dummy_master == 123)); \
      ignore_bins ignore_master_124_grant = {124} iff ((sys_cfg.num_masters < 125) || (sys_cfg.dummy_master == 124)); \
      ignore_bins ignore_master_125_grant = {125} iff ((sys_cfg.num_masters < 126) || (sys_cfg.dummy_master == 125)); \
      ignore_bins ignore_master_126_grant = {126} iff ((sys_cfg.num_masters < 127) || (sys_cfg.dummy_master == 126)); \
      ignore_bins ignore_master_127_grant = {127} iff ((sys_cfg.num_masters < 128) || (sys_cfg.dummy_master == 127)); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_ALL_MASTERS_BUSREQ \
    ahb_all_masters_busreq : coverpoint master_id_busreq { \
      bins master_0_busreq = {0}; \
      bins master_1_busreq = {1}; \
      bins master_2_busreq = {2}; \
      bins master_3_busreq = {3}; \
      bins master_4_busreq = {4}; \
      bins master_5_busreq = {5}; \
      bins master_6_busreq = {6}; \
      bins master_7_busreq = {7}; \
      bins master_8_busreq = {8}; \
      bins master_9_busreq = {9}; \
      bins master_10_busreq = {10}; \
      bins master_11_busreq = {11}; \
      bins master_12_busreq = {12}; \
      bins master_13_busreq = {13}; \
      bins master_14_busreq = {14}; \
      bins master_15_busreq = {15}; \
      bins master_16_busreq = {16}; \
      bins master_17_busreq = {17}; \
      bins master_18_busreq = {18}; \
      bins master_19_busreq = {19}; \
      bins master_20_busreq = {20}; \
      bins master_21_busreq = {21}; \
      bins master_22_busreq = {22}; \
      bins master_23_busreq = {23}; \
      bins master_24_busreq = {24}; \
      bins master_25_busreq = {25}; \
      bins master_26_busreq = {26}; \
      bins master_27_busreq = {27}; \
      bins master_28_busreq = {28}; \
      bins master_29_busreq = {29}; \
      bins master_30_busreq = {30}; \
      bins master_31_busreq = {31}; \
      bins master_32_busreq = {32}; \
      bins master_33_busreq = {33}; \
      bins master_34_busreq = {34}; \
      bins master_35_busreq = {35}; \
      bins master_36_busreq = {36}; \
      bins master_37_busreq = {37}; \
      bins master_38_busreq = {38}; \
      bins master_39_busreq = {39}; \
      bins master_40_busreq = {40}; \
      bins master_41_busreq = {41}; \
      bins master_42_busreq = {42}; \
      bins master_43_busreq = {43}; \
      bins master_44_busreq = {44}; \
      bins master_45_busreq = {45}; \
      bins master_46_busreq = {46}; \
      bins master_47_busreq = {47}; \
      bins master_48_busreq = {48}; \
      bins master_49_busreq = {49}; \
      bins master_50_busreq = {50}; \
      bins master_51_busreq = {51}; \
      bins master_52_busreq = {52}; \
      bins master_53_busreq = {53}; \
      bins master_54_busreq = {54}; \
      bins master_55_busreq = {55}; \
      bins master_56_busreq = {56}; \
      bins master_57_busreq = {57}; \
      bins master_58_busreq = {58}; \
      bins master_59_busreq = {59}; \
      bins master_60_busreq = {60}; \
      bins master_61_busreq = {61}; \
      bins master_62_busreq = {62}; \
      bins master_63_busreq = {63}; \
      bins master_64_busreq = {64}; \
      bins master_65_busreq = {65}; \
      bins master_66_busreq = {66}; \
      bins master_67_busreq = {67}; \
      bins master_68_busreq = {68}; \
      bins master_69_busreq = {69}; \
      bins master_70_busreq = {70}; \
      bins master_71_busreq = {71}; \
      bins master_72_busreq = {72}; \
      bins master_73_busreq = {73}; \
      bins master_74_busreq = {74}; \
      bins master_75_busreq = {75}; \
      bins master_76_busreq = {76}; \
      bins master_77_busreq = {77}; \
      bins master_78_busreq = {78}; \
      bins master_79_busreq = {79}; \
      bins master_80_busreq = {80}; \
      bins master_81_busreq = {81}; \
      bins master_82_busreq = {82}; \
      bins master_83_busreq = {83}; \
      bins master_84_busreq = {84}; \
      bins master_85_busreq = {85}; \
      bins master_86_busreq = {86}; \
      bins master_87_busreq = {87}; \
      bins master_88_busreq = {88}; \
      bins master_89_busreq = {89}; \
      bins master_90_busreq = {90}; \
      bins master_91_busreq = {91}; \
      bins master_92_busreq = {92}; \
      bins master_93_busreq = {93}; \
      bins master_94_busreq = {94}; \
      bins master_95_busreq = {95}; \
      bins master_96_busreq = {96}; \
      bins master_97_busreq = {97}; \
      bins master_98_busreq = {98}; \
      bins master_99_busreq = {99}; \
      bins master_100_busreq = {100}; \
      bins master_101_busreq = {101}; \
      bins master_102_busreq = {102}; \
      bins master_103_busreq = {103}; \
      bins master_104_busreq = {104}; \
      bins master_105_busreq = {105}; \
      bins master_106_busreq = {106}; \
      bins master_107_busreq = {107}; \
      bins master_108_busreq = {108}; \
      bins master_109_busreq = {109}; \
      bins master_110_busreq = {110}; \
      bins master_111_busreq = {111}; \
      bins master_112_busreq = {112}; \
      bins master_113_busreq = {113}; \
      bins master_114_busreq = {114}; \
      bins master_115_busreq = {115}; \
      bins master_116_busreq = {116}; \
      bins master_117_busreq = {117}; \
      bins master_118_busreq = {118}; \
      bins master_119_busreq = {119}; \
      bins master_120_busreq = {120}; \
      bins master_121_busreq = {121}; \
      bins master_122_busreq = {122}; \
      bins master_123_busreq = {123}; \
      bins master_124_busreq = {124}; \
      bins master_125_busreq = {125}; \
      bins master_126_busreq = {126}; \
      bins master_127_busreq = {127}; \
      ignore_bins ignore_master_0_busreq = {0} iff ((sys_cfg.num_masters < 1) || (sys_cfg.dummy_master == 0)); \
      ignore_bins ignore_master_1_busreq = {1} iff ((sys_cfg.num_masters < 2) || (sys_cfg.dummy_master == 1)); \
      ignore_bins ignore_master_2_busreq = {2} iff ((sys_cfg.num_masters < 3) || (sys_cfg.dummy_master == 2)); \
      ignore_bins ignore_master_3_busreq = {3} iff ((sys_cfg.num_masters < 4) || (sys_cfg.dummy_master == 3)); \
      ignore_bins ignore_master_4_busreq = {4} iff ((sys_cfg.num_masters < 5) || (sys_cfg.dummy_master == 4)); \
      ignore_bins ignore_master_5_busreq = {5} iff ((sys_cfg.num_masters < 6) || (sys_cfg.dummy_master == 5)); \
      ignore_bins ignore_master_6_busreq = {6} iff ((sys_cfg.num_masters < 7) || (sys_cfg.dummy_master == 6)); \
      ignore_bins ignore_master_7_busreq = {7} iff ((sys_cfg.num_masters < 8) || (sys_cfg.dummy_master == 7)); \
      ignore_bins ignore_master_8_busreq = {8} iff ((sys_cfg.num_masters < 9) || (sys_cfg.dummy_master == 8)); \
      ignore_bins ignore_master_9_busreq = {9} iff ((sys_cfg.num_masters < 10) || (sys_cfg.dummy_master == 9)); \
      ignore_bins ignore_master_10_busreq = {10} iff ((sys_cfg.num_masters < 11) || (sys_cfg.dummy_master == 10)); \
      ignore_bins ignore_master_11_busreq = {11} iff ((sys_cfg.num_masters < 12) || (sys_cfg.dummy_master == 11)); \
      ignore_bins ignore_master_12_busreq = {12} iff ((sys_cfg.num_masters < 13) || (sys_cfg.dummy_master == 12)); \
      ignore_bins ignore_master_13_busreq = {13} iff ((sys_cfg.num_masters < 14) || (sys_cfg.dummy_master == 13)); \
      ignore_bins ignore_master_14_busreq = {14} iff ((sys_cfg.num_masters < 15) || (sys_cfg.dummy_master == 14)); \
      ignore_bins ignore_master_15_busreq = {15} iff ((sys_cfg.num_masters < 16) || (sys_cfg.dummy_master == 15)); \
      ignore_bins ignore_master_16_busreq = {16} iff ((sys_cfg.num_masters < 17) || (sys_cfg.dummy_master == 16)); \
      ignore_bins ignore_master_17_busreq = {17} iff ((sys_cfg.num_masters < 18) || (sys_cfg.dummy_master == 17)); \
      ignore_bins ignore_master_18_busreq = {18} iff ((sys_cfg.num_masters < 19) || (sys_cfg.dummy_master == 18)); \
      ignore_bins ignore_master_19_busreq = {19} iff ((sys_cfg.num_masters < 20) || (sys_cfg.dummy_master == 19)); \
      ignore_bins ignore_master_20_busreq = {20} iff ((sys_cfg.num_masters < 21) || (sys_cfg.dummy_master == 20)); \
      ignore_bins ignore_master_21_busreq = {21} iff ((sys_cfg.num_masters < 22) || (sys_cfg.dummy_master == 21)); \
      ignore_bins ignore_master_22_busreq = {22} iff ((sys_cfg.num_masters < 23) || (sys_cfg.dummy_master == 22)); \
      ignore_bins ignore_master_23_busreq = {23} iff ((sys_cfg.num_masters < 24) || (sys_cfg.dummy_master == 23)); \
      ignore_bins ignore_master_24_busreq = {24} iff ((sys_cfg.num_masters < 25) || (sys_cfg.dummy_master == 24)); \
      ignore_bins ignore_master_25_busreq = {25} iff ((sys_cfg.num_masters < 26) || (sys_cfg.dummy_master == 25)); \
      ignore_bins ignore_master_26_busreq = {26} iff ((sys_cfg.num_masters < 27) || (sys_cfg.dummy_master == 26)); \
      ignore_bins ignore_master_27_busreq = {27} iff ((sys_cfg.num_masters < 28) || (sys_cfg.dummy_master == 27)); \
      ignore_bins ignore_master_28_busreq = {28} iff ((sys_cfg.num_masters < 29) || (sys_cfg.dummy_master == 28)); \
      ignore_bins ignore_master_29_busreq = {29} iff ((sys_cfg.num_masters < 30) || (sys_cfg.dummy_master == 29)); \
      ignore_bins ignore_master_30_busreq = {30} iff ((sys_cfg.num_masters < 31) || (sys_cfg.dummy_master == 30)); \
      ignore_bins ignore_master_31_busreq = {31} iff ((sys_cfg.num_masters < 32) || (sys_cfg.dummy_master == 31)); \
      ignore_bins ignore_master_32_busreq = {32} iff ((sys_cfg.num_masters < 33) || (sys_cfg.dummy_master == 32)); \
      ignore_bins ignore_master_33_busreq = {33} iff ((sys_cfg.num_masters < 34) || (sys_cfg.dummy_master == 33)); \
      ignore_bins ignore_master_34_busreq = {34} iff ((sys_cfg.num_masters < 35) || (sys_cfg.dummy_master == 34)); \
      ignore_bins ignore_master_35_busreq = {35} iff ((sys_cfg.num_masters < 36) || (sys_cfg.dummy_master == 35)); \
      ignore_bins ignore_master_36_busreq = {36} iff ((sys_cfg.num_masters < 37) || (sys_cfg.dummy_master == 36)); \
      ignore_bins ignore_master_37_busreq = {37} iff ((sys_cfg.num_masters < 38) || (sys_cfg.dummy_master == 37)); \
      ignore_bins ignore_master_38_busreq = {38} iff ((sys_cfg.num_masters < 39) || (sys_cfg.dummy_master == 38)); \
      ignore_bins ignore_master_39_busreq = {39} iff ((sys_cfg.num_masters < 40) || (sys_cfg.dummy_master == 39)); \
      ignore_bins ignore_master_40_busreq = {40} iff ((sys_cfg.num_masters < 41) || (sys_cfg.dummy_master == 40)); \
      ignore_bins ignore_master_41_busreq = {41} iff ((sys_cfg.num_masters < 42) || (sys_cfg.dummy_master == 41)); \
      ignore_bins ignore_master_42_busreq = {42} iff ((sys_cfg.num_masters < 43) || (sys_cfg.dummy_master == 42)); \
      ignore_bins ignore_master_43_busreq = {43} iff ((sys_cfg.num_masters < 44) || (sys_cfg.dummy_master == 43)); \
      ignore_bins ignore_master_44_busreq = {44} iff ((sys_cfg.num_masters < 45) || (sys_cfg.dummy_master == 44)); \
      ignore_bins ignore_master_45_busreq = {45} iff ((sys_cfg.num_masters < 46) || (sys_cfg.dummy_master == 45)); \
      ignore_bins ignore_master_46_busreq = {46} iff ((sys_cfg.num_masters < 47) || (sys_cfg.dummy_master == 46)); \
      ignore_bins ignore_master_47_busreq = {47} iff ((sys_cfg.num_masters < 48) || (sys_cfg.dummy_master == 47)); \
      ignore_bins ignore_master_48_busreq = {48} iff ((sys_cfg.num_masters < 49) || (sys_cfg.dummy_master == 48)); \
      ignore_bins ignore_master_49_busreq = {49} iff ((sys_cfg.num_masters < 50) || (sys_cfg.dummy_master == 49)); \
      ignore_bins ignore_master_50_busreq = {50} iff ((sys_cfg.num_masters < 51) || (sys_cfg.dummy_master == 50)); \
      ignore_bins ignore_master_51_busreq = {51} iff ((sys_cfg.num_masters < 52) || (sys_cfg.dummy_master == 51)); \
      ignore_bins ignore_master_52_busreq = {52} iff ((sys_cfg.num_masters < 53) || (sys_cfg.dummy_master == 52)); \
      ignore_bins ignore_master_53_busreq = {53} iff ((sys_cfg.num_masters < 54) || (sys_cfg.dummy_master == 53)); \
      ignore_bins ignore_master_54_busreq = {54} iff ((sys_cfg.num_masters < 55) || (sys_cfg.dummy_master == 54)); \
      ignore_bins ignore_master_55_busreq = {55} iff ((sys_cfg.num_masters < 56) || (sys_cfg.dummy_master == 55)); \
      ignore_bins ignore_master_56_busreq = {56} iff ((sys_cfg.num_masters < 57) || (sys_cfg.dummy_master == 56)); \
      ignore_bins ignore_master_57_busreq = {57} iff ((sys_cfg.num_masters < 58) || (sys_cfg.dummy_master == 57)); \
      ignore_bins ignore_master_58_busreq = {58} iff ((sys_cfg.num_masters < 59) || (sys_cfg.dummy_master == 58)); \
      ignore_bins ignore_master_59_busreq = {59} iff ((sys_cfg.num_masters < 60) || (sys_cfg.dummy_master == 59)); \
      ignore_bins ignore_master_60_busreq = {60} iff ((sys_cfg.num_masters < 61) || (sys_cfg.dummy_master == 60)); \
      ignore_bins ignore_master_61_busreq = {61} iff ((sys_cfg.num_masters < 62) || (sys_cfg.dummy_master == 61)); \
      ignore_bins ignore_master_62_busreq = {62} iff ((sys_cfg.num_masters < 63) || (sys_cfg.dummy_master == 62)); \
      ignore_bins ignore_master_63_busreq = {63} iff ((sys_cfg.num_masters < 64) || (sys_cfg.dummy_master == 63)); \
      ignore_bins ignore_master_64_busreq = {64} iff ((sys_cfg.num_masters < 65) || (sys_cfg.dummy_master == 64)); \
      ignore_bins ignore_master_65_busreq = {65} iff ((sys_cfg.num_masters < 66) || (sys_cfg.dummy_master == 65)); \
      ignore_bins ignore_master_66_busreq = {66} iff ((sys_cfg.num_masters < 67) || (sys_cfg.dummy_master == 66)); \
      ignore_bins ignore_master_67_busreq = {67} iff ((sys_cfg.num_masters < 68) || (sys_cfg.dummy_master == 67)); \
      ignore_bins ignore_master_68_busreq = {68} iff ((sys_cfg.num_masters < 69) || (sys_cfg.dummy_master == 68)); \
      ignore_bins ignore_master_69_busreq = {69} iff ((sys_cfg.num_masters < 70) || (sys_cfg.dummy_master == 69)); \
      ignore_bins ignore_master_70_busreq = {70} iff ((sys_cfg.num_masters < 71) || (sys_cfg.dummy_master == 70)); \
      ignore_bins ignore_master_71_busreq = {71} iff ((sys_cfg.num_masters < 72) || (sys_cfg.dummy_master == 71)); \
      ignore_bins ignore_master_72_busreq = {72} iff ((sys_cfg.num_masters < 73) || (sys_cfg.dummy_master == 72)); \
      ignore_bins ignore_master_73_busreq = {73} iff ((sys_cfg.num_masters < 74) || (sys_cfg.dummy_master == 73)); \
      ignore_bins ignore_master_74_busreq = {74} iff ((sys_cfg.num_masters < 75) || (sys_cfg.dummy_master == 74)); \
      ignore_bins ignore_master_75_busreq = {75} iff ((sys_cfg.num_masters < 76) || (sys_cfg.dummy_master == 75)); \
      ignore_bins ignore_master_76_busreq = {76} iff ((sys_cfg.num_masters < 77) || (sys_cfg.dummy_master == 76)); \
      ignore_bins ignore_master_77_busreq = {77} iff ((sys_cfg.num_masters < 78) || (sys_cfg.dummy_master == 77)); \
      ignore_bins ignore_master_78_busreq = {78} iff ((sys_cfg.num_masters < 79) || (sys_cfg.dummy_master == 78)); \
      ignore_bins ignore_master_79_busreq = {79} iff ((sys_cfg.num_masters < 80) || (sys_cfg.dummy_master == 79)); \
      ignore_bins ignore_master_80_busreq = {80} iff ((sys_cfg.num_masters < 81) || (sys_cfg.dummy_master == 80)); \
      ignore_bins ignore_master_81_busreq = {81} iff ((sys_cfg.num_masters < 82) || (sys_cfg.dummy_master == 81)); \
      ignore_bins ignore_master_82_busreq = {82} iff ((sys_cfg.num_masters < 83) || (sys_cfg.dummy_master == 82)); \
      ignore_bins ignore_master_83_busreq = {83} iff ((sys_cfg.num_masters < 84) || (sys_cfg.dummy_master == 83)); \
      ignore_bins ignore_master_84_busreq = {84} iff ((sys_cfg.num_masters < 85) || (sys_cfg.dummy_master == 84)); \
      ignore_bins ignore_master_85_busreq = {85} iff ((sys_cfg.num_masters < 86) || (sys_cfg.dummy_master == 85)); \
      ignore_bins ignore_master_86_busreq = {86} iff ((sys_cfg.num_masters < 87) || (sys_cfg.dummy_master == 86)); \
      ignore_bins ignore_master_87_busreq = {87} iff ((sys_cfg.num_masters < 88) || (sys_cfg.dummy_master == 87)); \
      ignore_bins ignore_master_88_busreq = {88} iff ((sys_cfg.num_masters < 89) || (sys_cfg.dummy_master == 88)); \
      ignore_bins ignore_master_89_busreq = {89} iff ((sys_cfg.num_masters < 90) || (sys_cfg.dummy_master == 89)); \
      ignore_bins ignore_master_90_busreq = {90} iff ((sys_cfg.num_masters < 91) || (sys_cfg.dummy_master == 90)); \
      ignore_bins ignore_master_91_busreq = {91} iff ((sys_cfg.num_masters < 92) || (sys_cfg.dummy_master == 91)); \
      ignore_bins ignore_master_92_busreq = {92} iff ((sys_cfg.num_masters < 93) || (sys_cfg.dummy_master == 92)); \
      ignore_bins ignore_master_93_busreq = {93} iff ((sys_cfg.num_masters < 94) || (sys_cfg.dummy_master == 93)); \
      ignore_bins ignore_master_94_busreq = {94} iff ((sys_cfg.num_masters < 95) || (sys_cfg.dummy_master == 94)); \
      ignore_bins ignore_master_95_busreq = {95} iff ((sys_cfg.num_masters < 96) || (sys_cfg.dummy_master == 95)); \
      ignore_bins ignore_master_96_busreq = {96} iff ((sys_cfg.num_masters < 97) || (sys_cfg.dummy_master == 96)); \
      ignore_bins ignore_master_97_busreq = {97} iff ((sys_cfg.num_masters < 98) || (sys_cfg.dummy_master == 97)); \
      ignore_bins ignore_master_98_busreq = {98} iff ((sys_cfg.num_masters < 99) || (sys_cfg.dummy_master == 98)); \
      ignore_bins ignore_master_99_busreq = {99} iff ((sys_cfg.num_masters < 100) || (sys_cfg.dummy_master == 99)); \
      ignore_bins ignore_master_100_busreq = {100} iff ((sys_cfg.num_masters < 101) || (sys_cfg.dummy_master == 100)); \
      ignore_bins ignore_master_101_busreq = {101} iff ((sys_cfg.num_masters < 102) || (sys_cfg.dummy_master == 101)); \
      ignore_bins ignore_master_102_busreq = {102} iff ((sys_cfg.num_masters < 103) || (sys_cfg.dummy_master == 102)); \
      ignore_bins ignore_master_103_busreq = {103} iff ((sys_cfg.num_masters < 104) || (sys_cfg.dummy_master == 103)); \
      ignore_bins ignore_master_104_busreq = {104} iff ((sys_cfg.num_masters < 105) || (sys_cfg.dummy_master == 104)); \
      ignore_bins ignore_master_105_busreq = {105} iff ((sys_cfg.num_masters < 106) || (sys_cfg.dummy_master == 105)); \
      ignore_bins ignore_master_106_busreq = {106} iff ((sys_cfg.num_masters < 107) || (sys_cfg.dummy_master == 106)); \
      ignore_bins ignore_master_107_busreq = {107} iff ((sys_cfg.num_masters < 108) || (sys_cfg.dummy_master == 107)); \
      ignore_bins ignore_master_108_busreq = {108} iff ((sys_cfg.num_masters < 109) || (sys_cfg.dummy_master == 108)); \
      ignore_bins ignore_master_109_busreq = {109} iff ((sys_cfg.num_masters < 110) || (sys_cfg.dummy_master == 109)); \
      ignore_bins ignore_master_110_busreq = {110} iff ((sys_cfg.num_masters < 111) || (sys_cfg.dummy_master == 110)); \
      ignore_bins ignore_master_111_busreq = {111} iff ((sys_cfg.num_masters < 112) || (sys_cfg.dummy_master == 111)); \
      ignore_bins ignore_master_112_busreq = {112} iff ((sys_cfg.num_masters < 113) || (sys_cfg.dummy_master == 112)); \
      ignore_bins ignore_master_113_busreq = {113} iff ((sys_cfg.num_masters < 114) || (sys_cfg.dummy_master == 113)); \
      ignore_bins ignore_master_114_busreq = {114} iff ((sys_cfg.num_masters < 115) || (sys_cfg.dummy_master == 114)); \
      ignore_bins ignore_master_115_busreq = {115} iff ((sys_cfg.num_masters < 116) || (sys_cfg.dummy_master == 115)); \
      ignore_bins ignore_master_116_busreq = {116} iff ((sys_cfg.num_masters < 117) || (sys_cfg.dummy_master == 116)); \
      ignore_bins ignore_master_117_busreq = {117} iff ((sys_cfg.num_masters < 118) || (sys_cfg.dummy_master == 117)); \
      ignore_bins ignore_master_118_busreq = {118} iff ((sys_cfg.num_masters < 119) || (sys_cfg.dummy_master == 118)); \
      ignore_bins ignore_master_119_busreq = {119} iff ((sys_cfg.num_masters < 120) || (sys_cfg.dummy_master == 119)); \
      ignore_bins ignore_master_120_busreq = {120} iff ((sys_cfg.num_masters < 121) || (sys_cfg.dummy_master == 120)); \
      ignore_bins ignore_master_121_busreq = {121} iff ((sys_cfg.num_masters < 122) || (sys_cfg.dummy_master == 121)); \
      ignore_bins ignore_master_122_busreq = {122} iff ((sys_cfg.num_masters < 123) || (sys_cfg.dummy_master == 122)); \
      ignore_bins ignore_master_123_busreq = {123} iff ((sys_cfg.num_masters < 124) || (sys_cfg.dummy_master == 123)); \
      ignore_bins ignore_master_124_busreq = {124} iff ((sys_cfg.num_masters < 125) || (sys_cfg.dummy_master == 124)); \
      ignore_bins ignore_master_125_busreq = {125} iff ((sys_cfg.num_masters < 126) || (sys_cfg.dummy_master == 125)); \
      ignore_bins ignore_master_126_busreq = {126} iff ((sys_cfg.num_masters < 127) || (sys_cfg.dummy_master == 126)); \
      ignore_bins ignore_master_127_busreq = {127} iff ((sys_cfg.num_masters < 128) || (sys_cfg.dummy_master == 127)); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_ALL_SLAVES_SELECTED \
    ahb_all_slaves_hsel: coverpoint slave_id_hsel { \
      bins slave_0_hsel = {0}; \
      bins slave_1_hsel = {1}; \
      bins slave_2_hsel = {2}; \
      bins slave_3_hsel = {3}; \
      bins slave_4_hsel = {4}; \
      bins slave_5_hsel = {5}; \
      bins slave_6_hsel = {6}; \
      bins slave_7_hsel = {7}; \
      bins slave_8_hsel = {8}; \
      bins slave_9_hsel = {9}; \
      bins slave_10_hsel = {10}; \
      bins slave_11_hsel = {11}; \
      bins slave_12_hsel = {12}; \
      bins slave_13_hsel = {13}; \
      bins slave_14_hsel = {14}; \
      bins slave_15_hsel = {15}; \
      bins slave_16_hsel = {16}; \
      bins slave_17_hsel = {17}; \
      bins slave_18_hsel = {18}; \
      bins slave_19_hsel = {19}; \
      bins slave_20_hsel = {20}; \
      bins slave_21_hsel = {21}; \
      bins slave_22_hsel = {22}; \
      bins slave_23_hsel = {23}; \
      bins slave_24_hsel = {24}; \
      bins slave_25_hsel = {25}; \
      bins slave_26_hsel = {26}; \
      bins slave_27_hsel = {27}; \
      bins slave_28_hsel = {28}; \
      bins slave_29_hsel = {29}; \
      bins slave_30_hsel = {30}; \
      bins slave_31_hsel = {31}; \
      bins slave_32_hsel = {32}; \
      bins slave_33_hsel = {33}; \
      bins slave_34_hsel = {34}; \
      bins slave_35_hsel = {35}; \
      bins slave_36_hsel = {36}; \
      bins slave_37_hsel = {37}; \
      bins slave_38_hsel = {38}; \
      bins slave_39_hsel = {39}; \
      bins slave_40_hsel = {40}; \
      bins slave_41_hsel = {41}; \
      bins slave_42_hsel = {42}; \
      bins slave_43_hsel = {43}; \
      bins slave_44_hsel = {44}; \
      bins slave_45_hsel = {45}; \
      bins slave_46_hsel = {46}; \
      bins slave_47_hsel = {47}; \
      bins slave_48_hsel = {48}; \
      bins slave_49_hsel = {49}; \
      bins slave_50_hsel = {50}; \
      bins slave_51_hsel = {51}; \
      bins slave_52_hsel = {52}; \
      bins slave_53_hsel = {53}; \
      bins slave_54_hsel = {54}; \
      bins slave_55_hsel = {55}; \
      bins slave_56_hsel = {56}; \
      bins slave_57_hsel = {57}; \
      bins slave_58_hsel = {58}; \
      bins slave_59_hsel = {59}; \
      bins slave_60_hsel = {60}; \
      bins slave_61_hsel = {61}; \
      bins slave_62_hsel = {62}; \
      bins slave_63_hsel = {63}; \
      bins slave_64_hsel = {64}; \
      bins slave_65_hsel = {65}; \
      bins slave_66_hsel = {66}; \
      bins slave_67_hsel = {67}; \
      bins slave_68_hsel = {68}; \
      bins slave_69_hsel = {69}; \
      bins slave_70_hsel = {70}; \
      bins slave_71_hsel = {71}; \
      bins slave_72_hsel = {72}; \
      bins slave_73_hsel = {73}; \
      bins slave_74_hsel = {74}; \
      bins slave_75_hsel = {75}; \
      bins slave_76_hsel = {76}; \
      bins slave_77_hsel = {77}; \
      bins slave_78_hsel = {78}; \
      bins slave_79_hsel = {79}; \
      bins slave_80_hsel = {80}; \
      bins slave_81_hsel = {81}; \
      bins slave_82_hsel = {82}; \
      bins slave_83_hsel = {83}; \
      bins slave_84_hsel = {84}; \
      bins slave_85_hsel = {85}; \
      bins slave_86_hsel = {86}; \
      bins slave_87_hsel = {87}; \
      bins slave_88_hsel = {88}; \
      bins slave_89_hsel = {89}; \
      bins slave_90_hsel = {90}; \
      bins slave_91_hsel = {91}; \
      bins slave_92_hsel = {92}; \
      bins slave_93_hsel = {93}; \
      bins slave_94_hsel = {94}; \
      bins slave_95_hsel = {95}; \
      bins slave_96_hsel = {96}; \
      bins slave_97_hsel = {97}; \
      bins slave_98_hsel = {98}; \
      bins slave_99_hsel = {99}; \
      bins slave_100_hsel = {100}; \
      bins slave_101_hsel = {101}; \
      bins slave_102_hsel = {102}; \
      bins slave_103_hsel = {103}; \
      bins slave_104_hsel = {104}; \
      bins slave_105_hsel = {105}; \
      bins slave_106_hsel = {106}; \
      bins slave_107_hsel = {107}; \
      bins slave_108_hsel = {108}; \
      bins slave_109_hsel = {109}; \
      bins slave_110_hsel = {110}; \
      bins slave_111_hsel = {111}; \
      bins slave_112_hsel = {112}; \
      bins slave_113_hsel = {113}; \
      bins slave_114_hsel = {114}; \
      bins slave_115_hsel = {115}; \
      bins slave_116_hsel = {116}; \
      bins slave_117_hsel = {117}; \
      bins slave_118_hsel = {118}; \
      bins slave_119_hsel = {119}; \
      bins slave_120_hsel = {120}; \
      bins slave_121_hsel = {121}; \
      bins slave_122_hsel = {122}; \
      bins slave_123_hsel = {123}; \
      bins slave_124_hsel = {124}; \
      bins slave_125_hsel = {125}; \
      bins slave_126_hsel = {126}; \
      bins slave_127_hsel = {127}; \
      ignore_bins ignore_slave_0_hsel = {0} iff ((sys_cfg.num_slaves < 1) || (sys_cfg.default_slave == 0)); \
      ignore_bins ignore_slave_1_hsel = {1} iff ((sys_cfg.num_slaves < 2) || (sys_cfg.default_slave == 1)); \
      ignore_bins ignore_slave_2_hsel = {2} iff ((sys_cfg.num_slaves < 3) || (sys_cfg.default_slave == 2)); \
      ignore_bins ignore_slave_3_hsel = {3} iff ((sys_cfg.num_slaves < 4) || (sys_cfg.default_slave == 3)); \
      ignore_bins ignore_slave_4_hsel = {4} iff ((sys_cfg.num_slaves < 5) || (sys_cfg.default_slave == 4)); \
      ignore_bins ignore_slave_5_hsel = {5} iff ((sys_cfg.num_slaves < 6) || (sys_cfg.default_slave == 5)); \
      ignore_bins ignore_slave_6_hsel = {6} iff ((sys_cfg.num_slaves < 7) || (sys_cfg.default_slave == 6)); \
      ignore_bins ignore_slave_7_hsel = {7} iff ((sys_cfg.num_slaves < 8) || (sys_cfg.default_slave == 7)); \
      ignore_bins ignore_slave_8_hsel = {8} iff ((sys_cfg.num_slaves < 9) || (sys_cfg.default_slave == 8)); \
      ignore_bins ignore_slave_9_hsel = {9} iff ((sys_cfg.num_slaves < 10) || (sys_cfg.default_slave == 9)); \
      ignore_bins ignore_slave_10_hsel = {10} iff ((sys_cfg.num_slaves < 11) || (sys_cfg.default_slave == 10)); \
      ignore_bins ignore_slave_11_hsel = {11} iff ((sys_cfg.num_slaves < 12) || (sys_cfg.default_slave == 11)); \
      ignore_bins ignore_slave_12_hsel = {12} iff ((sys_cfg.num_slaves < 13) || (sys_cfg.default_slave == 12)); \
      ignore_bins ignore_slave_13_hsel = {13} iff ((sys_cfg.num_slaves < 14) || (sys_cfg.default_slave == 13)); \
      ignore_bins ignore_slave_14_hsel = {14} iff ((sys_cfg.num_slaves < 15) || (sys_cfg.default_slave == 14)); \
      ignore_bins ignore_slave_15_hsel = {15} iff ((sys_cfg.num_slaves < 16) || (sys_cfg.default_slave == 15)); \
      ignore_bins ignore_slave_16_hsel = {16} iff ((sys_cfg.num_slaves < 17) || (sys_cfg.default_slave == 16)); \
      ignore_bins ignore_slave_17_hsel = {17} iff ((sys_cfg.num_slaves < 18) || (sys_cfg.default_slave == 17)); \
      ignore_bins ignore_slave_18_hsel = {18} iff ((sys_cfg.num_slaves < 19) || (sys_cfg.default_slave == 18)); \
      ignore_bins ignore_slave_19_hsel = {19} iff ((sys_cfg.num_slaves < 20) || (sys_cfg.default_slave == 19)); \
      ignore_bins ignore_slave_20_hsel = {20} iff ((sys_cfg.num_slaves < 21) || (sys_cfg.default_slave == 20)); \
      ignore_bins ignore_slave_21_hsel = {21} iff ((sys_cfg.num_slaves < 22) || (sys_cfg.default_slave == 21)); \
      ignore_bins ignore_slave_22_hsel = {22} iff ((sys_cfg.num_slaves < 23) || (sys_cfg.default_slave == 22)); \
      ignore_bins ignore_slave_23_hsel = {23} iff ((sys_cfg.num_slaves < 24) || (sys_cfg.default_slave == 23)); \
      ignore_bins ignore_slave_24_hsel = {24} iff ((sys_cfg.num_slaves < 25) || (sys_cfg.default_slave == 24)); \
      ignore_bins ignore_slave_25_hsel = {25} iff ((sys_cfg.num_slaves < 26) || (sys_cfg.default_slave == 25)); \
      ignore_bins ignore_slave_26_hsel = {26} iff ((sys_cfg.num_slaves < 27) || (sys_cfg.default_slave == 26)); \
      ignore_bins ignore_slave_27_hsel = {27} iff ((sys_cfg.num_slaves < 28) || (sys_cfg.default_slave == 27)); \
      ignore_bins ignore_slave_28_hsel = {28} iff ((sys_cfg.num_slaves < 29) || (sys_cfg.default_slave == 28)); \
      ignore_bins ignore_slave_29_hsel = {29} iff ((sys_cfg.num_slaves < 30) || (sys_cfg.default_slave == 29)); \
      ignore_bins ignore_slave_30_hsel = {30} iff ((sys_cfg.num_slaves < 31) || (sys_cfg.default_slave == 30)); \
      ignore_bins ignore_slave_31_hsel = {31} iff ((sys_cfg.num_slaves < 32) || (sys_cfg.default_slave == 31)); \
      ignore_bins ignore_slave_32_hsel = {32} iff ((sys_cfg.num_slaves < 33) || (sys_cfg.default_slave == 32)); \
      ignore_bins ignore_slave_33_hsel = {33} iff ((sys_cfg.num_slaves < 34) || (sys_cfg.default_slave == 33)); \
      ignore_bins ignore_slave_34_hsel = {34} iff ((sys_cfg.num_slaves < 35) || (sys_cfg.default_slave == 34)); \
      ignore_bins ignore_slave_35_hsel = {35} iff ((sys_cfg.num_slaves < 36) || (sys_cfg.default_slave == 35)); \
      ignore_bins ignore_slave_36_hsel = {36} iff ((sys_cfg.num_slaves < 37) || (sys_cfg.default_slave == 36)); \
      ignore_bins ignore_slave_37_hsel = {37} iff ((sys_cfg.num_slaves < 38) || (sys_cfg.default_slave == 37)); \
      ignore_bins ignore_slave_38_hsel = {38} iff ((sys_cfg.num_slaves < 39) || (sys_cfg.default_slave == 38)); \
      ignore_bins ignore_slave_39_hsel = {39} iff ((sys_cfg.num_slaves < 40) || (sys_cfg.default_slave == 39)); \
      ignore_bins ignore_slave_40_hsel = {40} iff ((sys_cfg.num_slaves < 41) || (sys_cfg.default_slave == 40)); \
      ignore_bins ignore_slave_41_hsel = {41} iff ((sys_cfg.num_slaves < 42) || (sys_cfg.default_slave == 41)); \
      ignore_bins ignore_slave_42_hsel = {42} iff ((sys_cfg.num_slaves < 43) || (sys_cfg.default_slave == 42)); \
      ignore_bins ignore_slave_43_hsel = {43} iff ((sys_cfg.num_slaves < 44) || (sys_cfg.default_slave == 43)); \
      ignore_bins ignore_slave_44_hsel = {44} iff ((sys_cfg.num_slaves < 45) || (sys_cfg.default_slave == 44)); \
      ignore_bins ignore_slave_45_hsel = {45} iff ((sys_cfg.num_slaves < 46) || (sys_cfg.default_slave == 45)); \
      ignore_bins ignore_slave_46_hsel = {46} iff ((sys_cfg.num_slaves < 47) || (sys_cfg.default_slave == 46)); \
      ignore_bins ignore_slave_47_hsel = {47} iff ((sys_cfg.num_slaves < 48) || (sys_cfg.default_slave == 47)); \
      ignore_bins ignore_slave_48_hsel = {48} iff ((sys_cfg.num_slaves < 49) || (sys_cfg.default_slave == 48)); \
      ignore_bins ignore_slave_49_hsel = {49} iff ((sys_cfg.num_slaves < 50) || (sys_cfg.default_slave == 49)); \
      ignore_bins ignore_slave_50_hsel = {50} iff ((sys_cfg.num_slaves < 51) || (sys_cfg.default_slave == 50)); \
      ignore_bins ignore_slave_51_hsel = {51} iff ((sys_cfg.num_slaves < 52) || (sys_cfg.default_slave == 51)); \
      ignore_bins ignore_slave_52_hsel = {52} iff ((sys_cfg.num_slaves < 53) || (sys_cfg.default_slave == 52)); \
      ignore_bins ignore_slave_53_hsel = {53} iff ((sys_cfg.num_slaves < 54) || (sys_cfg.default_slave == 53)); \
      ignore_bins ignore_slave_54_hsel = {54} iff ((sys_cfg.num_slaves < 55) || (sys_cfg.default_slave == 54)); \
      ignore_bins ignore_slave_55_hsel = {55} iff ((sys_cfg.num_slaves < 56) || (sys_cfg.default_slave == 55)); \
      ignore_bins ignore_slave_56_hsel = {56} iff ((sys_cfg.num_slaves < 57) || (sys_cfg.default_slave == 56)); \
      ignore_bins ignore_slave_57_hsel = {57} iff ((sys_cfg.num_slaves < 58) || (sys_cfg.default_slave == 57)); \
      ignore_bins ignore_slave_58_hsel = {58} iff ((sys_cfg.num_slaves < 59) || (sys_cfg.default_slave == 58)); \
      ignore_bins ignore_slave_59_hsel = {59} iff ((sys_cfg.num_slaves < 60) || (sys_cfg.default_slave == 59)); \
      ignore_bins ignore_slave_60_hsel = {60} iff ((sys_cfg.num_slaves < 61) || (sys_cfg.default_slave == 60)); \
      ignore_bins ignore_slave_61_hsel = {61} iff ((sys_cfg.num_slaves < 62) || (sys_cfg.default_slave == 61)); \
      ignore_bins ignore_slave_62_hsel = {62} iff ((sys_cfg.num_slaves < 63) || (sys_cfg.default_slave == 62)); \
      ignore_bins ignore_slave_63_hsel = {63} iff ((sys_cfg.num_slaves < 64) || (sys_cfg.default_slave == 63)); \
      ignore_bins ignore_slave_64_hsel = {64} iff ((sys_cfg.num_slaves < 65) || (sys_cfg.default_slave == 64)); \
      ignore_bins ignore_slave_65_hsel = {65} iff ((sys_cfg.num_slaves < 66) || (sys_cfg.default_slave == 65)); \
      ignore_bins ignore_slave_66_hsel = {66} iff ((sys_cfg.num_slaves < 67) || (sys_cfg.default_slave == 66)); \
      ignore_bins ignore_slave_67_hsel = {67} iff ((sys_cfg.num_slaves < 68) || (sys_cfg.default_slave == 67)); \
      ignore_bins ignore_slave_68_hsel = {68} iff ((sys_cfg.num_slaves < 69) || (sys_cfg.default_slave == 68)); \
      ignore_bins ignore_slave_69_hsel = {69} iff ((sys_cfg.num_slaves < 70) || (sys_cfg.default_slave == 69)); \
      ignore_bins ignore_slave_70_hsel = {70} iff ((sys_cfg.num_slaves < 71) || (sys_cfg.default_slave == 70)); \
      ignore_bins ignore_slave_71_hsel = {71} iff ((sys_cfg.num_slaves < 72) || (sys_cfg.default_slave == 71)); \
      ignore_bins ignore_slave_72_hsel = {72} iff ((sys_cfg.num_slaves < 73) || (sys_cfg.default_slave == 72)); \
      ignore_bins ignore_slave_73_hsel = {73} iff ((sys_cfg.num_slaves < 74) || (sys_cfg.default_slave == 73)); \
      ignore_bins ignore_slave_74_hsel = {74} iff ((sys_cfg.num_slaves < 75) || (sys_cfg.default_slave == 74)); \
      ignore_bins ignore_slave_75_hsel = {75} iff ((sys_cfg.num_slaves < 76) || (sys_cfg.default_slave == 75)); \
      ignore_bins ignore_slave_76_hsel = {76} iff ((sys_cfg.num_slaves < 77) || (sys_cfg.default_slave == 76)); \
      ignore_bins ignore_slave_77_hsel = {77} iff ((sys_cfg.num_slaves < 78) || (sys_cfg.default_slave == 77)); \
      ignore_bins ignore_slave_78_hsel = {78} iff ((sys_cfg.num_slaves < 79) || (sys_cfg.default_slave == 78)); \
      ignore_bins ignore_slave_79_hsel = {79} iff ((sys_cfg.num_slaves < 80) || (sys_cfg.default_slave == 79)); \
      ignore_bins ignore_slave_80_hsel = {80} iff ((sys_cfg.num_slaves < 81) || (sys_cfg.default_slave == 80)); \
      ignore_bins ignore_slave_81_hsel = {81} iff ((sys_cfg.num_slaves < 82) || (sys_cfg.default_slave == 81)); \
      ignore_bins ignore_slave_82_hsel = {82} iff ((sys_cfg.num_slaves < 83) || (sys_cfg.default_slave == 82)); \
      ignore_bins ignore_slave_83_hsel = {83} iff ((sys_cfg.num_slaves < 84) || (sys_cfg.default_slave == 83)); \
      ignore_bins ignore_slave_84_hsel = {84} iff ((sys_cfg.num_slaves < 85) || (sys_cfg.default_slave == 84)); \
      ignore_bins ignore_slave_85_hsel = {85} iff ((sys_cfg.num_slaves < 86) || (sys_cfg.default_slave == 85)); \
      ignore_bins ignore_slave_86_hsel = {86} iff ((sys_cfg.num_slaves < 87) || (sys_cfg.default_slave == 86)); \
      ignore_bins ignore_slave_87_hsel = {87} iff ((sys_cfg.num_slaves < 88) || (sys_cfg.default_slave == 87)); \
      ignore_bins ignore_slave_88_hsel = {88} iff ((sys_cfg.num_slaves < 89) || (sys_cfg.default_slave == 88)); \
      ignore_bins ignore_slave_89_hsel = {89} iff ((sys_cfg.num_slaves < 90) || (sys_cfg.default_slave == 89)); \
      ignore_bins ignore_slave_90_hsel = {90} iff ((sys_cfg.num_slaves < 91) || (sys_cfg.default_slave == 90)); \
      ignore_bins ignore_slave_91_hsel = {91} iff ((sys_cfg.num_slaves < 92) || (sys_cfg.default_slave == 91)); \
      ignore_bins ignore_slave_92_hsel = {92} iff ((sys_cfg.num_slaves < 93) || (sys_cfg.default_slave == 92)); \
      ignore_bins ignore_slave_93_hsel = {93} iff ((sys_cfg.num_slaves < 94) || (sys_cfg.default_slave == 93)); \
      ignore_bins ignore_slave_94_hsel = {94} iff ((sys_cfg.num_slaves < 95) || (sys_cfg.default_slave == 94)); \
      ignore_bins ignore_slave_95_hsel = {95} iff ((sys_cfg.num_slaves < 96) || (sys_cfg.default_slave == 95)); \
      ignore_bins ignore_slave_96_hsel = {96} iff ((sys_cfg.num_slaves < 97) || (sys_cfg.default_slave == 96)); \
      ignore_bins ignore_slave_97_hsel = {97} iff ((sys_cfg.num_slaves < 98) || (sys_cfg.default_slave == 97)); \
      ignore_bins ignore_slave_98_hsel = {98} iff ((sys_cfg.num_slaves < 99) || (sys_cfg.default_slave == 98)); \
      ignore_bins ignore_slave_99_hsel = {99} iff ((sys_cfg.num_slaves < 100) || (sys_cfg.default_slave == 99)); \
      ignore_bins ignore_slave_100_hsel = {100} iff ((sys_cfg.num_slaves < 101) || (sys_cfg.default_slave == 100)); \
      ignore_bins ignore_slave_101_hsel = {101} iff ((sys_cfg.num_slaves < 102) || (sys_cfg.default_slave == 101)); \
      ignore_bins ignore_slave_102_hsel = {102} iff ((sys_cfg.num_slaves < 103) || (sys_cfg.default_slave == 102)); \
      ignore_bins ignore_slave_103_hsel = {103} iff ((sys_cfg.num_slaves < 104) || (sys_cfg.default_slave == 103)); \
      ignore_bins ignore_slave_104_hsel = {104} iff ((sys_cfg.num_slaves < 105) || (sys_cfg.default_slave == 104)); \
      ignore_bins ignore_slave_105_hsel = {105} iff ((sys_cfg.num_slaves < 106) || (sys_cfg.default_slave == 105)); \
      ignore_bins ignore_slave_106_hsel = {106} iff ((sys_cfg.num_slaves < 107) || (sys_cfg.default_slave == 106)); \
      ignore_bins ignore_slave_107_hsel = {107} iff ((sys_cfg.num_slaves < 108) || (sys_cfg.default_slave == 107)); \
      ignore_bins ignore_slave_108_hsel = {108} iff ((sys_cfg.num_slaves < 109) || (sys_cfg.default_slave == 108)); \
      ignore_bins ignore_slave_109_hsel = {109} iff ((sys_cfg.num_slaves < 110) || (sys_cfg.default_slave == 109)); \
      ignore_bins ignore_slave_110_hsel = {110} iff ((sys_cfg.num_slaves < 111) || (sys_cfg.default_slave == 110)); \
      ignore_bins ignore_slave_111_hsel = {111} iff ((sys_cfg.num_slaves < 112) || (sys_cfg.default_slave == 111)); \
      ignore_bins ignore_slave_112_hsel = {112} iff ((sys_cfg.num_slaves < 113) || (sys_cfg.default_slave == 112)); \
      ignore_bins ignore_slave_113_hsel = {113} iff ((sys_cfg.num_slaves < 114) || (sys_cfg.default_slave == 113)); \
      ignore_bins ignore_slave_114_hsel = {114} iff ((sys_cfg.num_slaves < 115) || (sys_cfg.default_slave == 114)); \
      ignore_bins ignore_slave_115_hsel = {115} iff ((sys_cfg.num_slaves < 116) || (sys_cfg.default_slave == 115)); \
      ignore_bins ignore_slave_116_hsel = {116} iff ((sys_cfg.num_slaves < 117) || (sys_cfg.default_slave == 116)); \
      ignore_bins ignore_slave_117_hsel = {117} iff ((sys_cfg.num_slaves < 118) || (sys_cfg.default_slave == 117)); \
      ignore_bins ignore_slave_118_hsel = {118} iff ((sys_cfg.num_slaves < 119) || (sys_cfg.default_slave == 118)); \
      ignore_bins ignore_slave_119_hsel = {119} iff ((sys_cfg.num_slaves < 120) || (sys_cfg.default_slave == 119)); \
      ignore_bins ignore_slave_120_hsel = {120} iff ((sys_cfg.num_slaves < 121) || (sys_cfg.default_slave == 120)); \
      ignore_bins ignore_slave_121_hsel = {121} iff ((sys_cfg.num_slaves < 122) || (sys_cfg.default_slave == 121)); \
      ignore_bins ignore_slave_122_hsel = {122} iff ((sys_cfg.num_slaves < 123) || (sys_cfg.default_slave == 122)); \
      ignore_bins ignore_slave_123_hsel = {123} iff ((sys_cfg.num_slaves < 124) || (sys_cfg.default_slave == 123)); \
      ignore_bins ignore_slave_124_hsel = {124} iff ((sys_cfg.num_slaves < 125) || (sys_cfg.default_slave == 124)); \
      ignore_bins ignore_slave_125_hsel = {125} iff ((sys_cfg.num_slaves < 126) || (sys_cfg.default_slave == 125)); \
      ignore_bins ignore_slave_126_hsel = {126} iff ((sys_cfg.num_slaves < 127) || (sys_cfg.default_slave == 126)); \
      ignore_bins ignore_slave_127_hsel = {127} iff ((sys_cfg.num_slaves < 128) || (sys_cfg.default_slave == 127)); \
    } 

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_TWO_SLAVES_SELECTION_SEQUENCE \
    ahb_two_slaves_selection_sequence : coverpoint slave_id_hsel { \
      bins slave_0_slave_1_hsel = (0 => 1); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_FOUR_SLAVES_SELECTION_SEQUENCE \
    ahb_four_slaves_selection_sequence : coverpoint slave_id_hsel { \
      bins slave_0_slave_1_slave_2_slave_3_hsel = (0 => 1 => 2 => 3); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_EIGHT_SLAVES_SELECTION_SEQUENCE \
    ahb_eight_slaves_selection_sequence : coverpoint slave_id_hsel { \
      bins slave_0_to_slave7_hsel = (0 => 1 => 2 => 3 => 4 => 5 => 6 => 7); \
    }

`define SVT_AHB_SYSTEM_MONITOR_DEF_COV_UTIL_SIXTEEN_SLAVES_SELECTION_SEQUENCE \
    ahb_sixteen_slaves_selection_sequence : coverpoint slave_id_hsel { \
      bins slave_0_to_slave15_hsel = (0 => 1 => 2 => 3 => 4 => 5 => 6 => 7 => 8 => 9 => 10 => 11 => 12 => 13 => 14 => 15); \
    }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
   xact_type : coverpoint cov_xact.xact_type { \
   bins xact   = {svt_ahb_transaction::READ, svt_ahb_transaction::WRITE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE \
   trans_type : coverpoint cov_htrans_type { \
     bins idle = {svt_ahb_transaction::IDLE}; \
     bins busy = {svt_ahb_transaction::BUSY}; \
     bins nseq = {svt_ahb_transaction::NSEQ}; \
     bins seq = {svt_ahb_transaction::SEQ}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE_IDLE_EXCLUDED \
   trans_type : coverpoint cov_htrans_type { \
     bins busy = {svt_ahb_transaction::BUSY}; \
     bins nseq = {svt_ahb_transaction::NSEQ}; \
     bins seq = {svt_ahb_transaction::SEQ}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
  burst_type : coverpoint cov_xact.burst_type { \
    bins single_burst = {svt_ahb_transaction::SINGLE}; \
    bins incr_burst = {svt_ahb_transaction::INCR}; \
    bins wrap4_burst = {svt_ahb_transaction::WRAP4}; \
    bins incr4_burst = {svt_ahb_transaction::INCR4}; \
    bins wrap8_burst = {svt_ahb_transaction::WRAP8}; \
    bins incr8_burst = {svt_ahb_transaction::INCR8}; \
    bins wrap16_burst = {svt_ahb_transaction::WRAP16}; \
    bins incr16_burst = {svt_ahb_transaction::INCR16}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
  lock : coverpoint cov_xact.lock { \
    bins lock_transfer = {1}; \
  }

  /**
   *   This group covers the starting address when a transaction completes.
   *   \- bins for byte, word, half-word, word, double-word and quad-word alignment.
   */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
  addr : coverpoint cov_xact.addr { \
    bins addr_range_min = {0};\
`ifdef SVT_MULTI_SIM_COVPOINT_GREATER_THAN_32_BITS \
    // Need to come up with an alternative \
`else \
    bins addr64_range_mid = {[1:(64'd2**(cfg.addr_width)-2)]}; \
    bins addr64_range_max = {((64'd2**(cfg.addr_width))-1)}; \
    bins addr32_range_mid = {[1:(32'd2**(cfg.addr_width)-2)]}; \
    bins addr32_range_max = {((32'd2**(cfg.addr_width))-1)}; \
    wildcard bins byte_aligned_addr =      {(64'h????_????_????_????)}; \
    wildcard bins half_word_aligned_addr =      {({60'h????_????_????_???,4'b???0})}; \
    wildcard bins word_aligned_addr =      {({60'h????_????_????_???,4'b??00})}; \
    wildcard bins double_word_aligned_addr =      {({60'h????_????_????_???,4'b?000})}; \
    wildcard bins quad_word_aligned_addr =      {(64'h????_????_????_???0)}; \
`endif \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
  addr_page_boundary : coverpoint cov_xact.addr[9:0] { \
    bins addr_page_boundary_start = {[0:3]}; \
    bins addr_page_boundary_end = {[1020:1023]}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SIZE_ADDR_ALIGNMENT \
  burst_size_addr_alignment : coverpoint cov_xact.addr[2:0] { \
    bins burst_size_8bit_byte_aligned_addr = {[0:7]} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_8BIT); \
    bins burst_size_16bit_halfword_aligned_addr_0 = {0} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_16BIT); \
    bins burst_size_16bit_halfword_aligned_addr_2 = {2} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_16BIT); \
    bins burst_size_16bit_halfword_aligned_addr_4 = {4} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_16BIT); \
    bins burst_size_16bit_halfword_aligned_addr_6 = {6} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_16BIT); \
    bins burst_size_32bit_word_aligned_addr_0 = {0}  iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_32BIT); \
    bins burst_size_32bit_word_aligned_addr_4 = {4}  iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_32BIT); \
    bins burst_size_64bit_doubleword_aligned_addr_0 = {0} iff  (cov_xact.burst_size == svt_ahb_transaction::BURST_SIZE_64BIT); \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(num_beats) \
  bins burst_incr_``num_beats``_beat = {num_beats} \
  iff (cov_xact.burst_type == svt_ahb_transaction::INCR);

`define SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEAT_1_TO_32_BINS \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(1) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(2) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(3) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(4) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(5) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(6) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(7) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(8) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(9) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(10) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(11) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(12) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(13) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(14) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(15) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(16) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(17) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(18) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(19) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(20) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(21) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(22) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(23) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(24) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(25) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(26) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(27) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(28) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(29) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(30) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(31) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEATS(32)

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE_NUM_INCR_BEAT \
 burst_incr_number_of_beats : coverpoint cov_xact.num_incr_beats { \
   `SVT_AHB_COMMON_MONITOR_DEF_COV_BURST_INCR_BEAT_1_TO_32_BINS \
   bins burst_incr_bin_33_to_63_beats = {[33:63]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_64_beats = {64} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_65_to_127_beats = {[65:127]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_128_beats = {128} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_129_to_255_beats = {[129:255]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_256_beats = {256} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_257_to_511_beats = {[257:511]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_512_beats = {512} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_513_to_1023_beats = {[513:1023]} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
   bins burst_incr_bin_1024_beats = {1024} \
   iff(cov_xact.burst_type == svt_ahb_transaction::INCR); \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_BUSY_CYCLES_PER_BEAT_0_OR_1 \
   num_busy_cycles_per_beat : coverpoint cov_num_busy_cycles_per_beat { \
      bins num_busy_cycles_range_min  = {0}; \
      bins num_busy_cycles_range_max  = {`SVT_AHB_MAX_NUM_BUSY_CYCLES}; \
    }

`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_BUSY_CYCLES_PER_BEAT_GRT_THAN_1 \
   num_busy_cycles_per_beat : coverpoint cov_num_busy_cycles_per_beat { \
      bins num_busy_cycles_range_min  = {0}; \
      bins num_busy_cycles_range_mid  = {[1:(`SVT_AHB_MAX_NUM_BUSY_CYCLES-1)]}; \
      bins num_busy_cycles_range_max  = {`SVT_AHB_MAX_NUM_BUSY_CYCLES}; \
    }

`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_WAIT_CYCLES_PER_BEAT_0_OR_1 \
   num_wait_cycles_per_beat : coverpoint cov_num_wait_cycles_per_beat { \
      bins num_wait_cycles_range_min  = {0}; \
      bins num_wait_cycles_range_max  = {`SVT_AHB_MAX_NUM_WAIT_CYCLES}; \
    }
  
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_WAIT_CYCLES_PER_BEAT_GRT_THAN_1 \
   num_wait_cycles_per_beat : coverpoint cov_num_wait_cycles_per_beat { \
      bins num_wait_cycles_range_min  = {0}; \
      bins num_wait_cycles_range_mid  = {[1:(`SVT_AHB_MAX_NUM_WAIT_CYCLES-1)]}; \
      bins num_wait_cycles_range_max  = {`SVT_AHB_MAX_NUM_WAIT_CYCLES}; \
    }
  
/**
 *  Following macro defines specific bins of interest to cover if address is wrapped at byte boundary 
 *  for a different WRAP burst types in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_WRAPPED_ADDR_BOUNDARY \
    burst_wrapped_addr_boundary : coverpoint cov_xact.burst_type { \
      bins burst_with_addr_wrap4 = {svt_ahb_transaction::WRAP4} iff(addr_last < cov_xact.addr); \
      bins burst_with_addr_wrap8 = {svt_ahb_transaction::WRAP8} iff(addr_last < cov_xact.addr); \
      bins burst_with_addr_wrap16 = {svt_ahb_transaction::WRAP16} iff(addr_last < cov_xact.addr); \
    }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HRESP_FULL_AHB \
  response_type : coverpoint cov_response_type { \
    bins okay_resp = {svt_ahb_transaction::OKAY}; \
    bins error_resp = {svt_ahb_transaction::ERROR}; \
    bins retry_resp = {svt_ahb_transaction::RETRY}; \
    bins split_resp = {svt_ahb_transaction::SPLIT}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HRESP_AHB_LITE \
  response_type : coverpoint cov_response_type { \
    bins okay_resp = {svt_ahb_transaction::OKAY}; \
    bins error_resp = {svt_ahb_transaction::ERROR}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_16 \
  burst_size : coverpoint cov_xact.burst_size { \
    bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
  }
 
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_32 \
  burst_size : coverpoint cov_xact.burst_size { \
    bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
    bins burst_size_16bit = {svt_ahb_transaction::BURST_SIZE_16BIT}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_64 \
  burst_size : coverpoint cov_xact.burst_size { \
    bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
    bins burst_size_16bit = {svt_ahb_transaction::BURST_SIZE_16BIT}; \
    bins burst_size_32bit = {svt_ahb_transaction::BURST_SIZE_32BIT}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_128 \
  burst_size : coverpoint cov_xact.burst_size { \
    bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
    bins burst_size_16bit = {svt_ahb_transaction::BURST_SIZE_16BIT}; \
    bins burst_size_32bit = {svt_ahb_transaction::BURST_SIZE_32BIT}; \
    bins burst_size_64bit = {svt_ahb_transaction::BURST_SIZE_64BIT}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_256 \
  burst_size : coverpoint cov_xact.burst_size { \
    bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
    bins burst_size_16bit = {svt_ahb_transaction::BURST_SIZE_16BIT}; \
    bins burst_size_32bit = {svt_ahb_transaction::BURST_SIZE_32BIT}; \
    bins burst_size_64bit = {svt_ahb_transaction::BURST_SIZE_64BIT}; \
    bins burst_size_128bit = {svt_ahb_transaction::BURST_SIZE_128BIT}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_512 \
  burst_size : coverpoint cov_xact.burst_size { \
    bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
    bins burst_size_16bit = {svt_ahb_transaction::BURST_SIZE_16BIT}; \
    bins burst_size_32bit = {svt_ahb_transaction::BURST_SIZE_32BIT}; \
    bins burst_size_64bit = {svt_ahb_transaction::BURST_SIZE_64BIT}; \
    bins burst_size_128bit = {svt_ahb_transaction::BURST_SIZE_128BIT}; \
    bins burst_size_256bit = {svt_ahb_transaction::BURST_SIZE_256BIT}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_1024 \
  burst_size : coverpoint cov_xact.burst_size { \
    bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
    bins burst_size_16bit = {svt_ahb_transaction::BURST_SIZE_16BIT}; \
    bins burst_size_32bit = {svt_ahb_transaction::BURST_SIZE_32BIT}; \
    bins burst_size_64bit = {svt_ahb_transaction::BURST_SIZE_64BIT}; \
    bins burst_size_128bit = {svt_ahb_transaction::BURST_SIZE_128BIT}; \
    bins burst_size_256bit = {svt_ahb_transaction::BURST_SIZE_256BIT}; \
    bins burst_size_512bit = {svt_ahb_transaction::BURST_SIZE_512BIT}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWEQ_1024 \
  burst_size : coverpoint cov_xact.burst_size { \
    bins burst_size_8bit = {svt_ahb_transaction::BURST_SIZE_8BIT}; \
    bins burst_size_16bit = {svt_ahb_transaction::BURST_SIZE_16BIT}; \
    bins burst_size_32bit = {svt_ahb_transaction::BURST_SIZE_32BIT}; \
    bins burst_size_64bit = {svt_ahb_transaction::BURST_SIZE_64BIT}; \
    bins burst_size_128bit = {svt_ahb_transaction::BURST_SIZE_128BIT}; \
    bins burst_size_256bit = {svt_ahb_transaction::BURST_SIZE_256BIT}; \
    bins burst_size_512bit = {svt_ahb_transaction::BURST_SIZE_512BIT}; \
    bins burst_size_1024bit = {svt_ahb_transaction::BURST_SIZE_1024BIT}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT0_TYPE \
  prot0_type : coverpoint cov_xact.prot0_type { \
    bins opcode_fetch = {svt_ahb_transaction::OPCODE_FETCH}; \
    bins data_access  = {svt_ahb_transaction::DATA_ACCESS}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT1_TYPE \
  prot1_type : coverpoint cov_xact.prot1_type { \
    bins user_access = {svt_ahb_transaction::USER_ACCESS}; \
    bins privilidged_access  = {svt_ahb_transaction::PRIVILEDGED_ACCESS}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT2_TYPE \
  prot2_type : coverpoint cov_xact.prot2_type { \
    bins non_bufferable = {svt_ahb_transaction::NON_BUFFERABLE}; \
    bins bufferable  = {svt_ahb_transaction::BUFFERABLE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT3_TYPE \
  prot3_type : coverpoint cov_xact.prot3_type { \
    bins non_cacheable = {svt_ahb_transaction::NON_CACHEABLE}; \
    bins cacheable = {svt_ahb_transaction::CACHEABLE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT3_EX_TYPE \
  prot3_ex_type : coverpoint cov_xact.prot3_ex_type { \
    bins non_modifiable = {svt_ahb_transaction::NON_MODIFIABLE}; \
    bins modifiable = {svt_ahb_transaction::MODIFIABLE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT4_EX_TYPE \
  prot4_ex_type : coverpoint cov_xact.prot4_ex_type { \
    bins no_lookup = {svt_ahb_transaction::NO_LOOKUP}; \
    bins lookup  = {svt_ahb_transaction::LOOKUP}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT5_EX_TYPE \
  prot5_ex_type : coverpoint cov_xact.prot5_ex_type { \
    bins no_allocate = {svt_ahb_transaction::NO_ALLOCATE}; \
    bins allocate  = {svt_ahb_transaction::ALLOCATE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT6_EX_TYPE \
  prot6_ex_type : coverpoint cov_xact.prot6_ex_type { \
    bins non_shareable = {svt_ahb_transaction::NON_SHAREABLE}; \
    bins shareable  = {svt_ahb_transaction::SHAREABLE}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_NONSEC_TRANS \
  nonsec_trans : coverpoint cov_xact.nonsec_trans { \
    bins secure_transfer = {svt_ahb_transaction::SECURE_TRANSFER}; \
    bins nonsecure_transfer = {svt_ahb_transaction::NONSECURE_TRANSFER}; \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_EXCEPTIONS \
  ahb_exceptions : coverpoint cov_xact.exceptions \
    options.weight = 0; \
  }

/*This Macro is used to create coverpoints for the hmaster
 *It creates bins based on the num_masters specified
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HMASTER \
  hmaster : coverpoint cov_hmaster { \
    bins cov_hmaster[] = {[0 : (cfg.sys_cfg.num_masters)-1]}; \
  }

/*This macro is used to create coverpoints for hready_in 
 *It creates bins based on the values hready_in can take
*/

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HREADY_IN \
   hready_in : coverpoint cov_hready_in{ \
     bins low = {0}; \
     bins high = {1}; \
   }


/* THIS MACRO IS USED TO CREATE COVERPOINT STO SAMPLE AHB FULL RESPONSE TYPE
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE  \
  response_type : coverpoint cov_response_type { \
    bins okay_resp = {svt_ahb_transaction::OKAY}; \
    bins error_resp = {svt_ahb_transaction::ERROR}; \
    bins retry_resp = {svt_ahb_transaction::RETRY}; \
    bins split_resp = {svt_ahb_transaction::SPLIT}; \
  }

/*THIS MACRO IS USED TO CREATE COVERPOINTS TO SAMPLE AHB_LITE RESPONSE TYPE
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE_AHB_LITE \
  response_type : coverpoint cov_response_type { \
    bins okay_resp = {svt_ahb_transaction::OKAY}; \
    bins error_resp = {svt_ahb_transaction::ERROR}; \
  }
  
/*This macro is used to create coverpoints to sample the response transistion between consecutive beats
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE \
  hresp_transistion : coverpoint cov_hresp_transistion_type { \
   bins okay_okay = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::OKAY} ); \
   bins okay_error = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::ERROR} ) ; \
   bins okay_split = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::SPLIT} ); \
   bins okay_retry = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::RETRY} ) ; \
   bins error_okay = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::OKAY} ); \
   bins error_error = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::ERROR} ) ; \
   bins error_split = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::SPLIT} ); \
   bins error_retry = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::RETRY} ); \
   bins split_okay = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::OKAY} ); \
   bins split_error = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::ERROR} ); \
   bins split_split = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::SPLIT} ) ; \
   bins split_retry = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::RETRY} ); \
   bins retry_okay = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::OKAY} ); \
   bins retry_error = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::ERROR} ) ; \
   bins retry_split  = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::SPLIT} ) ; \
   bins retry_retry = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::RETRY} ); \
 }

/*This macro is used to create coverpoints to cover the transistion of hresp for ahb lite
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_AHB_LITE \
  hresp_transistion : coverpoint cov_hresp_transistion_type { \
   bins okay_okay = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::OKAY} ); \
   bins okay_error = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::ERROR} ) ; \
   bins error_okay = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::OKAY} ); \
   bins error_error = ( {svt_ahb_transaction::ERROR} => {svt_ahb_transaction::ERROR} ) ; \
 }

/*This macro is used to create coverpoints to cover transistion of hresp for ahb full on abort on error
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_ABORT_ON_ERROR_AHB_FULL \
  hresp_transistion : coverpoint cov_hresp_transistion_type { \
   bins okay_okay = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::OKAY} ); \
   bins okay_error = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::ERROR} ) ; \
   bins okay_split = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::SPLIT} ); \
   bins okay_retry = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::RETRY} ) ; \
   bins split_okay = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::OKAY} ); \
   bins split_error = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::ERROR} ); \
   bins split_split = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::SPLIT} ) ; \
   bins split_retry = ( {svt_ahb_transaction::SPLIT} => {svt_ahb_transaction::RETRY} ); \
   bins retry_okay = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::OKAY} ); \
   bins retry_error = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::ERROR} ) ; \
   bins retry_split  = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::SPLIT} ) ; \
   bins retry_retry = ( {svt_ahb_transaction::RETRY} => {svt_ahb_transaction::RETRY} ); \
 }

/*This macro is used to create coverpoints to cover transistion of hresp for ahb lite on abort on error
*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_ABORT_ON_ERROR_AHB_LITE \
  hresp_transistion : coverpoint cov_hresp_transistion_type { \
   bins okay_okay = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::OKAY} ); \
   bins okay_error = ( {svt_ahb_transaction::OKAY} => {svt_ahb_transaction::ERROR} ) ; \
 }


/*This Macro is used to create coverpoint and bins for the htrans_transitions
 *It takes 2 argunments
 * 1) "h_write" to specify the xact_type (0- READ, 1- WRITE)
 *     It is to create transition bins based on the xact type
 * 2) "type" to specify the cover point name based on the xact type
 *     It can be write_xact, write_xact_hready, read_xact and read_xact_hready
 *
 * The calling macro has to provide these information based on its requirement
 */ 

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(h_write, type) \
   htrans_transition : coverpoint cov_htrans_transition_``type { \
    bins nseq_nseq = (3'b10``h_write => 3'b10``h_write); \
    bins nseq_seq  = (3'b10``h_write => 3'b11``h_write); \
    bins seq_seq   = (3'b11``h_write => 3'b11``h_write); \
  }

`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HBURST_TRANSITION \
  hburst_transition : coverpoint cov_hburst_transition_type { \
    bins single_rd_single_rd = (4'b0000 => 4'b0000); \
    bins single_rd_single_wr = (4'b0000 => 4'b0001); \
    bins single_rd_incr_rd   = (4'b0000 => 4'b0010); \
    bins single_rd_incr_wr   = (4'b0000 => 4'b0011); \
    bins single_rd_wrap4_rd  = (4'b0000 => 4'b0100); \
    bins single_rd_wrap4_wr  = (4'b0000 => 4'b0101); \
    bins single_rd_incr4_rd  = (4'b0000 => 4'b0110); \
    bins single_rd_incr4_wr  = (4'b0000 => 4'b0111); \
    bins single_rd_wrap8_rd  = (4'b0000 => 4'b1000); \
    bins single_rd_wrap8_wr  = (4'b0000 => 4'b1001); \
    bins single_rd_incr8_rd  = (4'b0000 => 4'b1010); \
    bins single_rd_incr8_wr  = (4'b0000 => 4'b1011); \
    bins single_rd_wrap16_rd = (4'b0000 => 4'b1100); \
    bins single_rd_wrap16_wr = (4'b0000 => 4'b1101); \
    bins single_rd_incr16_rd = (4'b0000 => 4'b1110); \
    bins single_rd_incr16_wr = (4'b0000 => 4'b1111); \
    bins single_wr_single_rd = (4'b0001 => 4'b0000); \
    bins single_wr_single_wr = (4'b0001 => 4'b0001); \
    bins single_wr_incr_rd   = (4'b0001 => 4'b0010); \
    bins single_wr_incr_wr   = (4'b0001 => 4'b0011); \
    bins single_wr_wrap4_rd  = (4'b0001 => 4'b0100); \
    bins single_wr_wrap4_wr  = (4'b0001 => 4'b0101); \
    bins single_wr_incr4_rd  = (4'b0001 => 4'b0110); \
    bins single_wr_incr4_wr  = (4'b0001 => 4'b0111); \
    bins single_wr_wrap8_rd  = (4'b0001 => 4'b1000); \
    bins single_wr_wrap8_wr  = (4'b0001 => 4'b1001); \
    bins single_wr_incr8_rd  = (4'b0001 => 4'b1010); \
    bins single_wr_incr8_wr  = (4'b0001 => 4'b1011); \
    bins single_wr_wrap16_rd = (4'b0001 => 4'b1100); \
    bins single_wr_wrap16_wr = (4'b0001 => 4'b1101); \
    bins single_wr_incr16_rd = (4'b0001 => 4'b1110); \
    bins single_wr_incr16_wr = (4'b0001 => 4'b1111); \
    bins incr_rd_single_rd   = (4'b0010 => 4'b0000); \
    bins incr_rd_single_wr   = (4'b0010 => 4'b0001); \
    bins incr_rd_incr_rd     = (4'b0010 => 4'b0010); \
    bins incr_rd_incr_wr     = (4'b0010 => 4'b0011); \
    bins incr_rd_wrap4_rd    = (4'b0010 => 4'b0100); \
    bins incr_rd_wrap4_wr    = (4'b0010 => 4'b0101); \
    bins incr_rd_incr4_rd    = (4'b0010 => 4'b0110); \
    bins incr_rd_incr4_wr    = (4'b0010 => 4'b0111); \
    bins incr_rd_wrap8_rd    = (4'b0010 => 4'b1000); \
    bins incr_rd_wrap8_wr    = (4'b0010 => 4'b1001); \
    bins incr_rd_incr8_rd    = (4'b0010 => 4'b1010); \
    bins incr_rd_incr8_wr    = (4'b0010 => 4'b1011); \
    bins incr_rd_wrap16_rd   = (4'b0010 => 4'b1100); \
    bins incr_rd_wrap16_wr   = (4'b0010 => 4'b1101); \
    bins incr_rd_incr16_rd   = (4'b0010 => 4'b1110); \
    bins incr_rd_incr16_wr   = (4'b0010 => 4'b1111); \
    bins incr_wr_single_rd   = (4'b0011 => 4'b0000); \
    bins incr_wr_single_wr   = (4'b0011 => 4'b0001); \
    bins incr_wr_incr_rd     = (4'b0011 => 4'b0010); \
    bins incr_wr_incr_wr     = (4'b0011 => 4'b0011); \
    bins incr_wr_wrap4_rd    = (4'b0011 => 4'b0100); \
    bins incr_wr_wrap4_wr    = (4'b0011 => 4'b0101); \
    bins incr_wr_incr4_rd    = (4'b0011 => 4'b0110); \
    bins incr_wr_incr4_wr    = (4'b0011 => 4'b0111); \
    bins incr_wr_wrap8_rd    = (4'b0011 => 4'b1000); \
    bins incr_wr_wrap8_wr    = (4'b0011 => 4'b1001); \
    bins incr_wr_incr8_rd    = (4'b0011 => 4'b1010); \
    bins incr_wr_incr8_wr    = (4'b0011 => 4'b1011); \
    bins incr_wr_wrap16_rd   = (4'b0011 => 4'b1100); \
    bins incr_wr_wrap16_wr   = (4'b0011 => 4'b1101); \
    bins incr_wr_incr16_rd   = (4'b0011 => 4'b1110); \
    bins incr_wr_incr16_wr   = (4'b0011 => 4'b1111); \
    bins wrap4_rd_single_rd  = (4'b0100 => 4'b0000); \
    bins wrap4_rd_single_wr  = (4'b0100 => 4'b0001); \
    bins wrap4_rd_incr_rd    = (4'b0100 => 4'b0010); \
    bins wrap4_rd_incr_wr    = (4'b0100 => 4'b0011); \
    bins wrap4_rd_wrap4_rd   = (4'b0100 => 4'b0100); \
    bins wrap4_rd_wrap4_wr   = (4'b0100 => 4'b0101); \
    bins wrap4_rd_incr4_rd   = (4'b0100 => 4'b0110); \
    bins wrap4_rd_incr4_wr   = (4'b0100 => 4'b0111); \
    bins wrap4_rd_wrap8_rd   = (4'b0100 => 4'b1000); \
    bins wrap4_rd_wrap8_wr   = (4'b0100 => 4'b1001); \
    bins wrap4_rd_incr8_rd   = (4'b0100 => 4'b1010); \
    bins wrap4_rd_incr8_wr   = (4'b0100 => 4'b1011); \
    bins wrap4_rd_wrap16_rd  = (4'b0100 => 4'b1100); \
    bins wrap4_rd_wrap16_wr  = (4'b0100 => 4'b1101); \
    bins wrap4_rd_incr16_rd  = (4'b0100 => 4'b1110); \
    bins wrap4_rd_incr16_wr  = (4'b0100 => 4'b1111); \
    bins wrap4_wr_single_rd  = (4'b0101 => 4'b0000); \
    bins wrap4_wr_single_wr  = (4'b0101 => 4'b0001); \
    bins wrap4_wr_incr_rd    = (4'b0101 => 4'b0010); \
    bins wrap4_wr_incr_wr    = (4'b0101 => 4'b0011); \
    bins wrap4_wr_wrap4_rd   = (4'b0101 => 4'b0100); \
    bins wrap4_wr_wrap4_wr   = (4'b0101 => 4'b0101); \
    bins wrap4_wr_incr4_rd   = (4'b0101 => 4'b0110); \
    bins wrap4_wr_incr4_wr   = (4'b0101 => 4'b0111); \
    bins wrap4_wr_wrap8_rd   = (4'b0101 => 4'b1000); \
    bins wrap4_wr_wrap8_wr   = (4'b0101 => 4'b1001); \
    bins wrap4_wr_incr8_rd   = (4'b0101 => 4'b1010); \
    bins wrap4_wr_incr8_wr   = (4'b0101 => 4'b1011); \
    bins wrap4_wr_wrap16_rd  = (4'b0101 => 4'b1100); \
    bins wrap4_wr_wrap16_wr  = (4'b0101 => 4'b1101); \
    bins wrap4_wr_incr16_rd  = (4'b0101 => 4'b1110); \
    bins wrap4_wr_incr16_wr  = (4'b0101 => 4'b1111); \
    bins incr4_rd_single_rd  = (4'b0110 => 4'b0000); \
    bins incr4_rd_single_wr  = (4'b0110 => 4'b0001); \
    bins incr4_rd_incr_rd    = (4'b0110 => 4'b0010); \
    bins incr4_rd_incr_wr    = (4'b0110 => 4'b0011); \
    bins incr4_rd_wrap4_rd   = (4'b0110 => 4'b0100); \
    bins incr4_rd_wrap4_wr   = (4'b0110 => 4'b0101); \
    bins incr4_rd_incr4_rd   = (4'b0110 => 4'b0110); \
    bins incr4_rd_incr4_wr   = (4'b0110 => 4'b0111); \
    bins incr4_rd_wrap8_rd   = (4'b0110 => 4'b1000); \
    bins incr4_rd_wrap8_wr   = (4'b0110 => 4'b1001); \
    bins incr4_rd_incr8_rd   = (4'b0110 => 4'b1010); \
    bins incr4_rd_incr8_wr   = (4'b0110 => 4'b1011); \
    bins incr4_rd_wrap16_rd  = (4'b0110 => 4'b1100); \
    bins incr4_rd_wrap16_wr  = (4'b0110 => 4'b1101); \
    bins incr4_rd_incr16_rd  = (4'b0110 => 4'b1110); \
    bins incr4_rd_incr16_wr  = (4'b0110 => 4'b1111); \
    bins incr4_wr_single_rd  = (4'b0111 => 4'b0000); \
    bins incr4_wr_single_wr  = (4'b0111 => 4'b0001); \
    bins incr4_wr_incr_rd    = (4'b0111 => 4'b0010); \
    bins incr4_wr_incr_wr    = (4'b0111 => 4'b0011); \
    bins incr4_wr_wrap4_rd   = (4'b0111 => 4'b0100); \
    bins incr4_wr_wrap4_wr   = (4'b0111 => 4'b0101); \
    bins incr4_wr_incr4_rd   = (4'b0111 => 4'b0110); \
    bins incr4_wr_incr4_wr   = (4'b0111 => 4'b0111); \
    bins incr4_wr_wrap8_rd   = (4'b0111 => 4'b1000); \
    bins incr4_wr_wrap8_wr   = (4'b0111 => 4'b1001); \
    bins incr4_wr_incr8_rd   = (4'b0111 => 4'b1010); \
    bins incr4_wr_incr8_wr   = (4'b0111 => 4'b1011); \
    bins incr4_wr_wrap16_rd  = (4'b0111 => 4'b1100); \
    bins incr4_wr_wrap16_wr  = (4'b0111 => 4'b1101); \
    bins incr4_wr_incr16_rd  = (4'b0111 => 4'b1110); \
    bins incr4_wr_incr16_wr  = (4'b0111 => 4'b1111); \
    bins wrap8_rd_single_rd  = (4'b1000 => 4'b0000); \
    bins wrap8_rd_single_wr  = (4'b1000 => 4'b0001); \
    bins wrap8_rd_incr_rd    = (4'b1000 => 4'b0010); \
    bins wrap8_rd_incr_wr    = (4'b1000 => 4'b0011); \
    bins wrap8_rd_wrap4_rd   = (4'b1000 => 4'b0100); \
    bins wrap8_rd_wrap4_wr   = (4'b1000 => 4'b0101); \
    bins wrap8_rd_incr4_rd   = (4'b1000 => 4'b0110); \
    bins wrap8_rd_incr4_wr   = (4'b1000 => 4'b0111); \
    bins wrap8_rd_wrap8_rd   = (4'b1000 => 4'b1000); \
    bins wrap8_rd_wrap8_wr   = (4'b1000 => 4'b1001); \
    bins wrap8_rd_incr8_rd   = (4'b1000 => 4'b1010); \
    bins wrap8_rd_incr8_wr   = (4'b1000 => 4'b1011); \
    bins wrap8_rd_wrap16_rd  = (4'b1000 => 4'b1100); \
    bins wrap8_rd_wrap16_wr  = (4'b1000 => 4'b1101); \
    bins wrap8_rd_incr16_rd  = (4'b1000 => 4'b1110); \
    bins wrap8_rd_incr16_wr  = (4'b1000 => 4'b1111); \
    bins wrap8_wr_single_rd  = (4'b1001 => 4'b0000); \
    bins wrap8_wr_single_wr  = (4'b1001 => 4'b0001); \
    bins wrap8_wr_incr_rd    = (4'b1001 => 4'b0010); \
    bins wrap8_wr_incr_wr    = (4'b1001 => 4'b0011); \
    bins wrap8_wr_wrap4_rd   = (4'b1001 => 4'b0100); \
    bins wrap8_wr_wrap4_wr   = (4'b1001 => 4'b0101); \
    bins wrap8_wr_incr4_rd   = (4'b1001 => 4'b0110); \
    bins wrap8_wr_incr4_wr   = (4'b1001 => 4'b0111); \
    bins wrap8_wr_wrap8_rd   = (4'b1001 => 4'b1000); \
    bins wrap8_wr_wrap8_wr   = (4'b1001 => 4'b1001); \
    bins wrap8_wr_incr8_rd   = (4'b1001 => 4'b1010); \
    bins wrap8_wr_incr8_wr   = (4'b1001 => 4'b1011); \
    bins wrap8_wr_wrap16_rd  = (4'b1001 => 4'b1100); \
    bins wrap8_wr_wrap16_wr  = (4'b1001 => 4'b1101); \
    bins wrap8_wr_incr16_rd  = (4'b1001 => 4'b1110); \
    bins wrap8_wr_incr16_wr  = (4'b1001 => 4'b1111); \
    bins incr8_rd_single_rd  = (4'b1010 => 4'b0000); \
    bins incr8_rd_single_wr  = (4'b1010 => 4'b0001); \
    bins incr8_rd_incr_rd    = (4'b1010 => 4'b0010); \
    bins incr8_rd_incr_wr    = (4'b1010 => 4'b0011); \
    bins incr8_rd_wrap4_rd   = (4'b1010 => 4'b0100); \
    bins incr8_rd_wrap4_wr   = (4'b1010 => 4'b0101); \
    bins incr8_rd_incr4_rd   = (4'b1010 => 4'b0110); \
    bins incr8_rd_incr4_wr   = (4'b1010 => 4'b0111); \
    bins incr8_rd_wrap8_rd   = (4'b1010 => 4'b1000); \
    bins incr8_rd_wrap8_wr   = (4'b1010 => 4'b1001); \
    bins incr8_rd_incr8_rd   = (4'b1010 => 4'b1010); \
    bins incr8_rd_incr8_wr   = (4'b1010 => 4'b1011); \
    bins incr8_rd_wrap16_rd  = (4'b1010 => 4'b1100); \
    bins incr8_rd_wrap16_wr  = (4'b1010 => 4'b1101); \
    bins incr8_rd_incr16_rd  = (4'b1010 => 4'b1110); \
    bins incr8_rd_incr16_wr  = (4'b1010 => 4'b1111); \
    bins incr8_wr_single_rd  = (4'b1011 => 4'b0000); \
    bins incr8_wr_single_wr  = (4'b1011 => 4'b0001); \
    bins incr8_wr_incr_rd    = (4'b1011 => 4'b0010); \
    bins incr8_wr_incr_wr    = (4'b1011 => 4'b0011); \
    bins incr8_wr_wrap4_rd   = (4'b1011 => 4'b0100); \
    bins incr8_wr_wrap4_wr   = (4'b1011 => 4'b0101); \
    bins incr8_wr_incr4_rd   = (4'b1011 => 4'b0110); \
    bins incr8_wr_incr4_wr   = (4'b1011 => 4'b0111); \
    bins incr8_wr_wrap8_rd   = (4'b1011 => 4'b1000); \
    bins incr8_wr_wrap8_wr   = (4'b1011 => 4'b1001); \
    bins incr8_wr_incr8_rd   = (4'b1011 => 4'b1010); \
    bins incr8_wr_incr8_wr   = (4'b1011 => 4'b1011); \
    bins incr8_wr_wrap16_rd  = (4'b1011 => 4'b1100); \
    bins incr8_wr_wrap16_wr  = (4'b1011 => 4'b1101); \
    bins incr8_wr_incr16_rd  = (4'b1011 => 4'b1110); \
    bins incr8_wr_incr16_wr  = (4'b1011 => 4'b1111); \
    bins wrap16_rd_single_rd = (4'b1100 => 4'b0000); \
    bins wrap16_rd_single_wr = (4'b1100 => 4'b0001); \
    bins wrap16_rd_incr_rd   = (4'b1100 => 4'b0010); \
    bins wrap16_rd_incr_wr   = (4'b1100 => 4'b0011); \
    bins wrap16_rd_wrap4_rd  = (4'b1100 => 4'b0100); \
    bins wrap16_rd_wrap4_wr  = (4'b1100 => 4'b0101); \
    bins wrap16_rd_incr4_rd  = (4'b1100 => 4'b0110); \
    bins wrap16_rd_incr4_wr  = (4'b1100 => 4'b0111); \
    bins wrap16_rd_wrap8_rd  = (4'b1100 => 4'b1000); \
    bins wrap16_rd_wrap8_wr  = (4'b1100 => 4'b1001); \
    bins wrap16_rd_incr8_rd  = (4'b1100 => 4'b1010); \
    bins wrap16_rd_incr8_wr  = (4'b1100 => 4'b1011); \
    bins wrap16_rd_wrap16_rd = (4'b1100 => 4'b1100); \
    bins wrap16_rd_wrap16_wr = (4'b1100 => 4'b1101); \
    bins wrap16_rd_incr16_rd = (4'b1100 => 4'b1110); \
    bins wrap16_rd_incr16_wr = (4'b1100 => 4'b1111); \
    bins wrap16_wr_single_rd = (4'b1101 => 4'b0000); \
    bins wrap16_wr_single_wr = (4'b1101 => 4'b0001); \
    bins wrap16_wr_incr_rd   = (4'b1101 => 4'b0010); \
    bins wrap16_wr_incr_wr   = (4'b1101 => 4'b0011); \
    bins wrap16_wr_wrap4_rd  = (4'b1101 => 4'b0100); \
    bins wrap16_wr_wrap4_wr  = (4'b1101 => 4'b0101); \
    bins wrap16_wr_incr4_rd  = (4'b1101 => 4'b0110); \
    bins wrap16_wr_incr4_wr  = (4'b1101 => 4'b0111); \
    bins wrap16_wr_wrap8_rd  = (4'b1101 => 4'b1000); \
    bins wrap16_wr_wrap8_wr  = (4'b1101 => 4'b1001); \
    bins wrap16_wr_incr8_rd  = (4'b1101 => 4'b1010); \
    bins wrap16_wr_incr8_wr  = (4'b1101 => 4'b1011); \
    bins wrap16_wr_wrap16_rd = (4'b1101 => 4'b1100); \
    bins wrap16_wr_wrap16_wr = (4'b1101 => 4'b1101); \
    bins wrap16_wr_incr16_rd = (4'b1101 => 4'b1110); \
    bins wrap16_wr_incr16_wr = (4'b1101 => 4'b1111); \
    bins incr16_rd_single_rd = (4'b1110 => 4'b0000); \
    bins incr16_rd_single_wr = (4'b1110 => 4'b0001); \
    bins incr16_rd_incr_rd   = (4'b1110 => 4'b0010); \
    bins incr16_rd_incr_wr   = (4'b1110 => 4'b0011); \
    bins incr16_rd_wrap4_rd  = (4'b1110 => 4'b0100); \
    bins incr16_rd_wrap4_wr  = (4'b1110 => 4'b0101); \
    bins incr16_rd_incr4_rd  = (4'b1110 => 4'b0110); \
    bins incr16_rd_incr4_wr  = (4'b1110 => 4'b0111); \
    bins incr16_rd_wrap8_rd  = (4'b1110 => 4'b1000); \
    bins incr16_rd_wrap8_wr  = (4'b1110 => 4'b1001); \
    bins incr16_rd_incr8_rd  = (4'b1110 => 4'b1010); \
    bins incr16_rd_incr8_wr  = (4'b1110 => 4'b1011); \
    bins incr16_rd_wrap16_rd = (4'b1110 => 4'b1100); \
    bins incr16_rd_wrap16_wr = (4'b1110 => 4'b1101); \
    bins incr16_rd_incr16_rd = (4'b1110 => 4'b1110); \
    bins incr16_rd_incr16_wr = (4'b1110 => 4'b1111); \
    bins incr16_wr_single_rd = (4'b1111 => 4'b0000); \
    bins incr16_wr_single_wr = (4'b1111 => 4'b0001); \
    bins incr16_wr_incr_rd   = (4'b1111 => 4'b0010); \
    bins incr16_wr_incr_wr   = (4'b1111 => 4'b0011); \
    bins incr16_wr_wrap4_rd  = (4'b1111 => 4'b0100); \
    bins incr16_wr_wrap4_wr  = (4'b1111 => 4'b0101); \
    bins incr16_wr_incr4_rd  = (4'b1111 => 4'b0110); \
    bins incr16_wr_incr4_wr  = (4'b1111 => 4'b0111); \
    bins incr16_wr_wrap8_rd  = (4'b1111 => 4'b1000); \
    bins incr16_wr_wrap8_wr  = (4'b1111 => 4'b1001); \
    bins incr16_wr_incr8_rd  = (4'b1111 => 4'b1010); \
    bins incr16_wr_incr8_wr  = (4'b1111 => 4'b1011); \
    bins incr16_wr_wrap16_rd = (4'b1111 => 4'b1100); \
    bins incr16_wr_wrap16_wr = (4'b1111 => 4'b1101); \
    bins incr16_wr_incr16_rd = (4'b1111 => 4'b1110); \
    bins incr16_wr_incr16_wr = (4'b1111 => 4'b1111); \
  }

//======================================================================
// Signal level coverage macros 
//====================================================================== 

/**
 *  Macro consists covergroup having single bit as coverpoint and declaration of
 *  transition bins of single bit signal
 */
  //covergroup toggle_cov @(sample_event); \
  /** Removed the sampling enevt as it will call the sample*/
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CREATE_CG \
  covergroup toggle_cov ;\
    option.per_instance = 1; \
    option.goal = 100; \
    coverpoint signal_index { \
      bins toggle_bit_0to1 = (0 => 1); \
      bins toggle_bit_1to0 = (1 => 0); \
    } \
  endgroup
/**
 * Macro to give group name by appending signal name and bit index (e.g.
 * signal_toggle_awid_0) for ease of reading coverage report  
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TOGGLE_COV_SIGNAME_TO_GRP_NAME(signal_name, bitindex) \
   $sformatf("%0s_signal_toggle_%0s_bit%0d", cfg.inst, `SVT_DATA_UTIL_ARG_TO_STRING(signal_name), bitindex)
/**
 *  Macro used by variable width AHB,4,Lite signal instaces to trigger the
 *  local event and triggering coverage group.
 */    
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_COVER_SAMPLE_SIGNAL(signal_name) \
  foreach (signal_name``_toggle_cov[i]) begin \
    signal_name``_toggle_cov[i].bit_cov(ahb_monitor_mp.ahb_monitor_cb.signal_name[i]); \
  end 
/**
 *  Macro used by variable width AHB,4,Lite single bit signals to trigger the
 *  local event and triggering coverage group.
 */    
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_COVER_SAMPLE_SIGNAL_BIT(signal_name) \
  foreach (signal_name``_toggle_cov[i]) begin \
    signal_name``_toggle_cov[i].bit_cov(ahb_monitor_mp.ahb_monitor_cb.signal_name); \
  end 
/**
 * Macro used to create number of instances as per the respective width of the
 * signal 
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CREATE_REQ_INSTANCES(signal_name, signal_width, signal_enable) \
 if(signal_enable) begin \
  signal_name``_toggle_cov = new[signal_width]; \
  for (int i=0; i < signal_width; i++) begin \
    string s_inst_name = `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TOGGLE_COV_SIGNAME_TO_GRP_NAME(signal_name, i); \
    svt_toggle_cov_bit toggle_bit_inst = new(); \
    toggle_bit_inst.toggle_cov_bit.set_inst_name(s_inst_name); \
    signal_name``_toggle_cov[i] = toggle_bit_inst; \
  end \
 end \
 else begin \
 end
 /**
 * Macro used to create number of instances as per the respective width of the
 * signal 
 */
`define SVT_AHB_MASTER_MONITOR_DEF_COV_UTIL_CREATE_REQ_INSTANCES(signal_name, signal_width, signal_enable) \
 if(signal_enable) begin \
  signal_name``_toggle_cov = new[signal_width]; \
  for (int i=0; i < signal_width; i++) begin \
    string s_inst_name = `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TOGGLE_COV_SIGNAME_TO_GRP_NAME(signal_name, i); \
    svt_ahb_master_toggle_bit_cov toggle_bit_inst = new(); \
    toggle_bit_inst.toggle_cov_bit.set_inst_name(s_inst_name); \
    signal_name``_toggle_cov[i] = toggle_bit_inst; \
  end \
 end \
 else begin \
 end
/**
 * Macro used to create number of instances as per the respective width of the
 * signal 
 */
`define SVT_AHB_SLAVE_MONITOR_DEF_COV_UTIL_CREATE_REQ_INSTANCES(signal_name, signal_width, signal_enable) \
 if(signal_enable) begin \
  signal_name``_toggle_cov = new[signal_width]; \
  for (int i=0; i < signal_width; i++) begin \
    string s_inst_name = `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TOGGLE_COV_SIGNAME_TO_GRP_NAME(signal_name, i); \
    svt_ahb_slave_toggle_bit_cov toggle_bit_inst = new(); \
    toggle_bit_inst.toggle_cov_bit.set_inst_name(s_inst_name); \
    signal_name``_toggle_cov[i] = toggle_bit_inst; \
  end \
 end \
 else begin \
 end
/**
 * Macro to declare covergroup template
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
  covergroup signal_state_``signal_name @(sample_event); \
   option.per_instance = 1; \
    option.goal = 100; 
/**
 * Macro to create cross covergroup instances 
 */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(elements_name, sample_event) \
  covergroup trans_cross_ahb_``elements_name @(sample_event); \
   option.per_instance = 1; 
/**
 * Macro to create state covergroup instances 
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SET_STATE_CG_INST_NAME(signal_name) \
   signal_state_``signal_name = new(); \
   s_inst_name = `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_STATE_COV_SIGNAME_TO_GRP_NAME(signal_name); \
   signal_state_``signal_name.set_inst_name(s_inst_name); 
/** 
 * Macro to give cover group name by appending class name for ease of reading of
 * coverage report in case of state coverage
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_STATE_COV_SIGNAME_TO_GRP_NAME(signal_name) \
   $sformatf("%0s_signal_state_%0s", cfg.inst, `SVT_DATA_UTIL_ARG_TO_STRING(signal_name))

/**
 *  Following macros takes protocol signal, it's respective maximum value
 *  defined in *defines.svi and sample event as arguements and defines signal's
 *  min,mid,max bin value ranges in covergroup.
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RANGE_CG(signal_name, signal_max_val, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name``_min_mid_max : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
                { \
                   bins signal_name``_range_min = {0};\
`ifdef SVT_MULTI_SIM_COVPOINT_GREATER_THAN_32_BITS \
  // Need to come up with an alternative \
`else \
                   bins signal_name``_range_mid = {[1:(1024'd2**(signal_max_val)-2)]}; \
                   bins signal_name``_range_max = {((1024'd2**(signal_max_val))-1)}; \
`endif \
                } \
  endgroup

/**
 *  Following macro takes protocol signal related to transfer type (htrans) as arguement and defines
 *  specific bins of interest in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_transaction_trans_idle = {`SVT_AHB_TRANSACTION_TRANS_TYPE_IDLE}; \
       bins svt_ahb_transaction_trans_busy = {`SVT_AHB_TRANSACTION_TRANS_TYPE_BUSY}; \
       bins svt_ahb_transaction_trans_nseq = {`SVT_AHB_TRANSACTION_TRANS_TYPE_NSEQ}; \
       bins svt_ahb_transaction_trans_seq  = {`SVT_AHB_TRANSACTION_TRANS_TYPE_SEQ}; \
   } \
  endgroup
/**
 *  Following macro takes protocol signal related to size as arguement and defines
 *  specific bins of interest in covergroup
 */

  `ifdef SVT_AHB_GEN_COV_DATA_WIDTH_32_BIT
   `define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SIZE_CG(signal_name, sample_event) \
 \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_transaction_burst_size_8 =    {`SVT_AHB_TRANSACTION_BURST_SIZE_8}; \
       bins svt_ahb_transaction_burst_size_16 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_16}; \
       bins svt_ahb_transaction_burst_size_32 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_32}; \
       } \
  endgroup
`else
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SIZE_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_transaction_burst_size_8 =    {`SVT_AHB_TRANSACTION_BURST_SIZE_8}; \
       bins svt_ahb_transaction_burst_size_16 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_16}; \
       bins svt_ahb_transaction_burst_size_32 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_32}; \
       bins svt_ahb_transaction_burst_size_64 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_64}; \
       bins svt_ahb_transaction_burst_size_128 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_128}; \
       bins svt_ahb_transaction_burst_size_256 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_256}; \
       bins svt_ahb_transaction_burst_size_512 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_512}; \
       bins svt_ahb_transaction_burst_size_1024 = {`SVT_AHB_TRANSACTION_BURST_SIZE_1024}; \
       ignore_bins ignore_burst_size_16 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_16} iff (cfg.data_width < 16); \
       ignore_bins ignore_burst_size_32 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_32} iff (cfg.data_width < 32); \
       ignore_bins ignore_burst_size_64 =   {`SVT_AHB_TRANSACTION_BURST_SIZE_64} iff (cfg.data_width < 64); \
       ignore_bins ignore_burst_size_128 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_128} iff (cfg.data_width < 128); \
       ignore_bins ignore_burst_size_256 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_256} iff (cfg.data_width < 256); \
       ignore_bins ignore_burst_size_512 =  {`SVT_AHB_TRANSACTION_BURST_SIZE_512} iff (cfg.data_width < 512); \
       ignore_bins ignore_burst_size_1024 = {`SVT_AHB_TRANSACTION_BURST_SIZE_1024} iff (cfg.data_width < 1024); \
   } \
  endgroup
  `endif
/**
 *  Following macro takes protocol signal related to burst as arguement and defines
 *  specific bins of interest in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_transaction_burst_single = {`SVT_AHB_TRANSACTION_BURST_TYPE_SINGLE}; \
       bins svt_ahb_transaction_burst_incr  = {`SVT_AHB_TRANSACTION_BURST_TYPE_INCR}; \
       bins svt_ahb_transaction_burst_wrap4  = {`SVT_AHB_TRANSACTION_BURST_TYPE_WRAP4}; \
       bins svt_ahb_transaction_burst_incr4  = {`SVT_AHB_TRANSACTION_BURST_TYPE_INCR4}; \
       bins svt_ahb_transaction_burst_wrap8  = {`SVT_AHB_TRANSACTION_BURST_TYPE_WRAP8}; \
       bins svt_ahb_transaction_burst_incr8  = {`SVT_AHB_TRANSACTION_BURST_TYPE_INCR8}; \
       bins svt_ahb_transaction_burst_wrap16  = {`SVT_AHB_TRANSACTION_BURST_TYPE_WRAP16}; \
       bins svt_ahb_transaction_burst_incr16  = {`SVT_AHB_TRANSACTION_BURST_TYPE_INCR16}; \
   } \
  endgroup
/**
 *  Following macro takes protocol signal related to protection as arguement and defines
 *  specific bins of interest in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name \
   { \
       bins svt_ahb_opcode_fetch        = {`SVT_AHB_TRANSACTION_PROT0_TYPE_OPCODE_FETCH}; \
       bins svt_ahb_data_access         = {`SVT_AHB_TRANSACTION_PROT0_TYPE_DATA_ACCESS}; \
       bins svt_ahb_user_access         = {`SVT_AHB_TRANSACTION_PROT1_TYPE_USER_ACCESS}; \
       bins svt_ahb_privilidged_access  = {`SVT_AHB_TRANSACTION_PROT1_TYPE_PRIVILEDGED_ACCESS}; \
       bins svt_ahb_non_bufferable      = {`SVT_AHB_TRANSACTION_PROT2_TYPE_NON_BUFFERABLE}; \
       bins svt_ahb_bufferable          = {`SVT_AHB_TRANSACTION_PROT2_TYPE_BUFFERABLE}; \
       bins svt_ahb_non_cacheable       = {`SVT_AHB_TRANSACTION_PROT3_TYPE_NON_CACHEABLE}; \
       bins svt_ahb_cacheable           = {`SVT_AHB_TRANSACTION_PROT3_TYPE_CACHEABLE}; \
   } \
  endgroup
/**
 *  Following macro takes protocol signal related to response as arguement and defines
 *  specific bins of interest in covergroup
 */
`define SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESP_CG(signal_name, sample_event) \
 \
 `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_CG(signal_name, sample_event) \
   signal_name : coverpoint ahb_monitor_mp.ahb_monitor_cb.signal_name[1:0] \
   { \
       bins svt_ahb_okay_response  = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_OKAY}; \
       bins svt_ahb_error_response = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_ERROR}; \
       bins svt_ahb_retry_response = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_RETRY}; \
       bins svt_ahb_split_response = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_SPLIT}; \
       ignore_bins ignore_retry_split = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_RETRY, `SVT_AHB_TRANSACTION_RESPONSE_TYPE_SPLIT} iff \
       ((cfg.sys_cfg.ahb_lite == 1)) ; \
   } \
  endgroup

       //ignore_bins ignore_retry_split = {`SVT_AHB_TRANSACTION_RESPONSE_TYPE_RETRY, `SVT_AHB_TRANSACTION_RESPONSE_TYPE_SPLIT} iff \
       //((cfg.ahb_interface_type == svt_ahb_master_configuration::AHB_LITE)) ; \

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst, sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
  `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
   ahb_hburst : cross xact_type, burst_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hsize_dwlt_16
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HSIZE_DWLT_16(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hsize_dwlt_16, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_16 \
    ahb_hburst_hsize : cross xact_type, burst_type, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hsize_dwlt_32
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HSIZE_DWLT_32(sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hsize_dwlt_32,sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_32 \
    ahb_hburst_hsize : cross xact_type, burst_type, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hsize_dwlt_64
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HSIZE_DWLT_64(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hsize_dwlt_64, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_64 \
    ahb_hburst_hsize : cross xact_type, burst_type, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hsize_dwlt_128
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HSIZE_DWLT_128(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hsize_dwlt_128, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_128 \
    ahb_hburst_hsize : cross xact_type, burst_type, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hsize_dwlt_256
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HSIZE_DWLT_256(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hsize_dwlt_256, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_256 \
    ahb_hburst_hsize : cross xact_type, burst_type, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hsize_dwlt_512
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HSIZE_DWLT_512(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hsize_dwlt_512, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_512 \
    ahb_hburst_hsize : cross xact_type, burst_type, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hsize_dwlt_1024
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HSIZE_DWLT_1024(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hsize_dwlt_1024, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_1024 \
    ahb_hburst_hsize : cross xact_type, burst_type, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hsize_dweq_1024
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HSIZE_DWEQ_1024(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hsize_dweq_1024, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWEQ_1024 \
    ahb_hburst_hsize : cross xact_type, burst_type, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock_hsize_dwlt_16
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK_HSIZE_DWLT_16(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock_hsize_dwlt_16, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_16 \
    ahb_hburst_hlock_hsize : cross xact_type, burst_type, lock, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock_hsize_dwlt_32
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK_HSIZE_DWLT_32(sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock_hsize_dwlt_32,sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_32 \
    ahb_hburst_hlock_hsize : cross xact_type, burst_type, lock, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock_hsize_dwlt_64
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK_HSIZE_DWLT_64(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock_hsize_dwlt_64, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_64 \
    ahb_hburst_hlock_hsize : cross xact_type, burst_type, lock, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock_hsize_dwlt_128
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK_HSIZE_DWLT_128(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock_hsize_dwlt_128, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_128 \
    ahb_hburst_hlock_hsize : cross xact_type, burst_type, lock, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock_hsize_dwlt_256
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK_HSIZE_DWLT_256(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock_hsize_dwlt_256, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_256 \
    ahb_hburst_hlock_hsize : cross xact_type, burst_type, lock, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock_hsize_dwlt_512
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK_HSIZE_DWLT_512(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock_hsize_dwlt_512, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_512 \
    ahb_hburst_hlock_hsize : cross xact_type, burst_type, lock, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock_hsize_dwlt_1024
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK_HSIZE_DWLT_1024(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock_hsize_dwlt_1024, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_1024 \
    ahb_hburst_hlock_hsize : cross xact_type, burst_type, lock, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock_hsize_dweq_1024
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK_HSIZE_DWEQ_1024(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock_hsize_dweq_1024, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWEQ_1024 \
    ahb_hburst_hlock_hsize : cross xact_type, burst_type, lock, burst_size { \
      option.weight = 1; \
    } \
  endgroup


  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    ahb_hburst_haddr : cross xact_type, burst_type, addr { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hresp_full 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HRESP_FULL_AHB(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hresp_full_ahb, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HRESP_FULL_AHB \
    ahb_hburst_hresp : cross xact_type, burst_type, cov_response_type { \
      option.weight = 1; \
    } \
  endgroup




  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hresp_ahb_lite 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HRESP_AHB_LITE(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hresp_ahb_lite, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HRESP_AHB_LITE \
    ahb_hburst_hresp : cross xact_type, burst_type, cov_response_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr_hsize_dwlt_16
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR_HSIZE_DWLT_16(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr_hsize_dwlt_16, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_16 \
    ahb_hburst_haddr_hsize : cross xact_type, burst_type, addr, burst_size { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr_hsize_dwlt_32
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR_HSIZE_DWLT_32(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr_hsize_dwlt_32, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_32 \
    ahb_hburst_haddr_hsize : cross xact_type, burst_type, addr, burst_size { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr_hsize_dwlt_64
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR_HSIZE_DWLT_64(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr_hsize_dwlt_64, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_64 \
    ahb_hburst_haddr_hsize : cross xact_type, burst_type, addr, burst_size { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr_hsize_dwlt_128
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR_HSIZE_DWLT_128(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr_hsize_dwlt_128, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_128 \
    ahb_hburst_haddr_hsize : cross xact_type, burst_type, addr, burst_size { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr_hsize_dwlt_256
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR_HSIZE_DWLT_256(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr_hsize_dwlt_256, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_256 \
    ahb_hburst_haddr_hsize : cross xact_type, burst_type, addr, burst_size { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr_hsize_dwlt_512
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR_HSIZE_DWLT_512(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr_hsize_dwlt_512, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_512 \
    ahb_hburst_haddr_hsize : cross xact_type, burst_type, addr, burst_size { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr_hsize_dwlt_1024
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR_HSIZE_DWLT_1024(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr_hsize_dwlt_1024, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_1024 \
    ahb_hburst_haddr_hsize : cross xact_type, burst_type, addr, burst_size { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_haddr_hsize_dweq_1024
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HADDR_HSIZE_DWEQ_1024(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_haddr_hsize_dweq_1024, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWEQ_1024 \
    ahb_hburst_haddr_hsize : cross xact_type, burst_type, addr, burst_size { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot0 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT0(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot0, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT0_TYPE \
    ahb_hburst_hprot0 : cross xact_type, burst_type, prot0_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot1 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT1(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot1, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT1_TYPE \
    ahb_hburst_hprot1 : cross xact_type, burst_type, prot1_type { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot2 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT2(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot2, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT2_TYPE \
    ahb_hburst_hprot2 : cross xact_type, burst_type, prot2_type { \
      option.weight = 1; \
    } \
  endgroup  
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot3 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT3(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot3, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT3_TYPE \
    ahb_hburst_hprot3 : cross xact_type, burst_type, prot3_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot3_ex 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT3_EX(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot3_ex, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT3_EX_TYPE \
    ahb_hburst_hprot3_ex : cross xact_type, burst_type, prot3_ex_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot4_ex 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT4_EX(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot4_ex, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT4_EX_TYPE \
    ahb_hburst_hprot4_ex : cross xact_type, burst_type, prot4_ex_type { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot5_ex 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT5_EX(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot5_ex, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT5_EX_TYPE \
    ahb_hburst_hprot5_ex : cross xact_type, burst_type, prot5_ex_type { \
      option.weight = 1; \
    } \
  endgroup  
  
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hprot5 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HPROT6_EX(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hprot6_ex, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_PROT6_EX_TYPE \
    ahb_hburst_hprot6_ex : cross xact_type, burst_type, prot6_ex_type { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hnonsec 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HNONSEC(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hnonsec, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_NONSEC_TRANS \
    ahb_hburst_hnonsec : cross xact_type, burst_type, nonsec_trans { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_hlock 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_HLOCK(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_hlock, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_LOCK_TRANSFER \
    ahb_hburst_hlock : cross xact_type, burst_type, lock { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_page_boundary_size_dwlt_16 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_PAGE_BOUNDARY_SIZE_DWLT_16(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(page_boundary_size_dwlt_16, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_16 \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
    ahb_page_boundary_size : cross xact_type, addr_page_boundary, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_page_boundary_size_dwlt_32
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_PAGE_BOUNDARY_SIZE_DWLT_32(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(page_boundary_size_dwlt_32, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_32 \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
    ahb_page_boundary_size : cross xact_type, addr_page_boundary, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_page_boundary_size_dwlt_64 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_PAGE_BOUNDARY_SIZE_DWLT_64(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(page_boundary_size_dwlt_64, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_64 \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
    ahb_page_boundary_size : cross xact_type, addr_page_boundary, burst_size { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_page_boundary_size_dwlt_128
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_PAGE_BOUNDARY_SIZE_DWLT_128(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(page_boundary_size_dwlt_128, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_128 \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
    ahb_page_boundary_size : cross xact_type, addr_page_boundary, burst_size { \
      option.weight = 1; \
      ignore_bins addr_page_boundary_end_burst_size = \
      binsof(addr_page_boundary) intersect {[1020:1023]} && \
      binsof(burst_size) intersect { \
      svt_ahb_transaction::BURST_SIZE_64BIT }; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_page_boundary_size_dwlt_256 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_PAGE_BOUNDARY_SIZE_DWLT_256(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(page_boundary_size_dwlt_256, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_256 \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
    ahb_page_boundary_size : cross xact_type, addr_page_boundary, burst_size { \
      option.weight = 1; \
      ignore_bins addr_page_boundary_end_burst_size = \
      binsof(addr_page_boundary) intersect {[1020:1023]} && \
      binsof(burst_size) intersect { \
      svt_ahb_transaction::BURST_SIZE_64BIT,svt_ahb_transaction::BURST_SIZE_128BIT };\
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_page_boundary_size_dwlt_512
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_PAGE_BOUNDARY_SIZE_DWLT_512(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(page_boundary_size_dwlt_512, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_512 \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
    ahb_page_boundary_size : cross xact_type, addr_page_boundary, burst_size { \
      option.weight = 1; \
      ignore_bins addr_page_boundary_end_burst_size = \
      binsof(addr_page_boundary) intersect {[1020:1023]} && \
      binsof(burst_size) intersect { \
      svt_ahb_transaction::BURST_SIZE_64BIT,svt_ahb_transaction::BURST_SIZE_128BIT, \
      svt_ahb_transaction::BURST_SIZE_256BIT };\
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_page_boundary_size_dwlt_1024
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_PAGE_BOUNDARY_SIZE_DWLT_1024(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(page_boundary_size_dwlt_1024, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWLT_1024 \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
    ahb_page_boundary_size : cross xact_type, addr_page_boundary, burst_size { \
      option.weight = 1; \
      ignore_bins addr_page_boundary_end_burst_size = \
      binsof(addr_page_boundary) intersect {[1020:1023]} && \
      binsof(burst_size) intersect { \
      svt_ahb_transaction::BURST_SIZE_64BIT,svt_ahb_transaction::BURST_SIZE_128BIT, \
      svt_ahb_transaction::BURST_SIZE_256BIT,svt_ahb_transaction::BURST_SIZE_512BIT };\
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_page_boundary_size_dweq_1024 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_PAGE_BOUNDARY_SIZE_DWEQ_1024(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(page_boundary_size_dweq_1024, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_SIZE_DWEQ_1024 \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_ADDR_PAGE_BOUNDARY \
    ahb_page_boundary_size : cross xact_type, addr_page_boundary, burst_size { \
      option.weight = 1; \
      ignore_bins addr_page_boundary_end_burst_size = \
      binsof(addr_page_boundary) intersect {[1020:1023]} && \
      binsof(burst_size) intersect { \
      svt_ahb_transaction::BURST_SIZE_64BIT,svt_ahb_transaction::BURST_SIZE_128BIT, \
      svt_ahb_transaction::BURST_SIZE_256BIT,svt_ahb_transaction::BURST_SIZE_512BIT, \
      svt_ahb_transaction::BURST_SIZE_1024BIT}; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_size_addr_align 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_SIZE_ADDR_ALIGN(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(size_addr_align, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_SIZE_ADDR_ALIGNMENT \
    ahb_size_addr_align : cross xact_type, burst_size_addr_alignment { \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_burst_incr_number_of_beats 
   */


`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_BURST_INCR_NUM_BEATS(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(burst_incr_number_of_beats, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE_NUM_INCR_BEAT \
    ahb_burst_incr_number_of_beats : cross xact_type, burst_incr_number_of_beats { \
      option.weight = 1; \
      bins rd_wr_incr_number_of_beats = \
      binsof(xact_type) && binsof(burst_incr_number_of_beats);  \
    } \
  endgroup



  /**
   * Macro to create covergroup: trans_cross_ahb_num_busy_cycles_0_or_1
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_XACT_NUM_BUSY_CYCLES_0_OR_1(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(num_busy_cycles_0_or_1, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_BUSY_CYCLES_PER_BEAT_0_OR_1 \
    ahb_num_busy_cycles: cross xact_type, num_busy_cycles_per_beat{ \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_num_busy_cycles_grt_than_1
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_XACT_NUM_BUSY_CYCLES_GRT_THAN_1(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(num_busy_cycles_grt_than_1, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_BUSY_CYCLES_PER_BEAT_GRT_THAN_1 \
    ahb_num_busy_cycles: cross xact_type, num_busy_cycles_per_beat{ \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_num_wait_cycles_0_or_1
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_XACT_NUM_WAIT_CYCLES_0_OR_1(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(num_wait_cycles_0_or_1, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_WAIT_CYCLES_PER_BEAT_0_OR_1 \
    ahb_num_wait_cycles: cross xact_type, num_wait_cycles_per_beat{ \
      option.weight = 1; \
    } \
  endgroup  
  
  /**
   * Macro to create covergroup: trans_cross_ahb_num_wait_cycles_grt_than_1
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_XACT_NUM_WAIT_CYCLES_GRT_THAN_1(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(num_wait_cycles_grt_than_1, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_WAIT_CYCLES_PER_BEAT_GRT_THAN_1 \
    ahb_num_wait_cycles: cross xact_type, num_wait_cycles_per_beat{ \
      option.weight = 1; \
    } \
  endgroup  
 
  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_num_wait_cycles_0_or_1
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_NUM_WAIT_CYCLES_0_OR_1(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_num_wait_cycles_0_or_1, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_WAIT_CYCLES_PER_BEAT_0_OR_1 \
    ahb_hburst_num_wait_cycles: cross xact_type, burst_type, num_wait_cycles_per_beat{ \
      option.weight = 1; \
    } \
  endgroup

  /**
   * Macro to create covergroup: trans_cross_ahb_hburst_num_wait_cycles_grt_than_1
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HBURST_NUM_WAIT_CYCLES_GRT_THAN_1(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(hburst_num_wait_cycles_grt_than_1, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_NUM_WAIT_CYCLES_PER_BEAT_GRT_THAN_1 \
    ahb_hburst_num_wait_cycles: cross xact_type, burst_type, num_wait_cycles_per_beat{ \
      option.weight = 1; \
    } \
  endgroup  

  /**
   * Macro to create covergroup: trans_cross_ahb_burst_wrapped_addr_boundary 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_BURST_WRAPPED_ADDR_BOUNDARY(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(burst_wrapped_addr_boundary, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_WRAPPED_ADDR_BOUNDARY \
    ahb_burst_wrapped_addr_boundary : cross xact_type, burst_wrapped_addr_boundary { \
      option.weight = 1; \
    } \
  endgroup
  
  /**
   * Macro to create covergroup: trans_cross_ahb_burst_with_busy
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_BURST_WITH_BUSY(sample_event) \
  `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(burst_with_busy, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_BURST_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE \
    ahb_burst_with_busy : cross xact_type, burst_type, trans_type { \
      option.weight = 1; \
      ignore_bins ahb_single_burst = \
      binsof(burst_type) intersect {svt_ahb_transaction::SINGLE}; \
      ignore_bins ahb_non_busy_trans_type = binsof(trans_type) intersect { \
      svt_ahb_transaction::NSEQ,svt_ahb_transaction::SEQ, \
      svt_ahb_transaction::IDLE}; \
    } \
  endgroup

/**
   * Macro to create covergroup: trans_cross_ahb_htrans_xact 
   */
`ifndef SVT_AHB_GEN_IDLE_BIN
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HTRANS_XACT(sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(htrans_xact, sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE_IDLE_EXCLUDED \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    ahb_htrans_xact : cross trans_type, xact_type { \
      option.weight = 1; \
    } \
  endgroup 
`else
`define SVT_AHB_COMMON_MONITOR_DEF_CROSS_CG_UTIL_HTRANS_XACT(sample_event) \
    `SVT_AHB_COMMON_MONITOR_DEF_CROSS_COV_UTIL_CG(htrans_xact, sample_event) 
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_TRANS_TYPE \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_XACT_TYPE \
    ahb_htrans_xact : cross trans_type, xact_type { \
      option.weight = 1; \
    } \
  endgroup
`endif

/**
   * Macro to create covergroup: trans_ahb_hmaster 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HMASTER(sample_event) \
  covergroup trans_ahb_hmaster @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HMASTER \
  endgroup

/**
   * Macro to create covergroup:trans_ahb_hready_in_when_hsel_high
   */
 `define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HREADY_IN_WHEN_HSEL_HIGH(sample_event) \
 covergroup trans_ahb_hready_in_when_hsel_high @(sample_event); \
    option.per_instance = 1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HREADY_IN \
  endgroup


/**
   * MACRO TO CREATE COVERGROUP FOR FIRST BEAT OF A TRANSACTION AHB FULLL MODE
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HRESP_FIRST_BEAT(sample_event) \
 covergroup trans_ahb_hresp_first_beat @(sample_event); \
    option.per_instance = 1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE \
  endgroup

/**
   * MACRO TO CREATE COVERGRPUP TO SAMPLE RESPONSE TYOE FOR FIRST BEAT OF TRANSACTION FOR AHB LITE MODE
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HRESP_FIRST_BEAT_AHB_LITE(sample_event) \
 covergroup trans_ahb_hresp_first_beat_ahb_lite @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE_AHB_LITE \
  endgroup


/**
   * MACRO to create covergroup to see hresp transistion in single transaction for ahb full
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_BEAT_HRESP_TRANSISTION_CONTINUE_ON_ERROR_AHB_FULL(sample_event) \
 covergroup trans_ahb_beat_hresp_transistion_continue_on_error_ahb_full @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE \
  endgroup

/**
   * MACRO covergroup to see hresp transistion for ahb lite in single transaction for ahb lite
   */ 
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_BEAT_HRESP_TRANSISTION_CONTINUE_ON_ERROR_AHB_LITE(sample_event) \
 covergroup trans_ahb_beat_hresp_transistion_continue_on_error_ahb_lite @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_AHB_LITE \
  endgroup


/**
   * MACRO to create covergroup to see the hresp transistion for abort_on_error in ahb full mode
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_BEAT_HRESP_TRANSISTION_ABORT_ON_ERROR_AHB_FULL(sample_event) \
 covergroup trans_ahb_beat_hresp_transistion_abort_on_error_ahb_full @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_ABORT_ON_ERROR_AHB_FULL \
  endgroup

/**
   * MACRO to create covergroup to see the hresp transistion for abort_on_error in ahb full mode
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_BEAT_HRESP_TRANSISTION_ABORT_ON_ERROR_AHB_LITE(sample_event) \
 covergroup trans_ahb_beat_hresp_transistion_abort_on_error_ahb_lite @(sample_event); \
    option.per_instance =1; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE_ABORT_ON_ERROR_AHB_LITE \
  endgroup

/**
   * MACRO to create covergroup to see the hresp transistionfrom idle to nseq
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_IDLE_TO_NSEQ_HREADY_LOW(sample_event) \
 covergroup trans_ahb_idle_to_nseq_hready_low @(sample_event); \
  htrans_transistion : coverpoint cov_htrans_transistion { \
   bins idle_nseq = ( {svt_ahb_transaction::IDLE} => {svt_ahb_transaction::NSEQ} ) ; \
  } \
  option.per_instance =1 ; \
endgroup

/**
   * MACRO to create covergroup to see the hresp transistion for consecutive transactions
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_COV_DIFF_XACT_AHB_FULL(sample_event) \
  covergroup trans_ahb_htrans_cov_diff_xact_ahb_full @(sample_event); \
     option.per_instance =1 ; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TRANSISTION_TYPE \
  endgroup

/**
   * MACRO to create covergroup to sample hresp for all beat of transaction fotr ahb full mode
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HRESP_ALL_BEAT_AHB_FULL(sample_event) \
 covergroup trans_ahb_hresp_all_beat_ahb_full @(sample_event); \
    option.per_instance =1 ; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE \
  endgroup
 
/**
   * MACRO to create covergroup to sample hresp for all beat of transaction for ahb lite mode
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HRESP_ALL_BEAT_AHB_LITE(sample_event) \
 covergroup trans_ahb_hresp_all_beat_ahb_lite @(sample_event); \
    option.per_instance =1 ; \
     `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_RESPONSE_TYPE_AHB_LITE \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_htrans_transition_write_xact 
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_TRANSITION_WRITE_XACT(sample_event) \
  covergroup trans_ahb_htrans_transition_write_xact @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(1, write_xact) \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_htrans_transition_write_xact_hready
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_TRANSITION_WRITE_XACT_HREADY(sample_event) \
  covergroup trans_ahb_htrans_transition_write_xact_hready @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(1, write_xact_hready) \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_htrans_transition_read_xact
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_TRANSITION_READ_XACT(sample_event) \
  covergroup trans_ahb_htrans_transition_read_xact @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(0, read_xact) \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_htrans_transition_read_xact_hready
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HTRANS_TRANSITION_READ_XACT_HREADY(sample_event) \
  covergroup trans_ahb_htrans_transition_read_xact_hready @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HTRANS_TRANSITION(0, read_xact_hready) \
  endgroup

/**
   * Macro to create covergroup: trans_ahb_hburst_transition
   */
`define SVT_AHB_COMMON_MONITOR_DEF_CG_UTIL_HBURST_TRANSITION(sample_event) \
  covergroup trans_ahb_hburst_transition @(sample_event); \
   option.per_instance = 1; \
    `SVT_AHB_COMMON_MONITOR_DEF_COV_UTIL_HBURST_TRANSITION \
  endgroup

/** @endcond */

`endif //SVT_AHB_MON_CFG_BASED_COV_GRP_DEF

`endif
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
IFAt0b1gcFQyMg7dqYqydvhUXw6gTtp/2rraFxQk3IW0Pkl4/xSwSZTvjKl6JfGO
gEeH+9pUt1qKIekDTXAR1dWqKHvixbTH5LcH13VMFmJEbEZtwIWwQclqo+KYFigA
ilGMd6Q9Gi8f3xUkUuq3cp9P1PL+ioIPo68zN7EecLI=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 83        )
/GFRpYI1dlYu8G/83WBQ75T8DhYvh4624v5Cbq2yQjkKQvhCZw/BWOS7f8u1sw3/
dYwAFhTpgcGdN6q/gxkog4NuZwqjNhR+nhMyEUOqKGC7BpV096wneF4ke7lavtLi
`pragma protect end_protected
