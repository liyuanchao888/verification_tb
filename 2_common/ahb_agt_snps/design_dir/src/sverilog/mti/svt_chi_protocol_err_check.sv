//--------------------------------------------------------------------------
// COPYRIGHT (C) 2013-2020 SYNOPSYS INC.
// This software and the associated documentation are confidential and
// proprietary to Synopsys, Inc. Your use or disclosure of this software
// is subject to the terms and conditions of a written license agreement
// between you, or your company, and Synopsys, Inc. In the event of
// publications, the following notice is applicable:
//
// ALL RIGHTS RESERVED
//
// The entire notice above must be reproduced on all authorized copies.
//--------------------------------------------------------------------------

`ifndef GUARD_SVT_CHI_PROTOCOL_ERR_CHECK_SV
`define GUARD_SVT_CHI_PROTOCOL_ERR_CHECK_SV
/**
 * Class declaration of each of the error check stats instances using the 
 * `SVT_ERR_CHECK_STATS_COV_PREFIX_EXTENDED_CLASS_DECL(svt_chi_prot,stats_name) MACRO.
 * 
 * Each call of the MACRO would declare an extended "svt_err_check_stats_cov.sv" class
 * named as "svt_err_check_stats_cov_<stats_name>".
 */
`ifndef SVT_VMM_TECHNOLOGY
`ifndef SVT_AMBA_EXCLUDE_CHI_NODE_PL_CHECK_COVERAGE
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
kH6SMeAasUgFDIRbFF46bBhi7rP1InLxM0VWS0JeMNBfjOGHzFTKjA3eVyJ/M982
KTybQMmsM1D8dwxNr4HZ4AH733fcHPhqz7MsHlapSNBxOHVDRR5q2LJkkYvRZMJT
GenHdiaP1Hs+gv1RIBU8iRvyWAZyT8P+yN5LOGFeYAI=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 132       )
tG4fsoQEvryUc66x26ztICnPVOzsaJR3Q+d4RgZ3UNtccZCvNI74XD6ABKuOmaL3
Ev6q1skSSfwQqjVLC2gMffKzEeFJlagdO6BNcpgRr25oaa5mEyLjM3DOsCe25DTR
XkjnsoqdQgCe2sltIz4Uqd2WKA88pRYPO7Ksp2LYAXeuv1l71GD5BsMBl7/m6FNy
`pragma protect end_protected
//vcs_lic_vip_protect
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
lJ58+8nGFlaGhvXiUoBsYj2wKdmWyb61oQbC3ZCTHucYcVQbomHKuG0k45h7Oyjm
weEPVuLNb7/u08WeQhC91EaSJdwJw5iRBmzHxN3fl6Tb3qxa5MtmZrexG0dhFjMO
bPTZf+rTBZQ+J+Ls8pBMxliYQ2RiZenLgp7x8ZusyZI=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 535       )
idXzPNpua96l0mEd5aJOUAMobVxNZDTIEwJwEyGAqEf8h7lqqvoYN+YHFRwyeEtj
5nMtyBJCPqohRIAAgOhDQHYrNvsWAeAI03Z1j8O5rOCMlB+e2+PC8LxiGrT+BuCn
okm+wyvQqO5T0CmLl4iQ5zBufH3LI8i3eOaYMz7iUXDsemHIhcD+otRB9S/pRnK7
QcZE6YCHc1tCyRoNYU1mxH6V3fXG6Lb9ECNgyyIQuTygiuvGYV3t/CCwxh+lCZnk
/jeAKDIrkL+AGxiwi7KS85oKN1LP+OqcaOriDoYUmk02/n2i4fDOpi5vJFRS+RjT
Xk+8KQHxsWpAekSmbiZ+t3HRt4aPrbgKa5hU/UTjIvAQxExmw5GO6jXCPwpk4nsE
pLacm6k3DWQKqeis8qu+21Cdj4zZZI/qp0BjVjppoFBsA56vvTyX4Ypfkjcd3qRl
KxaKpiucIpa88R6zpvo8RD8bXwOegWhKhY2LF79Iu6Jug/RQLZqAOQOplzQTNEom
R/Dh6Emd7KBvUGKvedWBpVVLFXr4D1tMqnxym+X3YpU=
`pragma protect end_protected
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
DV/YRaFxG/AEf+GDeytcenV4Y/CdoiasozpKdTwaOCbBH+/UlexfXQ/vwpNgKcpI
RqlWi2Gb7WtaXbvdCCqjT/vh5liC/TdYz7UtVaRCbCEIsFpXp0bVmo8/D9JlRuyR
MJfFXer3Bf2VQB0nYKwvbG3b4jt6THZcvQgqNo7wws0=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 769       )
epQt7iy4u9clLUxwC3Nc01IwX55MQhyVHm0vNmRX4XwVcRNIqClMoWpga+5i2X4a
zh0SBSDXyZ/mcLv6wu1X4lvEtRuRH0H+Ad3WOUMqbIlEnre2iU0TNFQSdxmAEtdf
0G1GtopVZc+jzr4nmEsFjhH09nsFCQViXDcSRpOySm8DKBXwhLoV62CSMeagkYE/
SVP2vUJNVrQeOTF9Jt0GeX4wRFCOyH+EILfsxtiEhrOH+ToYPXAsfB3kOjyh2lPD
PGwMbcR1J0ckjVJ/vFHqgNUgtgP+QAhE4HdqrSkd/Z0+YaBZlkYGrQdObFy3nZ42
`pragma protect end_protected
//vcs_lic_vip_protect
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
Wv+cwi+T6FBml93Il29lktMWsssia3sPRFszNNCegZ+Pb0AzoXmo1UST4ixckIvT
RBxmPpIHeux/Wy7j+fI6tZs+83WB6kf0XqEaubPI5gE7zCe41eL7rCcTV43MDygc
i7y3xV96lSnJDVG6713l+CUNG4UfKIF7FlguZac9HMY=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 991       )
Hg/ioOdUXk2GP0fhn6LxEDxPoq5jQ+pkGRoeEA4s7312aj2n2jqYcpzxsvzqa82v
ugxKdylH/dLBM66Uymx7AOukESyJUlW92wH/IzxxnZViQ+bRgL0I4q+ZvsT7Ox1U
icLLIHcSoiWhK4Rih14MwLSVqXtg6yqHW9CTtkCIcgRcXXS+LW2g5Drgd3XoUauT
13yaEhdj/3tKjCZa6SPS7k/5FQwoV4EY53LoC1ayj12qaqbfshwsteXwr7918JP9
Zuv+20pgwFWaUc2Deso4L2KFpPVq2gxE00s0Azir/cY=
`pragma protect end_protected
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
YSero24DOS3pHOjA9+RElNM+lblGsvYItjCh8glDzU6GJ1HY++O8T5uii1o76M1U
CPixn1EsJgr6TEayNEoWfl3giyRRRVZjsmzg57N3er04+0dNO4TrWRfaM6YIMHEu
Gv5ija7kDscfkrGnCb+a0DrZC0k+aGFps1Y3/teBrnY=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 1142      )
j34zlRvL0N6axqwgnmdWPAO49zKd3SkXMWNC78ScG6c4G4h27JR6vX26heheLACO
Ll/9puApNRhf2oWX+qf2cnysiJpuHGW1u/ayF0LSMnTKR6WxCQqDXs2UYDeSctqx
Qu4b+ZNhIJhM8DWWRi0VzJnROH52HRHwxCa7vO66SORgs38Lq26zqUGPcDlCUsJZ
ddLGIaTZbkMOFBu+f5uS3A==
`pragma protect end_protected
//vcs_lic_vip_protect
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
AZTyi0mR0uaDZEUXUBaK+rsDTGpnsZJdVXHf6AsQOkPwvBz16RQZbywDV1VDyyzj
8/Pxwm+KHz1ZmNvbUlqgvaN8v8uQ7SfLEl2y9SIbJLkUPCLHkozQ631BNNv801xX
SALIDhRsUoR5cEB6KccLHJfm4OKhvNbHcb7x5W2bUOA=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 43399     )
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
`pragma protect end_protected
`endif //  `ifndef SVT_AMBA_EXCLUDE_CHI_NODE_PL_CHECK_COVERAGE

`endif //  `ifndef SVT_VMM_TECHNOLOGY



// =============================================================================
/**
 * Derived sampling and checking class used by CHI Protocol components to 
 * register layer wide checks.
 */
class svt_chi_protocol_err_check extends svt_err_check;

  /**
    @grouphdr chi_protocol_err_valid_data_flit_check Valid DAT flit checks
    This group contains checks for Data flits.
    */

  /**
    @grouphdr chi_protocol_err_ordering_check Request ordering checks
    This group contains ordering related checks.
    */

  /**
    @grouphdr chi_protocol_err_valid_response_flit_check Valid RSP flit checks
    This group contains checks for Response flits.
    */

  /**
    @grouphdr chi_protocol_err_valid_request_flit_check Valid REQ flit checks
    This group contains checks for Request flits.
    */

  /**
    @grouphdr chi_protocol_err_response_ordering_check Response sequencing checks 
    This group contains checks related to the ordering of response flits.
    */

  /**
    @grouphdr chi_protocol_err_response_flit_to_xact_association_check RSP flit to transaction association checks
    This group contains checks related to the association of Response flits to coherent transactions.
    */

  /**
    @grouphdr chi_protocol_err_data_flit_to_xact_association_check DAT flit to transaction association checks
    This group contains checks related to the association of Data flits to coherent transactions.
    */

  /**
    @grouphdr chi_protocol_err_retry_check Retry related checks
    This group contains retry related checks.
    */

  /**
    @grouphdr chi_protocol_err_dvmop_check DVMOp related checks
    This group contains DVMOp related checks.
    */

  /**
    @grouphdr chi_protocol_err_valid_snoop_req_check SNP REQ flit checks
    This group contains checks for Snoop Request flits.
    */

  /**
    @grouphdr chi_protocol_err_valid_resperr_check RespErr field checks
    This group contains checks for the RespErr field.
    */

  /**
    @grouphdr chi_protocol_err_valid_data_source_checks data_source field checks
    This group contains checks for the data_source field.
    */

  /**
    @grouphdr chi_protocol_err_valid_cache_state_in_resp_check Resp cache state checks
    This group contains checks the validity of the cache state in the Resp field.
    */

  /**
    @grouphdr chi_protocol_err_valid_sactive_check SACTIVE signal validity checks
    This group contains checks for SACTIVE signal.
    */

  /**
    @grouphdr chi_protocol_err_perf_cst_check Built-in perf monitor checks
    This group contains checks for performance metrics constraints violations.
    */
  
  /**
    @grouphdr chi_protocol_transaction_inactivity_check transaction timeout related checks
    This group contains checks for transaction inactivity timeout.
    */
  
  /**
    @grouphdr chi_protocol_exclusive_access_check Exclusive access related checks
    This group contains checks for Exclusive Access.
    */
  
  /**
    @grouphdr chi_protocol_dmt_check DMT related checks
    This group contains checks for DMT feature.
    */
  
  /**
    @grouphdr chi_protocol_dwt_check DWT related checks
    This group contains checks for DWT feature.
    */
  
  /**
    @grouphdr chi_protocol_trace_tag_check trace_tag related checks
    This group contains checks for trace_tag feature.
    */
  
  /**
    @grouphdr chi_protocol_sysco_interface_check sysco interface related checks
    This group contains checks for sysco interface feature.
    */
  
  /**
    @grouphdr chi_custom_check custom related checks
    This group contains custom checks.
    */
  
  /** @cond PRIVATE */
  // ****************************************************************************
  // Local Data
  // ****************************************************************************

  /**
   * The group name of the checks defined in this class.
   */
  local string group_name = "protocol";

  /**
   * The sub-group name of the <specify sub-group purpose> checks defined in this class.
   */
  local string sub_group_name = "";

  /**
   * Controls whether checks are enabled by default
   */
  local bit enable_default_chks;

  local svt_chi_node_configuration node_cfg;

  /** Enables protocol check coverage provided it pl_protocol_checks_coverage_enable is set
  * in the node configuration as well. If enable_pc_cov is 0, then protocol checks coverage
  * will not be enabled, even if it is set in configuration
  */
  local bit enable_pc_cov = 1;

  /** @endcond */
  
  // ****************************************************************************
  // Public Data Properties
  // ****************************************************************************

//  /**
//   * Check: <Description of failure situation>
//   */
//  svt_err_check_stats <check_name>_check;
`ifndef __SVDOC__
  /** @cond DEPRECATED_CHECK */
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * This check is deprecated. Please refer to the documentation of the checks 
   * svt_chi_protocol_err_check::tx_dat_flit_data_id_check and
   * svt_chi_protocol_err_check::rx_dat_flit_data_id_check.
   * Check the DataId field value related to data size and the width of the 
   * of DAT Flit.
   * ARM-IHI0050A: 11.9.23
   */
  svt_err_check_stats dat_flit_data_id_check;
  /** @endcond */
`endif //  `ifndef __SVDOC__
  
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check the DataId field value of transmitted DAT flits from the monitored DUT. <br>
   * This is determined based on data width of DAT VC along with data size of the 
   * corresponding transaction. <br>
   * Note that this check, in case CCF Wrap Order is set to True at the sender, checks that the first data flit transmitted corresponds to the critical chunk indicated by CCID (,ie, the data_id of the first data flit matches the CCID value). 
   * For the subsequent flits, the check ensures that the data_id values are set correctly. <br>
   * In case CCF Wrap Order is set to False at the sender, this check only verifies that the data_id takes one of the legal values prescribed in Table 11-29 (ARM-IHI0050A) and Table 12-41(ARM IHI 0050B-ID080717). <br>
   * Following are the Tx DAT flit types considered by this check. <br>. 
   * If the monitored DUT is RN: <br>
   * - CopyBackWrData
   * - NonCopyBackWrData
   * - SnpRespData
   * - SnpRespDataPtl
   * .
   * If the monitored DUT is SN: <br>
   * - CompData
   * . 
   * @end_check_description
   *
   * @check_pass
   * DataID value in the data flit transmitted by the active RN/SN agent is as per Table 11-29 (ARM-IHI0050A) and Table 12-41 (ARM IHI 0050B-ID080717).
   * @end_check_pass
   *
   * @check_fail
   * DataID value in the data flit transmitted by the active RN/SN agent violates the legal values specified in Table 11-29 (ARM-IHI0050A) and Table 12-41 (ARM IHI 0050B-ID080717).
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN and Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats tx_dat_flit_data_id_check;


  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check the DataId field value of received DAT flits by the monitored DUT. <br>
   * This is determined based on data width of DAT VC along with data size of the 
   * corresponding transaction. <br>
   * Note that this check, in case of in-order Interconnect, checks that the first data flit transmitted corresponds to the critical chunk indicated by CCID (,ie, the data_id of the first data flit matches the CCID value). 
   * For the subsequent flits, the check ensures that the data_id values are set correctly. <br>
   * Incase of out-of-order interconnect, this check only verifies that the Data_ID takes one of the legal values prescribed in Table 11-29 (ARM-IHI0050A) and Table 12-41(ARM IHI 0050B-ID080717). <br>
   * Following are the Rx DAT flit types considered by this check. <br>. 
   * If the monitored DUT is RN: <br>
   * - CompData
   * .
   * If the monitored DUT is SN: <br>
   * - NonCopyBackWrData
   * . 
   * @end_check_description
   *
   * @check_pass
   * DataID value in the data flit received by the RN/SN agent is as per Table 11-29 (ARM-IHI0050A) and Table 12-41(ARM IHI 0050B-ID080717).
   * @end_check_pass
   *
   * @check_fail
   * DataID value in the data flit received by the RN/SN agent violates the legal values specified in Table 11-29 (ARM-IHI0050A) and Table 12-41 (ARM IHI 0050B-ID080717).
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats rx_dat_flit_data_id_check;
  
  /**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that single ordered stream of requests from RN are ordered as per Request Ordering rules. <br>
   * Request Ordering Rules update from CHI Issue D onwards:
   * - In CHI Issue C or earlier, the Endpoint ordering guarantees the order of multiple transactions, from the same agent, to the same endpoint address range and includes the guarantee of Request Order. 
   * - In CHI Issue D or later, there will be no ordering guarantees between two ordered transactions from the same source that have different ordering requirements. In other words, Endpoint ordering guarantees the order of multiple transactions, from the same agent, to the same endpoint address range, but doesn’t include the guarantee of Request Order.
   * .
   * @end_check_description
   *
   * @check_pass
   * In CHI Issue C or earlier:   
   * - When a new Ordered transaction is observed and there are either no preceding Ordered transactions or there are preceding Ordered transactions whose ordering conditions are already met.
   * .
   * In CHI Issue D or later:
   * - When a new Request_Ordered transaction is observed and there are either no preceding Request_Ordered transactions or there are preceding Request_Ordered transactions whose ordering conditions are already met.
   * - When a new Endpoint_Ordered transaction is observed and there are either no preceding Endpoint_Ordered transactions or there are preceding Endpoint_Ordered transactions whose ordering conditions are already met.
   * .
   * @end_check_pass
   *
   * @check_fail
   * In CHI Issue C or earlier:   
   * - When a new Ordered transaction is observed and there are preceding Ordered transactions whose ordering requirements are not yet met.
   * .
   * In CHI Issue D or later:
   * - When a new Request_Ordered transaction is observed and there are preceding Request_Ordered transactions whose ordering requirements are not yet met.
   * - When a new Endpoint_Ordered transaction is observed and there are preceding Endpoint_Ordered transactions whose ordering requirements are not yet met.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * - svt_chi_node_configuration::num_req_order_streams should reflect the number
   *   of request order streams that the RN has. 
   * - The passive RN agent performs this check only when the number of request
   *   order streams is one, ie, svt_chi_node_configuration::num_req_order_streams is set to 1. 
   *   This is because the stream ID to which a given transaction
   *   belongs is not transmitted on the interface. So it is important to make 
   *   sure that the passive RN agent is configured appropriately for this.
   * - The passive RN agent can track the transactions those have the ReqOrder
   *   information transmitted on the interface, that is available through
   *   svt_chi_base_transaction::order_type. Note that the CopyBack type transactions 
   *   do not transmit the ReqOrder information on the interface through REQ VC Flit.
   * .
   * @end_check_additional_information
   */
  svt_err_check_stats single_req_order_stream_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the DBID field value of the following RSP flits is as follows. <br>
   * This check is applicable only when svt_chi_system_configuration::chi_version is 
   * set to svt_chi_system_configuration::VERSION_3_0. <br>
   * RSP flits: <br>
   * - SnpResp, RetryAck, ReadReceipt: In case of CHI v3.0 DBID field must be set to either zeroes or
   *   TxnID of originating request if applicable. For SnpResp, originating request
   *   is the Snoop request.
   * - Comp/DBID/CompDBIDResp: DBID field must be unique for a given transaction and can be reused only after the transaction completes
   * .
   * In case of WriteNoSnpZero and WriteUniqueZero transactions dbid field in Comp/DBID/COMPSBISREesp is inapplicable and can take any value.
   * @end_check_description
   *
   * @check_pass
   * For Dataless transactions with ExpCompAck asserted, the DBID field in the Comp response is unique and there are no other outstanding non-DMT and non-DCT transactions that have received the same DBID value. <br>
   * For Read transactions with ExpCompAck asserted, the DBID field in the RespSepData response is unique and there are no other outstanding non-DMT and non-DCT transactions that have received the same DBID value. <br>
   * For Write transactions(except WriteNoSnpZero and WriteUniqueZero), the DBID field in Comp (for Issue B or lower revisions) or DBIDResp or CompDBIDResp is unique and there are no other outstanding non-DMT and non-DCT transactions that have received the same DBID value.
   * @end_check_pass
   *
   * @check_fail
   * For Dataless transactions with ExpCompAck asserted, the DBID field in the Comp response is not unique; there is already an outstanding non-DMT and non-DCT transaction with the same DBID value. <br>
   * For Read transactions with ExpCompAck asserted, the DBID field in the RespSepData response is not unique; there is already an outstanding non-DMT and non-DCT transaction with the same DBID value. <br>
   * For Write transactions(except WriteNoSnpZero and WriteUniqueZero), the DBID field in Comp (for Issue B or lower revisions) DBIDResp or CompDBIDResp is not unique; there is already an outstanding non-DMT and non-DCT transaction with the same DBID value. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats rsp_flit_dbid_check;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the DBID field value of the following DAT flits is as follows. <br>
   * DAT flits: <br>
   * - SnpRespData, SnpRespDataPtl, NonCopyBackWrData, CopyBackWrData: In case of CHI-A nodes, DBID field
   *   must be zeroes or must be set to TxnID of originating request. For SnpRespData*, 
   *   originating request is the Snoop request.
   * - CompData: DBID field must be unique for a given non-DMT and non-DCT Read transaction with ExpCompAck asserted
   *   and can be reused only after the transaction completes.
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * For Write/Snoop transactions, the DBID of the observed Data flit is either zero or equal to the TxnID of the associated transaction. <br>
   * SCENARIO 2: <br>
   * For Read transactions with ExpCompAck asserted, the DBID of the observed Data flits is unique and there are no other
   * Outstanding non-DMT and non-DCT transactions that have received read data with the same DBID value. <br>
   * @end_check_pass
   *
   * @check_fail
   * In case of Write/Snoop transactions, the DBID of the observed Data flit is neither zero or equal to the TxnID of the associated transaction. <br>
   * In case of non-DMT and non-DCT Read transactions with ExpCompAck asserted, the DBID of the observed Data flits is not unique; there already is an
   * outstanding non-DMT and non-DCT transaction that has received read data with the same DBID value.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats dat_flit_dbid_check;  

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * - A Comp response sent separate from a DBIDResp or DBIDRespOrd response for a write transaction (except Atomic transactions) must include the same DBID field value in the Comp and DBIDResp or DBIDRespOrd message.
   * - Applicable only in case of non-copyback Write transactions and non-copyback Combined Write plus CMO transactions as the copyback transactions always include a combined CompDBIDResp response. Applicable only if the Direct Write Data transfer is not exercised for the Write transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A same DBID field value is observed in Comp and DBIDResp or DBIDRespOrd reponses for a non-copyback Write transaction or non-copyback Combined Write plus CMO transaction with separate comp and DBIDResp or DBIDRespOrd reponses.
   * @end_check_pass
   *
   * @check_fail
   * A different DBID field value is observed in Comp and DBIDResp or DBIDRespOrd reponses for a non-copyback Write transaction or non-copyback Combined Write plus CMO transaction with separate comp and DBIDResp or DBIDRespOrd reponses.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats separate_dbidresp_and_comp_must_include_same_dbid_value_check;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * For a Read transaction, if the DBID is valid then the DBID field must take same value in all the corresponding read data flits. DBID is valid if ExpCompAck is set to 1 for the corresponding Read transaction.
   * @end_check_description
   * 
   * @check_pass
   * A same DBID field value is observed in all the read data flits (CompData or DataSepResp) corresponding to a Read request with ExpCompAck set to 1.
   * @end_check_pass
   *
   * @check_fail
   * A difference in DBID field value is observed across the read data flits (CompData or DataSepResp) corresponding to a Read request with ExpCompAck set to 1. 
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats dbid_value_must_be_same_across_read_data_flits_check;

  /**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that the Ordering field of the transaction corresponding to the readreceipt is set. <br>
   * @end_check_description
   *
   * @check_pass
   * A ReadReceipt response is received for an Ordered Read transaction.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A ReadReceipt is received for a Read transaction whose request order field was set to "NO ORDERING REQUIRED". <br>
   * SCENARIO 2: <br>
   * A ReadReceipt is received, at a CHI Issue C RN, for an Ordered Read transaction which has already received RESPSEPDATA. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * If the request Order field indicates that ordering is required then
   * a ReadReceipt response must be returned on the CRSP channel when order has been established.
   * @end_check_additional_information
   * 
   */
  svt_err_check_stats associate_readreceipt_to_xact_check;

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the CCID field value in the data flit is set correctly. <br>
   * - CCID of all the data packets belonging to a transaction must be the same and equal to addr[5:4] of the corresponding Request.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The CCID field in the Data flit does not match with addr[5:4] of the corresponding transaction.
   * @end_check_pass
   *
   * @check_fail
   * The CCID field in the Data flit are equal to addr[5:4] of the corresponding transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_ccid_in_dat_flit_check;
  
/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - Data flit type must be set to one of the permitted values for the Snoop Request
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * A SnpRespData or SnpRespDataPtl response is observed for a non-forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * A SnpRespDataFwded, CompData or SnpRespDataPtl response is observed for a forward type Snoop request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A data response other than SnpRespData and SnpRespDataPtl is observed for a non-forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * A data response other than SnpRespDataFwded, CompData and SnpRespDataPtl is observed for a forward type Snoop request. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_dat_flit_type_for_snp_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - NONCOPYBACKWRDATA is valid only in case of WriteNoSnoop, WriteUnique and DVMOp type transactions
   * .
   * @end_check_description
   * 
   * @check_pass
   * A NonCopyBackWrData flit is received for a WriteNoSnoop, WriteUnique or DVMOp type transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CopyBackWrData flit is received for a transaction type other than WriteNoSnoop, WriteUnique and DVMOp.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_noncbwrdata_flit_for_xact_check;

  `ifdef SVT_CHI_ISSUE_C_ENABLE
    /**
     * @groupname chi_protocol_err_valid_response_flit_check
     * @check_description
     * Check that RespSepData response is seen only for Read transactions with:
     * - exclusive bit de-asserted.
     * - order field de-asserted or order field asserted along with ExpCompAck.
     * .
     * Also, if order field is asserted in the request, there should be no READRECEIPT response in case RespSepData flow is seen.
     * @end_check_description
     *
     * @check_pass
     * SCENARIO 1: <br>
     * A RespSepData is received for an unordered, non-exclusive Read transaction. <br>
     * SCENARIO 2: <br>
     * A RespSepData is received for an ordered Read transaction with ExpCompAck asserted and the Read has not received READRECEIPT response. <br>
     * SCENARIO 3: <br>
     * A RespSepData is received for the HN with sep read and sep resp enabled.
     * @end_check_pass
     *
     * @check_fail
     * SCENARIO 1: <br>
     * A RespSepData is received for an Exclusive Read other than ReadPreferUnique and MakeReadUnique transaction. <br>
     * SCENARIO 2: <br>
     * A RespSepData is received for an ordered Read transaction with ExpCompAck de-asserted. <br>
     * SCENARIO 3: <br>
     * A RespSepData is received for an ordered Read transaction which has already received READRECEIPT. <br>
     * SCENARIO 4: <br>
     * A RespSepData is received for the HN with sep read and sep resp disabled.
     * @end_check_fail
     *
     * @applicable_device_type
     * RN
     * @end_applicable_device_type
     * 
     * @check_additional_information
     * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
     * and if any of the HNs uses RespSepData DataSepResp Flow 
     * @end_check_additional_information
     * 
     */
    svt_err_check_stats associate_respsepdata_to_xact_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C, check that NCBWRDATACOMPACK flits are seen only for WriteUnique* transactions with ExpCompAck asserted. <br>
    * When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later, check that NCBWRDATACOMPACK flits are seen only for WriteUnique* or  WriteNoSnp* transactions with ExpCompAck asserted. <br>
    * @end_check_description
    * 
    * @check_pass
    * Check is passed for one of the below scenraios:
    * - A NCBWRDATACOMPACK flit is seen for a WriteUnique* transaction with ExpCompAck asserted.
    * - A NCBWRDATACOMPACK flit is seen for a WriteNoSnp* transacion with ExpCompAck asserted when svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later.
    * .
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique* transaction with ExpCompAck de-asserted. <br>
    * SCENARIO 2: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteNoSnp* transaction with any of the following attribute settings:
    * - ExpCompAck de-asserted
    * - svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or earlier
    * .
    * SCENARIO 3:
    * - When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or earlier, NCBWRDATACOMPACK flit is seen for a transaction other than WriteUnique* .
    * - When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later, NCBWRDATACOMPACK flit is seen for a transaction other than WriteUnique* or WriteNoSnp*.
    * .
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later.
    * @end_check_additional_information
    */
   svt_err_check_stats valid_ncbwrdatacompack_flit_for_xact_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * Check that NCBWRDATACOMPACK flits are seen for WriteUnique transactions only after the reception of both Comp and DBIDResp, or, CompDBIDResp response. <br>
    * Additionally checks that, in case separate Comp and DBID responses were observed, NCBWRDATACOMPACK flits are seen only if the Comp response was received first followed by the DBIDResp Response.
    * @end_check_description
    * 
    * @check_pass
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique transaction after the reception of both Comp and DBIDResp, or, CompDBIDResp response.
    * In case separate Comp and DBID responses were observed, the Comp response was received first followed by the DBIDResp Response.
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique transaction before the corresponding Comp and DBIDResp, or, CompDBIDResp is received. <br>
    * SCENARIO 2: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique transaction which received a DBIDResp before Comp response. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C.
    * This check won't be constructed and executed for svt_chi_node_configuration::chi_spec_revision set to ISSUE_D or later as the rule related to this check is relaxed.
    * @end_check_additional_information
    */
   svt_err_check_stats ncbwrdatacompack_after_comp_and_dbid_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * Check that the NCBWRDATACOMPACK response for an Ordered Write Observation Write* transaction is seen after all earlier OWO Write* transactions which are required to be ordered with respect to the current OWO Write* transaction received Comp responses. 
    * @end_check_description
    * 
    * @check_pass
    * A NCBWRDATACOMPACK flit is seen for a OWO Write* transaction after all earlier OWO Write* transactions which are required to be ordered with respect to the current OWO Write* transaction received Comp responses.
    * @end_check_pass
    *
    * @check_fail
    * A NCBWRDATACOMPACK flit is seen for a OWO Write* transaction before all earlier OWO Write* transactions which are required to be ordered with respect to the current OWO Write* transaction received Comp responses.
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later and svt_chi_node_configuration::num_req_order_streams is set to 1. <br>
    * This check is performed on OWO WriteUnique transactions when svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later whereas for
    * OWO WriteNoSnp transactions when svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later.
    * NOTE: OWO Write* transactions includes Combined Write and (P)CMO transactions as well.
    * @end_check_additional_information
    */
   svt_err_check_stats ncbwrdatacompack_flit_timing_check;
   
   /**
    * @groupname chi_protocol_err_valid_response_flit_check
    * @check_description
    * Snoop response, SnpResp, SnpRespFwded, SnpRespData or SnpRespDataFwded, must wait for receiving of all read data packets, CompData.
    * @end_check_description
    * 
    * @check_pass
    * Snoop response is seen while there are no outstanding reads to the same cacheline that have received at least one data flit but waiting to receive the remaining data flits.
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * Snoop response with data, SnpRespData or SnpRespDataFwded, is seen before an outstanding Read transaction to the same cacheline has received of all read data packets, CompData or DataSepResp. <br>
    * SCENARIO 2: <br>
    * Snoop response, SnpResp or SnpRespFwded, is seen before an outstanding Read transaction to the same cacheline has received of all read data packets, CompData or DataSepResp. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN-F
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later.
    * @end_check_additional_information
    */
   svt_err_check_stats valid_snp_response_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * Check that the DBID and HomeNID values in the DataSepResp flits match the DBID and SrcID values in the corresponding RespSepData. <br>
    * @end_check_description
    * 
    * @check_pass
    * SCENARIO 1: <br>
    * A DATASEPRESP flit is seen after the reception of the corresponding RESPSEPDATA, and, the DBID and HomeNID values in the DATASEPRESP match with the DBID and SrcID values in the RESPSEPDATA. <br>
    * SCENARIO 2: <br>
    * RESPSEPDATA flit is seen after the reception of one or more DATASEPRESP, and, the DBID and SrcID values in the RESPSEPDATA match with the DBID and HomeNID values in the DATASEPRESP. <br>
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * A DATASEPRESP flit is seen after the reception of the corresponding RESPSEPDATA, and, the DBID and HomeNID values in the DATASEPRESP don't match with the DBID and SrcID values in the RESPSEPDATA. <br>
    * SCENARIO 2: <br>
    * RESPSEPDATA flit is seen after the reception of one or more DATASEPRESP, and, the DBID and SrcID values in the RESPSEPDATA don't match with the DBID and HomeNID values in the DATASEPRESP. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
    * and if any of the HNs uses RespSepData DataSepResp Flow 
    * @end_check_additional_information
    */
    svt_err_check_stats matching_dbid_home_nid_in_respsepdata_datasepresp_check;

   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * For a given RN transactions, if resp_err_status set to NON_DATA_ERROR in one of the responses RespSepData or DataSepResp then both the responses RespSepData and DataSepResp
    * must have the resp_err_status as NON_DATA_ERROR and must have been generated from the same HN. Which also means that there must not be a scenario Where one of the responses
    * RespSepData or DataSepResp having NON_DATA_ERROR.
    * @end_check_description
    * 
    * @check_pass
    * One of the responses RespSepData or DataSepResp having resp_err_status set to NON_DATA_ERROR:
    * - Both the responses RespSepData and DataSepResp must have the resp_err_status as NON_DATA_ERROR. 
    * - Both the responses RespSepData and DataSepResp must have been generated from the same HN.
    * .
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * DataSepResp flits are not marked with resp_err_status NON_DATA_ERROR when RespSepData flit includes resp_err_status NON_DATA_ERROR. <br>
    * SCENARIO 2: <br>
    * RespSepData flits are not marked with resp_err_status NON_DATA_ERROR when DataSepResp flit includes resp_err_status NON_DATA_ERROR. <br>
    * SCENARIO 3: <br>
    * RespSepData and associated DataSepResp flits are not generated from the same HN when both RespSepData and associated DataSepResp flits resp_err_status set to NON_DATA_ERROR. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later.
    * and if any of the HNs uses RespSepData DataSepResp Flow 
    * @end_check_additional_information
    */
    svt_err_check_stats matching_resp_err_nderr_in_respsepdata_datasepresp_check;
  `endif

  `ifdef SVT_CHI_ISSUE_B_ENABLE
    /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that the data type of the flit matches the expected value. <br>
       * - WRITEDATACANCEL is valid only in case of WriteNoSnoop transactions with mem_attr other than DEVICE memory type  and WriteUniquePtl type transactions
       * .
       * @end_check_description
       * 
       * @check_pass
       * A WriteDataCancel flit is received for a WriteNoSnoop with mem_attr other than DEVICE memory type and WriteUniqueptl type transaction.
       * @end_check_pass
       *
       * @check_fail
       * A WriteDataCancel flit is not received for a transaction with mem_attr other than DEVICE memory type 
       * and WriteUniqueptl type transactions, when BE and data are set to zero.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN and SN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_writedatacancel_flit_for_xact_check;

      /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that in Write Data, a byte enable value of zero must set the associated data byte value to zero. <br>
       * @end_check_description
       * 
       * @check_pass
       * For a Write transaction, data byte lanes whose corresponding BE is de-asserted are zeroed out.
       * @end_check_pass
       *
       * @check_fail
       * For a Write transaction, data byte lanes whose corresponding BE is de-asserted take a non-zero value.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN and SN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_write_data_when_be_is_zero_check;

      /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that in Write Data with TagOp Update, a TU value of zero must set the associated Tag value to zero. <br>
       * @end_check_description
       * 
       * @check_pass
       * For a Write transaction with data_tag_op set to Update, Tag nibbles whose corresponding TU is de-asserted are zeroed out.
       * @end_check_pass
       *
       * @check_fail
       * For a Write transaction with data_tag_op set to Update, Tag nibbles whose corresponding TU is de-asserted take a non-zero value.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN and SN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_tag_when_tu_is_zero_in_tag_update_write_check;

      /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that in Snoop Data, a byte enable value of zero must set the associated data byte value to zero. <br>
       * @end_check_description
       * 
       * @check_pass
       * For a Snoop transaction, data byte lanes whose corresponding BE is de-asserted are zeroed out.
       * @end_check_pass
       *
       * @check_fail
       * For a Snoop transaction, data byte lanes whose corresponding BE is de-asserted take a non-zero value.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_snprespdata_when_be_is_zero_check;
  `endif

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - COPYBACKWRDATA is valid only in case of WriteBack, WriteClean and WriteEvict type transactions
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CopyBackWrData flit is received for a WriteBack, WriteClean or WriteEvict transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CopyBackWrData flit is received for a transaction type other than WriteBack, WriteClean and WriteEvict.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_cbwrdata_flit_for_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - COMPDATA is valid only in case of Read type transactions
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CompData flit is received for a Read transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CompData flit is received for a non-Read type transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_compdata_flit_for_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_request_flit_check
   * @check_description
   * Check that the Target ID field in the transaction request is set to the node ID of the HN as per the RN SAM. <br>
   * - When Target ID is not expected to be remapped at the Interconnect, RN must program the tgt_id of the request flit to the
   * correct value as per the SAM.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A request is received with the tgt_id set to the expected HN node ID.
   * @end_check_pass
   *
   * @check_fail
   * A request is received with the tgt_id set to a value other than the expected HN node ID.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN 
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when svt_chi_system_configuration::expect_target_id_remapping_by_interconnect is set to 0.
   * @end_check_additional_information
   */
  svt_err_check_stats expected_tgt_id_in_rn_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the Target ID is remapped correctly at the Interconnect. <br>
   * - When Target ID remapping is expected at the Interconnect, the Target ID field in the received
   * request must be remapped correctly as per the SAM.
   * - This check is performed when target ID is remapped by the Interconnect and the SAM is 
   * specified correctly in the system configuration.
   * .
   * @end_check_description
   * 
   * @check_pass
   * Remapped Target ID received in the response from the Interconnect matches the HN node ID as per the SAM.
   * @end_check_pass
   *
   * @check_fail
   * Remapped Target ID received in the response from the Interconnect does not match the HN node ID as per the SAM.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when svt_chi_system_configuration::expect_target_id_remapping_by_interconnect and 
   * svt_chi_system_configuration::rn_sam_specified_with_exp_tgt_id_remap_at_icn_enabled are set to 1.
   * @end_check_additional_information
   */
  svt_err_check_stats expected_remapped_tgt_id_in_response_check;
  
/**
   * @groupname chi_protocol_err_valid_request_flit_check
   * @check_description
   * Check that there are no multiple outstanding transactions from the same source with the same transaction IDs. <br>
   * - The TxnID must be unique for a given Requester. The Requester can reuse the ID only after
   *   it has received all responses associated with a previous transaction that has used the same TxnID
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * A request is received at an RN, and there are no outstanding transactions with the same TxnID. <br>
   * SCENARIO 2: <br>
   * A request is received at an SN, and there are no outstanding non-DMT transactions with the same TxnID. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A request is received at an RN, but there already is an outstanding request with the same TxnID. <br>
   * SCENARIO 2: <br>
   * A request is received at an SN, but there already is an outstanding non-DMT request with the same TxnID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats single_outstanding_req_per_txn_id_check;
   
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TransactionID, TargetID and SourceID fields are set correctly in the CompAck response. <br>
   * - The TgtID and SrcID must be set to the the SrcID and TgtID of the read data respectively. 
   *   The TxnID is set to the same value as the DBID value provided in the read data response.
   * .
   * @end_check_description
   *
   * @check_pass
   * A CompAck response is received and there's an outstanding transaction with ExpCompAck asserted, whose Source ID, Target ID and DBID
   * match with the TargetID, Source ID and TxnID of the CompAck respectively.
   * @end_check_pass
   *
   * @check_fail
   * A CompAck response is received when there are no outstanding transactions with expcompack asserted, whose Source ID, Target ID and DBID
   * match with the TargetID, Source ID and TxnID of the CompAck respectively.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_compack_rsp_flit_check;
   
/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response is sent only afer Comp/CompData response. <br>
   * - CompAck, if part of the transaction, must be observed only after Comp or all CompData responses are received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * A CompAck response is received for a transaction with ExpCompAck set and whose data phase is complete. <br>
   * For OWO Write transactions(svt_chi_transaction::exp_comp_ack set to 1 and svt_chi_transaction::order_type set to REQ_ORDERING_REQUIRED),:
   * -  When svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Compack must be send out after reception of Comp response.
   * -  When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, Compack must be send out after reception of one of the response Comp or DBIDResp or CompDBIDResp.
   * .
   * In case of WriteEvictorEvict transaction, the check will pass when CompAck response is received after the reception of Comp response (When req_status will be set to ACCEPT).
   * @end_check_pass
   *
   * @check_fail
   * A CompAck response is received for a transaction with ExpCompAck set but whose data phase is not yet complete. <br>
   * For OWO Write transactions(svt_chi_transaction::exp_comp_ack set to 1 and svt_chi_transaction::order_type set to REQ_ORDERING_REQUIRED),:
   * -  When svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Compack send out before reception of Comp response.
   * -  When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, Compack received before reception of one of the responses Comp or DBIDResp or CompDBIDResp.
   * .
   * In case of WriteEvictorEvict transaction, the check will fail when CompAck response is received before the reception of any response (When req_status other than ACCEPT) from the Completer.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * The data phase status can be known by looking at the data_status field in the transaction handle:
   * - data_status == INITIAL implies the data transfer hasn't yet begun for the transaction
   * - data_status == PARTIAL_ACCEPT implies the data transfer for the transaction is in progress
   * - data_status == ACCEPT implies the data transfer is complete.
   * .
   * @end_check_additional_information 
   */
  svt_err_check_stats expected_compack_check;
   
/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the SnpDVMOpResp is observed only after both SnpDVMOp request packets. <br>
   * - An RN must provide a response to a SnpDVMOp transaction only after it has received both SnpDVMOp request packets corresponding to that transaction.
   *   The TgtID and SrcID must be set to the the SrcID and TgtID of the read data respectively. 
   * .
   * @end_check_description
   *
   * @check_pass
   * A SnpResp flit is observed for a SnpDVMOp transaction, after both parts of the SnpDVMOp request are received 
   * @end_check_pass
   *
   * @check_fail
   * A SnpResp flit is observed for a SnpDVMOp transaction, while only one part of the SnpDVMOp request is received
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_snprsp_for_snpdvmop_check;

 /**
   * @groupname cache_state
   * @check_description
   * Check if the RN has transitioned from UCE to UD/UDP state while there is an ongoing READSHARED, READNOTSHAREDDIRTY,READCLEAN,  READONCE, 
   * READONCECLEANINVALID,READONCEMAKEINVALID transactions. 
   * This check will flag an error in case the cache is updated via frontdoor or backdoor accesses to move from UCE to dirty state while there is an outstanding Read.
   * .
   * @end_check_description
   *
   * @check_pass
   * If the RN has not transitioned to UD/UDP state from UCE state for READSHARED, READNOTSHAREDDIRTY,READCLEAN,  READONCE, 
   * READONCECLEANINVALID,READONCEMAKEINVALID transactions.
   * @end_check_pass
   *
   * @check_fail
   * If the RN has transitioned to UD/UDP state from UCE state for READSHARED, READNOTSHAREDDIRTY,READCLEAN,  READONCE, 
   * READONCECLEANINVALID,READONCEMAKEINVALID transactions.
   * @end_check_fail
   *
   * @applicable_device_type
   * Active RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is constructed only when partial_cache states are enabled at RN (svt_chi_node_configuration partial_cache_line_states_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats cache_transitioned_to_dirty_from_uce_for_read; 

  `ifdef SVT_CHI_ISSUE_E_ENABLE
  /**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the Range, Num, Scale, TG and TTL fields are set to valid values in a TLB Invalidate Type DVMOp transaction. <br>
   * - Range bit can be set to 1 only in case of DVMOp TLBI requests that are invalidate by VA or PA.
   * - Num and Scale fields can be set to non-zero values only in case of Range based DVMOp TLBI requests.
   * - TG and TTL can be set to non-zero values only in case of TLBI requests that are invalidate by VA or PA. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG and TTL fields are all set to zero in a DVMOp TLBI transaction. <br>
   * SCENARIO 2: <br>
   * Range is set to 1, TG is set to one of the permitted values and VA[15:12] is zeroed out based on the TG value in a DVMOp TLBI request that is Invalidate by VA or PA. <br>
   * SCENARIO 3: <br>
   * Range, Num and Scale are set to 0, and TG and TTL take legal combinations in a DVMOp TLBI with Leaf Hint request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG or TTL is set to a non-zero value in a DVMOp TLBI request that is not invalidate by VA or PA. <br>
   * SCENARIO 2: <br>
   * TG is set to zero in a Range based DVMOp TLBI request. <br>
   * SCENARIO 3: <br>
   * TG is set to 2'b10 in a Range based DVMOp TLBI request but VA[13:12] is not set to 0. <br>
   * SCENARIO 4: <br>
   * TG is set to 2'b11 in a Range based DVMOp TLBI request but VA[15:12] is not set to 0. <br>
   * SCENARIO 5: <br>
   * Num or Scale is set to a non-zero value in a non-Range based DVMOp TLBI request. <br>
   * SCENARIO 6: <br>
   * TTL is set to a non-zero value when TGT is 0 in a DVMOp TLBI request with Leaf Hint. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or greater  
   * svt_chi_node_configuration::dvm_version_support is set to DVM_v8_4 or greater and
   * DVM support is enabled in the RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
    svt_err_check_stats valid_tlbi_fields_in_dvmop_check;

  /**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the Range, Num, Scale, TG and TTL fields are set to valid values in a TLB Invalidate Type SnpDVMOp transaction. <br>
   * - Range bit can be set to 1 only in case of SnpDVMOp TLBI requests that are invalidate by VA or PA.
   * - Num and Scale fields can be set to non-zero values only in case of Range based SnpDVMOp TLBI requests.
   * - TG and TTL can be set to non-zero values only in case of TLBI requests that are invalidate by VA or PA. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG and TTL fields are all set to zero in a SnpDVMOp TLBI request. <br>
   * SCENARIO 2: <br>
   * Range is set to 1, TG is set to one of the permitted values and VA[15:12] is zeroed out based on the TG value in a SnpDVMOp TLBI transaction that is Invalidate by VA or PA. <br>
   * SCENARIO 3: <br>
   * Range, Num and Scale are set to 0, and TG and TTL take legal combinations in a SnpDVMOp TLBI with Leaf Hint request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG or TTL is set to a non-zero value in a SnpDVMOp TLBI request that is not invalidate by VA or PA. <br>
   * SCENARIO 2: <br>
   * TG is set to zero in a Range based SnpDVMOp TLBI transaction. <br>
   * SCENARIO 3: <br>
   * TG is set to 2'b10 in a Range based SnpDVMOp TLBI transaction but VA[13:12] is not set to 0. <br>
   * SCENARIO 4: <br>
   * TG is set to 2'b11 in a Range based SnpDVMOp TLBI transaction but VA[15:12] is not set to 0. <br>
   * SCENARIO 5: <br>
   * Num or Scale is set to a non-zero value in a non-Range based SnpDVMOp TLBI request. <br>
   * SCENARIO 6: <br>
   * TTL is set to a non-zero value when TGT is 0 in a SnpDVMOp TLBI request with Leaf Hint. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or greater  
   * svt_chi_node_configuration::dvm_version_support is set to DVM_v8_4 or greater and
   * DVM support is enabled in the RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
    svt_err_check_stats valid_tlbi_fields_in_snpdvmop_check;
  `endif

/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered WriteUnique transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteUnique transaction are received. 
   * - When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, DBIDResp or CompDBIDResp or Comp response for the current OWO WriteUnique is received whereas for 
       svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Comp response for the current OWO WriteUnique is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered WriteUnique transaction is sent only after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteUnique transactions are received.
   * - When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, DBIDResp or CompDBIDResp or Comp response for the current OWO WriteUnique is received whereas for 
       svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Comp response for the current OWO WriteUnique is received 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered WriteUnique transaction is sent before Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteUnique transactions are received.
   * - When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, CompAck response for an ordered WriteUnique transaction is sent before DBIDResp or CompDBIDResp or Comp response for the current OWO WriteUnique is received whereas for svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, CompAck response for an ordered WriteUnique transaction is sent before Comp response for the current OWO WriteUnique is received.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_writeunique_enable set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. <br>
   * This check is performed only on OWO WriteUnique transactions for which order field set to REQ_ORDERING_REQUIRED and exp_comp_Ack is set to 1.  
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_writeunique_compack_timing_check;
   
`ifdef SVT_CHI_ISSUE_D_ENABLE
/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered WriteNoSnp transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteNoSnp transaction are received. 
   * - DBIDResp or CompDBIDResp or Comp response for the current OWO WriteNoSnp transaction is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered WriteNoSnp transaction is sent only after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteNoSnp transactions are received.
   * - DBIDResp or CompDBIDResp or Comp response for the current OWO WriteNoSnp is received. 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered WriteNoSnp transaction is sent before Comp response of all earlier ordered Write transactions which are required to be ordered with respect to the current WriteNoSnp transactions are received.
   * - CompAck response for an ordered WriteNoSnp transaction is sent before DBIDResp or CompDBIDResp or Comp response for the current OWO WriteNoSnp is received.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_D_ENABLE macro is defined and svt_chi_node_configuration::chi_spec_revision is ISSUE_D or later. <br>
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_writenosnp_enable set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. <br>
   * This check is performed only on OWO WriteNoSnp transactions for which order field set to REQ_ORDERING_REQUIRED and exp_comp_Ack is set to 1.  
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_writenosnp_compack_timing_check;
  
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * Persist response seen for CleanSharedPersistSep or Combined Write_CleanSharedPersistSep transaction.
   * @end_check_pass
   *
   * @check_fail
   * Persist seen for transactions other than CleanSharedPersistSep and Combined Write_CleanSharedPersistSep
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_persist_flit_type_for_xact_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * CompPersist response seen for CleanSharedPersistSep or Combined Write_CleanSharedPersistSep transaction.
   * @end_check_pass
   *
   * @check_fail
   * CompPersist seen for transactions other than CleanSharedPersistSep and Combined Write_CleanSharedPersistSep
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In  case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_comppersist_flit_type_for_xact_check;

   /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response type must correspond to one of the permitted combinations for the CleanSharedPersistSep transaction 
   * @end_check_description
   * 
   * @check_pass
   * CompPersist response seen for CleanSharedPersistSep transaction.
   * Comp and Persist response is seen for CleansharedpersistSep transaction
   * @end_check_pass
   *
   * @check_fail
   * CompPersist response and Comp response is seen for  CleanSharedPersistSep transaction.
   * CompPersist response and Persist response is seen for  CleanSharedPersistSep transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later.
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_response_combinations_for_cleansharedpersistsep_check;
  
 /**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp/Persist/CompPersist response packet has valid resp_err value for CleanSharedPersistSep transaction. <br>
   * The associated comp/persist/comppersist response packet's resp_err field should not take EXOK value for CleanSharedPersistSep transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp/Persist/CompPersist response flits of a CleanSharedPersistSep transaction are as per Table 9-4 in the CHI-D or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp/Persist/CompPersist response flits of a CleanSharedPersistSep transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleansharedpersistsep_associated_response_legal_resperr_check;

  /**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp/CompPersist response packet has valid cache state value for a CleanSharedPersistSep transaction. <br>
   * The cache state in the associated comp/comppersist response packets of a CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp/CompPersist response of a CleanSharedPersistSep transaction is set to UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp/CompPersist response of a CleanSharedPersistSep transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleansharedpersistsep_associated_response_legal_cache_state_check;

`endif //issue_d_enable
   
`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Checks that a transaction receives either (COMP)DBIDResp or DBIDRespOrd, but not both. 
   * @end_check_description
   * 
   * @check_pass
   * When the transaction has received either (Comp)DBIDResp or DBIDREspOrd, but not both.
   * @end_check_pass
   *
   * @check_fail
   * When the transaction has received both (Comp)DBIDResp and DBIDREspOrd.  
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dbidresp_or_dbidresoprd_response_received_check;

 /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that DBIDRespOrd Response flit is seen only in case of non-Copyback Write or atomic transactions. <br>
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * DBIDRespOrd is received for a WriteNoSnp or WriteUnique or NoncopybackwriteCmos, Atomic request.
   * @end_check_pass
   *
   * @check_fail
   * DBIDRespOrd is received for a Copyback request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
 svt_err_check_stats valid_dbidrespord_flit_type_for_xact_check;

 /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The data_pull in the Snoop response to a stash snoop should be set to 0 when there exists outstanding transactions to the cache line which have received DBIDRespOrd response.
   * @end_check_description
   * 
   * @check_pass
   * If data_pull in the Snoop response for a Stash type snoop is set to 1 and there are no outstanding transactions targeting the same cacheline that have received a DBIDRespOrd response . <br>
   * @end_check_pass
   *
   * @check_fail
   * If data_pull in the Snoop response for a Stash type snoop is set to 1 and there are outstanding transactions targeting the same cacheline that have received a DBIDRespOrd response. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_E_ENABLE defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_E or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats data_pull_set_for_stash_snoop_when_outstanding_xacts_with_dbidrespord;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TargetID, TagGroupID and GroupIDExt fields are set correctly in TagMatch responses. <br>
   * - A TagMatch response can be received only for Write or Atomic transactions whose TagOp is set to Match.
   * - The TgtID and TagGroupID fields in a TagMatch response must match the SrcID and TagGroupID fields
   *   of the corresponding Write transaction with TagOp set to Match.
   * .
   * @end_check_description
   *
   * @check_pass
   * A TagMatch response is received and the TgtID and TagGroupID fields match with the SrcID and TagGroupID of an outstanding
   * Write transaction whose TagOp is set to Match.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A TagMatch response is received while there are no outstaning Writes or Atomics with TagOp set to Match. <br>
   * SCENARIO 2: <br>
   * A TagMatch response is received while there are outstaning Writes or Atomics with TagOp set to Match but
   * the TgtID and TagGroupID fields does not match with the SrcID or TagGroupID of an outstanding. <br>
   * Write transaction whose TagOp is set to Match.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats associate_tagmatch_to_xact_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the resp field is as per the expectation.The Resp value in the TagMatch response must be:
   * - A Fail when MTE is not supported.
   * - A Pass when MTE is supported but the Tag Match is not performed.
   * - A Pass if BE is all zeroes.
   * - A Pass if Write transaction is cancelled.
   * - A Fail when tag_match response is received and we see that data status is not ACCEPT
   * . 
   * @end_check_description
   *
   * @check_pass
   * The resp field is valid. The resp field is as below
   * - A Fail when MTE is not supported.
   * - A Pass when MTE is supported but the Tag Match is not performed.
   * - A Pass if BE is all zeroes.
   * - A Pass if Write transaction is cancelled.
   * - A Fail when tag_match response is received and we see that data status is not ACCEPT
   * . 
   * @end_check_pass
   *
   * @check_fail
   * The resp field is not valid. The resp field violates one or more of the below rules:
   * - A Fail when MTE is not supported.
   * - A Pass when MTE is supported but the Tag Match is not performed.
   * - A Pass if BE is all zeroes.
   * - A Pass if Write transaction is cancelled.
   * - A Fail when tag_match response is received and we see that data status is not ACCEPT
   * . 
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats associated_tagmatch_response_legal_resp_check;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multiple Write data flits corresponding to a Write or Atomic type transaction, the TagOp field
   * is set to the same value across all the Write data flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the Write data flits corresponding to a Write or Atomic type transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different value in the Write data flits corresponding to a Write or Atomic type transaction. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN, SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_write_data_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multiple Snoop data response flits corresponding to a Snoop transaction, the TagOp field
   * is set to the same value across all the Snoop data response flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the SnpRespData* flits corresponding to a Snoop transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different value in the SnpRespData* flits corresponding to a Snoop transaction. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_snoop_data_response_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multiple Read data flits corresponding to a Read type transaction, the TagOp field
   * is set to the same value across all the Read data flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the Read data flits corresponding to a Read or Atomic type transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different value in the Read data flits corresponding to a Read or Atomic type transaction. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_read_data_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multipe Forwarded CompData flits corresponding to a Forward type Snoop, the TagOp field
   * is set to the same value in all the Forwarded Compdata flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the Compdata flits corresponding to a Forward type Snoop. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different values in the Compdata flits corresponding to a Forward type Snoop. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1, DCT is enabled for atleast one of the HN-Fs and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_fwded_compdata_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multipe DataPull CompData flits corresponding to a Stash type Snoop involving DataPull, the TagOp field
   * is set to the same value in all the DataPull Compdata flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the DataPull Compdata flits corresponding to a Stash type Snoop. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different values in the DataPull flits corresponding to a Stash type Snoop. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1, Cache Stash and Data Pull are enabled for at least one HN-F
   * and the flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_data_pull_compdata_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in a Read data flit is set to a valid value for the corresponding Atomic or Read transaction type. <br>
   * This check is not performed in case the Read transaction has received a NON_DATA_ERROR response as the TagOp in the Read data can take
   * any value in such a case. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Read data flit is set to TAG_TRANSFER when the Target HN supports memory tagging. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the request TagOp is not TAG_INVALID,
   * the transaction type is not Atomic*, ReadNoSnp or ReadOnce* and the Target HN supports memory tagging. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_FETCH_MATCH. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Read data flit is set to TAG_TRANSFER when the Target HN does not support memory tagging. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the Target HN does not support memory tagging. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the transaction type is Atomic*, ReadNoSnp or ReadOnce*. <br>
   * SCENARIO 5: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the TagOp in the request is TAG_INVALID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_read_data_check;

 /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in a Read data flit is not set to Invalid when the Read Request TagOp is Transfer or Fetch and the 
   * target HN supports memory tagging. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_TRANSFER or TAG_UPDATE when the Read request TagOp is TAG_TRANSFER or TAG_FETCH_MATCH. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_INVALID when the Read request TagOp is TAG_TRANSFER or TAG_FETCH_MATCH. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and 
   * svt_chi_system_configuration::mem_tagging_setting_applicable_for_all_addresses_at_completer is set to 1. <br>
   * The check is applicable only in case of Read transactions targeting an HN that supports memory tagging.
   * @end_check_additional_information 
   */
 svt_err_check_stats read_data_tagop_not_invalid_for_transfer_fetch_req_tagop;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in a Write data flit is set to a valid value for the corresponding Atomic or Write transaction type. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Write data flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Write data flit is set to TAG_TRANSFER and the TagOp in the Write transaction request is TAG_TRANSFER. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Write data flit is set to TAG_TRANSFER and the TagOp in the corresponding CopyBack Write transaction request is TAG_UPDATE. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Write data flit is set to TAG_UPDATE and the TagOp in the Write transaction request is TAG_UPDATE. <br>
   * SCENARIO 5: <br>
   * The TagOp field in a Write data flit is set to TAG_FETCH_MATCH and the TagOp in the corresponding Write or Atomic transaction request is TAG_FETCH_MATCH. <br>
   * SCENARIO 6: <br>
   * The TagOp field in a Write data flit corresponding to a DVMOp transaction is set to TAG_INVALID. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Write data flit is set to TAG_UPDATE but the TagOp in the Write transaction request is TAG_TRANSFER. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Write data flit is set to TAG_FETCH_MATCH but the TagOp in the corresponding Write or Atomic transaction request is not TAG_FETCH_MATCH. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Write data flit is set to TAG_FETCH_MATCH, TAG_TRANSFER or TAG_UPDATE and the TagOp in the corresponding Write transaction request is TAG_INVALID. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Write data flit is set to TAG_TRANSFER but the TagOp in the corresponding Non-CopyBack Write transaction request is TAG_UPDATE. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Write data flit corresponding to a DVMOp transaction is set to a value other than TAG_INVALID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN, SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_write_data_check;
 
  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TagOp field in the Comp response is set to a value that is permitted by the specification for the corresponding transaction type. <br>
   * This check is not performed in case the Comp response has RespErr set to NON_DATA_ERROR as the TagOp in the response can take any value in case of
   * a Non-Data Error.
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Comp response flit is set to TAG_INVALID (irrespective of the transaction type). <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Comp response flit corresponding to a MakeReadUnique transaction is set to TAG_UPDATE and
   * the TagOp in the MakeReadUnique transaction request is TAG_TRANSFER. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Comp response flit corresponding to a transaction type other than MakeReadUnque is set to a value other than
   * TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Comp response flit corresponding to a MakeReadUnique transaction is set to TAG_UPDATE but
   * the TagOp in the MakeReadUnique transaction request is TAG_INVALID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_comp_response_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in the Comp response is set to a value that is permitted by the specification for the corresponding transaction type. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_TRANSFER. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_UPDATE. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_FETCH_MATCH. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and DCT is enabled for atleast one of the HN-Fs. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_fwded_compdata_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in the DataPull Compdata response corresponding to a Stash type Snoop involving DataPull
   * is set to a value that is permitted by the specification. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_TRANSFER. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_UPDATE. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_FETCH_MATCH. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later, , Cache Stash and Data Pull are enabled for at least one HN-F and
   * svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_data_pull_compdata_check;

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TU bits are set correctly in the Write data responses seen for Write transactions. <br>
   * - For all Write transactions with TagOp set to Update, TU bits that are not within the data window, specified by Addr and Size, 
   *   must be deasserted.
   * - In case of full cacheline Write transactions (Write*Full) with TagOp set to Update, all TU bits must be asserted.
   * - In case of Writes with TagOp set to a value other than TAG_UPDATE, the TU bits are inappicable and must be set to zero.
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * For a full cacheline Write transaction with TagOp in the data set to TAG_UPDATE, all TU bits are asserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write with TagOp in the data set to TAG_UPDATE, none of the TU bits outside of the data window are set. <br>
   * SCENARIO 3: <br>
   * For a Write with TagOp in the data set to a value other than TAG_UPDATE, none of the TU bits are set.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * For a full cacheline Write with TagOp in the data set to TAG_UPDATE, one or more TU bits are deasserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write with TagOp in the data set to TAG_UPDATE, any of the TU bits outside of the data window are set. <br> 
   * SCENARIO 3: <br>
   * For a Write with TagOp in the data set to a value other than TAG_UPDATE, one or more TU bits are asserted.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * This check is only applicable for Write type transactions. <br>
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_tag_update_value_in_write_data_check;

  /**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteNoSnp_CMO type transaction are received. 
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteNoSnp_(P)CMO type transaction is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is seen after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteNoSnp_CMO type transaction are received.
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteNoSnp_(P)CMO type transaction is received. 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is seen before Comp response of all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteNoSnp_(P)CMO type transaction are received.
   * - CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is seen before the reception of associated DBIDResp or CompDBIDResp or Comp response.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined and svt_chi_node_configuration::chi_spec_revision is ISSUE_E or later. <br>
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_combined_writenosnp_cmo_enable is set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. 
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_combined_writenosnp_cmo_compack_timing_check;

/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteUnique_(P)CMO type transaction are received. 
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteUnique_(P)CMO type transaction is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is seen after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteUnique_(P)CMO type transaction are received.
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteUnique_(P)CMO type transaction is received. 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is seen before Comp response of all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteUnique_(P)CMO type transaction are received.
   * - CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is seen before the reception of associated DBIDResp or CompDBIDResp or Comp response.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined and svt_chi_node_configuration::chi_spec_revision is ISSUE_E or later. <br>
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_combined_writeunique_cmo_enable is set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. 
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_combined_writeunique_cmo_compack_timing_check;

 /**
   * @groupname chi_protocol_dwt_check
   * @check_description
   * DWT is applicable only for non-copyback write transactions.
   * @end_check_description
   * 
   * @check_pass
   * DWT is used for non-copyback writes.
   * @end_check_pass
   *
   * @check_fail
   * DWT is used for transactions other than non-copyback writes.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DWT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_transaction_supporting_dwt_check;

 /**
   * @groupname chi_protocol_dwt_check
   * @check_description
   * DWT is not permitted in Non-CopyBack writes that are OWO writes.
   * DWT for Non-CopyBack writes cannot be used with ordering set to REQ_ORDERING_REQUIRED and exp_comp_ack set to 1. 
   * @end_check_description
   * 
   * @check_pass
   * DWT is used for non OWO writes.
   * @end_check_pass
   *
   * @check_fail
   * DWT is used for OWO writes.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DWT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_ordering_and_compack_combination_for_dwt_check;

 
 /**
   * @groupname chi_protocol_dwt_check
   * @check_description
   * DWT can be used by an HN only when DWT is enabled for that HN through svt_chi_system_configuration::set_hn_dwt_enable()
   * @end_check_description
   * 
   * @check_pass
   * DWT is used by an HN and DWT is enabled for that HN through svt_chi_system_configuration::set_hn_dwt_enable()
   * @end_check_pass
   *
   * @check_fail
   * DWT is used by an HN and DWT is not enabled for that HN through svt_chi_system_configuration::set_hn_dwt_enable()
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dwt_used_by_hn_with_dwt_enabled_check;

  
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packet has valid resp_err value for StashOnceSepUnique transaction. <br>
   * The associated response packet's resp_err field should not take EXOK value for StashOnceSepUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits of a StashOnceSepUnique transaction are as per CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits of a StashOnceSepUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashoncesepunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response has valid cache state value for a StashOnceSepUnique transaction. <br>
   * The cache state in the associated response of a StashOnceSepUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the response of a StashOnceSepUnique transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the response of a StashOnceSepUnique transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashoncesepunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packet has valid resp_err value for StashOnceSepShared transaction. <br>
   * The associated response packet's resp_err field should not take EXOK value for StashOnceSepShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits of a StashOnceSepShared transaction are as per the CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits of a StashOnceSepShared transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashoncesepshared_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response has valid cache state value for a StashOnceSepShared transaction. <br>
   * The cache state in the associated response of a StashOnceSepShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the response of a StashOnceSepShared transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the response of a StashOnceSepShared transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashoncesepshared_associated_comp_response_legal_cache_state_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that STASHDONE Response flit is seen only in case of StashOnceSepUnique and StashOnceSepShared transaction.
   * @end_check_description
   * 
   * @check_pass
   * STASHDONE response is received for StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_pass
   *
   * @check_fail
   * STASHDONE response is received for a transaction for non StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_stashdone_flit_type_for_xact_check;
  
  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that COMPSTASHDONE Response flit is seen only in case of StashOnceSepUnique and StashOnceSepShared transaction.
   * @end_check_description
   * 
   * @check_pass
   * COMPSTASHDONE response is received for StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_pass
   *
   * @check_fail
   * COMPSTASHDONE response is received for a transaction for non StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_compstashdone_flit_type_for_xact_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TargetID, DBID[7:0] and GroupIDExt fields are set correctly in StashDone responses. <br>
   * A StashDone response can be received only for StashOnceSep* transaction.
   * @end_check_description
   *
   * @check_pass
   * A StashDone response is received and the TgtID and DBID[7:0] fields match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_pass
   *
   * @check_fail
   * A StashDone response is received and the TgtID and DBID[7:0] fields does not match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   */
 svt_err_check_stats associate_stashdone_to_xact_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TargetID, DBID[7:0] and GroupIDExt fields are set correctly in CompStashDone responses. <br>
   * A CompStashDone response can be received only for StashOnceSep* transaction.
   * @end_check_description
   *
   * @check_pass
   * A CompStashDone response is received and the TgtID and DBID[7:0] fields match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CompStashDone response is received and the TgtID and DBID[7:0] fields does not match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   */
 svt_err_check_stats associate_compstashdone_to_xact_check;
 
`endif
   
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the SnpResp is observerd for a SnpDVMOp(sync) only when there are no outstanding DVMOp transactions at the RN. <br>
   * - Sending of a SnpResp implies that all DVM related operations have completed at the RN structures. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpResp flit is observed for a SnpDVMOp(sync) and there are no outstanding DVMOp transactions at the RN
   * @end_check_pass
   *
   * @check_fail
   * A SnpResp flit is observed for a SnpDVMOp(sync) while there are outstanding DVMOp transactions at the RN
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1) and
   * svt_chi_node_configuration::snp_dvmop_sync_response_policy is set to WAIT_FOR_ALL_OUTSTANDING_DVM_NON_SYNC_TO_COMPLETE.
   * @end_check_additional_information 
   */
  svt_err_check_stats snpresp_for_snpdvmop_sync_only_after_completion_of_all_non_dvm_sync_check;
    
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Snoop response flits. <br>
   * - The TgtID must be set to the the SrcID of the Snoop request. 
   *   The TxnID is set to the same value as the TxnID of the Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpResp is observed corresponding to one of the outstanding Snoop requests at the RN
   * @end_check_pass
   *
   * @check_fail
   * A SnpResp is observed but there are no outstanding Snoop requests with matching SourceID and TxnID values
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_snprsp_flit_check;
    
`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Snoop response flits. <br>
   * - The TgtID must be set to the the Src of the Forward type Snoop request. 
   *   The TxnID must be set to the same value as the TxnID of the Forward type Snoop request. 
   *   The SrcID must be set to the same value as the TgtID of the Forward type Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpRespFwded is observed corresponding to one of the outstanding Forward type Snoop requests at the RN.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A SnpRespFwded is observed but there are no outstanding Snoop requests with matching SourceID and TxnID values. <br>
   * SCENARIO 2: <br>
   * A SnpRespFwded is observed but the corresponding Snoop request with matching SourceID and TxnID values, is not a forward type Snoop. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_snprspfwded_flit_check;
  
/**  
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that SnpRespFwded is issued from the snooped RN to the Interconnect in case DCT is observed for a Forward type snoop with RetToSrc asserted. <br>
   * @end_check_description
   * 
   * @check_pass
   * A SnpRespDataFwded response corresponding to one of the outstanding Forward type Snoop requests with RetToSrc set to 1 is observed.
   * @end_check_pass
   *
   * @check_fail
   * A SnpRespFwded response corresponding to one of the outstanding Forward type Snoop requests with RetToSrc set to 1 is observed.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_fwded_response_type_for_ret_to_src_check;
  
/**  
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the FwdState indicated in the SnpRespFwded or SnpRespDataFwded response matches with the Resp field in the forwarded CompData. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * The FwdState field in the SnpRespDataFwded response matches with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * The FwdState field in the SnpRespFwded response matches with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The FwdState field in the SnpRespDataFwded response does not match with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * The FwdState field in the SnpRespFwded response does not match with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_fwd_state_in_fwded_snoop_response_check;
  
/**  
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data sent in the SnpRespDataFwded response matches with the data sent in the forwarded CompData for a given Forward type Snoop request. <br>
   * @end_check_description
   * 
   * @check_pass
   * The data in the SnpRespDataFwded response matches with the data in the CompData for a Forward type Snoop request.
   * @end_check_pass
   *
   * @check_fail
   * The data in the SnpRespDataFwded response does not match with the data in the CompData for a Forward type Snoop request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats snprspdatafwded_compdata_data_integrity_check;
  
/**  
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that when Byte Enables in the CopyBackWriteData are all de-asserted during CopyBack cancellation the Write Data bytes are all zeroed. <br>
   * @end_check_description
   * 
   * @check_pass
   * The byte enables in the CopyBackWriteData_I are all de-asserted and the Write Data bytes are all zeroed.
   * @end_check_pass
   *
   * @check_fail
   * The byte enables in the CopyBackWriteData_I are all de-asserted but the Write Data is not zeroed.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats copyback_cancellation_write_data_check;
`endif     

/**
   * @groupname chi_protocol_err_response_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in the Response flits. <br>
   * - The SrcID and TgtID of the response flit must match the TgtID and SrcID of the request while
   *   the Txn ID of the response flit must be the same as that of the Request 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A response flit is received for one of the outstanding transactions which is yet to receive a coherent response.
   * @end_check_pass
   *
   * @check_fail
   * A response flit is received but there are no outstanding transactions whose SrcID,TgtID and TxnID match the TgtID,SrcID and TxnID of the response.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * In case svt_chi_system_configuration::expect_target_id_remapping_by_interconnect is set to 1,
   * the SrcID of the response flit will not be compared with the TgtID of the outstanding requests at the RN.
   * @end_check_additional_information 
   */
  svt_err_check_stats associate_rsp_flit_to_xact_check;
      
/**
   * @groupname chi_protocol_err_response_flit_to_xact_association_check
   * @check_description
   * Check that the transaction for which the coherent response is received has not already received a coherent response <br>
   * - The number of Response flits received for a transaction must match the number of responses,
   *   specified in the spec, for that transaction type.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A response flit is received for one of the outstanding transactions which is yet to receive a coherent response.
   * @end_check_pass
   *
   * @check_fail
   * A response flit is received for one of the outstanding transactions which has already received all applicable coherent responses (resp_status == ACCEPT).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats expected_rsp_flit_for_xact_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Read Data flits. <br>
   * - When SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE  macro is not defined:
   * - The TgtID of the Read data flit must match the SrcID of the Request
   * - The SrcID of the Read data flit must match the TgtID of the Request
   * - The TxnID of the Read data flit must be the same as that of the Request 
   * .
   * - When SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE macro is defined:
   * - For RN: The TgtID of the Read data flit must match the SrcID of the Request irrespective of spec revision 
   * - For SN/HN: The TgtID of the Read data flit must match the SrcID of the Request for spec revision ISSUE_A 
   * - For SN/HN: The TgtID of the Read data flit must match the ReturnNID of the Request for spec revision ISSUE_B or later 
   * - For RN: The SrcID of the Read data flit must match the TgtID of the Request for ISSUE_A
   * - For RN: The HomeNID of the Read data flit must match the TgtID of the Request for ISSUE_B or later
   * - For SN/HN: The SrcID of the Read data flit must match the TgtID of the Request irrespective of spec revision 
   * - For RN: The TxnID of the Read data flit must be the same as that of the Request irrespective of spec revision
   * - For SN/HN: The TxnID of the Read data flit must be the same as that of the Request for spec revision ISSUE_A 
   * - For SN/HN: The TxnID of the Read data flit must be the same as that of the ReturnTxnID Request for spec revision ISSUE_B or later
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CompData flit is received for one of the outstanding Read transactions whose data phase isn't complete yet.
   * @end_check_pass
   *
   * @check_fail
   * In case of a CHI-A node, a CompData flit is received but there are no outstanding transactions whose TgtID,SrcID and TxnID match with the SrcID,TgtID and TxnID of the CompData.
   * In case of CHI-B or later RN, a CompData flit is received but there are no outstanding transactions whose TgtID,SrcID and TxnID match with the HomeNID,TgtID and TxnID of the CompData.
   * In case of CHI-B or later SN, a CompData flit is received but there are no outstanding transactions whose TgtID,ReturnNID and ReturnTxnID match with the HomeNID,TgtID and TxnID of the CompData.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_read_dat_flit_with_xact_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the number of Read Data flits is equal to the expected value <br>
   * The number of data flits for a transaction is determined by number of bytes to be transferred and data bus width
   * @end_check_description
   * 
   * @check_pass
   * A Read Data flit is received for a Read transaction whose data phase is not yet complete  (data_status is either INITIAL or PARTIAL_ACCEPT)
   * @end_check_pass
   *
   * @check_fail
   * A Read Data flit is received for a Read transaction whose data phase is complete (data_status == ACCEPT)
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats expected_num_read_data_flits_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Write Data flits. <br>
   * - The SrcID of the Write data flit must match the Tgt ID of the request while
   *   the Txn ID of the response flit must be the same as that of the Request 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Write Data flit is received for one of the outstanding transactions whose data phase isn't yet complete (data_status is either INITIAL or PARTIAL_ACCEPT).
   * @end_check_pass
   *
   * @check_fail
   * A Write Data flit is received but there are no outstanding transactions whose SrcID,TgtID and TxnID match the SrcID, TgtID and TxnID of the Write Data.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_write_dat_flit_with_xact_check;
 
/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Write Data flits are transmitted only after CompDBIDResp/DBIDResp. <br>
   * @end_check_description
   * 
   * @check_pass
   * A Write Data flit is received and there is an active xact with matching
   * src_id, tgt_id and txn_id which has received a DBIDResp/CompDBIDResp
   * @end_check_pass
   *
   * @check_fail
   * A Write Data flit is received and there is an active transaction with matching
   * src_id, tgt_id and txn_id which hasn't yet received a DBIDResp/CompDBIDResp
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats write_dat_xfer_after_dbid_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the number of Write Data flits is equal to the expected value <br>
   * The number of data flits for a transaction is determined by number of bytes to be transferred and data bus width
   * @end_check_description
   * 
   * @check_pass
   * A Write Data flit is received and there is an active xact with matching
   * src_id, tgt_id and txn_id whose data_status is either INITIAL or PARTIAL_ACCEPT.
   * @end_check_pass
   *
   * @check_fail
   * A Write Data flit is received and there is an active xact with matching
   * src_id, tgt_id and txn_id whose data_status is ACCEPT.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats expected_num_write_data_flits_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Byte Enables are set correctly for Write Data <br>
   * - For all Write transactions, byte enables that are not within the data window, specified by Addr and Size, must be deasserted.
   * - For DVMOp transactions, only the least significant 8 bits must be asserted.
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * For a full cacheline Write transaction, all Byte Enable bits are asserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write, none of the Byte Enable bits outside of the data window are set. <br>
   * SCENARIO 3: <br>
   * When chi_spec_revision is ISSUE_B or greater, the cache state in the CopyBackWriteData is set to I and all BE bits are set to zero. <br>
   * SCENARIO 4: <br>
   * For a DVMOp, Byte Enable is set to 'hff. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * For a full cacheline Write transaction, one or more Byte Enable bits are deasserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write, any of the Byte Enable bits outside of the data window are set.  <br>
   * SCENARIO 3: <br>
   * When chi_spec_revision is ISSUE_B or greater, the cache state in the CopyBackWriteData is set to I but one or more Byte Enable bits are asserted. <br>
   * SCENARIO 4: <br>
   * For a DVMOp, Byte Enable is not set to 'hff. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check currently supports full Cacheline Write transaction types only.
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_byte_enable_for_write_data_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/** @cond PRIVATE */
/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Poison is set correctly for valid bytes of Write Data <br>
   * - For all transactions, poison bit is set to 1 only for the data with  valid byte enable asserted.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Write Data, the poison bit is set to 0 for all chunks of 8 data bytes whose Byte Enables are all de-asserted. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Write Data, the poison bit is set to 1 for any 8 byte data chunk whose Byte Enables are not all de-asserted. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::poison_enable is set to 1 
   *  .
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_poison_for_write_data_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Datacheck is set correctly for valid bytes of Write Data <br>
   * - For all transactions, datacheck bit is set to 1 only for the data with  valid byte enable asserted.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Write Data, the datacheck bit is set to 0 for all data bytes whose Byte Enable is de-asserted. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Write Data, the datacheck bit is set to 1 for any of the data bytes whose Byte Enable is de-asserted. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_datacheck_for_write_data_check;  
/** @endcond */

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Checks that the Datacheck is set correctly such that ODD Byte parity is generated for Write Data <br>
   * - For all transactions, datacheck bit is set appropriatly such that ODD Byte parity is generated across the data that is being transmited.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Write Data, when the datacheck along with data maintains ODD parity. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Write Data, when the datacheck along with data does not maintain ODD parity. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN and passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   *  The error message currently displays the expected and received datacheck values without masking out the invalid and poisoned byte lanes.
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_parity_datacheck_for_write_data_check;  

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Datacheck is set correctly such that ODD Byte parity is generated for Read Data <br>
   * - For all transactions, datacheck bit is set appropriatly such that ODD Byte parity is generated across the data that is being received.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Read Data, when the datacheck along with data maintains ODD parity. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Read Data, when the datacheck along with data does not maintain ODD parity. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   *  The error message currently displays the expected and received datacheck values without masking out the invalid and poisoned byte lanes.
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_parity_datacheck_for_read_data_check;  

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Checks that the Datacheck is set correctly such that ODD Byte parity is generated for Snoop Data <br>
   * - For all snoop transactions that involve data transfers, datacheck bit is set appropriatly such that ODD Byte parity is generated across the data that is being transmited.
   * .
   * @end_check_description
   * 
   * @check_pass
   * All SnpRespData flits corresponding to a Snoop request are received, and the datacheck in the SnpRespData was set such that ODD Byte parity is generated. <br>
   * @end_check_pass
   *
   * @check_fail
   * All SnpRespData flits corresponding to a Snoop request are received, and the datacheck in the SnpRespData was set such that ODD Byte parity is not generated <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_parity_datacheck_for_snoop_data_check; 
`endif 

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in SnpResp Data flits. <br>
   * - The TgtID must be set to the the SrcID of the Snoop request.
   *   The TxnID must be set to the same value as the TxnID of the Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * A SnpRespData is received whose TgtID and TxnID match with the SrcID and TxnID of one of the outstanding Snoop requests. <br>
   * Scenario 2: <br>
   * In a CHI-B or later system, a SnpRespDataFwded response is received whose TgtID and TxnID match with the SrcID and TxnID of one of the outstanding Forward type Snoop requests. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * A SnpRespData is received but there are no Snoop requests whose SrcID and TxnID match with the TgtID and TxnID of the SnpRespData flit. <br>
   * Scenario 2: <br>
   * In a CHI-B or later system, a SnpRespDataFwded response is received but there are no Forward type Snoops SrcID and TxnID match with the TgtID and TxnID of the SnpRespDataFwded flit. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_snprspdata_flit_with_snp_xact_check;
 
  `ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the SourceID, TargetID, Transaction ID and DBID fields are set correctly in the CompData flits used for DCT. <br>
   * - The TgtID must be set to the the FwdNID of the Snoop request.
   *   The SrcID must be set to the the TgtID of the Snoop request.
   *   The TxnID must be set to the FwdTxnID of the Snoop request. 
   *   The DBID must be set to the TxnID of the Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CompData is received from an RN whose SrcID, TgtID, TxnID and DBID match with the TgtID, FwdNID, FwdTxnID and TxnID of one of the outstanding Forward type Snoop requests.
   * @end_check_pass
   *
   * @check_fail
   * A CompData is received from an RN but there are no forward type Snoop requests whose TgtID, FwdNID, FwdTxnID and TxnID match with the SrcID, TgtID, TxnID and DBID of the CompData flit
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_compdata_flit_with_fwd_type_snp_xact_check;
`endif

/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that the credit type field in a PCrdReturn transaction is set correctly. <br>
   * Before the PCrdReturn flit, a PCrdGrant must have been received with the same PCrdType
   * @end_check_description
   * 
   * @check_pass
   * A PCrdReturn flit is seen after the reception of a corresponding PCrdGrant with the same PCrdType value.
   * @end_check_pass
   *
   * @check_fail
   * A PCrdReturn flit is seen without prior reception of a PCrdGrant with the same PCrdType value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_p_crd_type_in_pcrdreturn_flit_check;

/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * The transaction must only be retried by the Requester when a PCrdGrant is received with the correct PCrdType 
   * @end_check_description
   * 
   * @check_pass
   * A retry transaction is received while there are available granted credits for the PCrdType.
   * @end_check_pass
   *
   * @check_fail
   * A retry transaction is received while there are no available granted credits for the PCrdType,ie,
   * the retry tranaction is received without the recpetion of a PCrdGrant with the same PCrdType
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_retry_xact_after_pcrdcgrant_check;
  
/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that the transaction is retried only after RetryAck and PCrdGrant responses are received from the Target node. <br>
   * The transaction with credit must only be sent by the Requester after both the RetryAck response and an appropriate PCrdGrant response are received, and
   * the transaction attributes other than PCrdType, AllowRetry and QoS must be the same as the original request.
   * @end_check_description
   * 
   * @check_pass
   * A retry transaction is seen after the prior reception of PCrdGrant and RetryAck, with the SrcID and PCrdType set to the same value as the TgtID and PCrdType of the retry transaction, and, <br>
   * The attributes of the retry transaction match with those of the original request.
   * @end_check_pass
   *
   * @check_fail
   * A retry transaction is seen but there were no corresponding PCrdGrant and RetryAck, whose SrcID and PCrdType match the TgtID and PCrdType of the retry transaction, or, <br>
   * One or more attributes of the retry transaction do not match with those of the Original request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_retry_xact_check;
   
/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that PCrdReturn is sent only after RetryAck and PCrdGrant flits are received from the Target node. <br>
   * PcrdReturn transaction can only be sent after the reception of a PcrdGrant flit 
   * @end_check_description
   * 
   * @check_pass
   * A PCrdReturn transaction is seen after the prior reception of PCrdGrant and RetryAck, with the SrcID and PCrdType set to the same value as the TgtID and PCrdType of the PCrdReturn.
   * @end_check_pass
   *
   * @check_fail
   * A PCrdReturn transaction is seen but there were no corresponding PCrdGrant and RetryAck, whose SrcID and PCrdType match the TgtID and PCrdType of the PCrdReturn.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_pcrdreturn_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Checks PcrdGrant is not seen without any outstanding transaction. 
   * @end_check_description
   * 
   * @check_pass
   * PcrdGrant is seen and there are outstanding transaction.
   * @end_check_pass
   *
   * @check_fail
   * PcrdGrant is seen without any outstanding transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
 svt_err_check_stats valid_pcrdgrant_check;

/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that there shouldn't be any outstanding protocol credits at the end of simulation. Protocol credits must be utilized by retrying the original transaction or returned via PCRDRETURN.
   * @end_check_description
   * 
   * @check_pass
   * There are no outstanding protocol credits at the end of simulation.
   * @end_check_pass
   *
   * @check_fail
   * There are outstanding protocol credits at the end of simulation.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when svt_chi_node_configuration::end_of_simulation_checks_enable is set to 1.
   * @end_check_additional_information 
   *  
   */
 svt_err_check_stats end_of_simulation_outstanding_protocol_credit_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that there is only one outstanding DVMOp sync transaction at a given point in time. <br>
   * Only one SnpDVMOp(Sync) transaction can be outstanding from an MN to an RN. 
   * @end_check_description
   * 
   * @check_pass
   * A SnpDVMOp(Sync) request is received and there are no outstanding SnpDVMOp(Sync) requests at the RN.
   * @end_check_pass
   *
   * @check_fail
   * A SnpDVMOp(Sync) request is received but there are already outstanding SnpDVMOp(Sync) requests at the RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats single_outstanding_snpdvmop_sync_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the TxnID of a SnpDVMOp must be unique for a given Requester. <br>
   * - The TxnID must be unique for a given Requester.
   * - The Requester can reuse the ID only after it has received all responses associated with
   * - a previous transaction that has used the same TxnID 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpDVMOp request is received and there are no outstanding SnpDVMOp requests with the same TxnID value.
   * @end_check_pass
   *
   * @check_fail
   * A SnpDVMOp request is received but there is already an outstanding SnpDVMOp request with the same TxnID value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats single_outstanding_snpdvmop_per_txn_id_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a request to a cache line is issued when there are no outstanding Copyback transactions that are expecting CompDBIDResp. <br>
   * - An RN-F must wait for the CompDBIDResp response to be received for an outstanding CopyBack transaction before issuing another request
   *   to the same cache line.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A request flit is received and there are no pending Copybacks to the same address that are yet to receive CompDBIDResp.
   * @end_check_pass
   *
   * @check_fail
   * A request flit is received and there is an outstanding Copyback to the same address which is yet to receive CompDBIDResp.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable for all the Copyback transactions except WriteEvictorEvict transaction which are introduced in CHI ISSUE E. Similar kind of check for WriteEvictorEvict transaction is new_req_before_comp_or_compdbid_resp_for_copyback_writes_with_optional_data_to_same_cacheline_check.
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_compdbid_resp_for_copyback_to_same_cacheline_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a request to a cache line is issued when there are no outstanding Copyback Writes with Optional Data transactions (WriteEvictorEvict) that are expecting Comp/CompDBIDResp. <br>
   * - An RN-F must wait for the Comp/CompDBIDResp response to be received for an outstanding WriteEvictorEvict transaction before issuing another request
   *   to the same cache line.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A request flit is received and there are no pending WriteEvictorEvict transactions to the same address that are yet to receive Comp/CompDBIDResp.
   * @end_check_pass
   *
   * @check_fail
   * A request flit is received and there is an outstanding WriteEvictorEvict transaction to the same address which is yet to receive Comp/CompDBIDResp.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_comp_or_compdbid_resp_for_copyback_writes_with_optional_data_to_same_cacheline_check;
`endif

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that for an RN-F node, Snoop request is observed when there are no outstanding Snoop transactions targetting the same cache line.
   * @end_check_description
   * 
   * @check_pass
   * A Snoop request flit is received and there are no outstanding Snoop transactions targetting the same cache line.
   * @end_check_pass
   *
   * @check_fail
   * A Snoop request flit is received and there are one or more outstanding Snoop transactions targetting the same cache line.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats new_snp_req_before_completion_of_previous_snp_xact_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that for an RN-F node, Snoop request is observed when there are no outstanding coherent transactions targetting the same cache line that received completion response and has not yet sent out the CompAck or Write Data. <br>
   * Once a completion is received for a transaction, the completer must not send a snoop request to the same cache line until it receives:
   * - A CompAck for any Read and Dataless requests except for ReadOnce* and ReadNoSnp.
   * - A WriteData response for CopyBack and Atomic requests.
   * - For WriteUnique, a WriteData response and, if applicable, CompAck.
     * .
   * @end_check_description
   * 
   * @check_pass
   * A Snoop request flit is received and there are no outstanding coherent transactions targetting the same cache line that received completion response and has not yet sent out the CompAck/WrData.
   * @end_check_pass
   *
   * @check_fail
   * A Snoop request flit is received and there are outstanding coherent transactions targetting the same cache line that received completion response and has not yet sent out the CompAck/WrData.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats new_snp_req_before_compack_of_coherent_xact_which_received_comp_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a Read, Write, Dataless or Atomic request is issued when there are no outstanding Read or Write transactions to the same cache line. <br>
   * - "Outstanding Read" refers to all Read as well as dataless transactions other than CMOs.  
   * - "Outstanding Write" refers to all Write and Atomic transactions.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Read, Write, Dataless or Atomic request flit is received and there are no outstanding Read, Write, Dataless or Atomic transactions to the same cache line.
   * @end_check_pass
   *
   * @check_fail
   * A Read, Write, Dataless or Atomic request flit is received and there are one or more outstanding Read, Write, Dataless or Atomic transactions to the same cache line.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN, SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - In case there are multiple sources within an RN, it cannot be determined if the requests are issued by the
   *   same source based on the request fields. Therefore, this check will not be performed at passive RN when 
   *   svt_chi_node_configuration::multiple_req_sources_within_rn_node is set to 1.
   * - In case DMT Reads are issued at the SN, it is possible that the Interconnect de-allocates the Reads before SN
   *   sends CompData to the RN. In such a case, it is possible that the Interconnect issues a second request to the same address
   *   while the CompData of the previous DMT Read is in progress or is yet to be sent to the RN. 
   *   Therefore, this check will not consider DMT Reads at the SN while looking for outstanding transactions to a given cacheline.
   * .
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_completion_of_previous_read_write_xact_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a request, other than Evict, WriteEvictFull, WriteEvictorEvict and Prefetch, is issued when there are no outstanding CMO transactions to the same cache line. <br>
   * @end_check_description
   * 
   * @check_pass
   * A request flit is received and there are no pending CMOs to the same cache line.
   * @end_check_pass
   *
   * @check_fail
   * A request flit is received and there is an outstanding CMO to the same cache line.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * Propogation of CMOs to Slave nodes is currently not supported by the VIP.
   * Therefore, this check is not applicable for SN.
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_completion_of_previous_cmo_xacts_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a CMO request is issued when there are no outstanding transactions of type mentioned below to the same cache line that can allocate the received data in the Requester caches:
   * - ReadShared, ReadClean, ReadUnique, ReadNotSharedDirty, CleanUnique, MakeUnique
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CMO request flit is received and there are no pending transactions of type mentioned below to the same cache line that can allocate the received data in the Requester caches:
   * - ReadShared, ReadClean, ReadUnique, ReadNotSharedDirty, CleanUnique, MakeUnique
   * .
   * @end_check_pass
   *
   * @check_fail
   * A CMO request flit is received and there are one or more pending transactions of type mentioned below to the same cache line that can allocate the received data in the Requester caches:
   * - ReadShared, ReadClean, ReadUnique, ReadNotSharedDirty, CleanUnique, MakeUnique
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * Propagation of CMOs to Slave nodes is currently not supported by the VIP.
   * Therefore, this check is not applicable for SN.
   * @end_check_additional_information 
   */
  svt_err_check_stats cmo_xact_before_completion_of_previous_xacts_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that there are no outstanding Normal Non-cacheable or Device type writes, that are targeting an HN-I, which haven't
   * received a Comp Repsonse, before a Barrier is issued by an RN. <br>
   * - An RN must wait until all Normal Non-cacheable writes, and all Device type writes, that are targeting an
   *   HN-I, have received a completion response before issuing an EOBarrier or an ECBarrier request.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Barrier is received and there are no pending normal,non-cacheable or 
   * Device type Writes to the same address that are yet to receive Comp Response
   * @end_check_pass
   *
   * @check_fail
   * A Barrier is received and there are one or more pending normal,non-cacheable or 
   * Device type Writes to the same address that are yet to receive Comp Response
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when Barrier support is enabled in the passive RN node (svt_chi_node_configuration::barrier_enable == 1)
   * @end_check_additional_information 
   */
  svt_err_check_stats comp_received_for_normal_non_cacheable_or_device_writes_before_barrier_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that Normal Non-cacheable or Device type writes were received, prior to the current Barrier and
   * after the previous Barrier transaction <br>
   * - It is recommended that an RN only issues an EOBarrier or ECBarrier if it has issued a Normal Non-cacheable, or
   *   Device type memory write request since previously completing an EOBarrier or ECBarrier.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Barrier transaction is received and there were normal,non-cacheable or 
   * Device type Writes seen before the Barrier, and after the previous Barrier if any.
   * @end_check_pass
   *
   * @check_fail
   * A Barrier transaction is received and there were no normal,non-cacheable or 
   * Device type Writes seen before the Barrier, and after the previous Barrier if any.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when Barrier support is enabled in the passive RN node (svt_chi_node_configuration::barrier_enable == 1)
   * @end_check_additional_information 
   */
  svt_err_check_stats normal_non_cacheable_or_device_writes_between_barriers_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that both parts of a SnpDVMOp request are received at the RN. <br>
   * -SnpDVMOp requests consist of two parts. Both SnpDVMOp request packets corresponding to a single transaction must use the same TxnID  
   * .
   * @end_check_description
   * 
   * @check_pass
   * At the end of the simulation, there are no SnpDVMOp transactions for which only one part of the SnpDVMOp request was received.
   * @end_check_pass
   *
   * @check_fail
   * At the end of the simulation, there are one or more SnpDVMOp transactions for which only one part of the SnpDVMOp request was received.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_snpdvmop_part_check;

/**
   * @groupname chi_protocol_err_valid_snoop_req_check
   * @check_description
   * Check that only DVMOp related snoop transactions are seen on the Snoop Channel in case of RN-D. <br>
   * Use of the SNP channel is limited to DVM data transfers in case of RN-D nodes.  
   * @end_check_description
   * 
   * @check_pass
   * A SnpDVMOp is received for an RN-D node.
   * @end_check_pass
   *
   * @check_fail
   * A Snoop transaction, other than a SnpDVMOp, is received for an RN-D node.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_rn_d_snoop_flit_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_snoop_req_check
   * @check_description
   * Check that only supported snoop transactions are seen on the Snoop Channel in case of RN-F. <br>
   * SYNOPSYS DEFINED : <br>
   * - Stash and Forward type snoops are expected to be received only by a CHI-B or later compliant RN-F, when Stashing and DCT features are enabled in the corresponding HN, respectively.  
   * - SnpNotSharedDirty, Stash and Forward type snoops are expected to be received only by a CHI-B or later compliant RN-F.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * A Snoop request other than SnpNotSharedDirty, Stash and Forward type snoop is received by a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A Snoop request other than Stash/Forward type snoop is received by a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A Forward type Snoop request is received by a CHI-B or later RN-F from an HN-F for which DCT is enabled through svt_chi_system_configuration::set_hn_dct_enable(). <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * A SnpNotSharedDirty/Stash/Forward type snoop is received by a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A Stash/Forward type snoop is received by a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A Forward type Snoop request is received by a CHI-B or later RN-F from an HN-F for which DCT is not enabled through svt_chi_system_configuration::set_hn_dct_enable(). <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined. <br>
   * Once support for Stashing is added, Stash type snoops will be expected to be received only by a CHI-B or later compliant RN-F, 
   * when the feature is enabled in the corresponding HN.  
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats expected_snoop_xact_type_check;
`endif

/**
   * @groupname chi_protocol_err_valid_request_flit_check
   * @check_description
   * Check that only supported transaction types are received for a given node. <br>
   * SYNOPSYS DEFINED: <br> 
   * - DVMOp transactions are epected to be seen only for RNs with svt_chi_node_configuration::dvm_enable set to 1
   * - CHI-B or later specific transactions (RNSD, ROMI, ROCI, CSP, PrefetchTgt, AtomicOps) are expected to be seen only for a CHI-B or later compliant RN.  
   * - CHI-E or later specific transactions (Write*Zero, WriteEvictorEivct,...) are expected to be seen only for a CHI-E or later compliant RN.  
   * - VIP currently does not support PrefetchTgt transactions.
   * .
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * A request other than PrefetchTgt, ReadNotSharedDirty, ROMI, ROCI, PrefetchTgt and AtomicOps is seen for a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A request other than PrefetchTgt is seen for a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A ReadNoSnp or WriteNoSnp transaction is received by an SN. <br>
   * Scenario 4: <br>
   * A DVMOp transaction is seen for an RN-F or RN-D whose svt_chi_node_configuration::dvm_enable is set to 1. <br>
   * Scenario 5: <br>
   * ReadNoSnpSep is seen by an SN for a CHI-C or later. <br>
   * Scenario 6: <br>
   * ReadNoSnpSep is send from an HN with sep read and sep resp enabled.
   * Scenario 7: <br>
   * CHI ISSUE E specific transaction request is seen for a CHI-E or later compliant RN.
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * A PrefetchTgt, ReadNotSharedDirty, ROMI, ROCI, PrefetchTgt or AtomicOps transaction request is seen for a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A PrefetchTgt transaction request is seen for a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A transaction of type other than WriteNoSnp and ReadNoSnp is received by an SN. <br>
   * Scenario 4: <br>
   * A DVMOp transaction is seen for an RN whose svt_chi_node_configuration::dvm_enable is 0. <br>
   * Scenario 5: <br>
   * A DVMOp transaction is seen for an RN-I. <br>
   * Scenario 6: <br>
   * ReadNoSnpSep is seen by an SN for a CHI-B or before. <br>
   * Scenario 7: <br>
   * ReadNoSnpSep is send from an HN with sep read and sep resp disabled. <br>
   * Scenario 8: <br>
   * CHI ISSUE E specific transaction request is seen for a CHI-D or earlier compliant RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * VIP CHI-E or later SN currently does not support combined write and (P)CMO transactions. <br>
   * VIP CHI-B or later RN currently does not support Prefetch transactions. <br>
   * VIP CHI-B or later SN currently does not support AtomicOps and CMO transactions. <br>
   * The check will be updated once support for these transactions is added.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats expected_xact_type_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that there are no outstanding DVMOp(Non-sync) transactions when a DVMOp(Sync) request is received. <br>
   * - All previous DVMOp requests whose completion needs to be guaranteed by the DVMOp(Sync) must have received a
   *   Comp response before the RN can send a DVMOp(Sync).
   * .
   * @end_check_description
   * 
   * @check_pass
   * When svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_ALL_NON_SYNC_TO_COMPLETE and a DVMOp(sync) request is received and there are no outstanding DVM(Non-sync) requests at the RN.
   * When svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_NON_SYNC_FROM_SAME_LPID_TO_COMPLETE and a DVMOp(sync) request is received and there are no outstanding DVM(Non-sync) requests with the same LPID at the RN.
   * @end_check_pass
   *
   * @check_fail
   * When svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_ALL_NON_SYNC_TO_COMPLETE and a DVMOp(sync) request is received but there are one or more outstanding DVM(Non-sync) requests at the RN.
   * svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_NON_SYNC_FROM_SAME_LPID_TO_COMPLETE and a DVMOp(sync) request is received but there are one or more outstanding DVM(Non-sync) requests with the same LPID at the RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1) and 
   * svt_chi_node_configuration::dvm_sync_transmission_policy is set to a value other than DO_NOT_WAIT_FOR_NON_SYNC_TO_COMPLETE.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats expected_dvmop_sync_request_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that there are no outstanding DVMOp(Sync) transactions when a DVMOp(Sync) request is received. <br>
   * SYNOPSYS DEFINED <br> 
   * Not more than one DVMOp(Sync) transaction is expected to be outstanding from an RN at any given point in time, when svt_chi_node_configuration::allow_multiple_dvm_sync_oustanding_xacts is set to 0.
   * @end_check_description
   * 
   * @check_pass
   * A DVMOp(sync) request is received and there are no outstanding DVM(Sync) requests at the RN.
   * @end_check_pass
   *
   * @check_fail
   * A DVMOp(sync) request is received but there already is an outstanding DVM(Sync) requests at the RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1) and svt_chi_node_configuration::allow_multiple_dvm_sync_oustanding_xacts is set to 0.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats single_outstanding_dvmop_sync_request_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the part numbers of the SnpDVMOp request packets are set correctly. <br>
   * Part number must be 0b0 for SnpDVMOp Part 1 and 0b1 for SnpDVMOp Part 2.
   * @end_check_description
   * 
   * @check_pass
   * SnpDVMOp_Part1 and SnpDVMOp_Part2 request flits corresponding to a DVM Snoop transaction are received and the part numbers are set correctly.
   * @end_check_pass
   *
   * @check_fail
   * Two SnpDVMOp_Part request flits corresponding to a DVM Snoop transaction are received but the part numbers of the two parts are the same.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_snpdvmop_req_part_num_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the order of the responses sent by the Completer is correct in case of DVMOp transactions. <br>
   * Completer first returns a DBIDResp indicating that it can receive data and sends a Comp Response after the data transfer is complete.
   * When the spec_revision is ISSUE_D or later and the DVMOp is a Non-sync DVMOp, then the interconnect is permitted but not required to wait for WriteData before sending the Comp.
   * Currently VIP does not support early COMP support for DVM transaction.
   * @end_check_description
   * 
   * @check_pass
   * A Comp response is received after the DBIDResp/WriteData flit.
   * @end_check_pass
   *
   * @check_fail
   * A Comp response is received before DBIDResp/WriteData flit. 
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_order_of_dvmop_rspflits_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that only Comp Response is used for DVMOp transactions, and not CompDBIDResp <br>
   * When the spec_revision is ISSUE_D or later the Completer is permitted to opportunistically combine Comp and DBIDResp into CompDBIDResp response. 
   * This is applicable only in case of early comp support. Currently VIP does not support early COMP support for DVM transaction. 
   * A Comp response, with the Resp field set to zero, is always used for Barrier and DVM transaction completion. 
   * @end_check_description
   * 
   * @check_pass
   * A Comp response is received for a DVMOp transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CompDBIDResp flit is received for a DVMOp transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_rspflit_for_dvmop_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the unused bits in the Write data of a DVMOp transaction are set to zero. <br>
   * @end_check_description
   * 
   * @check_pass
   * All the bits in the DVMOp write data that are not valid or unused are set to zero.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Bits corresponding to data[55:51] are set to a non-zero values. <br>
   * SCENARIO 2: <br>
   * VA Valid is 0, but the bits corresponding to data[50:4] are set to non-zero values. <br>
   * SCENARIO 3: <br>
   * VA Valid is set to 1 in the DVMOp transaction request that is Invalidate by PA, but bits corresponding to data[50:(`SVT_CHI_MAX_PA_WIDTH-2)] are set to non-zero values. <br>
   * SCENARIO 4: <br>
   * VA Valid is set to 1 in the DVMOp transaction request that is not Invalidate by PA, but bits corresponding to data[50:(`SVT_CHI_MAX_VA_WIDTH-2)] are set to non-zero values. <br>
   * SCENARIO 5: <br>
   * In case of CHI-A, bits corresponding to data[63:56] are set to non-zero values. <br>
   * SCENARIO 6: <br>
   * In case of CHI-B or greater revisions, VMID Valid in the DVMOp transaction request is set to 0 but the bits corresponding to data[63:56] are set to non-zero values. <br>
   * SCENARIO 7: <br>
   * In case of CHI-D or earlier revisions, the bits corresponding to data[3:0] are set to non-zero values. <br>
   * SCENARIO 8: <br>
   * In case of CHI-E or greater revisions, for a DVM operation that is not Invalidate by VA type TLBI, the bits corresponding to data[3:0] are set to non-zero values. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1). 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats unused_bits_in_dvm_write_data_check;


/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that a single transaction does not mix OK and EXOK responses within its data packets . <br>
   * A single transaction is not permitted to mix OK and EXOK responses. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the data flits corresponding to a transaction are all set to the same value.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the data flits corresponding to a transaction are not set to the same value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats single_xact_mix_ok_exok_response_check;

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the resp field has the same value for all data flits of a multi-flit data transfer  . <br>
   * The resp field in a response must have the same value for every packet of a data message regardless of whether or not there is an error condition. 
   * @end_check_description
   * 
   * @check_pass
   * The Resp field in the data flits corresponding to a transaction are all set to the same value.
   * @end_check_pass
   *
   * @check_fail
   * The Resp field in the data flits corresponding to a transaction are not set to the same value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_resp_for_data_packet_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadNoSnp transaction. <br>
   * The Exclusive Okay response must only be given for a transaction that has the Excl attribute set. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadNoSnp transaction are as per Table 9-2 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadNoSnp request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadNoSnp request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readnosnp_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadOnce transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadOnce transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadOnce transaction are as per Table 9-2 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadOnce transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readonce_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadClean transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadClean transaction are as per Table 9-2 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadClean request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadClean request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readclean_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadShared transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadShared transaction are as per Table 9-2 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadShared request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadShared request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readshared_associated_compdata_packets_legal_resperr_check;

  `ifdef SVT_CHI_ISSUE_C_ENABLE
  /**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the DataSource field in the associated Compdata packets have a valid value. <br>
   * @end_check_description
   * 
   * @check_pass
   * The DataSource field in the associated DataSepResp flits from the Interconnect are set to zero and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0.
   * The DataSource field in the associated DataSepResp flits from the Interconnect are set and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The DataSource field in the associated DataSepResp flits from the Interconnect are set to non-zero values but svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later. <br>
   * and if any of the HNs uses RespSepData DataSepResp Flow 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_data_source_in_datasepresp_check;
  `endif

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_data_source_checks
   * @check_description
   * Check that the DataSource field in the associated Compdata packets have a valid value. <br>
   * @end_check_description
   * 
   * @check_pass
   * The DataSource field in the associated Compdata flits from the Interconnect are set to zero and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0. <br>
   * The DataSource field in the associated Compdata flits from the Interconnect are set and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The DataSource field in the associated Compdata flits from the Interconnect are set to non-zero values but svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_data_source_in_compdata_check;

/**
   * @groupname chi_protocol_err_valid_data_source_checks
   * @check_description
   * Check that the DataSource field in the associated snprespdataptl,snprespdata packets have a valid value. <br>
   * @end_check_description
   * 
   * @check_pass
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction should not take values DATA_SOURCE_UNSUPPORTED, PREFETCHTGT_WAS_USEFUL, PREFETCHTGT_WAS_NOT_USEFUL when svt_chi_node_configuration::data_source_enable is set to 1. <br>
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction should take value DATA_SOURCE_UNSUPPORTED when svt_chi_node_configuration::data_source_enable is set to 0.
   * @end_check_pass
   *
   * @check_fail
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction set to one of the values DATA_SOURCE_UNSUPPORTED, PREFETCHTGT_WAS_USEFUL, PREFETCHTGT_WAS_NOT_USEFUL when svt_chi_node_configuration::data_source_enable is set to 1.
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction not set to the value DATA_SOURCE_UNSUPPORTED when svt_chi_node_configuration::data_source_enable is set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_data_source_in_snprespdata_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadNotSharedDirty transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadNotSharedDirty transaction are as per Table 9-2 in the CHI-B or later Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadNotSharedDirty request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadNotSharedDirty request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readnotshareddirty_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadSpec transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadSpec transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadSpec transaction are as per the CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadSpec transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response has valid resp_err value for ReadSpec transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for ReadSpec transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response of a ReadSpec transaction is as per the CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response of a ReadSpec transaction is set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadOnceCleanInvalid transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadOnceCleanInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadOnceCleanInvalid transaction are as per Table 9-2 in the CHI-B or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadOnceCleanInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readoncecleaninvalid_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadOnceMakeInvalid transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadOnceMakeInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadOnceMakeInvalid transaction are as per Table 9-2 in the CHI-B or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadOnceMakeInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readoncemakeinvalid_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanSharedPersist transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for CleanSharedPersist transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanSharedPersist transaction are as per Table 9-3 in the CHI-B or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a CleanSharedPersist transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleansharedpersist_associated_comp_response_legal_resperr_check;

`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadUnique transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadUnique transaction are as per Table 9-2 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readunique_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanShared transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for CleanShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanShared transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a CleanShared transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleanshared_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanInvalid transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for CleanInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanInvalid transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a CleanInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleaninvalid_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanUnique transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanUnique transaction are as per Table 9-3 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the CleanUnique request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits are set to EXOK but the Exclusive attribute in the CleanUnique request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleanunique_associated_comp_response_legal_resperr_check;


/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for MakeInvalid transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for MakeInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a MakeInvalid transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a MakeInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makeinvalid_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for MakeUnique transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for MakeUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a MakeUnique transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a MakeUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makeunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for Evict transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK or DERR value for Evict transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of an Evict transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of an Evict transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats evict_associated_comp_response_legal_resperr_check;

  `ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp or RespSepData response flit has valid resp_err value for MakeReadUnique transaction. <br>
   * The associated Comp or RespSepData response flit's resp_err field should not take EXOK for MakeReadUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The RespErr field in the associated Comp response flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated RespSepData response flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The RespErr field in the associated Comp response flit of a MakeReadUnique transaction is set to EXOK. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated RespSepData response flit of a MakeReadUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makereadunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated CompData or DataSepResp flits have valid resp_err value for MakeReadUnique transaction. <br>
   * The associated CompData or DataSepResp flit's resp_err field should not take EXOK for MakeReadUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a MakeReadUnique transaction is set to EXOK. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a MakeReadUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makereadunique_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated CompData or DataSepResp flits have valid resp_err value for ReadPreferUnique transaction. <br>
   * The associated CompData or DataSepResp flit's resp_err field should not take EXOK for ReadPreferUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a ReadPreferUnique transaction is set to EXOK response. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a ReadPreferUnique transaction is set to EXOK response. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a ReadPreferUnique transaction is set to EXOK. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a ReadPreferUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readpreferunique_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp or RespSepData packet has valid cache state value for a MakeReadUnique transaction. <br>
   * The cache state in the associated Comp or RespSepData flits of a MakeReadUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp or RespSepData is set to UC or UD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp or RespSepData is set to SC or SD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makereadunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated CompData or DataSepResp packet has valid cache state value for a MakeReadUnique transaction. <br>
   * The cache state in the associated CompData or DataSepResp flits of a MakeReadUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData or DataSepResp is set to UC or UD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData or DataSepResp is set to SC or SD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makereadunique_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated CompData or DataSepResp packet has valid cache state value for a ReadPreferUnique transaction. <br>
   * The cache state in the associated CompData or DataSepResp flits of a ReadPreferUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData or DataSepResp is set to UC UD or SC for a ReadPreferUnique transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData or DataSepResp is set to I or SD for a ReadPreferUnique transaction. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readpreferunique_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Checks that either all or none of the data flits sent by a completer in response to a READ transaction have the RespErr field set to NDERR. <br> 
   * @end_check_description
   * 
   * @check_pass
   * If RespErr fields in all the data_packets issued in response to READ request is set to NDERR.<br>
   * If RespErr field in none of the data packets issued in response to READ request is set to NDERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * If RespErr field in some of the data packets issued in response to READ request is set to NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN.
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_combination_of_data_resp_err_field_in_read_xact_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the home node sends a data response for a MakeReadUnique transaction if the line is not cached at the requester at the time of response. <br>
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The active RN-F receives a data response for a MakeReadUnique transaction when the line is no longer cached at the RN-F. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The active RN-F receives a dataless response for a MakeReadUnique transaction even though the line is no longer cached at the RN-F. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats expected_response_for_makereadunique_xact_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the data returned in the data response for a MakeReadUnique is the same as the data cached in the Requester when the 
   * cachestate at the requester before receiving the response is SC and the final state in the associated data response is UD. <br>
   * This check is applicable only when there are no error responses seen in the data response for the MakeReadUnique and the data cached in the RN is not poisoned.
   * @end_check_description
   * 
   * @check_pass
   * A data response with final state set to UD is received for a MakeReadUnique transaction even though the line is cached in SC state at the RN and
   * the Read data matches the cache data. <br>
   * @end_check_pass
   *
   * @check_fail
   * A data response with final state set to UD is received for a MakeReadUnique transaction even though the line is cached in SC state at the RN and
   * the Read data does not match the cache data. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * - This check will not be performed in the following cases:
   *   - Error response is received in the received MakeReadUnique read data.
   *   - Poison is set to a non-zero value in the received MakeReadUnique read data.
   *   - DataCheck error is detected in the received MakeReadUnique read data.
   *   - Poison is set to a non-zero value in the RN cache.
   *   .
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makereadunique_data_response_cache_data_match_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the final state in the Snoop response for a non-invaldating type snoop is not I if
   * there is already an outstanding MakeReadUnique transaction to the same cacheline given that the snoop response does not indicate a NON_DATA_ERROR. 
   * The MakeReadUnique transaction will be considered only if there were no prior invalidating type Snoops seen 
   * while the MakeReadUnique was outstanding. In other words, this check will not be performed if the RN had already received a 
   * an invalidating type Snoop overlapping with the MakeReadUnique.
   * @end_check_description
   * 
   * @check_pass
   * There is an outstanding MakeReadUnique transaction when a non-invaldating type Snoop request is received and the RN-F sets the final state
   * in the Snoop response to a value other than I. <br>
   * @end_check_pass
   *
   * @check_fail
   * There is an outstanding MakeReadUnique transaction when a non-invaldating type Snoop request is received but the RN-F sets the final state
   * in the Snoop response to I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_final_state_for_non_invalidating_snp_when_outstanding_makereadunique_to_same_cacheline_check;
  `endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadNoSnp transaction. <br>
   * The cache state in the associated CompData flits of a ReadNoSnp transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to a value other than I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to a value other than I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readnosnp_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadOnce transaction. <br>
   * The cache state in the associated CompData flits of a ReadOnce transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to a value other than I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to a value other than I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readonce_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadClean transaction. <br>
   * The cache state in the associated CompData flits of a ReadClean transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadClean transaction is set to UC or SC. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadClean transaction is set to I, UD or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readclean_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadShared transaction. <br>
   * The cache state in the associated CompData flits of a ReadShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadShared transaction is set to UC, UD, SC or SD. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadShared transaction is set to I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readshared_associated_compdata_packets_legal_cache_state_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadNotSharedDirty transaction. <br>
   * The cache state in the associated CompData flits of a ReadNotSharedDirty transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadNotSharedDirty transaction is set to UC, UD or SC. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadNotSharedDirty transaction is set to I or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readnotshareddirty_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadSpec transaction. <br>
   * The cache state in the associated CompData flits of a ReadSpec transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadSpec transaction is set to UC or SC. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadSpec transaction is set to UD, SD or I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a ReadSpec transaction. <br>
   * The cache state in the associated comp response of a ReadSpec transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a ReadSpec transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a ReadSpec transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadOnceCleanInvalid transaction. <br>
   * The cache state in the associated CompData flits of a ReadOnceCleanInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to I or UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to a value other than I and UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readoncecleaninvalid_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadOnceMakeInvalid transaction. <br>
   * The cache state in the associated CompData flits of a ReadOnceMakeInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to I or UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to a value other than I and UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readoncemakeinvalid_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response packet has valid cache state value for a CleanSharedPersist transaction. <br>
   * The cache state in the associated comp response packets of a CleanSharedPersist transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanSharedPersist transaction is set to UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanSharedPersist transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleansharedpersist_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT is applicable only for the following transactions: Readclean, Readshared, Readunique, RNSD, Readnosnp, Readonce, ROCI, ROMI, ReadPreferUnique and MakeReadUnique
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for the transaction types mentioned in the description.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used for transaction types apart from the ones mentioned in the description.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or later is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_transaction_supporting_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT for Readnosnp, Readonce, ROCI and ROMI can be used only for the following combinations of order and compack
   * - No ordering and No compack
   * - No ordering and compack
   * - Ordering and compack
   * .
   * DMT for Readnosnp, Readonce, ROCI and ROMI cannot be used with ordering and No compack 
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for one of the valid combinations of transaction type, order and compack mentioned in the description.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used for a combination of transaction type, order and compack apart from the ones mentioned in the decription.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or later is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_ordering_and_compack_combination_for_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * Exclusive transaction other than ReadPreferUnique and MakeReadunique that do not fail must not use DMT flow.
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for a Read transaction expect for ReadPreferUnique and MakeReadUnique with excluisve bit set to 0 or
   * when the exclusive read fails with NORMAL_OKAY response.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used for a Read transaction expect for ReadPreferUnique and MakeReadUnique with excluisve bit set to 1 and 
   * the excluisve read passes with EXOKAY response.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or later is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_exclusive_access_for_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * Order field can be set to REQ_ACCEPTED for readnosnp from HN to SN only when DMT is used
   * @end_check_description
   * 
   * @check_pass
   * Order field is set to REQ_ACCEPTED in a DMT ReadNoSnp from HN to SN. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * Order field is set to REQ_ACCEPTED in any transaction request issued by RN. <br> 
   * Scenario 2: <br>
   * Order field is set to REQ_ACCEPTED in a WriteNoSnp request issued by HN. <br>
   * Scenario 3: <br>
   * Order field is set to REQ_ACCEPTED in a ReadNoSnp from HN to SN, but DMT is not used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_order_type_for_non_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * A transaction request from Home to Slave also includes a ReturnTxnID field to convey the value of TxnID in the
   * data response from the Slave. Its value, when applicable, must be either:
   * - The TxnID generated by Home, when the ReturnNID is the Node ID of the Home when DMT is not used
   * - The TxnID of the original Requester, when the ReturnNID is the Node ID of the original Requester when DMT is used
   * .
   * @end_check_description
   * 
   * @check_pass
   * DMT is used and the ReturnTxnID in the request is set to the TxnID of the corresponding request issued by RN.
   * DMT is not used and the ReturnTxnID is set to the same value as the TxnID field.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used but the ReturnTxnID in the request is not set to the TxnID of the corresponding request issued by RN.
   * DMT is not used but the ReturnTxnID is not set to the same value as the TxnID field.
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_return_txn_id_check;
 
 /**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT can be used by an HN only when DMT is enabled for that HN through svt_chi_system_configuration::set_hn_dmt_enable()
   * @end_check_description
   * 
   * @check_pass
   * DMT is used by an HN and DMT is enabled for that HN through svt_chi_system_configuration::set_hn_dmt_enable()
   * @end_check_pass
   *
   * @check_fail
   * DMT is used by an HN and DMT is not enabled for that HN through svt_chi_system_configuration::set_hn_dmt_enable()
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision 
   * is set to ISSUE_B. 
   * - Note that CHI Interconnect VIP doesn't support DMT, so it's not allowed to enable DMT for any HN along with
   * enabling VIP Interconnect (svt_chi_system_configuration::use_interconnect = 1).
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dmt_used_by_hn_with_dmt_enabled_check;

  /**
   * @groupname chi_protocol_cmo_check
   * @check_description
   * SN can receive CleanSharedPersist/CleanSharedPersistSep transaction from HN only when svt_chi_hn_configuration attribute forward_persist_cmos_to_slave_enable is set.
   * @end_check_description
   * 
   * @check_pass
   * If SN receives CleanSharedPersist/CleanSharedPersistSep transaction and the svt_chi_hn_configuration attribute forward_persist_cmos_to_slaves_enable was set.
   * @end_check_pass
   *
   * @check_fail
   * If SN receives CleanSharedPersist/CleanSharedPersistSep transaction and the svt_chi_hn_configuration attribute forward_persist_cmos_to_slaves_enable was set.
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision 
   * is set to ISSUE_B. 
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats persist_cmos_forwarded_to_slave_by_hn_with_forward_persist_cmos_to_slave_enable_check;

  /**
   * @groupname chi_protocol_cmo_check
   * @check_description
   * SN can receive CleanShared, CLeanInvalid, MakeInvalid transaction from HN only when svt_chi_hn_configuration attribute forward_cmos_to_slaves_enable is set.
   * @end_check_description
   * 
   * @check_pass
   * If SN receives CleanShared, CLeanInvalid, MakeInvalid  transaction and the svt_chi_hn_configuration attribute forward_cmos_to_slaves_enable was set.
   * @end_check_pass
   *
   * @check_fail
   * If SN receives CleanShared, CLeanInvalid, MakeInvalid  transaction and the svt_chi_hn_configuration attribute forward_cmos_to_slaves_enable was set.
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision 
   * is set to ISSUE_B. 
   * - Note that CHI Interconnect VIP doesn't support forwarding of CleanShared, CLeanInvalid, MakeInvalid  transaction to SN, so it's not allowed to enable 
   * forward_cmos_to_slaves_enable for any HN along with
   * enabling VIP Interconnect (svt_chi_system_configuration::use_interconnect = 1).
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cmos_forwarded_to_slave_by_hn_with_forward_cmos_to_slave_enable_check;
  
  /**
    * @groupname chi_protocol_trace_tag_check 
    * @check_description 
    * The response or data packet should have the valid trace_tag value in response to the request packet.
    * @end_check_description
    *
    * @check_pass
    * - If trace tag in request is set to 1 and the spawned response or data packet has the same value of trace tag.
    * - If svt_chi_system_configuration::loopback_trace_tag is set to 1 and request's trace_tag is equal to spawned response or data packet's trace_tag.  
    * .
    * @end_check_pass
    *
    * @check_fail
    * - If trace tag in request is set to 1 and the spawned response or data packet has the value set to 0.
    * - If svt_chi_system_configuration::loopback_trace_tag is set to 1 and request's trace_tag is not equal to spawned response or data packet's trace_tag.  
    * .
    * @end_check_fail
    *
    * @applicable_device_type
    * @end_applicable_device_type
    *
    * @check_additional_information
    * @end_check_additional_information      
   */
  svt_err_check_stats trace_tag_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * - A transaction that permits it to cache a coherent location should be issued only in the coherency_enabled state.
    * - If svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1 then any transaction should be issued only in the coherency_enabled state. 
    * .
    * @end_check_description
    *
    * @check_pass
    * A transaction that permits it to cache a coherent location is issued in the coherency_enabled state.
    * @end_check_pass
    *
    * @check_fail
    * A transaction that permits it to cache a coherent location is issued in the state other than coherency_enabled.
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_coherency_enabled_state_traffic_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * - All coherent transactions that can be cached must be completed before entering COHERENCY_DISCONNECT_STATE.
    * - If svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1 then there should not be any outstanding transactions in COHERENCY_DISCONNECT_STATE. 
    * .
    * @end_check_description
    *
    * @check_pass
    * - All coherent transactions that can be cached are completed before entering COHERENCY_DISCONNECT_STATE.
    * - When svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1, there aren't any outstanding transactions in COHERENCY_DISCONNECT_STATE. 
    * .
    * @end_check_pass
    *
    * @check_fail
    * - All coherent transactions that can be cached are not completed before entering COHERENCY_DISCONNECT_STATE.
    * - When svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1, there are still outstanding transactions in COHERENCY_DISCONNECT_STATE. 
    * .
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_coherency_disconnect_state_traffic_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * During COHERENCY_DISABLED_STATE there should not be any outstanding snoop transactions.
    * @end_check_description
    *
    * @check_pass
    * During COHERENCY_DISABLED_STATE there aren't any outstanding snoop transactions.
    * @end_check_pass
    *
    * @check_fail
    * During COHERENCY_DISABLED_STATE there are outstanding snoop transactions.
    * @end_check_fail
    *
    * @applicable_device_type
    * RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_coherency_disabled_state_traffic_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * Interconnect can send snoops only in COHERENCY_CONNECT and COHERENCY_ENABLED state.
    * @end_check_description
    *
    * @check_pass
    * Interconnect sends snoops in COHERENCY_CONNECT and COHERENCY_ENABLED state.
    * @end_check_pass
    *
    * @check_fail
    * Interconnect send snoops in COHERENCY_DISCONNECT or COHERENCY_DISABLED state.
    * @end_check_fail
    *
    * @applicable_device_type
    * RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_snoop_traffic_validity_check;

`endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadUnique transaction. <br>
   * The cache state in the associated CompData flits of a ReadUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadUnique transaction is set to UD or UC.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadUnique transaction is set to SD, SC or I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readunique_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a CleanShared transaction. <br>
   * The cache state in the associated comp response of a CleanShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanShared transaction is set to UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanShared transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleanshared_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a CleanInvalid transaction. <br>
   * The cache state in the associated comp response of a CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanInvalid transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanInvalid transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleaninvalid_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a CleanUnique transaction. <br>
   * The cache state in the associated comp response of a CleanUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanUnique transaction is set to UC.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanUnique transaction is set to a value other than UC.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleanunique_associated_comp_response_legal_cache_state_check;


/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a MakeInvalid transaction. <br>
   * The cache state in the associated comp response of a MakeInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a MakeInvalid transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a MakeInvalid transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makeinvalid_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a MakeUnique transaction. <br>
   * The cache state in the associated comp response of a MakeUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a MakeUnique transaction is set to UC.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a MakeUnique transaction is set to a value other than UC.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makeunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a Evict transaction. <br>
   * The cache state in the associated comp response of an Evict transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of an Evict transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of an Evict transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats evict_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteNoSnp transaction. <br>
   * The associated data packet's resp_err field should not take EXOK or NDERR value for WriteNoSnp transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnp transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteNoSnp transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnp transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteNoSnp transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnp_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteUnique transaction. <br>
   * The associated Comp and CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUnique transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteUnique transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUnique transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteUnique transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeunique_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packets has valid resp_err value for WriteNoSnpZero transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: 
   * - The RespErr field in the associated DBIDResp response of a WriteNoSnpZero transaction is set to NORMAL_OKAY. 
   * - The RespErr field in the associated Comp response of a WriteNoSnpZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR. 
   * .
   * SCENARIO 2: 
   * - The RespErr field in the associated CompDBIDResp response of a WriteNoSnpZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR.
   * .
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1:
   * - The RespErr field in the associated DBIDResp response of a WriteNoSnpZero transaction is set to values other than NORMAL_OKAY. 
   * .
   * SCENARIO 2:
   * - The RespErr field in the associated Comp response of a WriteNoSnpZero transaction is set to EXCLUSIVE_OKAY. 
   * .
   * SCENARIO 3:
   * - The RespErr field in the associated CompDBIDResp response of a WriteNoSnpZero transaction is set to EXCLUSIVE_OKAY. 
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpzero_associated_response_packets_legal_resperr_check;
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packets has valid resp_err value for WriteUniqeZero transaction.
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: 
   * - The RespErr field in the associated DBIDResp response of a WriteUniqeZero transaction is set to NORMAL_OKAY. 
   * - The RespErr field in the associated Comp response of a WriteUniqeZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR. 
   * .
   * SCENARIO 2: 
   * - The RespErr field in the associated CompDBIDResp response of a WriteUniqeZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR.
   * .
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1:
   * - The RespErr field in the associated DBIDResp response of a WriteUniqeZero transaction is set to values other than NORMAL_OKAY. 
   * .
   * SCENARIO 2:
   * - The RespErr field in the associated Comp response of a WriteUniqeZero transaction is set to EXCLUSIVE_OKAY.
   * .
   * SCENARIO 3:
   * - The RespErr field in the associated CompDBIDResp response of a WriteUniqeZero transaction is set to EXCLUSIVE_OKAY.  
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquezero_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated comp response packet has valid resp field for a WriteNoSnpZero transaction. <br>
   * The cache state indicated by resp field in the associated Comp response packet of a WriteNoSnpZero transaction should take a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the comp response flit of a WriteNoSnpZero transaction is set to 'I' (Resp field in the comp response set to zero).
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the comp response flit of a WriteNoSnpZero transaction is set to a value other than 'I' (Resp field in the comp response set to a value other than zero).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpzero_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated comp response packet has valid resp field for a WriteUniqueZero transaction. <br>
   * The cache state indicated by resp field in the associated Comp response packet of a WriteUniqueZero transaction should take a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the comp response flit of a WriteUniqueZero transaction is set to 'I' (Resp field in the comp response set to zero).
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the comp response flit of a WriteUniqueZero transaction is set to a value other than 'I' (Resp field in the comp response set to a value other than zero).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquezero_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_custom_check
   * @check_description
   * Checks that the SNPQUERY is generated for valid transaction types <br>
   * @end_check_description
   * 
   * @check_pass
   * SNPQUERY is generated for exclusive MakereadUnique when Snoop filter is disabled at the Interconnect.
   * @end_check_pass
   *
   * @check_fail
   * - SNPQUERY is issued for transaction other than MakeReadUnique. 
   * - SNPQUERY is issued for non exclusive MakeReadUnique.
   * - SNPQUERY is issued when Snoop filter is enabled at the Interconnect.
   * - SNPQUERY is issued, however there are no outstanding transaction to the same cache line.  
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and 
   * svt_chi_node_configuration::enable_custom_snp_query_check is set to 1.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats expected_snpquery_custom_check;
`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteBack transaction. <br>
   * The associated CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteBack transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBack transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteBack transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBack transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteBack transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeback_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteClean transaction. <br>
   * The associated CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteClean transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteClean transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteClean transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteClean transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteClean transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeclean_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteEvict transaction. <br>
   * The associated CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteEvict transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteEvict transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteEvict transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteEvict transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteEvict transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeevict_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteEvictorEvict transaction.
   * - The associated CompDBIDResp should not take EXOK resp_err value for WriteEvictorEvict transaction.
   * - The associated Comp should not take EXOK or DATA_ERROR resp_err value for WriteEvictorEvict transaction.
   * - The associated write data packets should not take EXOK or NON_DATA_ERROR resp_err value for WriteEvictorEvict transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteEvictorEvict transaction should take a legal value as per CHI ISSUE E Specification. <br>
   * The RespErr field in the associated response flits of a WriteEvictorEvict transaction should take a legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteEvictorEvict transaction are set to EXOK or NDERR. <br>
   * The RespErr field in the associated response flits of a WriteEvictorEvict transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Write data in Passive RN_F. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Comp/CompDBIDResp response in both Active and Passive RN_F.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeevictorevict_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpFull_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpFull_CleanSharedPersitSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpFull_CleanSharedPersitSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanSharedPersitsSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanSharedPersitsSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpFull_CleanSharedPersitsSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpFull_CleanInvalid transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpFull_CleanInvalid transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanInvalid transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanInvalid transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpFull_CleanInvalid transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanInvalid transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanInvalid transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpPtl_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpPtl_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpPtl_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpPtl_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpPtl_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpPtl_CleanSharedPersistSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpPtl_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpPtl_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpPtl_CleanInvalid transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpPtl_CleanInvalid transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanInvalid transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanInvalid transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpPtl_CleanInvalid transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanInvalid transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanInvalid transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniqueFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniqueFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniqueFull_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniqueFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniqueFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniqueFull_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniqueFull_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniqueFull_CleanSharedPersistSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniqueFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniqueFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniquePtl_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniquePtl_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniquePtl_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniquePtl_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniquePtl_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniquePtl_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniquePtl_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniquePtl_CleanSharedPersistSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniquePtl_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniquePtl_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteBackFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteBackFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteBackFull_CleanShared transaction.
   * - The associated responses (CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteBackFull_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteBackFull_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteBackFull_CleanSharedPersistSep transaction.
   * - The associated responses (CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteBackFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteBackFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteBackFull_CleanInvalid transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteBackFull_CleanInvalid transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanInvalid transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanInvalid transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleaninvalid_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteBackFull_CleanInvalid transaction.
   * - The associated responses (CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanInvalid transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanInvalid transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleaninvalid_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteCleanFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteCleanFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteCleanFull_CleanShared transaction.
   * - The associated responses (CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteCleanFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteCleanFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteCleanFull_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteCleanFull_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteCleanFull_CleanSharedPersistSep transaction.
   * - The associated responses (CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteCleanFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteCleanFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

`endif

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets have valid resp_err value for Atomic transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of an Atomic transaction are as per Table 9-7 in the CHI Specification.
   * The RespErr field in the associated Comp/CompDBIDResp flit of an AtomicStore transaction is as per Table 9-6 in the CHI Specification.
   * The RespErr field in the associated CompData flits of an AtomicLoad/Swap/Compare transaction are as per Table 9-6 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp/CompDBIDResp flit of an Atomic Store transaction is set to EXOK.
   * The RespErr field in the associated CompData flits of an Atomic Load/Swap/Compare transaction are set to EXOK or NDERR.
   * The RespErr field in the associated Write data flits of an Atomic transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::atomic_transactions_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats atomic_associated_response_data_packets_legal_resperr_check;

  /**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response and data packets have valid cache state value for an Atomic transaction. <br>
   * The cache state in the associated response and data packets of an Atomic transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data of an Atomic transaction is set to I.
   * Final cache state in the Comp response of an Atomic transaction is set to I.
   * Final cache state in the returned initial data of an Atomic transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data of an Atomic transaction is set to a value other than I.
   * Final cache state in the Comp response of an Atomic transaction is set to a value other than I.
   * Final cache state in the returned initial data of an Atomic transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::atomic_transactions_enable is set to 1.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats atomic_associated_response_data_packets_legal_cache_state_check;
  
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteUniqueptlstash transaction. <br>
   * The associated Comp and CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteUniqueptlstash transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniqueptlstash transaction are as per Table 9-6 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteUniqueptlstash transaction are as per Table 9-5 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniqueptlstash transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteUniqueptlstash transaction violate the legal values specified in Table 9-5 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptlstash_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteUniqueptlstash transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniqueptlstash transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteUniqueptlstash transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteUniqueptlstash transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptlstash_associated_response_data_packets_legal_cache_state_check;
  
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteUniquefullstash transaction. <br>
   * The associated Comp and CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteUniquefullstash transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniquefullstash transaction are as per Table 9-6 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteUniquefullstash transaction are as per Table 9-5 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniquefullstash transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteUniquefullstash transaction violate the legal values specified in Table 9-5 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefullstash_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteUniquefullstash transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniquefullstash transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteUniquefullstash transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteUniquefullstash transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefullstash_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for StashOnceUnique transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for StashOnceUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a StashOnceUnique transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a StashOnceUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashonceunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a StashOnceUnique transaction. <br>
   * The cache state in the associated comp response of a StashOnceUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a StashOnceUnique transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a StashOnceUnique transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashonceunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for StashOnceShared transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for StashOnceShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a StashOnceShared transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a StashOnceShared transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashonceshared_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a StashOnceShared transaction. <br>
   * The cache state in the associated comp response of a StashOnceShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a StashOnceShared transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a StashOnceShared transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashonceshared_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpUniqueStash transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUniqueStash transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUniqueStash transaction is set to OK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in RespSepData of a SnpUniqueStash transaction is set to OK or NDERR. <br>
   * SCENARIO 4: <br>
   * RespErr field in CompData or DataSepResp of a SnpUniqueStash transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUniqueStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUniqueStash transaction is set to EXOK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in RespSepData of a SnpUniqueStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 4: <br>
   * RespErr field in CompData or DataSepResp of a SnpUniqueStash transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquestash_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, RespSepData, DataSepResp or CompData packet has valid resp_err value for SnpMakeInvalidStash transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalidStash transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpMakeInvalidStash transaction is set to OK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpMakeInvalidStash transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalidStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpMakeInvalidStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpMakeInvalidStash transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalidstash_associated_response_data_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpStashUnique transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashUnique transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashunique_associated_response_data_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpStashShared transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashShared transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashShared transaction is set to OK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashShared transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashShared transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashshared_associated_response_data_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp,RespSepData,DataSepResp or CompData has valid cache state for SnpMakeInvalidStash transaction. <br>
   * The cache state in the associated response of a SnpMakeInvalidStash transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Final cache state in the SnpResp of a SnpMakeInvalidStash transaction is set to I. <br>
   * SCENARIO 2: <br>
   * Final cache state in the RespSepData corresponding to a SnpMakeInvalidStash transaction with DataPull is set to I, UC or UD. <br>
   * SCENARIO 3: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpMakeInvalidStash transaction with DataPull is set to UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Final cache state in the SnpResp of a SnpMakeInvalidStash transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the RespSepData corresponding to a SnpMakeInvalidStash transaction with DataPull is set to SC or SD. <br>
   * SCENARIO 3: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpMakeInvalidStash transaction with DataPull is set to I, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalidstash_associated_response_data_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated RespSepData, DataSepResp or CompData has valid cache state for SnpStashUnique transaction. <br>
   * The cache state in the associated response of a SnpStashUnique transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashUnique transaction with DataPull is set to I, UC or UD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashUnique transaction with DataPull is set to UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashUnique transaction with DataPull is set to SC or SD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashUnique transaction with DataPull is set to I, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashunique_associated_response_data_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated RespSepData, DataSepResp or CompData has valid cache state for SnpStashShared transaction. <br>
   * The cache state in the associated response of a SnpStashShared transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashShared transaction with DataPull is set to I, SC, UC or UD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashShared transaction with DataPull is set to SC, UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashShared transaction with DataPull is set to SD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashShared transaction with DataPull is set to I or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashshared_associated_response_data_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespData, RespSepData, DataSepResp or CompData has a valid cache state for SnpUniqueStash transaction. <br>
   * The cache state in the associated response of a SnpUniqueStash transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueStash transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUniqueStash transaction is set I. <br>
   * SCENARIO 3: <br>
   * Final cache state in the RespSepData corresponding to a SnpUniqueStash transaction with DataPull is set to I, UC or UD. <br>
   * SCENARIO 4: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpUniqueStash transaction with DataPull is set to UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueStash transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUniqueStash transaction is set UC, UD, SC or SD. <br>
   * SCENARIO 3: <br>
   * Final cache state in the RespSepData corresponding to a SnpUniqueStash transaction with DataPull is set to SC or SD. <br>
   * SCENARIO 4: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpUniqueStash transaction with DataPull is set to I, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquestash_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the DataPull value in the Snoop response for a Stash type Snoop is set to a valid value. <br>
   * DataPull must not be set if DoNotDataPull in the Snoop requests was set to 1 or if there are ongoing transactions to the same cacheline. 
   * @end_check_description
   * 
   * @check_pass
   * DataPull is set in the Snoop response when the corresponding Snoop request had DoNotDataPull set to 1 and there are no outstanding requests to the same cacheline. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * DataPull is set in the Snoop response but the corresponding Snoop request had DoNotDataPull set to 1. <br>
   * SCENARIO 2 : <br>
   * DataPull is set in the Snoop response but there are outstanding coherent and/or outstanding Stash Snoops involving DataPull targeting the same cacheline. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats invalid_data_pull_in_snoop_response_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the DBID value in the Snoop response for a Stash type Snoop is set to a unique value when DataPull is asserted. <br>
   * The DBID must not coincide with the TxnID of any of the outstanding transactions at the RN or the DBID of any of the outstanding Stash type Snoops involving DataPull. 
   * @end_check_description
   * 
   * @check_pass
   * DBID value in the SnpResp for a Stash type Snoop does not coincide with the TxnID of any of the outstanding transactions at the RN or the DBID of any of the outstanding Stash type Snoops involving DataPull. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * DBID value in the SnpResp for a Stash type Snoop matches with the TxnID of one of the outstanding transactions at the RN. <br>
   * SCENARIO 2 : <br>
   * DBID value in the SnpResp for a Stash type Snoop matches with the DBID of one of the outstanding Stash type Snoops involving DataPull. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash and Data Pull are enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats dbid_in_snoop_response_with_data_pull_check;
`endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteNoSnp transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnp transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteNoSnp transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteNoSnp transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnp_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteUnique transaction. <br>
   * The cache state in the associated Write data flits of a WriteUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteUnique transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteUnique transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeunique_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteBack transaction. <br>
   * The cache state in the associated Write data flits of a WriteBack transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * - Final cache state of the Write data flits in a WriteBackPtl transaction is either UD or I.
   * - Final cache state of the Write data flits in a WriteBackPtl transaction is either UC or SC or SD and byte_enable is set to all 1's.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Final cache state of the Write data flits in a WriteBackPtl transaction is UC, SC or SD and byte_enable is not set to all 1's.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeback_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteClean transaction. <br>
   * The cache state in the associated Write data flits of a WriteClean transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state of the Write data flits in a WriteCleanPtl transaction is either UD or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state of the Write data flits in a WriteCleanPtl transaction is either UC, SC or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeclean_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteEvict transaction. <br>
   * The cache state in the associated Write data flits of a WriteEvict transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state of the Write data flits in a WriteEvict transaction is UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state of the Write data flits in a WriteEvict transaction is UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeevict_associated_response_data_packets_legal_cache_state_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Checks that the memory tag is same in the Tag fields corresponding to the compare and swap data.
   * Applicable only for ATOMICCOMARE transaction when tag_op is set to TAG_FETCH_MATCH.
   * @end_check_description
   * 
   * @check_pass
   * The tag field corresponding to the compare and swap data is same.
   * @end_check_pass
   *
   * @check_fail
   * The tag field corresponding to the compare and swap data is different.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_E_ENABLE or later is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_E or later
   * - svt_chi_node_configuration::atomic_transactions_enable is set to 1.
   * - svt_chi_node_configuration::mem_tagging_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats atomic_compare_valid_tag_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response and data packets has valid resp field {cahe state and resp_pass_dirty} value for a WriteEvictorEvict transaction. <br>
   * The cache state in the associated Write data flits or Comp reponse flits of a WriteEvictorEvict transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state of the Write data flits in a WriteEvictorEvict transaction is either UC or SC or I.
   * - resp_pass_dirty field in write data flits of WriteEvictorEvict transaction is set to 0.
   * .
   * Scenario 2: 
   * - resp field {cahe state and resp_pass_dirty} in the associated comp response flit of WriteEvictorEvict transaction is set to zero.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state of the Write data flits in a WriteEvictorEvict transaction is set to other than UC or SC or I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty field in write data flits of WriteEvictorEvict transaction is set to 1.
   * .
   * Scenario 3: 
   * - resp field {cahe state and resp_pass_dirty} in the associated comp response flit of WriteEvictorEvict transaction is set to non-zero.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN_F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Write data in Passive RN_F. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Comp response in both Active and Passive RN_F.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeevictorevict_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpFull_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpFull_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpFull_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpFull_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanInvalid transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpFull_CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanInvalid transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpFull_CleanInvalid transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanInvalid transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanInvalid transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpPtl_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpPtl_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpPtl_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpPtl_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpPtl_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpPtl_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanInvalid transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpPtl_CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanInvalid transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpPtl_CleanInvalid transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanInvalid transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanInvalid transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniqueFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniqueFull_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniqueFull_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniqueFull_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniqueFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniqueFull_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniqueFull_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniqueFull_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniquePtl_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniquePtl_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniquePtl_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniquePtl_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniquePtl_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniquePtl_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniquePtl_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniquePtl_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteBackFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO response flit of a WriteBackFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanShared transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanShared transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */ 
  svt_err_check_stats writebackfull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteBackFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO/CompPersist response flit of a WriteBackFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteBackFull_CleanSharedPersistSep transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteBackFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteBackFull_CleanSharedPersistSep transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteBackFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writebackfull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteBackFull_CleanInvalid transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO response flit of a WriteBackFull_CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanInvalid transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanInvalid transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanInvalid transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanInvalid transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writebackfull_cleaninvalid_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteCleanFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO response flit of a WriteCleanFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteCleanFull_CleanShared transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteCleanFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteCleanFull_CleanShared transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteCleanFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writecleanfull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteCleanFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO/CompPersist response flit of a WriteCleanFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteCleanFull_CleanSharedPersistSep transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteCleanFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteCleanFull_CleanSharedPersistSep transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteCleanFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writecleanfull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that there are no error responses in case of Barrier transactions . <br>
   * A Barrier transaction response must not include an error response. 
   * @end_check_description
   * 
   * @check_pass
   * RespErr field in the Comp response of a Barrier transaction is set to OK.
   * @end_check_pass
   *
   * @check_fail
   * RespErr field in the Comp response of a Barrier transaction is set to a value other than OK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and Passive SN-I
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * Barrier support is enabled (svt_chi_node_configuration::barrier_enable == 1).
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_resp_err_status_for_barrier_xact_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the comp response has valid resp_err value for DVMop transaction. <br>
   * The associated Comp response should take one of the following resp_err values: 1)NORMAL_OKAY 2)NON_DATA_ERROR 3)in case of svt_chi_node_configuration::chi_spec_revision >= ISSUE_B,DATA_ERROR for DVMop transaction. 
   * @end_check_description
   * 
   * @check_pass
   * If svt_chi_node_configuration::chi_spec_revision>=ISSUE_B RespErr field in the Comp response of a DVMOp transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR. <br>
   * If svt_chi_node_configuration::chi_spec_revision==ISSUE_A RespErr field in the Comp response of a DVMOp transaction is set to NORMAL_OKAY or NON_DATA_ERROR.
   * @end_check_pass
   *
   * @check_fail
   * If svt_chi_node_configuration::chi_spec_revision>=ISSUE_B RespErr field in the Comp response of a DVMOp transaction is set to EXCLUSIVE_OKAY. <br>
   * If svt_chi_node_configuration::chi_spec_revision==ISSUE_A RespErr field in the Comp response of a DVMOp transaction is set to EXCLUSIVE_OKAY or DATA_ERROR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_resp_err_status_for_dvmop_xact_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpOnce transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpOnce transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpOnce transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpOnce transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpOnce transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpOnce transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponce_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpClean transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpClean transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpClean transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpClean transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpClean transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpClean transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpclean_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpShared transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpShared transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpShared transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpShared transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpshared_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpNotSharedDirty transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpNotSharedDirty transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpNotSharedDirty transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpNotSharedDirty transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpNotSharedDirty transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpNotSharedDirty transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirty_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData packet has valid resp_err value for SnpOnceFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packets should not take EXOK or NDERR resp_err value for SnpOnceFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpOnceFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpOnceFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponcefwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has valid resp_err value for SnpCleanFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpCleanFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpCleanFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpCleanFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanfwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData valid resp_err value for SnpSharedFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpSharedFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpSharedFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpSharedFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpsharedfwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid resp_err value for SnpUniqueFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpUniqueFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpUniqueFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpUniqueFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquefwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid resp_err value for SnpNotSharedDirtyFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpNotSharedDirtyFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpNotSharedDirtyFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpNotSharedDirtyFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirtyfwd_associated_response_data_packets_legal_resperr_check;
`endif

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpPreferUnique transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpPreferUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpPreferUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpPreferUnique transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpPreferUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpPreferUnique transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferunique_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid resp_err value for SnpPreferUniqueFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpPreferUniqueFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpPreferUniqueFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpPreferUniqueFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferuniquefwd_associated_response_data_packets_legal_resperr_check;
`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpUnique transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUnique transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUnique transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpunique_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpCleanShared transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpCleanShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanShared transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanShared transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanShared transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanshared_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpCleanInvalid transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpCleanInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanInvalid transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanInvalid transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanInvalid transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanInvalid transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleaninvalid_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpQuery transaction. <br>
   * The associated SnpResp should not take EXOK or DERR resp_err value for SnpQuery transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpQuery transaction is set to OK or NDERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpQuery transaction is set to EXOK or DERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpquery_associated_response_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp has valid cache state for SnpQuery transaction. <br>
   * The resp_pass_dirty attribute in the associated response of a SnpQuery transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * when the resp_pass_dirty in the response flit is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp_pass_dirty in the response flit set to 1.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpquery_associated_response_packets_legal_cache_state_check;

`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpMakeInvalid transaction. <br>
   * The associated SnpResp should not take EXOK or DERR resp_err value for SnpMakeInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalid transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpMakeInvalid transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalid transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpMakeInvalid transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalid_associated_response_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpDVMop transaction. <br>
   * The associated SnpResp should not take EXOK or DERR resp_err value for SnpDVMop transaction. 
   * @end_check_description
   * 
   * @check_pass
   * RespErr field in SnpResp of a SnpDVMOp transaction is set to OK or NDERR.
   * @end_check_pass
   *
   * @check_fail
   * RespErr field in SnpResp of a SnpDVMOp transaction is set to EXOK or DERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpdvmop_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpOnce transaction. <br>
   * The cache state in the associated response of a SnpOnce transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpOnce transaction is set to UC, SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpOnce transaction is set to UC, SC, UD, SD or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the SnpResp of a SnpOnce transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponce_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpClean transaction. <br>
   * The cache state in the associated response of a SnpClean transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpClean transaction is set to SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpClean transaction is set to SD, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpClean transaction is set to UC, UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpClean transaction is set to UC or UD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpclean_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpShared transaction. <br>
   * The cache state in the associated response of a SnpShared transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpShared transaction is set to SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpShared transaction is set to SD, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpShared transaction is set to UC, UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpShared transaction is set to UC or UD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpshared_associated_response_data_packets_legal_cache_state_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpNotSharedDirty transaction. <br>
   * The cache state in the associated response of a SnpNotSharedDirty transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirty transaction is set to SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpNotSharedDirty transaction is set to SD, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirty transaction is set to UC, UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpNotSharedDirty transaction is set to UC or UD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirty_associated_response_data_packets_legal_cache_state_check;
  
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpOnceFwd transaction. <br>
   * The cache state in the associated response of a SnpOnceFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpOnceFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpOnceFwd transaction is set to UC, UD, SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpOnceFwd transaction is set to SC or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpOnceFwd transaction is set to I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpOnceFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpOnceFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpOnceFwd transaction is set to a value other than UC, UD, SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpOnceFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpOnceFwd transaction is set to a value other than SC and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the CompData of a SnpOnceFwd transaction is set to a value other than I. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpOnceFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponcefwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpCleanFwd transaction. <br>
   * The cache state in the associated response of a SnpCleanFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpCleanFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpCleanFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpCleanFwd transaction is set to SC. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpCleanFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpCleanFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpCleanFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpCleanFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpCleanFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the CompData of a SnpCleanFwd transaction is set to a value other than SC. <br>
   * SCENARIO 7 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpCleanFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanfwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpSharedFwd transaction. <br>
   * The cache state in the associated response of a SnpSharedFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpSharedFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpSharedFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpSharedFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to SC or SD. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpSharedFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpSharedFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpSharedFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpSharedFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpSharedFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to a value other than SC and SD. <br>
   * SCENARIO 7 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpsharedfwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpNotSharedDirtyFwd transaction. <br>
   * The cache state in the associated response of a SnpNotSharedDirtyFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirtyFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpNotSharedDirtyFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpNotSharedDirtyFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpNotSharedDirtyFwd transaction is set to SC. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpNotSharedDirtyFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirtyFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpNotSharedDirtyFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpNotSharedDirtyFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpNotSharedDirtyFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpNotSharedDirtyFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the CompData of a SnpNotSharedDirtyFwd transaction is set to a value other than SC. <br>
   * SCENARIO 7 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpNotSharedDirtyFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirtyfwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpUniqueFwd transaction. <br>
   * The cache state in the associated response of a SnpUniqueFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpUniqueFwd transaction is set to I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to UC or UD. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpUniqueFwd transaction is set to a value other than I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to a value other than UC or UD. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquefwd_associated_response_data_packets_legal_cache_state_check;

`endif

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpPreferUnique transaction. <br>
   * The cache state in the associated response of a SnpPreferUnique transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the SnpResp or SnpRespData is I, SC or SD
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the SnpResp or SnpRespData is UC or UD
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferunique_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpPreferUniqueFwd transaction. <br>
   * The cache state in the associated response of a SnpPreferUniqueFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * A Snoopee that is not executing an exclusive sequence treats SnpPreferUniqueFwd as SnpUniqueFwd.
   * Snoopee that is in the process of executing an exclusive sequence treats SnpPreferUniqueFwd as SnpNotSharedDirtyFwd, with the exception that it must not invalidate its cached copy.
   * @end_check_description
   * 
   * @check_pass
   * If SnpPreferUniqueFwd is treated as SnpNotSharedDirtyFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to SC, SD or I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the SnpRespDataFwded of a SnpPreferUniqueFwd transaction is set to SC, SD or I. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to SC. <br>
   *   - SCENARIO 5 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   .
   * If SnpPreferUniqueFwd is treated as SnpUniqueFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to UC or UD. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   .
   * @end_check_pass
   *
   * @check_fail
   *   - If SnpPreferUniqueFwd is treated as SnpNotSharedDirtyFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to a value other than SC, SD and I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the SnpRespDataFwded of a SnpPreferUniqueFwd transaction is set to a value other than SC, SD and I. <br>
   *   - SCENARIO 5 : <br>
   *   - Final cache state in the SnpRespDataFwded of a SnpPreferUniqueFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   *   - SCENARIO 6 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to a value other than SC. <br>
   *   - SCENARIO 7 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   .
   * If SnpPreferUniqueFwd is treated as SnpUniqueFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to a value other than UC or UD. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferuniquefwd_associated_response_data_packets_legal_cache_state_check;

`endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpUnique transaction. <br>
   * The cache state in the associated response of a SnpUnique transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUnique transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUnique transaction is set I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUnique transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUnique transaction is set UC, UD, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpunique_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpCleanShared transaction. <br>
   * The cache state in the associated response of a SnpCleanShared transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanShared transaction is set to UC, SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanShared transaction is set UC, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanShared transaction is set to UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanShared transaction is set UD or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanshared_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpCleanInvalid transaction. <br>
   * The cache state in the associated response of a SnpCleanInvalid transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanInvalid transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanInvalid transaction is set I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanInvalid transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanInvalid transaction is set to UC, UD, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpcleaninvalid_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp has valid cache state for SnpMakeInvalid transaction. <br>
   * The cache state in the associated response of a SnpMakeInvalid transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the SnpResp of a SnpMakeInvalid transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the SnpResp of a SnpMakeInvalid transaction is set to UC, UD, SC or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalid_associated_response_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that Comp Response flit is seen only in case of non-Snoop transactions. <br>
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * Comp response is received for a dataless, DVMOp, WriteEvictorEvict or a non-Copyback Write transaction.
   * @end_check_pass
   *
   * @check_fail
   * Comp response is received for a Read or a Copyback transaction(except WriteEvictorEvict).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_comp_flit_type_for_xact_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that CompCMO Response flit is seen only in case of Combined Write and (P)CMO transactions.
   * @end_check_description
   * 
   * @check_pass
   * CompCMO response is received for a Combined Write and (P)CMO type transaction.
   * @end_check_pass
   *
   * @check_fail
   * CompCMO response is received for a transaction which is not of Combined Write and (P)CMO type.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_compcmo_flit_type_for_xact_check;
`endif

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that DBID Response flit is seen only in case of non-Copyback Write transactions. <br>
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * DBIDResp is received for a WriteNoSnp or WriteUnique request.
   * @end_check_pass
   *
   * @check_fail
   * DBIDResp is received for a Copyback request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_dbid_flit_type_for_xact_check;

 /**
   * @groupname chi_protocol_err_valid_sactive_check
   * @check_description
   * - TXSACTIVE must remain asserted until after the last flit relating to all pending transactions is sent or received.
   * - A transaction that is given a RetryAck response is considered to be in progress, so TXSACTIVE must remain asserted until the associated credit has been supplied, and it's used or returned.
   * - <b> Applicable when </b>: the agent is in PASSIVE mode (svt_chi_node_configuration::is_active = 0), and 
   *   svt_chi_system_configuration::top_layer is set to svt_chi_system_configuration::PROTOCOL, svt_chi_system_configuration::bottom_layer is set to svt_chi_system_configuration::LINK
   * - The check is performed under following conditions: while the link is active and there is no active reset --
   *   - Whenever there is a flit activity observed(TX*FLITV/RX*FLITV asserted), TXSACTIVE must be sampled as HIGH. Otherwise the check fails.
   *     - Following are the specific conditions under which this check is performed:
   *       - REQ flit is received by PASSIVE agent, then txsactive must be HIGH at:
   *         - at the same clock, in case of RN
   *         .
   *       - In case of RN: the same clock where CompAack RSP flit is observed, this must be high
   *       - In case of RN: The same clock where SNPRSP is observed, this must be high
   *       - In the same cycle the RSP flit is received/observed, this must be high
   *       - In the same cycle the Read Data flit is received/observed, this must be high
   *       - In the same cycle the Snp Data flit is received/observed, this must be high
   *       - In the same cycle the Write Data flit is received/observed, this must be high
   *       .
   *     .
   *   - Whenever the signal TXSACTIVE is sampled as LOW, the check passes when there is no pending protocol layer activity. Otherwise the check fails.
   *     - Following is the definition of 'pending protocol layer activity':
   *       - Any in progress transactions (Transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       - Any transactions with pending retries (Transactions that received retry response along with Credit grants; but neither the credits are returned nor used to retry the transactions)
   *       - Any in progress snoop transactions (Snoop transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       .
   *     .
   *   .
   * .
   * @end_check_description
   *
   * @check_pass
   * One of the FLITV signals is asserted and the conditions mentioned in the description are satisfied.
   * @end_check_pass
   *
   * @check_fail
   * One of the FLITV signals is asserted and any of the conditions mentioned in the description are violated.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * svt_chi_system_configuration::top_layer is set to svt_chi_system_configuration::PROTOCOL, svt_chi_system_configuration::bottom_layer is set to svt_chi_system_configuration::LINK.
   * This check will not be constructed when svt_chi_node_configuration::use_external_node_prot_monitor is set to 1.
   * @end_check_additional_information   
   */
  svt_err_check_stats valid_txsactive_signal_check;

 /**
   * @groupname chi_protocol_err_valid_sactive_check
   * @check_description
   * - RXSACTIVE must remain asserted until after the last flit relating to all pending transactions is sent or received at the link partner node.
   * - A transaction that is given a RetryAck response is considered to be in progress, so RXSACTIVE must remain asserted until the associated credit has been supplied, and it's used or returned.
   * - The check is performed under following conditions: while the link is active and there is no active reset --
   *   - Whenever there is a flit activity observed(TX*FLITV/RX*FLITV asserted), RXSACTIVE must be sampled as HIGH. Otherwise the check fails.
   *     - Following are the specific conditions under which this check is performed:
   *       - In case of SN: if REQ flit is received, then rxsactive must be HIGH at the same clock
   *       - In case of RN: The same clock where the CompAck RSP is observed, this must be high
   *       - In case of RN: The same clock where SNPRSP is sampled by all receiving/observing components, this must be high
   *       - In case of RN: The same clock where SNP flit is observed, this must be HIGH
   *       - In the same cycle the RSP flit is received/observed, this must be high
   *       - In the same cycle the Read Data flit is received/observed, this must be high
   *       - In the same cycle the Snp Data flit is received/observed, this must be high
   *       - In the same cycle the Write Data flit is received/observed, this must be high
   *       .
   *     .
   *   - Whenever the signal RXSACTIVE is sampled as LOW, the check passes when there is no pending protocol layer activity at the link partner node. Otherwise the check fails.
   *     - Following is the definition of 'pending protocol layer activity':
   *       - Any in progress transactions (Transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       - Any transactions with pending retries (Transactions that received retry response along with Credit grants; but neither the credits are returned nor used to retry the transactions)
   *       - Any in progress snoop transactions (Snoop transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       .
   *     .
   *   .
   * .
   * @end_check_description
   *
   * @check_pass
   * One of the FLITV signals is asserted and the conditions mentioned in the description are satisfied.
   * @end_check_pass
   *
   * @check_fail
   * One of the FLITV signals is asserted and any of the conditions mentioned in the description are violated.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * svt_chi_system_configuration::top_layer is set to svt_chi_system_configuration::PROTOCOL, svt_chi_system_configuration::bottom_layer is set to svt_chi_system_configuration::LINK
   * This check will not be constructed when svt_chi_node_configuration::use_external_node_prot_monitor is set to 1.
   * @end_check_additional_information 
   * 
   */

  svt_err_check_stats valid_rxsactive_signal_check;

/**
   * @groupname chi_protocol_exclusive_access_check
   * @check_description
   * Check that an exclusive monitor should not have more than one exclusive transaction of the same lpid at any given time. <br>
   * Multiple exclusive transactions to Non-snoopable memory locations, either read or write, to the same or different addresses, from the same LP must not be outstanding at the same time.
   * @end_check_description
   * 
   * @check_pass
   * An Exclusive Read transaction is received while there are no outstanding Exclusive Reads with the same LPID.
   * @end_check_pass
   *
   * @check_fail
   * An Exclusive Read transaction is received but there already is an outstanding Exclusive Read with the same LPID.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters exclusive_access_enable (svt_chi_node_configuration::exclusive_access_enable) and exclusive_monitor_enable (svt_chi_node_configuration::exclusive_monitor_enable) are set to 1.
   * @end_check_additional_information 
   */
  svt_err_check_stats non_coherent_excl_read_multiple_entry_for_same_lpid_check;

  /**
   * @groupname chi_protocol_exclusive_access_check
   * @check_description
   * Check that the address of an exclusive access must be aligned to the total number of bytes in the transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The address of an exclusive transaction is aligned to the Data size.
   * @end_check_pass
   *
   * @check_fail
   * The address of an exclusive transaction is not aligned to the Data size.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters exclusive_access_enable (svt_chi_node_configuration::exclusive_access_enable) and exclusive_monitor_enable (svt_chi_node_configuration::exclusive_monitor_enable) are set to 1.
   * @end_check_additional_information
   */
  
  svt_err_check_stats non_coherent_excl_access_aligned_total_bytes_transaction_check;

  /**
   * @groupname chi_protocol_exclusive_access_check
   * @check_description
   * Check that the number of bytes to be transferred in an exclusive access must be a legal data transfer size, that is, 1, 2,4, 8, 16, 32, or 64 bytes.<br>
   * @end_check_description
   * 
   * @check_pass
   * The Data size of an Exclusive transaction is one of the values specified in the description.
   * @end_check_pass
   *
   * @check_fail
   * The Data size of an Exclusive transaction is set to a value apart from the ones mentioned in the description.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters exclusive_access_enable (svt_chi_node_configuration::exclusive_access_enable) and exclusive_monitor_enable (svt_chi_node_configuration::exclusive_monitor_enable) are set to 1.
   * @end_check_additional_information    
   */

  svt_err_check_stats non_coherent_excl_access_legal_data_size_transfer_check;

  /**
   * @groupname chi_protocol_transaction_inactivity_check
   * @check_description
   * - Checks that a given transaction completes within the number of clock cycles specified by svt_chi_node_configuration::xact_inactivity_timeout.<br>
   * - Vip will continue to process the transaction even the transaction has timedout. The timeout of the transaction doesn't have any impact on the procesing or completion of the transaction.<br>
   * - The timer started for a transaction will continue to increment even there is a link deactivation when transaction is outstanidng.<br>
   * - This check is currently not designed to handle the cases when there is a dynamic reset.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The transaction ends within the programmed number of clock cycles.
   * @end_check_pass
   *
   * @check_fail
   * The transaction does not end within the programmed number of clock cycles.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN,SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters xact_inactivity_timeout (svt_chi_node_configuration::xact_inactivity_timeout) set to non zero values.
   * @end_check_additional_information    
   */
  svt_err_check_stats transaction_inactivity_timeout_check;

  /**
   * @groupname chi_protocol_transaction_inactivity_check
   * @check_description
   * - Checks that a given Snoop transaction completes within the number of clock cycles specified by svt_chi_node_configuration::snp_xact_inactivity_timeout.<br>
   * - Vip will continue to process the snoop transaction even the snoop transaction has timedout. The timeout of the snoop transaction doesn't have any impact on the procesing or completion of the snoop transaction.<br>
   * - The timer started for snoop transaction will continue to increment even there is a link deactivation when snoop transaction is outstanidng.<br>
   * - This check is currently not designed to handle the cases when there is a dynamic reset.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The snoop transaction ends within the programmed number of clock cycles.
   * @end_check_pass
   *
   * @check_fail
   * The snoop transaction does not end within the programmed number of clock cycles.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F, RN-D(when svt_chi_node_configuration::dvm_enable is set to 1)
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters snp_xact_inactivity_timeout (svt_chi_node_configuration::snp_xact_inactivity_timeout) set to non zero values.
   * @end_check_additional_information    
   */
  svt_err_check_stats snp_transaction_inactivity_timeout_check;


//-------------------------------------------------------------
// START OF PERFORMANCE CHECKS
/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a write transaction is not greater than the
  * configured max value svt_chi_node_configuration::perf_max_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Write transaction is less than svt_chi_node_configuration::perf_max_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Write transaction is greater than svt_chi_node_configuration::perf_max_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a write transaction is not lesser than the
  * configured min value svt_chi_node_configuration::perf_min_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Write transaction is greater than svt_chi_node_configuration::perf_min_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Write transaction is less than svt_chi_node_configuration::perf_min_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of write transactions in a given interval
  * is not more than the configured max value svt_chi_node_configuration::perf_avg_max_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Write transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_max_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Write transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_max_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_max_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of write transactions in a given interval
  * is not less than the configured min value svt_chi_node_configuration::perf_avg_min_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Write transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_min_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Write transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_min_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_min_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a read transaction is not greater than the
  * configured max value svt_chi_node_configuration::perf_max_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Read transaction is less than than svt_chi_node_configuration::perf_max_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Read transaction is greater than than svt_chi_node_configuration::perf_max_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a read transaction is not lesser than the
  * configured min value svt_chi_node_configuration::perf_min_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Read transaction is greater than svt_chi_node_configuration::perf_min_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Read transaction is less than than svt_chi_node_configuration::perf_min_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of read transactions in a given interval
  * is not more than the configured max value svt_chi_node_configuration::perf_avg_max_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Read transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_max_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Read transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_max_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_max_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of read transactions in a given interval
  * is not less than the configured min value svt_chi_node_configuration::perf_avg_min_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Read transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_min_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Read transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_min_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_min_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of read transactions in a given interval is
  * not more that the configured max value svt_chi_node_configuration::perf_max_read_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of read transactions in the specified interval is less than svt_chi_node_configuration::perf_max_read_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of read transactions in the specified interval is greater than svt_chi_node_configuration::perf_max_read_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_read_throughput_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of read transactions in a given interval is
  * not less that the configured min value svt_chi_node_configuration::perf_min_read_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of read transactions in the specified interval is greater than svt_chi_node_configuration::perf_min_read_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of read transactions in the specified interval is less than svt_chi_node_configuration::perf_min_read_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_read_throughput_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of write transactions in a given interval is
  * not more that the configured max value svt_chi_node_configuration::perf_max_write_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of write transactions in the specified interval is less than svt_chi_node_configuration::perf_max_write_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of write transactions in the specified interval is greater than svt_chi_node_configuration::perf_max_write_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_write_throughput_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of write transactions in a given interval is
  * not less that the configured min value svt_chi_node_configuration::perf_min_write_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of write transactions in the specified interval is greater than svt_chi_node_configuration::perf_min_write_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of write transactions in the specified interval is less than svt_chi_node_configuration::perf_min_write_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_write_throughput_check;

`ifdef SVT_CHI_ISSUE_C_ENABLE
/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT has to be used for ReadNoSnpSep
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for ReadNoSnpSep
   * @end_check_pass
   *
   * @check_fail
   * DMT is not used for ReadNoSnpSep
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dmt_validity_check_for_readnosnpsep;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * RespSepData seen for read type transactions
   * @end_check_pass
   *
   * @check_fail
   * RespSepData seen for non read type transactions
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
   * and if any of the HNs uses RespSepData DataSepResp Flow 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_respsepdata_flit_type_for_xact_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated RespSepData response packet has valid resp_err value.. <br>
   * The associated RespSepData response packet's resp_err field should not take EXOK or DERR value. 
   * @end_check_description
   * 
   * @check_pass
   * The associated RespSepData response packet's resp_err field does not take EXOK or DERR value. 
   * @end_check_pass
   *
   * @check_fail
   * The associated RespSepData response packet's resp_err field takes EXOK or DERR value. 
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
   * and if any of the HNs uses RespSepData DataSepResp Flow 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats associated_respsepdata_response_legal_resperr_check;

`endif


// END OF PERFORMANCE CHECKS
//-------------------------------------------------------------

  /** @cond PRIVATE */
  // ****************************************************************************
  // Public Methods
  // ****************************************************************************

`ifndef SVT_VMM_TECHNOLOGY
  // ---------------------------------------------------------------------------
  /**
   * CONSTRUCTOR: Create a new svt_chi_protocol_err_check instance.
   * 
   * @param err_check_name A string that identifies this particular svt_err_check
   * instance.
   *
   * @param register_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * registered automatically.
   *
   * @param enable_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * enabled. This bit only has meaning if register_default_checks is set
   * to 1.
   * 
   * @param reporter Report object through which messages are routed
   */
  extern function new(svt_chi_node_configuration node_cfg,
                      bit enable_pc_cov = 1, 
                      string err_check_name = "",
                      bit register_default_chks = 1, 
                      bit enable_default_chks = 1,
                      `SVT_XVM(report_object) reporter = null);
`else
  // ---------------------------------------------------------------------------
  /**
   * CONSTRUCTOR: Create a new svt_chi_protocol_err_check instance.
   * 
   * @param err_check_name A string that identifies this particular svt_err_check
   * instance.
   *
   * @param register_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * registered automatically.
   *
   * @param enable_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * enabled. This bit only has meaning if register_default_checks is set
   * to 1.
   */
  extern function new(svt_chi_node_configuration node_cfg,
                      bit enable_pc_cov = 1, 
                      string err_check_name = "",
                      bit register_default_chks = 1, 
                      bit enable_default_chks = 1);
`endif
  // ---------------------------------------------------------------------------
  /**
   * This method is called by the constructor if the register_default_checks 
   * parameter is set to 1.
   *
   */  
  extern virtual function void register_default_checks();
  /** @endcond */
endclass

// =============================================================================

`pragma protect begin_protected  
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
f8r7V+Yt2aHvUWu9JRxCjZaRJrKJvOUq57WVtoi6pNjoHG5gt5GfQQ8Vm7SaW8HJ
jVqVyvsfu5dgLaHHqseWtVylau5EJ5Uqf7ivAJQUb1aPyuYRX9lQ4zUfKOgrNU8m
Hl3mbjATM+hDsEzMizcyOHfP+YhUP9q6ZhTIzvcpSlU=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 46134     )
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
`pragma protect end_protected

//vcs_lic_vip_protect
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
V8pzGzQW1WuviQpoqINcmbCnVNX2tyx4bPmKioXaN/M9/ZVlrCE+3TI3hv/ABYHq
YS/wyKCCYqkQ0nSw1NDWRSa0qTGHDDwDp2NOM1NJlZd8o5U5zIZHLF+eM7HsbvUA
kBcMG2hhiO21D0GdSOePS3K7UXJvohilntRs8rXU6QY=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 161907    )
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
6eM7STiBCNDZ0TzxSURhowl2xJA/PtxRRTnGSBXhaE6liidxV3PYGdE/Je5QxcWk
fhNKnitnqQK6FeEWFxH6CMNIoAdnF1fsaUyMnvQQMKmaAy+bQx3GohaDVa/2OuEb
dYiOeFAmNB5tDoKGX4b/pEtE8MjBEUx6O3fMJRHkHrgVSdY/ucGmgqz5wCk8Hz2L
9Fs2nidfj68/DTd4bdXfa5l3LOW2LBJjnN7fumJUGTvUHQhokaeUGlssLQK6T2U5
DImph4KTK5qsu6K7kakDzLBwggoVYA2lSEJh0NNMvgzuOHh8MQuSD7cpge/JaHPW
B2L/ioNSyKxZ5coKdDUL56fWi5MhO8LPyemDLyAvN3LKS0TnTlxWMC0EzWSZ2pin
1PAZ7qwmvm1T/QYuLGYprM5UVxfCZHnjj+peVFB7wE8EvXBtTiFRnK7SrQ9SUWPg
spX9iZKIQamvmaTVPxKkq5jynrUx2vmqu4a2fZxj144hDzWpuQwK/WC9OdSrMhk4
eF9c4c8vaPUySTPMivClKtOArYF0/GJGNOImHYfUovF9dEBNv5pzeB4uBltSW34Y
v0vnHcnPlB1zJIafqdql9iob3QFKhNnpL1MJISP1dbA/cQiLFoy6/FFALGCaD7R+
eclaVsNYrCC/nMvsVLhEITArxG6bhx+gLbVDK1P7aIa4C9RGcDpAxdA9UUS8Onq1
eKiz0WEGdfLlTmLxjGzW8WdQ/mwUGGUijgvUi3tvQGahvJcetZ9P61EJHzxXL+TC
3j5MhVyyozUSiuHHbQApo8OFqKy1c9Qn+E+2Ardl7/oFTh01YzTo45euXqKDsMwx
NNrucZX050cpu4zrCYkh1W51MD1IopwCuYPI6XHypAoCFdhVxOzxBXT4ASG0V54A
oOaETBlvZRZQAeXN8wJeognTIMH8ne30dMopKbVumhfKAyZNwH4GnZOQAhREUZ8L
av6AISOb2y+zVwt611bk5tBIPtDCEFz8IaySLBYMl/x3qpUlNaH5Elkv9QTpspk3
U3jiAMIvYVyGsqpzoXZd3pZmC2ZxdlevuMckvfbLjSUBfup29yTbffDE7Qsb/cTw
4BTj2zK6b0/bEmHsaECHmxVFBkznIWYhxBtLGkBk0j6mEzHnP3CBWJu0VUlxpZXY
FdJg8PaVD92giFPsaA3hu+B+WONTi/o15rERkPghsPX/bSciECdO7r45/PBrHadd
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
`pragma protect end_protected

`endif // GUARD_SVT_CHI_PROTOCOL_ERR_CHECK_SV
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
m75NCJi6QNNxP5zhrcR2oLKqvqnTtO9UZ/njQ/bqqoQVOa5CW3F6hj1I2xNJP/uI
BPK4D+qSCzZ/MPzdtqOhfKOarZFojjAmkdqa11RG8FamkhLbQ70029GOCuK41CYL
XgadbeN6mUbqWaiaeIeL9twyk0BvMg7mjLT3KIaZ8Ik=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 161990    )
Deqw4EK+xfmcKsNYWVsNFxghpSjN8M1z3K94eYj9l7d2bB3slC59mycS3XVbCdaW
r0nJMpARp69iQrn8NHPe4T5Z4+TauDESShkFbpWFoqRVi23hra453znHB+xhBStR
`pragma protect end_protected
