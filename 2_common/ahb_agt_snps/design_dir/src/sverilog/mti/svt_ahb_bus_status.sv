
`ifndef GUARD_SVT_AHB_BUS_INFO_SV
`define GUARD_SVT_AHB_BUS_INFO_SV

`include "svt_ahb_defines.svi"

/**
  * Defines attributes that are shared between the arbiter, decoder
  */

class svt_ahb_bus_status extends `SVT_DATA_TYPE; 

/** @cond PRIVATE */
  /**
   * Current hmaster: generated by arbiter
   *
   */
  bit [(`SVT_AHB_HMASTER_PORT_WIDTH-1):0] curr_hmaster;

  /**
   * Previous hmaster: registered version of curr_hmaster
   */
  bit [(`SVT_AHB_HMASTER_PORT_WIDTH-1):0] prev_hmaster;

  /**
   * Currently selected slave: generated by decoder
   */
  int curr_sel_slave;

  /**
   * Previously selected slave: registered version of curr_sel_slave
   */
  int prev_sel_slave;  

  /**
   * Indicates currently selected hsel index of selected slave having multiple HSEL signals: generated by decoder
   */
  int curr_slave_multi_sel_idx;

  /**
   * Indicates previously selected hsel index of selected slave having multiple HSEL signals: generated by decoder
   */
  int prev_slave_multi_sel_idx;

/** @endcond */

`ifdef SVT_VMM_TECHNOLOGY
  /**
   * CONSTUCTOR: Create a new slave address range
   *
   * @param log Instance name of the log. 
   */
`svt_vmm_data_new(svt_ahb_bus_status)
  extern function new (vmm_log log = null);
`else
  //----------------------------------------------------------------------------
  /**
   * CONSTUCTOR: Create a new slave address range
   *
   * @param name Instance name of the configuration
   */
  extern function new (string name = "svt_ahb_bus_status");
`endif

  //----------------------------------------------------------------------------
  /**
   * Returns the class name for the object used for logging.
   */
  extern function string get_mcd_class_name ();


`ifdef SVT_VMM_TECHNOLOGY
  // ---------------------------------------------------------------------------
  /**
   * Compares the object with to, based on the requested compare kind.
   * Differences are placed in diff.
   *
   * @param to vmm_data object to be compared against.
   * 
   * @param diff String indicating the differences between this and to.
   * 
   * @param kind This int indicates the type of compare to be attempted. Only
   * supported kind value is svt_data::COMPLETE, which results in comparisons of
   * the non-static configuration members. All other kind values result in a return
   * value of 1.
   */
  extern virtual function bit do_compare(vmm_data to, output string diff, input int kind = -1);

  /**
   * Returns the size (in bytes) required by the byte_pack operation based on
   * the requested byte_size kind.
   *
   * @param kind This int indicates the type of byte_size being requested.
   */
  extern virtual function int unsigned byte_size(int kind = -1);
  
  // ---------------------------------------------------------------------------
  /**
   * Packs the object into the bytes buffer, beginning at offset. based on the
   * requested byte_pack kind
   */
  extern virtual function int unsigned do_byte_pack(ref logic [7:0] bytes[], input int unsigned offset = 0, input int kind = -1);

  // ---------------------------------------------------------------------------
  /**
   * Unpacks len bytes of the object from the bytes buffer, beginning at
   * offset, based on the requested byte_unpack kind.
   */
  extern virtual function int unsigned do_byte_unpack(const ref logic [7:0] bytes[], input int unsigned    offset = 0, input int len = -1, input int kind = -1);
`endif

  //----------------------------------------------------------------------------
  /** Used to limit a copy to the static configuration members of the object. */
  extern virtual function void copy_static_data(`SVT_DATA_BASE_TYPE to);

  //----------------------------------------------------------------------------
  /** Used to limit a copy to the dynamic configuration members of the object.*/
  extern virtual function void copy_dynamic_data(`SVT_DATA_BASE_TYPE to);

  // ---------------------------------------------------------------------------
  /**
   * HDL Support: For <i>read</i> access to public configuration members of 
   * this class.
   */
  extern virtual function bit get_prop_val(string prop_name, ref bit [1023:0] prop_val, input int array_ix, ref `SVT_DATA_TYPE data_obj);

  //----------------------------------------------------------------------------
  /**
   * HDL Support: For <i>write</i> access to public configuration members of
   * this class.
   */
  extern virtual function bit set_prop_val(string prop_name, bit [1023:0] prop_val, int array_ix);

  // ---------------------------------------------------------------------------
  /**
   * This method allocates a pattern containing svt_pattern_data instances for
   * all of the primitive configuration fields in the object. The 
   * svt_pattern_data::name is set to the corresponding field name, the 
   * svt_pattern_data::value is set to 0.
   *
   * @return An svt_pattern instance containing entries for all of the 
   * configuration fields.
   */
  extern virtual function svt_pattern allocate_pattern();


  // ***************************************************************************
  //   SVT shorthand macros 
  // ***************************************************************************

  `svt_data_member_begin(svt_ahb_bus_status)
    `svt_field_int(curr_hmaster ,`SVT_HEX| `SVT_ALL_ON)
    `svt_field_int(prev_hmaster ,`SVT_HEX| `SVT_ALL_ON)
    `svt_field_int(curr_sel_slave ,`SVT_DEC | `SVT_ALL_ON)
    `svt_field_int(prev_sel_slave ,`SVT_DEC | `SVT_ALL_ON)
    `svt_field_int(curr_slave_multi_sel_idx,`SVT_DEC | `SVT_ALL_ON)
    `svt_field_int(prev_slave_multi_sel_idx,`SVT_DEC | `SVT_ALL_ON)
  `svt_data_member_end(svt_ahb_bus_status)

endclass

// -----------------------------------------------------------------------------

`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
Sydq/6gckLni3hWO39l8wnYqiavaYHYtrlHzdUpNvGNHRV5nLSkKJjjcWFFk61Oy
ab2/WPMRLigB1dY2T7/uzv+1Hoe6Dg11ruoawoENeKh1aD0FWv0GS/XOSQrCjh7t
Ttbwq+99HFv0t3rUFy05SNheMvrQPMXMVSEO0pSBrTM=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 387       )
GAArTm3cFwlmlSsa9+a7pfnatqkBCud0Ljrn6z6QZEHA+nlTEuEbAKtrEy71o7vR
ciUYdrJmcU8OqJGR6PaMGeBexhXWsRMBUq22xrFw4KUPCpTnOQ+yeNeBZ454OIW4
oJak0A8HmiGzIb3DPPDgOT6NyM2oYW3ClhFVwG/UUOKVUQBcwf04zjKKf5eJLaeZ
9QHC72RQ1V8cU7euNCMFSEvyXTA4nINNDMcefb1vOstLbf103nnqrPESDVw/Ttjx
E02AvnpHvf2cHiHys/r03QIwLEyod/q7c7SSwRS6RrXv7Sz+jnmEL0t5FdwD4bOz
epTFELK2ky+2patK3sxrGbovRKyc2HVFZ4ftkITGNg49aBhmXr9SJgMeOCD7B0MV
LjC9XbAJ0FbppJdjlMf2q9SsGM0P987vDN5V654Nu97UFojBop36EoTrPrWz6VoT
3IzECqFRQouROqWESwXXph9WvjQXJNWOTJYQU0EmmKKWTiDt/m+cBD+N3vvpDwsR
Z/bkUFkcH2IX91u6t9akdw==
`pragma protect end_protected

// -----------------------------------------------------------------------------
//vcs_vip_protect
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
mtOrRQiZnnWt8SiC4la8WxHdMu4gJVithTVaigj32k2KndCdHw75i5sHLNLNmzBp
4TggWbp/DmDsuurIVZG7SFSUkvqhlltX95dYW4cUfEvBBIUJt82KiGvaUJzJEoZH
gCXCKatEcJQ3fl8DK7jjs/aAwZn2iQyDhWB8VdjZL4E=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 8241      )
UgH1imGzOkk7dOLw8qgRicxJcC0T+83pINDp73vo5X0Iw4rkSP56dpYWNJTnIzoO
p3uwxUR3kf4C6O13vVhyzy/8/mBFCgyB2w30njzkNXwqK8NXXS0oV6/0SWLtBd91
tmMoebrG2YiBClaVfCKQK0jsMDWRl3MnBtFVgvL+luZdmllW48AWLee42qMmyFZK
TzzQEU9HXH8+sbcPsdxNPebvFvKIhUDXwHwfqIwuLtUp+79X0i8gWFdSxkuRsNwq
XjQaO7FSGOADXzVyZvIZEKVKBf+XPRJZ9BoFZStly3Kyn0zg8UeO625eee4SZL4+
czdkTtpJj2yA1g33U5CiiYsGcg3VCH1tm6LVPWHPMrTsad0UrVqxv/QPKk9l2YMy
GA6xoNHAdjFDa24+G3fp9jgpZgTtRsTDcdYzUVGdUO1VFUKhYiQaWesby21+ssBQ
YyEo7vs8M4QwMYKvq40QCO3+eMaWYl4i3e9sdwjNaqt2RLXLxB/64X7LbVYoURyv
XE6m02WUnbBB4IUAFug67n9dzVaJrvtKEruuqIFI2dgT5vT/PC388UX95QtjYYAc
E0nW6rbNQxYmi/AKmCpFzxsklzsgrWMekiYVj3A0D1Bt0eKnXUhnGO2VP1pvIIah
sj8++ImitpKA9GVWv0JGZPmO+fIwk1HA4z8v8MPRPlwi9ksyntUjVul6uqoTrMmz
4wl/jQlx07p9fQPKwF5Bv6+NoihY/5/U9N4SWC/p81f3WcQbYOD7XnB2fj6dx7hs
/J75AKkUqceHgwl4XnmEPS5UDErjkAXCGUb8pqmIzQ7KIv5UhWMVexqRZp7acZ47
beIHkiXhI9LYZyHnIHGYuy635KckBivAIlkmimEc6YPTSvu0NKS0CoQTF3xjtfr9
W5bw+xM++CZLbULy5p1YK+61zJPMmxnPefCNfk20ISwjj/6ZtjVXYUbpZDr6ffSc
WWTtaNB0kE9Ld940DnP7udK4qmxWMGSVcfpjwdlE7Z8aZqZ189xs3f7rbAixf3Ol
6hdYjdEOADz6tiil9pTWhwfOacC094HT3UkjpRx8mucdjM1q8IR89TrCgWJ0ftTV
yK/ZjcNbvP8+HvxqnTRUvX8JHrHCF4PK+EbcACTQyboMOPaoDpodXKDraC69JR45
qbFWY/jgrGE0HddeG5DK8hVysS7DJiDRacIqUN5vaqLWsLPAXB/aTWcqtynMM+d+
sJexfpH/tz+pqC5jVbaODojH68g/F5ldR0M1bvpscP4U7U/iVP9IuZSOCW1gXdSx
w+MF5PoBqVMvetxN6zz2Si15rVgtgfuF13wwzj81qou2T0tdDpmCIysKQaE3zbCy
bUOv04jMCv8SVJZ26iNOo8QtcTgXQGkO/VkKxpkwZ2YjiTaayniVZaQGKojpVDXW
qv8VLneLzUNv9ZbubHCo9/k0TUvDzO3DbmC2Lo+9N77Kofnaflq9ctUAeYofHbc4
vJ55xk3H172xj0sg8xK1eDYfz9VLCDvYripgKeVx5Jl6I+DuE9JOwRbHZxV8sF7m
9a1OaKxh6N0ZKuXH3uAadeBv22xsjni2M71EoW69l/xh+9pphs1RBeI6k4gK52Fa
fHwIjkKQWO7je/yUTgaVQQLrHUfUEUSEF9uRImVXdnRgy57g4EjNp0gVcK/yqSMM
04TSTMLs/1/DvDvOP+6nrIIYzhMAhk6unHXCs4ERXfKwQhnkMViyKgd39au1iNk0
bN7EYNMdrkzBbGN8QTXjwRtvfbGtqoK47ZtsFtylJB73rUyuBU+LwksAkLYtVor6
rN13cbakBQqh3dD+58WW+W+yMYf5ANxPVecmeHVexwMIORQ+s8YwnE52ierQBk4P
UEVAErmb6Q0SmTQR5FWvBXeeUk4suI9Xu2wHVA5iy7Jn2CbJ3bnJVyFX2kJuSpSB
h390g+7lflqDDu5VHnkbNGNq87D3dZjHwEHcU3Vm798ZRuqtxVJpldjIloI94weF
mEDzWtkUCKyz4DbB1pz8VTMLX+DEZ0+RHCjilSKClcczQgFtj5D1Xq7LwNXlbgV7
ZY5uRxbRWwt6cNGxky6E/lho/bqcLvOwnJVNASmUKGD+Knm/OR7T/viDtcnzf1jJ
eAiSde5WGixD5inLzwg5WdPLgNsi4Smufk0Q0XHbtbs7kGdcHvUOBarQoks10X23
9Bobwg0jq+zsUWedeVmWWbMJxegdPlAI/F/M+lUYOCduUxXKAq7enC/OK/+Tx4ZW
Rb4mxTSpG2zz4/izYXzsAtXu5Dqe7Z+lheZb8bup+WyVaeW3iX6J5xaBHlhvhdwJ
Ya0Z41YX1zbi+KasseKdiThranHVvZafTTyEX9xXFCekqzenOvQEIJfvz30g+Vm7
6YGJptO2v0FTG4C8z64CSiQ4Y/X1KuNAO0VygP6GChNWaJQO2i25wXdn07Xc+7/Z
Ni56lS8IQ/5PIisnNsJ2LZIvwCGvgSxLxA7Tt+4M1pOvAsCW9zT1W8XOTgc4G3Bd
SjDW33R/4Upn37LmjvuLibEyDI8mVimkeySxtN1y2DFf0fIqw26wT74iHZcMdEvU
ZHPruxaCP4FzUsN6hL9nSU2ZqchaV6nx5r+M24yyQL22M9e36CNyLK5LyYPOjZia
mYQmPcaA6Ned9FXa3As7tIllFZYRmYTRmag2ExSqdpxPNYcPaiuM2Dd1vjTp16G/
QmTQB4TuHeVNaSrIerWmbDVoAw44E2zzyP3m8DHA4F0ahgnMJkSxPhLxS04IBdBT
QKPUFrFSU0fcUhfYAkT6Zxn9UUaCy/qgAwpygfBqC93Ek776RDXJZa3P3A7mrKmY
6Oa5GmIawktrjgu6riq8rluUSqJNDgNGpYDq72zeBdoR0z9x/mEbHj3zETS3Y52N
UI1GNWUFxbYNOTMqIqpTPwchVaa+/F9lJhGE1vOuxvthA1dmvPaZiykmKDuOQ9TU
2085EEEFulZczAOga9+/WGzVURtYliPrP3/f1pY9tlkAbUY3mq6L52BUMCnVtUKB
uYQjrsL7HNYlCTALfI/+0FdoM2j3+EA0AtC4bLVNuDfFPFSg1F+QWpLAJgUN1lol
eTIJ8wQM+/uOGP4VGR5ZXQ7GBsWh4NcmXoLZ2q0UqM7a8hrW1Awhue91p1CzefPs
++0WWP1hYk4YY21DF4dlb9YrCd25/rqL2lbDTJIjKG/xwsZW/UXZsVSDcbYvf8l9
y+0m4R/Y4jgzfZ4c6wgigC3/N3BdOOLyxSxI5QM4Mtu8RqrJ6dnQLp+QjJjFyB/7
BqEt6Ic1uiG99BQWg+x8SoYYd+yNG7/PSIO2YttpAJR4XTsNH1l6tPOQJ3fdvN2w
+ACK4ezryV/nVtEMtp6xp+I4opetSHMA64O7a/+bt8cCN5XGakid94gJwYpJB6dn
rJtizs+Hg05EqLfV3mtmPgClFm4AcW5Upo6eL3EpUcHKC7y3MFe/hTVhkxRViRDE
n8fCWRqkOPhLvAFZ94UOyzmz9TYzGMs+iHecUYL1bGBPySYAvlbYr68vI6mk5aGL
C+NM3eLb6bUGlQR+AvlpZFKAmcMxJWPtKtBK02fb8zeC0wuwEBwEwSHs8MOghI3C
5o6ULNoNbSMaImg3+9guUkwQ7AOJFNNPgawtpPIJ3KZMQ6/Ly2bkIR9NGC7jvdWF
jSXM9/BKoMa0yuI96F8zQvyUQQKDGTVNBdtrDgZr0XEG5J4nFMioOEpAejIMRFK1
P5CfLfmh60711PDYIVriQSyv7stfc3KTpiCV7UdV3kbty7zVEpwON+FKPfN1oSXP
w4b5ElQ1gKVNfSu6DPmT/5w0xTK3KnzDTpMl1srjQzsqLtrToxsrcjiRXP6QExKf
gZ4GPuEVZUx17atCgYlw+eXMcE4p79mn3hea6H6KeFmBRyn/0TvBfXQoyrqEhPGx
kt7eU+lfMahI7aibTL/z0JTzgHO7Lf+rV92uC89Lx3JcUbt7ny6ktM9lAjobzqXE
H+RYuFFD6Raf2l4CLjhN0KGCVBans+m4BoJc1Hbad94otZLuu7xyx7PqJNpe22WR
CURCoid0QfZxJMYQLRE2X51kVyT8sJiWGt35jgU1PhcTemjsDB5YGHQFRdS9WlGq
7cCc3pi3NQivbQWmA4nWzqO/cwpKs6NFfR9OSqbsK7Mb5KKhItA3FUBjx/QLHkak
0jVja/rNcz5MQBbVfJzlrcm9seM6BYsMZ3r1KRMbJGUvXtNm0jqLL+7TltnUVlUm
H0ulFXDHtHl1Q5p8zhVO+CA4p1ENydlDnP/YJVoj6+cdIo+688r3lzKBwvMsIRz1
MImnm84E6TZv2TKh+iu8gHmY8JOkHg6gl4U51zfVSdE+cQHeVZOcofu9wEHiZULI
LT0wnidxvPnlPVbm1whj37L2SUjWaY2SNb3biKQFfwc7EhmXAJJXozFMu3U7m9ov
Xx3gjD1lunibtnAX5pXHW7/x8/e87rHXZu/bkZwz1+KCFyqQTmxMMt1RcLa87fgb
3/V0Dtz6AX/5UP1hiqrcdCY6X7RFhs1xTOVT7qkS9Q0KMWG5npS6GnvfYlX53sNf
ILJbNPfLT7qsI8leFe84VwIXT9RjdhmVYHx4vMwettioAgvbMrCJvP19hk/aGX8a
8AVZBDEIP8cHWC/E+wpD9sl5MiDIEh2TK1bMqw2avniohlVowqdcH/R6M/XipJoX
PuBtVL5tfdFI2zJXHdVXjrdbg61eVeiIAiHQgkssSFZs0a1Xne5x1xIO1r7YKJpG
Za6bMS293zcMAN/ow7ZNY/Ia0KVsyZZRvkECDAtpVGfW064XhWmeO+ARKgTMb7qY
Mgnx9PbRMSkTlDESXoqfcl6Uy80+/6bwag8fySq0fnG3EwsJmKn01UvBWIh8Dc0Y
GI5KNDioz+mXQa15ntVvMHfWpXz+YdS3SIVutv/z8Ij0jWYqRTZUHw9mJKT9cnFh
ttj2GXfaUgYPIYEFcfdQxnDKPwISoaCLpbjaT81GKYiO4DHD9kLRII0yYcJv0XwQ
HiRVZe+O/0AlfWcxtO4+4/no+VH8zixzoQtrmG1wRE/zMEJEmcq/PhKVS5nk/ekC
l4gTWlEVWsY8v46AqzsV4u5s1y9PXkHwdX0j0Mck2HyceuPjal9HIjGp3DEq9qFE
SLpin+1YBN+kxeADaKxnq9JhRyK+8/G6aVqjDjreVeUbZ3JiXUGiim3Wtg2rmUL0
LjbChCuKhOb7J5fHJFj3mycMYIUyy2qDT/OEoxqCZd/ImdyZ4odxlGdjC7S7+MVq
GLrp708neKFlhjkGkplCMhauXIfDT8Bou1HsdXzk9xYgHDIgvKcJvni/ax4TjwII
sU174PRF5BJ2mfLYKEBa8rorbSZE02zrPFsJgF8W07U6PZHuG4hRL2fIJrXtlH2l
en/M9dZVlTlPof+1QcmDKOolij8PDXNrcnHVXV71ygnFj9FxPS+5mzsl3VAhA3/4
3zK37GfRXxLD1HOG+LbbQ/hLLLPlJBVEEfBja0XI7Q9qMUMUmgs8yXUxCTT40V0f
eEw6dfbZG4yCM+yboQnb7KHREFWAqowndxpr1HCkBkyoR6MVkug4kY/qu3bmJlwR
+XLtG0sCW4C4I+7aHaSxj0UZBBeumE1ezLhHlTmSyeV9/QK7aT1SAHY5EgUQVXhi
QNXV8MQLoPVclNFrpv235k8Wd+zplVKjKL2M2pklgkpRUP52RhL6evJDkVXBKqZM
KmaNCQaDfB+gHh28tPAuVp+EkEOi+QbtioY0KqDRq6j2vHbdMEodzWJefL3iqs0N
xoe0lProlG5J8VtlAVbZj9FkwB0hPcE+aUev0BpdA6XQwUTUhueg6aJQAb6KBqug
lk+TQk+8UI7EodvW+TPQTMtegl42kWFr+Q3CO42MhRSj2JIOlHfSH4idscHYVL1V
8ZtfIGq8n12OkqAJZo8qX9BUVIi37j1YuT7wE0B5RsTooVAdVtXS3H2ZZ9vmMSHX
sMAUpxmIJRLkMqsY813CW0kM2RwZfgkMwFi27irwSLkJp0EmDr0hyk8jHJ9QjRxT
Mu1WdXf1NFFMCgvc16XfK8XBnuivoFHy943aPs1vYEnDCN6AYtSQRgXfKTiLx5c0
ufC/o4sN3gzNdyzrQLKqVbKmYlAsRVTsBEOqFBLBWLKGQHC7CmPmirOppRCr3Kbu
PYHRs5u5p5Ot3ViowqOuk+pC3/L+UMTcZH1vChFDkEBi20QZXfwfMJAQlLh7zcLl
HW3UaTToM1tEzEVUqmMd5DWbkT1O9+XJkQFk7C2RLmkz/knSQRcCo8nN+c0NXuTr
+4Xd3AjZZQDAFRMGRD5lQ/w6hR2GNHa99fEQLFkRbuikNfQtfAsVcWJu0M+I9vmN
vmbkhGOdvk0c2Pm5Lmc2PaTy1+WXYMzDqxev+Tk4xQIWjJfmnpAjbyyNmbwuGxJJ
Bifu+trQKYp8tgV5a3feUxN+6W/L2V+vXLfXAph9uWGy48d0EUNsxgRaJqnozRF6
z8liPJu+Q+zwEvtYrppowIzl/5Xaa74Q370UEbxgMeAq611rYe9JIm4cEQ8TI9Xs
lUUqhLEKvG66sfbCWCZsbl+ld8NuuSfMwqPvZORXRGnoeRmCqCb4DCRHu1ZRik34
iLmqrxu/y6qKAJrNH/MwWoPo66Shb0BhHyhB9LWoV/knbTb6biozHwSCZvMQt3cZ
dhNB0tZ8awNrRPpvWTGywpNSPSoR5sIxh4taUrz4IdTpjll8UwcQ97uH9EBKrUXW
pLSR85yK5/I52oZJopISeEymdq63zmDAHsTT205n+EjkmOQju7z9VHFDABQK+SPY
DxQODl1TZ3Rid0EckDMVnHTruKnBCeWT+Tlqar/Uj171VeffjWPoYrLbbLKN3zRE
2dKlFyTFJH200lJkuvwkp/ZISwTWclx4vIhO9tujW1Clyr/it7xyM6y0IijmM9c1
9/hLg/R6EGpnPik66iktkfmq9TIc5Li6euURTpFVGyNXAxgDidX9flZulXrGz7Pr
G+oD0lw8uY/OlYUuF4tRilgFK+jzmO2feyZPthsGLaZRnrglKbWCslWJ6NTUOwQH
XsC6mAIzrXjBNt/zM+SkSEPaBUyFlO837cF14XwFWeROfQtoc4bT/zbcWHLc0ZzF
PXD2d0vBfXOsZRBFVMbPrACAQuYuUV0oCc0Fts0l/Hg7/N8Kuv7YEDhjpoOPuPZs
7j+DxycQYuJiMmY77qOr5/zcbIpiyrQCXNYBljvLgoyjrV00tVuSXoZFpBZJFPAe
ovqjNThJt9BwqldgAPc9T/2T//EOOtv/hmEkeA5r/DJdUhyhXUND6c1nUx1bleM+
2uniosHt3ngotcz62nUKfQk08SH+1BW38dn2T/4LBWwPR3Q5FP7LtRUFnQSLz8+D
byKnUJMmimNPQaUk0/GTfMcfg/1J7FRAUhDfo1HnhKIM+nbkoV5rNdgHpQkOGUMd
YkWiFORhnoT7EV9U6odSPGGCkJ7cYvKO3w2EZ2VJfvS+s+0VXaoLs7+Bu7Zj0CV7
t62jCxuuSrhlhVjEqyCX8u4r2YtHfWHxFAMZydfcrLEWa/qAVRM+2WM1esUfXCK2
jTIJsEoEjzq8iEb9KEIgP+zFGsGdGyngxxjaZYwDP2YY0sBSHSN6eDzYrFfFq9zz
KjRoZusK4TTFSdcO8xWd1b2ptqY6J76cuRRZ86IMCa67mlWlC3bz8Q9VQOl5HkF9
qdT356aDzvX5Gv5NvbWTSm8w1nAQINmUfwe0E2daLFTV9NFy5b1Uc+ZGJyEHf4l+
CCdepibtAE7X6zX18/ir1z3wNtvgWHkVkzBDT6miqsjbQf1ul8h5NFmNH0/qnn0R
D/IdgqSkPAmemZyI17eLhyqtugBc6pJwx+AxZD6mLZZNY2cQk845nfwYdXP1SyCu
XPqz/gY1+4Zmjoxiq69gq7XeVktTMr5w5RxOJXzJuAcn0/lqGbwsA32B5BGpgjff
ix7mQeGbkDH7KdbmRBkheC6IrQxciNhvVD9Y3YyyjT86YNxuHqsgYyNVnXquMzGg
us/7NfpMLa7/3jz4d2hcqMXx8oI3NY1x31cQw5MrHw62VKo3kuCedAiPcHxTQ3G/
kAYmnMZ4L7GvTWHDwCQgF2gLaF3f0V0ngKBh1qToky/+ko+ELT7ECnenQiwbfHzK
g7Fyanfci2sI+sbCEbONME28fKsOF5Ke4ZzbtHX+PdjgBZNcMJuAiYjnM4671+kY
xXlT9+QTyGDv6BV5K0r+RVy96UsGLYz3Z4+kG+fenGfC3Ie/VWKLz0ZIfVt2ZFt3
zcv3aKb5hudmRRPMIo2qQDi0WOeQULcvJoiK8Me0v0gLv29ahRD5I7PTEYQH7H8c
D9CBZp86i5UDBXzXnXtvlti4fhNVH5rYP+WQpd0MFziKvczvgyf90ykS4Nv4TXbQ
KnuC0hitv50GciULoxPxcjxOqQaGmYYAzmI8fb4/PzqRTf31BuwdmCb03rcc1JW8
5bSIXaBsPECQH5pVlTVK5gC47sF6pSWo3fBnMsGUNtEfmSqJM9C6HeUnLzjomfRx
BcG7CMeT7sot0yZ3yW8PgsE6Q0bW3Q97OFaTZ3jsIy6wVN44UxZ+vt8dSBDSsAvp
2jFAHo6rdWxoH+9bsOQS8NqI7lTGKUZ9zJxqxQNAlSaIRxdamFLnHySbN4+Wkrzi
yTpWAxbEua81NLvxWcVtAIfUBj7cKNK98fTv/H//gH8Y/CpsyX3nHzi5n+C9wd4C
zx4DhXmVJ9bROiFQtqK8xwcufSPBmCPa70F0SQcpjdBuhsfhlyDdzK0Oc/KKrgTa
8RvXF8+1xOfLLZMc03DVlUuwJzFbd/vlpGPKUIq91RBTSIYs23cyT331D/65NMFN
ybegjx2024IIxDuz91nYRpQQ8d9FjKhdeyY2mLkVq000VvX+NtrDNX49USQkNWKi
GHO55gQGTcpjokWwhMwK/Aiq1qmm+J9aIQKMVdjwULK7B1WcmwioZ1IDjI+rLzPO
BorcedUPRn42n+3z0GwLSLqZPIqQTz+69lCREuua1nSUozaIyIR0NOTY5yJ2rgwZ
JB5WlJPjMojIp7n0assOAsnHqxYFg1MMeEmp0oOiJiqLBzePYwVcdmXG4LxCd2tc
X5E/SJd/9T5yNtAwEnmIFFjPAI1470wRabN+TpY7LR1CEu3idMYQ+QbhLqO3V9lu
B45+ZL4YlAfmJ9ETNoI9Dltz9O5q02eK2YxbrJlbEtVAt7Ayfq+aXIt7fC/0RLHB
ZNLHkj1Bl3NNcnNoXERZbHzBYqszcVRfBNBed23d9WQEvhdzoLpCrd8GLSs4+rvD
eBNw6m91J0SF5A93AQ/a6MT4yDZlk97dYNRxSYb+4ZXD03lB8EUF83b+Dv0fck2f
YGu7NXt3VVSNehNs1N2/4qPGwCkDJEr/zauN+O9HwI01zCaPvOjLY6YrQkYq4dv3
InBSz22O6eyR82sbwwDzErRRC6fjZaA6eLgsEtjPbH/CD6S+g/p3vEnkQJsRUxqg
BXLyDvlu4M9KqUAL3C9Ebn4+/jSL4Qdrk9Zj2dtlYivi3Vl1lJMBfatFuZRn/ksA
FQ/YMYeBCeoRxgIHa0AxTaUxtVrc/qoZXGMuJgAc/yKDdx7dK9KLc+4/r/CtSsni
J/+SSNzhyq+g65maSPeVf47iQHzEKgOtMrjF+/HW/cabZ804UsA+crsS8zzO1XoM
MytL4CewqIM2oj9KxC7nfGQ75lP5mCXYNHaZoFRWRXqSa2XA38jVeqUYuvWCXpEm
stG4x8+MBfNyXoumOSNirG0sYpvoXBIs9KMN3GtoYnM8yNIk9tQteQO6mJQ+G3Yh
4pUNBo7uf6jHAICFObtEXML5a5c51AKUfaQlPFATZKVfajwtDUAN56ZD2JZ+s5O5
eiOiwuraUx3Jkv71a1Bkcsy/kPrOVlg2p/nUjt6piktiBhmDL+Bj1/QnhdUyHgth
v23l20aoZcSlqfWTu5XRQMACK3VMxY09pECtZG+mNHyLFtFqs27ihUabZlBvRl7s
HFMbxi8XeM9BFG6lQhDLaua+BV9s/UIcu0z0WWa2+a9ticxmTWdAcGVQ1qZWK880
fr3+pkxDYxeapTmx4YF/iUzAzFo+cQV312cFVkyZF/qrbfASZEIDlnUxhuIfVj3A
ZnZKEBTpO7wp5IdkdvJx2nshtoiG8qVhrRpbisWiKe974j5gMSKEXhZFCQaSnhXl
o99HyqQFX3aQp4cb6OgJmQdX3sh8F1ZyFmXuxyggo29sTLGwh2hXumVyrryKvaYH
WHw/nQgQeYLBFIfTEpAUkg1T9yrXCqxj9cacUsb4sPz1AqebpqeEQDTHnV9H2f7s
g+eQddilsXxec2CSQVk187g2wWRYJ8YCHhZgsO1ZEyIqXBg9VX79tbzeweim+oBY
Lo9oahAOC3ANTXkJxPlL/MMNfP8Au1eXnm0w15tshPbuCSasav8aoGpYaFhydNPC
HR6dFpHpbBkBaJfv8kXxkjI22dofGdcnA+5DvNkumEs=
`pragma protect end_protected

`endif // GUARD_SVT_AHB_BUS_INFO_SV
`pragma protect begin_protected
`pragma protect encrypt_agent = "Model Technology", encrypt_agent_info = "6.5b"
`pragma protect data_method = "aes128-cbc"
`pragma protect key_keyowner = "Mentor Graphics Corporation" , key_keyname = "MGC-VERIF-SIM-RSA-1" , key_method = "rsa"
`pragma protect key_block encoding = (enctype = "base64")
on0QAwVL4BYjxL2G005o+pvSjy2tl3Gh4qoNFNLzIm56LVJMmVd/xbyQcWu4nwzp
Fkof+udTNJD+yumH/ZvdnFBegA0pbwJtL6lIi/8sOOum0DBhWMlXFPzDU+ycv/BJ
9NK6sZHc2hgKA/xfTgjao13BviXqYLba+Abs9uWqTb8=
`pragma protect data_block encoding = ( enctype = "base64", bytes = 8324      )
nso41z/zsR64PYA2y8BPuBjDUoC19XZMIahXFkQbHb5JUQI3lYfCdcl4L0vIuWvG
8G+Ik0qzpon7+t42xwAjSueyzHbh9WChd7+ViAW8FA68ZhXE3+eS6XZv6JwA5eM7
`pragma protect end_protected
