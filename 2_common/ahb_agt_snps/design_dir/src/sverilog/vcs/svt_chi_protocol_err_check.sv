//--------------------------------------------------------------------------
// COPYRIGHT (C) 2013-2020 SYNOPSYS INC.
// This software and the associated documentation are confidential and
// proprietary to Synopsys, Inc. Your use or disclosure of this software
// is subject to the terms and conditions of a written license agreement
// between you, or your company, and Synopsys, Inc. In the event of
// publications, the following notice is applicable:
//
// ALL RIGHTS RESERVED
//
// The entire notice above must be reproduced on all authorized copies.
//--------------------------------------------------------------------------

`ifndef GUARD_SVT_CHI_PROTOCOL_ERR_CHECK_SV
`define GUARD_SVT_CHI_PROTOCOL_ERR_CHECK_SV
/**
 * Class declaration of each of the error check stats instances using the 
 * `SVT_ERR_CHECK_STATS_COV_PREFIX_EXTENDED_CLASS_DECL(svt_chi_prot,stats_name) MACRO.
 * 
 * Each call of the MACRO would declare an extended "svt_err_check_stats_cov.sv" class
 * named as "svt_err_check_stats_cov_<stats_name>".
 */
`ifndef SVT_VMM_TECHNOLOGY
`ifndef SVT_AMBA_EXCLUDE_CHI_NODE_PL_CHECK_COVERAGE
`protected
7eR[,J;Tg\9)O]98eC/E?J#0_G<8KKbMb#@Y:aMaYc\:5/D92_SQ()T[cA.a7_PY
c@SD833L;O)),$
`endprotected

//vcs_lic_vip_protect
  `protected
JCga/C?;>PA?<MCcOF>6b[(A>\08<>8d30Q&L)GR:ZQN/]W;#6c0.(,=W/ISG=<S
HEa=dR-]8P)QXd3PF4&IR)aN,U<]>2A4C;F8#N_42DF<We3PH\R;E2/YRMb4GK:/
5@8(+XBcV^H[fT[^<ca8=J04T-@)D=(Qb3Q>T01;Q=_8M,ET2:IG[BfF2OQcQNIb
63VgRWJB_WU(91<-61<[8JF<#EGf(IIC,a#WPMf)E@S@6[M;=V-D0#C@?5)CQ#(S
S8IN=>;5,WM1c+A71Y3VX9GP-[eX/,]6^c8DP_dN>6?B@HbIa+3<2aPX2UWL(D-Z
6P@EK29I]Fb>Ha\]K93L1X-.2S72\Y1Y<TD_7H1MJ>>)]93c&9cY+bC2J/C7#51Q
T?EKIfddS&)4?FH>_+3MN,VZaf9,R<6497&(?^T0UFP]IDLb6A)aCH6[_S?TZ+c<
2f7NOMcPJD^(+4TZC227(ZS1MD8<NKB.L/Y>:X\7g4SB>Bf4E?K1cA6[I$
`endprotected

`protected
O[d;:)F,X>fTbaM2+L?O,;6<YS,ZNN8]4d>>SOSR1:<&U,PI48I^.)1A<dTX=Lge
,&bC15ZWPR^T/$
`endprotected

//vcs_lic_vip_protect
  `protected
BgGOd\RG<[YNW[Z8+E-Q]61gSF86R;&>TSe+dBI)G?OF56fO_d_O&(6_0CQcN+#,
Z.NUf5GD/6V)f0e=T/N1X=T8)5ZAGQ]=H\G?SM;/eLP4bTDSTU@,bTS+S&eB74Ke
7&[#4O/)Ef_037[e#_g[bHAP+;6C1,,8RMZ7Z=J2TYD4,@NVA4X@d5#>6^=CLK[]
2&g:]ZSCR6;?>1,AD>B?a@8VZJRP:<C608?^RAB&2@?K<HCJ/@e#A2Xa5ef&631<T$
`endprotected

`protected
Sd-G@BGS476:[PVZYP-2>:C0c3(JW82WF/MA4&P:U.X]++J1_7S?+)09MXX>>a&X
5\H<cXO7<_^:,$
`endprotected

//vcs_lic_vip_protect
  `protected
<3Pc(GMTc&;F?RM.^bRX)J+R:ZW2T>T::OD&Qe<+XT&6[G8.M)@Y0(X\&cSE<S5H
eK=5H\#?_/e<3K+#BHEXI<0;A4HRN]?ffDF\2^+H<WC-4GEE51U;RR?JX/a=,0AM
CgddT(8UX+/#;>TU7L-6gOW>Y8e9?DI=bAU_AQ[?@J3Y-dDWEc33B=AH.H)40(6,
I(V3&e0Y/bTgD(dNQ4+_gbM&UId[Z=5#^@KLJ?;U^81S<=/7#6^++?+dH6#A=KPD
MF&R:a3.=5WQ1^;c/Nb-)U0V6SF786]e#:>F?KJ#;9RY5D(3eaZ:;N.BbX=9VM&e
ZOb9(J9;M,R(1=B4C@F&GaZNDP:WJCfU+/=a70:;)e7;J+H\DM=JF0ZC?7D:U^+[
4B@4OG2f6eE14PZZ0C^@&c@/&6N14S2I,O/(,+U3RT\bZ_YRX3E1;:E?EaB9YBAX
@WRTT5AP>cV,K2bZB<g?PT5.U.O0Lfe1Z/XVXe3;Z<=-O4I@0_2KU,HS@KWZ7^fO
F>/a4eFA7Gf,)7SQC.f]X8?_1.>N3PNY;U]E]c(:aaM0MSbe)D^XJEdT-V.0gN7&
CMS/ZRTO:e@=KL.e<+Q2:7VW4S/M1TEQE=8e,^3RAd/(fP>f7OK&07SL/:R:>@9b
f@eKa-<M;<=0U3^TQ[a+;W_TNONK,^HGf:3\+8J(-&GCfO8W(d.D3<fG#Ld:<SgQ
5ZWC-g=g/1M,1@2I>2<aU6KId1D4fJ/Ef)Pb8&M9Y28F>J\P_-D#7M9J_Q;\6J+W
+SZ^g823AOD_=Yc=[<9_;=]@g<DfZ&K,gD^=0ZH40bY.890YA7;[1Q-c)M(&IGXb
aAZT,OCM6B<I8OAa0TJAg,@01H(FD8=P0T3&4a78MQdg?;d<SgBL5;B3P./^,8B0
BQ2eXCKI1A7-PQ0G,/\G01<I/gX69=3L3\K;QX)I#NEKE9V>CbJPE=G_,[gCA4D.
Q+\PV>gAb7dVEDM;/?b-D+8d9V8B:VgAB,W8:3D1^@2AfH\&/IfR()V#@=XfNL8\
,cSGSb5aF66\<]=@ZOf/=_4)fI#\;]HUg_UaUEG@:Q\^S=9#Kcb-f,NMGfXT\AM_
<aZ\Y3g;10_SZc]QB;bD\)DLP^=&AX-2Qg8C.Y?N,)U&OO_68&Y+5A+Cf4D^^IO=
,\O=6cX_QAV#I;e46E(1+ZR0E#dU\DN@1N4B:#H(2aN+W3g.UG0-07XRI?[db\ea
gg.>a+PU=5QC)03Z?-?I0T8c<^7eN<L3@KM#MdCG.;(EG5;g>2-@dD6=.3I:\<#g
OE,,.8.]cWL4-_ZV;0+^UB1C0T@J[ROc;N+@d00DfgMK?AJ^K80W<IGVC2LD@e6I
(Y:d,#RN0<8+6/)/BTce=F8@cJ9(BF@:X\^]7a^aWRZ9QM;\/8J:HVUT?^\/OEQa
>G./QJ=4\4GS5+Xg)JDcAe+ecZ[&EE#/)1\f)YS@>[(4P0?X6W9#WYV7CJMNMMR)
<d)GX=eAV3b#\Ke)3\JC7N(6BDOB.3UOdB7cdFKKRJW7_fYH&KH/b8C30,2#d_]5
#H5eFW,?Q=g=0>S-&YE^&fR+ageTE/>\4CH(CC&TI9^M7=dDUZ\L[V&<=8HLS#PJ
b=LgU97.7[[(@;O1N@6K]39(<JSOU\+gLN@(c#)=0S@YTRYDU/=F;_EMWeUF>.;f
@)FTMbPS?e-a)W08XH4fI8+EN)6+&(4WDD.IRXW+Xg;,De@86X,[cB?6^KWKgAYd
J.:A7DR4_d?>#V??UJEVF/;\]BcRdJPI-^EdZ8bR#96X@&T_We<UJ7>.T6(>[N?_
W^E/Y8SK#?@\^Q5AL#UD#8XH>74@J_=a9(QH(\<?R<FJLb)7,V>f1:..K1/\4)O?
NRK]Y\:Y\M6[dT=@gVFCL>L1dbH,2cSKFYYP3CcA;#>2M1^gCJX[gN>W?LJ#VE#S
]4PdQ0#813;g0Wb(DB^Ab)8Z:A58:9=Da<e1#e<AMA\F=H<PR^]1=5DX8,UdMY/,
a=G\59,J20+f,4P=U^>7@>L<M1DDN-4\[QX,G8OIL7T;32aFb_Q+/E;AI-S2HW;0
C)eU?).D+:PC6@HB,?Z^)2HR:bJa/YZAGcK/4:+6/25Te2c>J0+0_?[J+JeAFN)J
L,BIaJD_S5E3Gg)T1N@e1V#1gcM\KMTdL<,8C[1=:E-PNQ(GC)FfZUA4C,#bUXY9
bNdB58F2C#^PU+MJ(N7Y?=1.SV+ZAE_e9--,KE;dDB<AJY^&NCa(9<b\O_B18ETM
/7cIW(1,RIWaLfHH7_E3>A[IW\VGa[ac<.F^.\NHC;P?8bgVE,a2H^W[/+1LM=&8
<F&ONEb&#1BDO1SW.A.J=]MESQF0&.R42=3f2UO\88&IOB7c(@O026.GaGf@K4I@
@5JENU&YaUJ:<QbTZY_F2M7)IC)T]A</bQ012WCK@7T1J,;,LM>728LPPMX9&3<T
M<9g_T6?O\&#1[A9d033LeX8Y_B[9NG,IY2?b>@GDB15SK&\A^cV4=b#JJ3(?4)b
3N)M/MM=YSO;0:fJ12/]3KZR+63T:9FNYdJbKE@7\@.CQNd_P;<(.J_.Y/F3Ne9Z
-X,A,)D?b:[A;IVEBE-U:fA\&fa<)T-EWL=:JD&]P#Q5B[-]G9L^,CBc?K(NY_H9
#=_P1eIIWJa4cG4ZCV54=TRL_Z5VGUcf4:<&#YGD)7<Ub&A-La+6/4P5SS=2N8OT
/8B?@M>#FUg^a1YVDT-.KZLeM,,>^#,\3;.9O=GR3ZFQ.@;]BgQAHTMgIZ-__&.L
;f0G4KZ,^R:ZK.[D7#LLaGI)=.>5O3.2O]3ccg,TQHEgHe^=^[-.&6ZZMZUC^IfO
>@,cICEL:cD76<_+DU^Yg(Q_E:0Jg2:.Q_3RaMg89cXMQP@JMFHA_fd0H6FN-UZ?
FcUZ6cP]OZCTQ9,9P:Bb&YY)4ZENQ7/_7T6++We?ILf>I)[0AQWT_J-P7.^+gg^(
eE&/NZ9[f&]<aQ@C>0#c:<gG77=\eQa_CN713bd\UKWTfbD3,P^f9B[N^c9C#[V#
G)PB=GCQ:JDX[>FY[@c=V8A8gJ#^+CI00QCAR6AA-C]704E/e&e9@gOXUF\?;>T4
]b2(eBeTbgE]@2@YcA_30Yb_,?.9P+DA8]MMGNg9CAIQ_3>?[XICG(2a]=KU+&D&
Z>3B\W?&JLe_\8UNTDG]8AA8A/Wd.CRNT-Hfa_J)7)K0KBAcc9.E9V92AW.:YO;L
<ReVX7FW1[JW.R7+-&5dTR;QA^PC(g(-Z;^VWU,2SbMc1\0e6^YdLHVFZRc;dY6L
<85WB.V&e,?X00gT9f@N)GJ_9?I#3V3CHO7QAHa,\.<8XfeD[+<).+g;1d/X/PaB
#(/)ZZ6ICZeJH/=;2aVA_)7Z>QM8NV?gY8&C^:PZa+:=70-)S=e]X^cM(@T4#_,M
[:2#-Ta9&PH6<S[_[Rbd[N&S&4L:@fAfZ0<VEb)+,8UHX=&Q57/S.@e:eU&PF/)P
_d9=RCJ-R<aN>56JJMdJgU[9Wfb1S91===5Qc7]V;#M;/ZBNF6P(0BS(E&gK/I@1
0N8@,a12b#)4G6DVNg_ce^]U_dF99E/]9e==SCPDfQcX8LDO-MC.Yc\W>UT31</@
,,>NGeaCY/QR_@b=_fXFd.RZU3+7JQ9IN7X,&7=JVG]IZ:-]/EWF&OKeFQP-f-1J
-YBeN+W:UZ^BCFK8]RL=U>(3[I_VE#GW5X_ca:T@GFb-8OHU2M[6==bM[9e]K^K5
NQ);M);(c:R>AV\McP8]);H,NTfQ@6Sf;L:F9<WGZ,):<_8XY=GAK=)a=dB7U-e7
SV/&#7FVXCC03YEMfE@\8@E-B_WI\-Nd?:CKJ7W^KR3BN-8-UY/+@PGcP;/XB71[
22X6G1G(#[L6RM.c)O:eX:TG1V<Se><g8096+/Q&D<?d]RQ#&<NHZ@8gM.-)W4DK
PTVX65P4<K4XR7_=9#MF&:?&ZY^]U8V4VPAF;8X-CSVb)_WSC+\,C[MI=.6])##T
R9[BFZB4-?=-E^XFZ892eT.Q(FN(?E5).EQCP8(:IeW>?VdZTILWcDAfO;E4f;BH
HEI/f9Kb20,H4@[:0LOU#?5/dCBC#U@bT;+4G&2g9_67)eI?Y-N8De7dL;UfI,:6
e)fMW&S.I4X7&=YSCbcGF1f&8Q3[>TR_;.AVKg-DfH/g8.8>W91&RfAZW>BGKIIa
5FK\HSG[?(M&5)b-KY=PdWJd-6PL,-FM6&I^3]6I?bfWERVW@0d&>cU?#Q>g[)K^
FV04F8Qd1?H7W5JDI3,B0>AW<L:_Fg8WT,BR4]L#=Z,cX.8[g[-<agADgB+&)bgd
G<KN<E.1XZRX&#KdK#/PM2]^^D3LE\2Nd)fd]e@>OTQbJA-R_.0J\_[R@Z2@g=aW
;]8GTFTJA@P:[e;8fZ#CO_(=^&&3BL\U<OPH;A,0?,&7\M^WgN?OWC4RTEGTeEX>
;R1C]F>8U+fH,NV;ON+7-<g:c):,/UUL;+C(SCTD@d0_UZc_fL7VDQYE^LW/95Ae
R64.b;;77\#L58[)?#]25N+B5LY7E#-+K6SCNM(:6<IV^(>JS?)J:6^Jg70NS1C+
#67V_>N^=PO&S,ffcSUU8<XH>E:1-dA;ZKJ8^G,KK?<A8FMFC[[/3Wc,IPS7,ELQ
W/:G9]debbME-+E,-YdLcCTT]<@4;>E:E4PC&PVJc5Jab6O0-d.+</X-:DTfe-[>
=HF3B<T0]g4AEHPQ&9d#]]3Cg#Qg8e/X<I/:X-Y/6<b1A>J&12/>3ORf#;_bV?@U
5@-I9.H>CIATX(EZ<T1I4#4XK_b72(3QPVC@_WFfUZg-+C-)WLa/4+^J60O>PE(1
7^@1RSQ17H&V,b)fc;PGZ,;cP8TgdI-01@Kf@1JHZ=/:2C5dD,T>@1_T=DM.5bSc
OB/e+?:V]M+(fTC(d5:3RF@6B_?:D5W0S2L^&d:7V6&B49We:/>2C1+d+OT@KKe3
]C.8d1dC/1ZJ\XK;\bL^DJ@@7KB0E:BEZFGZG(Xg(;#N4V<KLIKM-[3?C6)fU]3(
#11S?]fJ>@&VbH^(;9SNCKWg4&g:Q47T?c#TB1-]_I&,AFT7EZOWT3c70499&4,_
S1ROWQMcJFHUXZT3^Y2Y+0R4I@2[&##Z=3QC,4)XM6X/,5,F_K2-MgN;N<Y_E,40
ZRUOXB_@W&d&RS89ZAY\+>@,dY>X&DIFR)95^]_0FcD-BO[fZ?(&A:?P9Ka21>E/
=Q@;@^S?I9&@eM5,Y9aO-M<[Z;c@MCS6cRa50J--3??L7G>32W\-YS8&O\e3N_XK
>cL.(K_Z)#8Rf\a:PY])Z)d\c8#R-fa3\CW5V1B&5+IJ89cB+(6J&\<RQUS6BQD8
=A^G[]YGIABD:2=J#NdQ8g&BYJG9,^2OQegTfdIX=YN>Q/:FFQP#I>2+I7Ofcb:.
KWA4+Db#C]F=9OEI[fP(COWU5(0RZ-aa;UO4XC5+Cc^LY\ANT1P>RV0.#.?_BfCS
D,4KQ>9@\73(0QFTT(F_E\G><VcaM]AK;(\+,GNBUFC6^D\.-Z_S>[D^WQcJ[.^O
[=Qa:-J=K\c37H_2b]O52?NQ50<F=7NY6-T<;QG[C;(>V(>-8R<.[PKU.YA,R<85
?\QLZ<UY\CWAUB7<Ff^NK+HT@,-S+g6+MS_gg#?\Td:c\OHG)dIb@&<BY@>\COC-
KM=Xg?(/O;\R/F.1#]M?Ag21a#JQdU\a/DBRbf?1JgW@f?_RTg_O7eQFIB)C9Y/V
.3Wd^IScUedUXGQ>d4e##aC&#>T[F[<faB5[P,9dYPR5.RRCHS9b&8Z\HYIS;0:)
BF^G;@L:_[KZL#W4M0(AGOG@V(N&J/dFEFaU_VF1I4ASOfR(MW_6V7PO-Be.]\XK
5]:?fX_^@?5)F,M^^U.e.VA+4F,YP+P>E3a32ND-UPba7H+QM<E&2/=OU[1YgZTJ
c\-+U8R6[0FGcZ>Y9e+7:]D=Vg9P0K]#C/0[CL><1]_2NMQ8QcB^C-,:I(DdN:O@
?D-F1JC)[C(FOfaHCB87\GEUPb?9/?P/LHX.K))Gba_=\LB55S[+P77VY+P]Jdg/
>Q[F962M#1PLG\RJHdV.QTCY+?GV^^[b?aZgVc&efH^W=;F6E3[SSecD83L+\MC1
U9NE7Sc9S;3-HeZ\B]B3<(PD3@;-PCIKB51]a8f\S[(5J8WOK.Yf?-U^H?[/cMKQ
]4P&+M+7:FQ+>(6R:ZcN03(&KT7OHRDD_b=AANY998IF\[>Q>dg]NUS>H7P>fge8
=(F4SL2CX)IXaSN50C_6CXZZ,W#(EDHT-BD)72f\\4[W0S/cDT<)]=YV,)F[I#00
#C@^Q/9dB.[PJ.59/_2(/IL0;PaEcd3BNL><@,[<2Q8#<E6)_g^Bg04(.,XA1_cg
3_?/5gDA6FP9NNQ,,RAb3B@+,YD@KDBMYFG##3Nc3Z[AR.NKSe\.^gf]N[P,1WJ.
MDLIIZYc.J_<_+dQa_GLHFd#-;CU=#c>[_=?AD<T-T5-@X+ZT.821OG4MA/])c;P
[1^a8B,A8&\,S9Ea),B[b?(N#e/aX:5T9AMM_K&b2/?/5U<EHKM3J^cWHdeZ:CLZ
[(:&DbE+f9.@WI8@2,6XY]d3HD9M#JN-/KMO5]D(JQe>SA2;A=9<[,4G1+^,?8,>
W07?DGYF+E<d#S7>FG=2e//5Y1_BLY>HG9_Z#OaKd-=]I=aCDKS7C/72b\JIE#DS
2)9])J1gT.?N;NH=-BN2[GL/1bHI=G?JR/(TfH94^8e86,19g]R^U^1e928[DIM)
::OgEVAH;CCe^[9:S8D9g#\^;=-#4):W5_gGSHfDfEO?EMSHHX[[U&4PJO1AZTb/
2DU0]b37;0Fe[CI^/(XOYG3G#bG^cZNR8aU2P.Y>e@3D.IZ+([;],Oc>L9.O0[_b
f1#21J)(\c0aU+fRb9G#K:L00a-<8^\@R?M041GFO@cJ6/C\&\ZLcN_I@90GT]<J
GG]CY@Y@C-91N+5eXRCO]6[]\5_5I[81KIYGcJ:4:G7b\O6=[K&d;)/<&7]W>XF,
S<HQKXTf+]6?6LKEgW#_PKBVC.(^dRPfO@E8+E,[3->/7@FP1+6\CU_0/J<7JH\0
ANO=\ZZdBa6OATPANIQRLg@HD(d#A28eU1E<<G_S(D&ff9WN<.?6=EBW0?bHX4E[
E0D91LB@167(SBQ3-DP3HRP#,K\aHB+GW&66>]]cINg#)6))1YY8P]E,)3@#J3>V
T3eea3NKb[e]5a^&W:fVYX\LCKA88(ad9DYg/F1E(P8V/9+J6EBg29a\I,f2g#B>
&..FPIJ-TUVI>f[Y1BT:LdV8X=XIXWSWQR<7[<2QV.[\7C<f=M]eAQG^T^+=],3M
@P0X#Q4WB3YS=ZVa@]1;dY\\]6g7Nc_;YG6c1KCNYA+^L6Xg7:fY4^bfO=3(M_Q9
@3:E16@VH)Z699?\b/T8?KA@9SKT(QBg_-6-E<aJ51X;1<MS2V8a,=Yg;#>b0R\P
^I>ca]IP7M8XYU6IYK4FOFEY8YLf]\bBPY\5\WD36&fGQJ)<5R9<_Mc70S(+F6La
ZJM^O@;BF1Q/1<UQM??D5f@_<&c]eCKeZ74/\(C:0Rd]ULL5WT>AU0Oe#B&R)9aR
5B=B9>2)]G?^<VT/HAO7SRT7aa0?TNXKfe+cF\3K^DCgPB5&ELX<[.[.^B/,.Z7I
M><W[;Q0=.17H;(/EGJSD>>&Ff^b,EB^G#K\Y@I@@&eB0)(^I?)HS>UST6]@7gY8
F;V4fM4,^A])\U<;,;3&I\;bLHb]#KPa^^K[Jd40_?X+cEEEWH>)<]\4Ve/ae:I>
Nf]VFf_c]=-TRBHUfJZ#IPV2NFGd.6]1>XA#SVIBPO,L&:gQa\7MXP?X8_C)Y[RO
gCg>9X55T80SBQG-f&W(b1_IR-97>d_CF=PgcL9B^(TRZ8JNPE=g<I]90gXgZ&2e
f>CMA<S5IU:ZPe_RD]<KPNEU<D1K=?SV6^>+f4>T=AYHM-QS6=>bd+eZ4KY.b^R4
6ND]^<N:L@/FagNVg^Z^JZ<bC]0aA--O6c#&MTU&9;6LQJ(PE0CJ^8eeMJ1@gOSX
@O@OYDAfPS?,)\<85DIJA7CQe([,VS@C.#bbTAWS8Q>7#^[45cM<A]NJFQJ52(5:
8KDRJ;,Oc-[SBa;V[N7HZ7ULRGRD\-]ZIZQI<fO4W(J<X0KSIEK6e?X>eB-8;6]7
gM#[ZH7I)<O31IgKJ=+N5e7faVgCV=VF)J\##g:FJZ:?[?(;E4CR4KbK4,&,W0dc
6&Pg3B[Afc5HX\;_6+CXK7IH:9&Y[D7<EQN[HNL>8dQf]9DIJd<3)-KaA>8D62.C
53V])32g:Z@f7IIB_,C0JHBc(.#NeUV]-A/Z,+c^b,cZdL->6RCQN/\T5AQXfa9+
K,45[)b-=YJ\G(0_L&&]TG[((8O+bK[YWKN)3CB:FK)@:2K96->?]8PdgQ4Bf6D8
QIPXU/G86#f_+Y_;6Xg]1V-&LIQ=Mg;YTe+P=+gGFOMTA,PSc,<Y748:I;:F4LQS
,F-f,S]_<MR]G?fM8[f_CU263EUI<VXM5<P2B9/J2MK_Y[0b8GXW1L1AdA]Q^=L5
@C75^LPZS8\+5/_=M-e6&B#b126/(-;BS#e]B.GGPTVd7>M5A;fHc,6R04(SB?V&
f6_:YaVJA,c>[e^SR8G^JAIMe=B-AJCPXc=CaSV44OGNgCV6KO-#CG1Y@07]V/_6
J:J2E:JA8M9^_?F;@)c\ZH5[A+Q)8\[=DM3Pd2_M#E8470D(N1fO1&LSaC:X.:KZ
VR]AJ@LaP_-@:QQecY-F7Y9c3.)VJ+8;QJ.+[f&f&e9gEeR@d)4RHO--dG:Z]e>I
cT&HAccE94-VK)B:(.AQ/&6U;a0g<f2@0<+-KdSY.\00,#YE_7cE,H9f#4,Y?=E\
X;UW;f6USc2b6F2WIL9;F<]4\Y<6[0YYNMD^&9eZ^cdG\dN1[#MAU#:+QZ?,Ng:d
e>Y4(c1>5,_@6B+fBUU\4_g^8)B-(2]@:70A.[]@HeK+6,_dM<FBc2#AUK#5H5cJ
G\.P7YDRVbG@@8;\P1=C+Ba]F:I>GC1;0dO@#7g0FQ2=\N;W+-I[@#Z=7-IXRcUS
Za#D12?XM>Z=PbGQ/[H[M391?U42cC0;H5O:T2=T_[RKNNYfA;5b=)77G?20[3:,
<,LPdD]@-<fN#>)U&SD(W;U(&;W:aI[C=F=Rc8W(/gNH],;,5Z7[H;&-a1Z&4C+U
b-a7>MABV&9GJ=DP,1/fA^;?^;PZ[A2PU6@D0<>ZT-8]=JK1U)FCa2eLU1MRQEXe
,]H;a=NS6HMY7NRAGfWU\US@c,bFGFP5^V?XZ=O-CZ@fJVb)>9RRb/E:@2L@:fF9
9IQF[7(\0?Y[Wf?KSFAJ;MPJ)CX+Oa\+Wd/3QF.RGVP</>BI?6H#&<U=dRF;TATB
89M4UbN.PRM=&,BOV&?I\U+[GCQ?,ELFIMZYeE&8,9Oe/V@/.T@()BA+Cf3ggT2:
W:J:/O8++[[W:[.H5C[d,aYKdRb;Ie7\cOE-Y_F\VS4&_gR.0bU<:WU(SC<KI8]c
QdGJX_HLH)G-g]-^<.W2#Ef)=8dWC;1de),2;3.+;&B([9RZPVIT_=X?</Z/2b2H
1NF2bfe#Q?TZYJ&(dM0[XdFBWCSe_6O[[<11-D4;J54(@L-DPg+I)E2:/=/XNdO(
W-Z2LQb@cgN3F94)f;]WX)P[d<UVEU1.@IT(OB#e8XIV.O(+X.\9A9/;/JN3&aL(
fb)JRL1P/M0IX.G]dQ8^8ZRdWD>0+/WL^E#MZ44^@\;IIBXXVTS;ME<T#L/C22[W
88RN<3-YT[&M,7,3TgF_5\F4&S.@,WZTaFR?R=DaKRBW07:D&ZdLT^7A^D,YeR\?
KB]QQF8=E]V1Qe,FWG1dE=N1BZd+5f(X:#20?-UXSXY;(@N?H&QT>>L7[^ECV6\1
-4/7R3P\W2C6=:,dd)T-T,(4#(Q:0M19+C+OHdP3Cae<c:J4g0VadG<D^7e.S_f9
^=ZQTY@3.b;9d>Z>7@B0(&<H5P6MIS.XI[?ZT.dTQGbHU=-)gUKBJK]FS1QWWaXH
WUGGIA^AI81HJ<[ZBW?K((3--R>Q(+39_W9IG0Tg&8a]<c4cRQAGH-/YO@#85:bO
6dQBG?Xa#NS42;+5,KMJCE()g3d[5:gEM/MRg1U?MWc@)AUX+)S,A1SFNC:OSa]K
+>O8NLPB].\)acDY.:KHKD@4Ha)PUg0NRG&3-1X.WY-<0T5df,D8NDI(@dQI8Y:/
X77PL=EU,JW-<[e0T6=E8SK/G=3f24b#bIg+G0aOUaZ/@G3WAV5:,LRM2O)BZ\>H
(ca5QCbH^SI,D@8^3SM.gZ2)DcPRYPdQO;+D)/-BQaYILWe4CJ5P_/VG/\)c5X-X
/4Qc[7cQ#WIbE1?B3&AaU4(]&-S+@@[HJ/#3K]YU3H0fQV1,@geOa_,5,G@F[P&M
+eEa\EJI;483W>b)[M-HHaG-8VFgRZ4VfB?@)HIHBd05eR@FZ2/0bY#YNOV36<<H
EPHHOCC7PS^WLQ_PBGSTL1RLLN3BRQCbM.&93S6:OJ8NM(E9Q4/FV0#_U8gf9-GZ
2)8/\D??03:P61;Jbf<Ta#,_E16E?PV7AQ;B3R_;B[8VKXF>(MIQZ(5Ef(eIKU,1
U66-N4?[#^84FYYbbOYQE#G2H:AE]AH+e)C]69(J1T+f:TS0A<[8T[bH##B;R\Yf
c589=,7<DeR7,CGOOZ1V^WebGN7IT548)@IXFLaHS>5KgWT0bb=#-U]4V&\<2Y,:
H2TcPRAS;NCd:Wd#.@D^WK;:?a)JM,DT_9F942_RbbU=@^4Z.#3eCUH-?.((GEUM
;OeYOZD6g-A+BVg+4W,KD86eE(9>FLJ5@ES;W0/9f<[7RP\_C@AdW1JP0Q[7Wg[A
BD6S./5>?BJ\UU_04VZ<&f37]NMF_.P\G:9([[P9:N5]O0\O73VLcd]@dO79fdSF
/W\XVO,Y1RT0J?;;@5W8RVPZ;FI/f(SIC?EILI,@R\_<c\VaIG@+2S9XL#=6^Q3X
IZ+EJ1Z6BO>>J_Y0CYQSCH\M5:g9->MLe#eFDM:U(<W=4)#C6YaT1<aE,KR:_4^R
G4#J:RAeXIb95-(UM[\MQa2RFfW<7aR\OC@O3ABD.D3H?X5P^d=XS[L&KG0>G=G^
R&4[R&L-KBQ+ZBVJTKB,-HGMN-^GM.Gc6,0+>5dd9OA+?GR4]E67/g&2/\gPXYWF
DO@Bd<c/C_1CFI#]ZT5W];+=.e/GEK-I3dc[K<ASOc]U#FY41C[OgaEBL>#gN__9
bbD>H.ffWC\2IU#8YKSgfNXe^dO[9.B94abLc_Z&\FCO[-AV9+0VUa)48:3-S&OL
caDKFd^==Tc)\(HP=BAGF,EY6@0=H^,O_ReL9S-4R<K;MWBTJIWaQUAfR03RCR,.
)_SL?\Eg=@We59[[M),#5bPeZG#\2\-6.?[4cd(bGgG[:eC-[X3gcg)g61G8+/=X
C2@/@77UJ#N5BY137WfN_NJF=ZgbO1>LLJ/VaDGd;6M8^-EXA]]cT77-D<&Gc=FV
0ba/dX19Ib?BV8D@P5-@C]ZX+38+IEXA?..-^f=,(S(SVP=A\SPAcQN_+OI#>?LO
JB6b1PTN543DX7UB]c9L-T_eQYDUCO:2:DTWGQ>E\Ff@BLZ#Z]3MWfRa5RC_FU+)
JFb=1B1O088>V^9:aP7N1/K4]0FC,/2PI4(@[>K90@)#94<DB]?OaZBJ>;Rf-e_^
V<+/c4aLX?06Q1.NC7KFdFeK3G711?g;6CZ\_)Bd^\R:LMX1?SeR(NDeJMQWWKOY
4]C<d6[LHD89.TVU3fS&[E5BHQ@EEgeKSg^F_gNNbUILR.KB;<R)V-<eV(>:P[f=
&I0\-F#QR64P4/VMd&c3N#.\),9WPe(F^3305R^3bY)M6Lee13N^\\OLPIVEQ0/_
;DEc:\^AG7.+-^CQ+c]f&@<7(S1Kf@EZO6^Xa;B9aNg:\ZPFa1T9=.F05G^3R9b4
B/fg@8?MO@E0#^dfK(&C=<#eKZIP6-HGR5K-W]\gFJKB2BRAc/DJ^IX++U22g4=[
FDd1R=5]P;/IEJ2/7\G.7\E>afY1)b]A\Z]0WBB_N6Rd]=(5T+G2)ZE?F\BL9,@T
/O>,HYcKK7Eg8\Og1H@VWSPPW?9&=f]L^H0L)/(NRg:^]3UQT^S.gJ2);I<-V.gV
O9b,4^0JcH2KK]a=gZYHYTD;[KTN(ZVK\NO;_Q:^8^R:J?VK08,f(O4(#>d49)X5
e-R7]H]TdZ;c\:4BLU?;bJH5-a7VPQ5+WMBZL^U5G,(H;PYL&5bDN]Y_Tb>6X,]a
ZccB>&ME#?_8b25#0d4J]YbZAM;E@^^QJ<&BE+8]1fAMQQgKcMFBPaLa.G19]@JQ
4+E:b52a[K@a><]B>\R)XEX1dQBR8C&HC>39WbUKa4NJaCcYO^]^WaBWT8=2K.\+
D7A/X?]ea1b#U4K#)U@T_P>Gb_21dLG70;ORdP/cST[89KT6cYMe2=8YFOL#f08H
/:\>DPfbP\N-]YTbg(#Y5.<;gA?=(@-^H65?e/5A?]NKbKTGKe#[T0+Te5[B1CC;
F7N=JKg,(^KUV<3(8dR70/C4=EPCPQW57)-VPSA.:V=[eLb[@RdfDH5&)@0,>.=H
&L5Q98@;K@;_I;N-=10]:[5+fWeQ?Z7O]7XF#O-ZOfM\:a^T+DP(12]a36Ac/?=0
-O\5DT:,P^3JA&KB8:VTJY&fDH7>g1Q/3DOYK8DSWcB&X>b9GL&gJR#JV]5M\1ZO
T-#2EMS_<_K+M;UX6L>JHWITRd\1XQ4;d&\8eP24PI)U]XgLfAb7c,NYga4LH+Yb
S>4:T=,S+J@:T]8]P+-.CeUJYT)8X0Sg6U=JR079ZG0d5<>3D\bT50F>F_\:Y>^P
TYARSGFKLf>?HJ48NCS-gGg7D\E>(.5bJL-@TE:2a[WN=8>FC#X#[J]eb&^^LYT:
f](QHW>9J?#7+,<L?e>-;8U^b;PD1?9ZJ#RW?.b+R,dJB>V+>b)Y^E--0>\ZdA@S
;]gH7:7\,:TLFL44&AHC9e1,YWR:@d.\)WS=M/E+X<2V2>:R#Q6N.3<]=]>DYSIN
8]D-)?bZFIZbJP&CC?DB5J(GDAa6C<3b).DN?).g9_cH;If(N)M2(LG@=VCFO>W3
;8/Dfb./4UP9AA-0@&?eDe;&_,JDG^0^>&23U^>W]_90+::1:P@IENNK;[+BP@Cd
,4W<JHU0J3BJe\>OT/-^;LJbIS\1;bKWNZW7S?MMB,+QB#XU<,/15&@6??JRS0<O
:<,@_8BCe=;Q5Zf3<VCE9@C3bRU?f?X:_4Y6T[feG-AZ?I28c9N9E6.\:811S4dZ
eF^ecX]fA7;>K#ARO8]XPO&:b0K##.=2M\Q]^RUL)Ac\c+AVZ]aa[1TBEd57\3J1
VQC)--&d5gAH\W-)\?52?HG.\<IQQ[V&AJB(/cMVGF>^YIRKA#;JfA@c>e])5CLd
3YEIZG[c\HU;]I0.HD75L72]S6=YbeJ&d1XEY+?[K\XSTegCLG/;10Z1<U1fED)&
)SK6WEDV;bE:d^P@6N0WY1LB:/Xc#@fR3G]4F?4^LJKN2^afcUbUA;6=5?AAN-N&
CYR?\]ZXeX9->U0O<7TG(3F2,[b8B/V8?UcX12/(;g-]9:RW6GU>])T;D8B(dN__
AL?;Q\5[]82Z(EC_d7[#-GScE734&6DZS?RSNUDb&-]Z8M)P6RN=d:2]2<C2C>S\
aeGU8.?7K&.b65>?)T(QR;CP02LB/RJJNDUbda9B8]N9V,;GX0>?Q\KgGf++:T3d
^WM8WP9d0FF(c3A#1CI(&2ZW)66KaHdAOZ5&I4ZSBI1KU=-aY>cV0R&+C??cVV\U
V2IEK)IB3S)[VXbcP[]1>8#Z81S(E:U]G_(;XJBA9;=Jb>dag#6=V,\e[6)_/I;[
?B<HWOGbcP:5)\37J>]6/)R:E<S/He5UUO_=?SF8e?g:)eRN._SK1^c&_2C74c&Z
W.PL(=VCGgWIRH3Vc?BWB-)c:S1T>g=^A7fG0AJ7-X395R6@VQc,&<4QK#0M.a[\
E88\XVY@RfC,Fg1X7H<aT]&IQQ&1a<U7bLAE&b]]-T+VbRW?\,@&VVIU+7d<-2E)
(b-KB=GPLN7@J-GL/A;\[&YM+_c8\YTY9:V;H>[#,R;^9dP@d2ASO&4UVJ+2&OB<
V1fab5<0IP?03_SXP@U565D8ZO_?W2Y)K3MA-gMe/]N2DR]?U:&#05BT.\Q/cY@]
Q0Ue?TRA;0@^USaE4XBeL6]VD?gEYcHb&VO5X[UAAGZZ;;:&.B>5FQHJ_N8=-Le8
TOJI_+#CCM^R3861G+/1A(JGV#[DP9:HJEG;2&fJ:c60gU-25H;KULcT;N:6@4KE
)+U4)d;J?J_dV[F+M^K:gSADD5Z1-.1De7P0B)>93C_S<R(GLIL)<NB+4_LWE-MH
<U)5NVCO4f7/9TR4a8fA9(eE])HRLS:NLM?F&VG&QRSW8)9.Wg_6AZ_O=0gV,aUP
]/(cVS.:OK1?.-@CE&8PA3gND.+4N:T9BP84538WUNO<BPS.YS:WaNGS0NA?]8EM
W7A?.R@EG>&[BdeOK=67A0NY[bD1-BVNMg]c=>H3IF?0d]cB#=Y\g;7bL-^MVXZ;
5Hgd.3J1.CB>CK=U1NG^V<3\0;cH,L4Tb#\YUT#]J3:c)3)c]MFdJBBLR&+-VENU
S,S-JAMI3&@K+M&Q>D:G.0\KG6+9]B)V(W3ge.c6(fYN\R-e:O2eU9)@;C&+5^26
MQJ_VQF[]dU?^N?R[:(G#W24^\P0-O=[?IAR[gUbX><=@fbT3DgNd&@/;09bFXDO
),Ud9X5X/H7_>Na_Y?&Y8?IYLT1LV)Z^XE[^QRFCWBA0..S@VB9\K2:4?:@2B#5)
60Xa[WY,d-B5fG.B0P#79R?SAc]\CFF0_@Q@c&BT?K,3/->=F&?-KI+;<7U2BcEO
gA^@06X]_&6@d70R^(0,R@?0(RQ4^6O8e71#5UOT2+d@gQA-+(a,cXTO6A<=gN@D
?bE-T.E=V;C2.FVZS+Jf\]X.;^E/XZ6b4#3g.MeR09264\)XQ,9Sd1A:&\4=NfSD
gJAW@HGUY07L6K,;6g80H+L?<YRC3,Ag8f]a[bK[@<Eab,7-a:/5-7O6S.J6+I2Y
(A6M;P04aP61=[1<IO+<S8R;M)^CR>.N458DJEcVN^[]a]>>CUO&97KTYbNYgc+B
[Z#R0:YHLF[IW6=1E<cYJ\XgR)U8MWO,P+bM24VDXO_5)b_FQS;e#9V]/N4,057:
&e>A7aR@&9SYPD,XU(K#,>]9XXN<S?ASO;\T&CJTPANL3U;P-bg3M,E2ET+7L[_^
J[?968L?b1.K:_SBBf9@<(eSV?AGdFH4>.g;aG_2-1@VH/S>4NA.4.2I[=8P,45c
HIY2?I<c-dRPA0S/C/P&Pa,B)QS=O)bO2Z,_]COW=b>G_Db)6f:Q<,=&<>5;M:_D
3_CR9;F6PKDLR->S#;,W_NG-(a&eVPKgB08F,W#McE[47@WFP[?dcVUY(.;aDC_J
17AI^2>7a7.H/;(@57<):^>G^US&dGLK:IFL^fQ^Jb2ON..+dVQC.0O\gFP[ZD68
M#c;?^?XY\JYa4SQ\H..aW4fW7b4DGcE;XBRN)<=b54fU<2L:PO]b/AGd)a_<FK@
D-CHXQF#AS&bCcX,@)Y0,4>W3_F7f/OQNcNRMJHR(.,CBLAc[+7]=^?Ef_Y(FE,8
J?gC?U32CC6N)P8B0+IP[(IKZ27e,Sa5Y&;S87,QZ9NU/S^S(X3+c<aRMe3Q(5?<
4<+#d;B?Uc]EU0AK;2XPJU:.MS5,<[6+bfF7::L3d?OXCQ@>YOE8@/RB2EcAKfGf
EJL2bEe(3KeITeABV4/3Rb9WWZ>B:KQOb(bV)c1F/TOg_[@?G[[B7L.,gEY6SgNg
MR=[YA>[g,96A/Wf3H^VOE6TaH1GW&H>-+\[HQL3HW(VE6e0O(a5_D@TYHG8_+Pg
4Fe:C]a>13UJUd.V59#/0K-15M(=12<X,8IG_5XPc^>UC-[E[c[:I@/c(GOf8U4^
A4:9E):eYII=P>IR477/_eS?##HT0PcALFG9<\0UcS97S^-b6E@??(#Z7+I4APQ,
P^+]#e@AEJ;=JUA35aaCG/.>g:45U[CR_fb<dCP)(Y9[/Tg64QC61g+VVGH)&WGb
QQ?GQ[]3/BE]7_8&6P6aP<8?@\0bD(/\gK(c-95=LD-_:f6&6Ue0@97H^V)7G#Za
PT3OR1aW\T(:7eF6/XM(Z)gEWg^VeE.9\3-5O/X=D-R-]4+P-N<6TK)=5?T.(=4,
gMBR)_5MA4fRV9aOA)F6Wb>beS6?44SL^?+8P(/&45)\@@f&I<3G)Rgc_E1U;e6G
XYKZRbPK+J,NGJMQY?I./_bg>eY(cg?g+LEWg=TAB+1W2TK0WXEA&A]:;c^@;QI)
&>=8H=fdTHA;,+I=JBH-)QWQA>#/_ZEV4WMQgUL=<N&A@U&VQ^E-XBLb+5Q&2,Q=
;,2@G@MaHf(ed_3CJP/#OW_Fd7f9O.PgG-@/_]2ATU\L3Q(],WT?8U\WMM(aZ=QA
3QSX6ULO\+bEEa#cLG<geK)Q&B4QV4G0/OH@/Z7G3CSfA(OVA70V.Q=U1RK<):\b
O,W4cV+agMaQ@_[0f\@ga<OT<ea07+,T+UBLJ4^3-N.F:>gBFN]&08YDS7E/ec23
d]J,6OHfFF(64(E^7T#7](T0KaD#EFZNTS8)4A0?]86L@/>5I#a,c:\NE1e.2#/Z
Z+DdX#.(3D_5M56:4O3B+-CU-BF,I.AbWfUU\X=fcGC+#2Af:cPef/@OHOaN1\>-
[OXEd^b7(+@I6)^bU_5d;WK52)8K?a,d6A45T2R,b=e99IGDe(E\6^Cg#8GCDWAO
)OeYJ0+<c.BE#F1]\,XAIY,Z,ZQ_3M,EFdUg94N5KS\eWRU1M8g>R&M<5Q#9QB,Q
70M2?0C9cU.9CPD/U5a(SEdd:g0gdXJ[1.Dg=NQ88U0O-V-+2ZYbZaNN^S4&NQ<c
+US?<I1+B>.F7.8c,KLQ[H9&:Z4\H+8aF;=@[(bS#Z9V0HEO^K[Y[Y@TZ-Z-4NFG
,W>B>ZdX;LQaI,Ad-J[?cJ(.8YDD<1[ZWH?>E-[8)c&+A,<3_T0,ZVS^V>G&CL1b
^YN\dK-HYUAPA)=.TOHff\-)Na9FVe81DMRSQ=#^V@fZ07YBV0f7Kb+&_fb.;;GL
XC6Cg,F?2B^68\WK=g\6KNgA4aK[JXX;0C:3=+TT-NCbTGA?Xg.\3W(^IFM#>T]R
0?H_JYA(QHM29#0ZVBMX6QD\eDU:)A_]RVB+dS>Ge6MKS\5W^@PgEP&W4T_I0J3J
QCNSN?-W2+CNcX]_W3\d6?CN9&:f<+F1V\>Q<N]:+ZY8CcK^?]K-VOYL3NQ3VNNX
7@80gT0\6d\D)I]J,L]ZaD=+/dXfE+L4TaLKd2)HBZe-39>R/D;1CeIQ[ILWKO=e
Y8GP81:9#B(OH:59X3BA64OW(ITL7,Y0>9Xf1LL01S=dgY?Q9:PQYU8(E8[Q(Kc/
&KHWNI(=C?O5T;Z@PNV5&ZW0+T>G.6W[f8bCD_;UAWM9Q/-B0eV=79^Z;e0c+V;R
=<0P5d(K5a4FEU2Y_Q=(P\d+fS@<XB@gK3[RF:?(G=-7Cc.Q8ELG<E3FTW8NO2N#
T+(;A;/9WZ\X-F_>fI4I-BIP=]5#UNC7#Q<fTDI8S\,g5C4R^T<R36P(e+,CWcG5
O8GY\P_M^S^/C>S5XQe5W=&C6F6?fISU[U7E9[[/-?B;T\R3Y-&48P_O(03/)ff1
L(S.SZ.R@@)K/7;B@]<7LHJa:D]3H1dHf=/e+<ND&WO(J3MLM(?,VAU1NLPF2@]9
VaS-IH?gJb,Y4-#GaULI&2ZTMW7O=K4C7cY)8;P/RCg,\0G+\+W7AcT9c_Aaf-EQ
?.T)cGZCa(J68O9<(KB8?GR@@:ZdECF0_#-_Ka,RJF_/>c(JJ<UW>:C<-;)Z7BZ@
D9N,b7g[#:::f=7R.)02bS_)_\f0aAg:Yg?+V3Ke\)P]0E17B=@_@&4bdY33beJ2
LYUU:c06,La.2)Rdg))PH;/IH911g4,d9WT:.J(_C@?]S<FQ<27KB6ECW5V>ILSW
gY,(@S?;WfUJJ>65TERW7YMb[/N,B&Uf9__=1aQVeO&&F?8X1)M(Rc<&XMf6/,,W
?FT;1-C#32E3BTPI6ACZ[G,T)^XfPFP.JGYMHAK0\bLLKN;JUI<IT&]W2X-S&45+
YMB6GfEZ8eAGfXC3GA>[JCF[XBPPRQH:De[/5AXLO2KCR#I_)Cd[QM2LL>fH&<e]
CZYGZ^d,_L<2V&A#e^]4G9SGH;/DW98ZAORDUK4e4Q54>(dP><;\2MT&V7d7+I0V
1L_@E>UEF])>d:ad<[=B_ATaS+KOXH_H7N5c&V18-HdVQ+^:.2bY4c(\2P+=^7AP
]/RK/-a(UIUE4]B[GM2-VKb/gGBN93E/#K<FD(:I&(><c9#_NB>YIESa69A_?PC6
&<U..7]MJR\F[4]SSL5^=BKO7:YSSJ(_BKHPZ,T20B&:eOSYI<F?OXJdM9:I@KZY
eS;0ULU).\7O0D/I;M#bHPU5GPJE+)gOUTAAF7Og-WAf8H^\?Pf^_6,Z+M.(3F\L
aOE/M8;O;KC\OG5C;VfZ;0P^PK>,X8aG+==;-1?PUY:>?+[_YUW:b0M2H(_^@C9e
Y9,XS9Nb@+#TAfTL1(?:DU1[Q291+J39+<6C##&C4JfBfCcUZ[MO28f?_,>Oe\3?
0TICWLTMR1M]F\MDT(]aaTT7T.I[JKTMSAKUJJE7O?;1gJc;HGRR^@:Y?e(TD7O(
.HVX9JVdR5H8Ube0a8ZQbVY#O.J?K]S8N-W,^3g7Fc5Rc_JVW/eG7dKMN\1a@3;V
\<8)];dB98cN8T_a]3\7)RAQXIVP(0C?a-@G<-O:BJOZ6[JS,LK,OEeU:S23F-ZJ
A\3>3XJCLXWQSOK\T2WU];GDO(1E7\Y5ca@3;48.2Y^MUM?C0N/1DUIaRRCTXS>;
eV2A^T\@XB.+-II1(Bd,;2J3A3<MZOQ6^9cC)5/K-4P&9,:?DKce=)_F=d@#f4SJ
I6;9@HFMX<4.c51(96RB;fES5]WcGH9Pc#<F.3#:@V+^XL0<91H;dK/d)4bJ)BPH
5/.F:Z9-+CB[cId.X/52;5&FgA?(g6PH(Lc3629HTW&\O/ULe?E17Z_[f3>6bFYV
\OGF,/bW1/G=4VQM60VMVI<.O9J(TGL31#R+<71EXKT]:#6I1,]<#0)AK/Q4IL>V
:^G0W-1N-\eD)O53(<bO7CfJB@^OS:2U(9[67MD\OA;b2082;YISIc)U=dU&63UW
EdPa0.Q)#06c:R/+g=,L\ES>T18ceC@TMf<RY21N]ELcd43MG5,#GH=P5ecc)cNY
AU\=cW?a=?9\0b/P-GG26@8\I7\+7?^K1cE-3SbHI:fLT;:<GI;R;9E?e7Y]]IQ0
[3G=Ked@bN);C.BM-7-WRR[^CJF188;1EBX1e52cF/#a;)R[W0a8bT>g8-XC8U>T
T<,fGE\0Z&7TXKX_aQ\O@NOZE<>cDL;7f,FU/(UF1g@B3<^?f)^F\_^=a+;B[=+:
@\24[&W:f86/aTXC8>&gTK\Pf^J>fGfTP&d(Ka3Z2CFP=]SC,&^f/eM-#Td7ce0,
:HP4Y0<F^]0-08DD^EbETC?K1e@8<<L7GVY8PSRca\#OZY7cVP@0KX=W=7G@JR=3
b]IQG#9f]F(Q)6B_^_QSEWUUAQZG2M@]]XfXJ_,O9KA7(P4<H186(OTg6CV]WUR8
;Y,.KMe4.+KXCJJ.&ZGBC#L?WK87@.:-WEb.b+I9HD\=[SbZL68K<?X\:\U@K.I[
Y=B-+;8/Df^b64SF^B7A)O+:\g]L-a+)9<c^IP+ZU=A)=#a&R,Pa[0H2>agbeUNA
M;(Q]>4A3_g5_Qe]JA,X)[YPb7<)AJL+)W,?L6QKFACBA]c57U>AQ^0M>3b/UQb-
5Oa#5TE_S3U^E^KK5>]36.2-J)U80,).)I(>b<@?#_2?H#]HIKFTcR)3L4T.b]O\
4\NXcR[.3W+2-U,32PT?6gW.O_22f)DI<#01<:H0+F&4C1P?K/IY[BKYEF0W3)OV
B::7MUFcB_1XVD@dU#fe/Z02Cd,&5O<FcRb3))fZB1YR0)M\Xc_46WJC0=(_,.^P
Q74+B6;I@bZ9+6V;Nb+=Cc\J7f2abGR02>\c&@<3bEb1Q<MT4bPBCZd-]LLV/3+G
U/93?g(_WeAfD;,fLYe^)efIB5fg;R5#-VDAag,MD^NNP9?.SadfIZa2DWNEW^1D
LJXXU:#D>QBd]DgEVE[6BFFU^bV#&beX.)(Xg@d1V-Qda.d9=507ZD-c_=dG(1J6
SDUSQ=^[JVI@3@,N3C<NZeXUIM&/c.:(Y[WRa60aI^N(#(#Ne<U1>4+2gL&^8\cQ
21_b:9/?EJH/R&=[TN.CE8Z[g?]DY6F@P_G3CCT]La2>XOXc;3H_0AbL_LSe8LVH
]1N]geJIF.IT@VeS&_.]^L.@e<dd2NYZ2Xe([@fOb=WaF+@JdX7UTOB7\X;F]Y)-
JQ,Ca/E(R)B1]JK]>GE+6[d:Dd;HX&_UR-Xe9a9Q,eK<9RL6)+/>YN[R>TJ/UQ;@
:,F>D::gZ.X8&87/2GB:Y#d28^VSL/dffDO#WF_G/ADOBF\AK-R^=]S=?&+HAZM&
.M(]SKbeaR)UgE0G-L_PZ?K-d6=Xfb.?,]LQe)\^BRL>-?cWT>c@BO;FNB(YY0\[
g0<^QY<>++15T:K^.<C^5>@>N4;]H;0&1EV\[cL)_;A;P\I<3>I[X,#S45L6HZ8-
1ZXRRC5SKg_4R[]7H)Ke+&V1aRW>b=O,YJG3O4:MRc/55:;:?N6,\81fR)7LM[MQ
8H8F3eA2>3+Q7X\XOg?42WCf5FK)fc8YXE[eTbQA\_=(CW8De/1a5e[4?4=Y.@)1
;UWe3;.?TYZ9O[&;WXJQd29b^)WHYDZFQ2FN42\fNLDMgA)#fXbJ>g<6fZW@,(F@
LO<fS&5J3@.Ha8H@N?K,gZJC(Y(bY6G-F>[[+_2Yf<H6.N(&XMQ<4>,YIdS4L^a?
IM#LaUPGNV.)GLaE4SW=EXZND<SMT9.0D8T^def26U+PF8>M0+M&8BC.fRQ?a-de
>I,?D-LW=52Q8H-VaR\SS-OT?AP&F\HX&XDH#1<CM-U)BR_RBN)8cKPeZ+UYZgf9
S(Y:dF??aPbUe@gKgTbAF)DN51NX,CTWH/--].D<I53EKf(#C36@G3#5TfI>P.<L
6,\-QY>IWXL^=N&7G^d)<_P52^ZD1d;0E;aSgc<YG9C454@gccBQgJV_M1B]N1UD
6b[]<])E]a0:9E9EJS]WG/+/cc@=MGYfZ7=d)K]S8]/^ZeER3[?HDL;/6\()\S13
a4c5&3:P[VB-GHD.W3RUQ1\].YV=V@Z8Z:#;?RQVYe@UfB6Y@dA[/cGZ1[YDORKe
G^,QQWdZW4+WdXF(Q2ePH__UG8S^6T:8UG]<2N;9.@L1E7Za>KWU8R[0;-<9JRBV
GA73#Gg7=c\=e..E3a7\8]E,RB4]>5=[+VA>O2FVH\/8f0-fLB<1BJ=@Ac#/ZDT8
GCG^ID4?cN=S5=6WN9[BOLY5?Z7T2S2+)G[,I4>-I+#?Z-T@/?Y5.RS9(T/RPJ_,
?EeT).730>W9ScKTE0XbJ^Q/RAOP(6fH<]1ZZ0<IR&O\>MSMQCcH:)JXE\FH:^F2
O_(7>CJ;\?7KL.d-II25+JK@/Xd@fO/-@8CGD56K1S+WU-#M(dC6@]:.,2JPK1F[
/:F8?SB>gbD2C1EZ64J?9L&E[5(Y@#;?<>J1NG7,9gd5De[WgIH70D.,(8+S.C6P
6&>VLEMK5@_[>\aC)YP(GX<f;(bH9V2F,30=E#R,&5VV0Y0JQ1SgH;4EPMfYf</(
#(d#a0S\=W4@A?RFQgLfN8-b[.+<K3P2(166H5:]-#S/IL2-(8eVRD<FDM9<JKZ[
5(B-A9^(\aX.V#:KM1+_:#V=-TDBR>GIRIU.R^\]c2\-IKX1f<gHG8ZZ9BX]Ac&6
T-acc96+7?,g@S3)VMZ]CBE,JKQTP=4fZ[-TU_PCANE^Z<@]Z6YZa(?+,DXHG9Q7
CNc[;PIRWR)dX]U[@R6/ZD:aKN5\#d=KAAA?GYb4c9+O2S5g?d@CSQMQV]5RE]3X
b6;,TDT)Dd5O_GBO^ca.gfR&cN9=@Z@4SKHGPD+VH4BY89#;@8Y7^g<<(2GK0]G7
c/P?S)MVTDT;SOK\K36:?cYN&-N;5Oc5X4PW(#1K4E;=)HN4WET?ZZd/KYMS^<Ed
#8:4I_;:X5Y(QX.gOe>6&D6VP@NA/.;-[X39fdW)G,SRG7D,G=DXA]ag-NLO.?/2
YQ;<a<EESBcFb/MLE0STMC\5N@LXEZf:BS\=+]YFY>(B4Z\F2].=/R0\[f:TIbPT
O2de[&\FJV62OLe[P/.H7AfDe?H\&@GBF=f_bDY[4K_9KCO;6670;/.(eBQdWCWA
P1+@AEaI237-MD3;>2H#LIF^UMe&6fD]a&YMFa@dL4L6Y0[=0IaT52]V>=0bcZ(a
UPC2\aOQX,,E1<,cCN?6+MPb3TFM+G\J29Q/JNUa.TZf_8IgHR/JZc-<:5,>7X2Z
UPJJY9W:P=M&:.PV4X3_EeM<d93<,S=X02YP;=c^WUA5G:_d&H3/YH9,3MEOG7E(
5d/-W.b1AH3-)85fO:4>^e.PK5[B@()Xb#WWV95GC5@>U>bWYM&D5-_E2C(1N+dN
(^8OdYfH(>CUT9M;A,CZ.+#?YA.WO<-LI(88a8_Z8e779RffN]M1<];_>=e^fUHZ
BEU,&G,9A-Z=\::YaI>Q&Jf>NM,6[,6:\QCAYO\Q0<GBbH0>>&;6&[c:GK&T&H]=
G2g8>?;b+&00\/UOC]P)71#E1g1OSD3:D^O#/]&VA_)UJ=-Lc(Z8.:>9GTA@/dBJ
F1b4_?P\N,f67=A,_,:gN>8K5JVR^8>fQ:1GFG+;@I5g;,XaX-SPd<;;g^YYUM+O
UaAQ.J2E,d#LW,GIW]&V780IGAc6E#[+@d>3@Oce6Lee);9F\d4,S,HGdR_I6NU2
=U#_9,?Qdc_[.6g#fc91A>]^b&Sa@(&P#NQa9Bg5WS@_)KKN&H>gA@CSe?[D;aM/
Q@0L)baT8P#8U0_STfO[3GcL7G885aF1FSUQEHE?F;LPL(-cBI9K2eVM4aLF]THE
2C:+(GH2X,1TL.IR>&TJ_<15>-;.;G?57@..7XVR(YOJ/)agWFR8A0W>&?8FZR;S
^](U]YVg_e>OCLD)8XGg/Y<H9RE]T?EV&,Fa=X0V7YfERXB;Pb_;;V=L@KVaR=ME
:J651<M4:MO,P45NWfF@UY)eVZSEO0A#@Q98&;N##2G.0NCgdU?(NLZ7BNT4TLdK
KRJ7SEF:Bd\c9<ULQG.-X+NK:g3T5e+))P3T#,VfXf84)PZ,->&b?>L]LGT1XKF8
,J/TN1L^>__U/cZ?WPMG4GWc6F2HBL;O<)0?3;\K;N/5#H^P3,-H9f[@+^U>@LPH
HYR/9a7eQ+R]A14C1MEQ6W[fLd+-Gae9XJOXA](3MWPBF(CaYH1J&1&cD6NB-;2:
#U:6]0SO5N40HQ[O1],U0,2B5(\-]T8Taf_@Pf+PGCEf6d(^\ZEd\2O9DA1)1)7=
B->=eLNI(WZM6B&IQ9:.fg\F4ULUVU(<6.B.7]0UAGDT37+2@-1/&H75,O5K=8Ce
X(MB^3-<G+7FDCXE&,0<[f/+JBO@(1E[&\,Z>W<K3&^)&^Z/52[:]Jec7V7+a^;I
YL[8@SY542@8V2R,/:?)gMU4eH)ZC8;#3+O.4HP88_I(-c^B4O\@DHA@\5G&O<=(
0gCB4;EV&&N1)R(>_DMEQHgG]K_&4AC;D<CP]e/=c,@WF6[#J:2T(IJ)5IN9Ua/?
S?DIQJ)_bP>^N/<129Ag].43K(F.KU^fcT)^RU2+?;R7@(FBF0@(L3/^LaG54aIA
aUIO@D]I^VaHb.Ac=A=geILIVF/_:K-Q</IbPb8(+X#<E_.U2d?&@_#9MI8G,bF@
3bPQ8958=YH3cB]Z^E&cNfdQH)58&X0G-RaEf8C3Z<I1=d#=9=3((8MU11aVFHCc
f[5DJ:?Q:SLB=PFZ&.f-gfULAA?+dUZeg(@.RTc,a2Ad-E@T?QHT+3<7+(gK;;D:
4\=D@fTa1-8AfCc=c8\A8H1D/G>\0X7&0#IY4gIJK\fIdM0):JVF]<L)\VSEOKJN
X?5LEZ,)P_4/2#PPWFc8O(Z)&H5K,0)8G#S@.a?J2[f#K,8H=)FGR=U,L@V6DE<f
a[U9DS/O?ec?2dRB8HYYNJ5]^WQGZf((9ME2-S/7@)-J^JG.gLR(0F#KYQ_W7I31
O^PE.GDgcG+>G^VCIfEdNC\-f#=1JbRS&D__)c)GW\;A:KPGA4-Z-.-ZcCVNMa@B
EXb/G:@65:^-MG^WM1(]ISfDJL(^_cF/>IB=<eH\c;Y[gPd5,U4&:]7NFa;@dVaf
&^7;([2A)U-d1;>R?Q(Of-J5R3S<4J]+45\QSF>>gdI14JOWU/1CE-XS21+=(RZ^
)4PV&7A&L8UQSXT5RP8[Gb7D@(//Q\9#LZ/77YS9>A9NQHSKa&F.&?.X+dMRO7KB
c/6e>1g]ce\,N@MFREHGYXIO^BZ[0:[0RB)C[BS^OP^HZEEa_>(>?FB\3<]ABWP)
C1c3K,-</>IZXG=;b&5SNbC?70Z7E+T)Q[VWWW?ba?LVKcUdZK[DQL_aagLb7=>M
V(RY85Q]K_gI/,ggN73a]Y>]Z:g^OG;FLLcW_;P=_Sc)3^BLFMb1Td#[FQR3=B@Z
U,/<-L\U=RZ5+GT2eY2NGg@8S+&T[XJ@VF0dXRf]YJ?Yc4TIQY4Vde[f;MGP0G[7
]Q3>WNNET>a&1^S_AH?MTQJKW/Q6UB_K+86XH-?N.d6]8g\-QMR,C;WBWB-=_/O&
8.?OM/8QQ.__V:0+W7\a=M:?59<EXc^W_IbH,L^L)B9/)#+dc22A41]N8+;/3.\C
TWVe?LFX9N)OT4E#-RIZW&M/ECZPLJ)H?=Y:U?O4TYRTf71;]XP2=V<?686WQMCY
KIV(:HS-.dF8SC/T8=\P<,ZSL,Ie4\ZW;1,cD>^<&S],E<]1+;6+g^]?c:]D[E&H
G@HIKDf0]A#_3DT;W<0WQ#<34\gWgU[/D_5d34C2g+&XA<+;A:&@A2afD3FeXDd^
4>H,3ET7Z>dc[fFUQ;6b?fgH7BUAHJ(dI<;\.>[>EXgL55@.AT4J1g/\S&LISN5c
-GL=.B)/>E5<O4B0>G:75;;9dKV#Fg,0W3^[+)EcU-F4==(OafI(O?7YGF=dDKga
cWE5X@UbH.R?:/BPb]CASd3U1^<GJA)d>JA=Je^a=XLHE2B6R9]Ce3=]KNA&>;cd
/F)>\7..3b(9dV0K@1J_g.ba,^\U;:Uf/GG0QZXS-X5[L^HGRK,bD<,XZQKZba,5
/8aG1X6W:Kc(L-JEL3g[E^g2P]SNSa.&SXV&SKbDC65OdLIQ3aH@K6#L\fb,CeKB
?I)U]YS64FUYRDbR_,b5\WJ8SIX;=OI@:R3A<2T/1BEH3)/342IHBH2eMD=&9AY@
X=/U^F48geAP8U32[E-<PHeNV5B/1G50EKdFg@cN:^a<=LB06=EG?=E&6[f?DMgZ
&LP2)PVVC2(K,EC_M3c,gZa5XF3I@<\W]TeUfVS\(N#+a87bRY:Q[OBEFgTT.fGe
WbACTT,?#K-R-0:-c]R]&75[D/,W_.[_R78LRFJ?B@fVgHBd/HB6Wd9.UA/_8CVO
fMUZU:9RG/U#:/Qf@49,UQBf&N?SYA[[NF-ZaeMN:LR+SX+.0H7RHCbM-5=>;&5Z
\g-K\)^4,(MZ7O<#4(&F^=2)7Na(1NXA^eXM0TOLVVQPD0<SA=ROf5Tc1.a6c;&(
+(\Zb<W?Z[24-G4\M[F,J75/;KbW9I__J\0M48@@^6LS6;eVf.dGFG_2(aOX9V=Q
?VdGAU_VK)6[Ca138(8Ibadf8;E#f>7S/ba9fFVXgZ5OZ8>,,T(5@;#0>WK2V3+2
9WCEb&K<_\TBa.Jcf1S6a#S9VOHG?_5(J-5[[UWCUdA8>[<M-YL_c#).-bEF;K2R
Fa4Y2Z]?=[H)/Wc<B+7d1?fgFPZ^bAe1RWOX2K<EW+?cNH+L4L[C9Rb03<A)A[fD
Y5QDaK9\7Y7aQ@F-#Kb43AK[6:&(SKHR)gY-:ge<JX3cR1QMJ#3B2^Y&I4C\#DX5
LCTEdd+<(PY?^471CDB6b^M1FW[0OJZAT4RI9Y0Z^5c>eDLfTB^(.=S/IEVISQ,[
I0Z-fQ6D:W^YS52I,P)fMA0aNcNV?3JcgIdeZE2.QegQR]PFEO3R+TF:d\]]HML_
;@:AM??8<VM[,)a8CM(NccMBbXEdT:f#/K3=>J#1VPP3RZ1eSaDW^K>5N5?KX;)(
ePOeeYOG^JE_O^-Bb4b3YREe)#.]E:DZ/Cb#Ye\ad?_@V#8.O+PXV-D5]dKKLJbG
,LR87:gPNEWR;b#J3\E<J47b=&UZB;;,>.D(7/(,/<TTCIRHdUGQSJHB^JOT2C?C
_R=If2WK4/Qc6He[be-<OZ3.,7aPg3;.PH_N.O^>Ba59;1BeV:gU=3H(.-L6Xd4M
#1R:D5Y:[M[cOWU-31I#/:YUG1J-6K0HQ)b2.[Y?(<9e.1<(0?,8WGIH:+4^SSI=
I>,]WA_/6#VObWB0U?D:I41ZSbaL],6.942PKU,&b9U_/TLf(;/:5W9\:GRObMDS
Z_0=R_)RcgE1-UcG<gZ5d@<0(2X=BId8.^ObeNcD(B?bB@JHMLHG:6OP/bfML_;N
PDRHc^(#/[)8J_BH-7[P.g5ZBf8,A^:>K9C>1]SYX\ITM2gM#P0fT\AJ\cZ3S8Ab
&Y/\4f2V?/gR#@A:aAOO7QH]5R8:Ta5<>6.A2;5WA7XEG>X+,09POEJ.VQLMX1OT
YfLLNB8/+(G4#Wb\,CBN-9Ve9K[_^fMe/QUG1,N+\RSLXI;+3AV1A8,378[;e.a)
Dc<-gEE11A]T=cEg&KA8>Z@1@U3SCW;C=eWO]a7:LYNMc8\U(PTP2f3,\TI^BH,b
..TPOZQ.0=Sd(B:6?G^4IdSgL_b:;;/2B^@dC9MTWc)@7=PYT)AL=3bD#ee7[HS7
P(><Z(a?aXXK#a^F+gR/-YUXFDNO#NAMK(BAE#b,\F7ae_3_aaT^.E)HT@XKRTD3
61@)4WP)L_VJ8^QggTP?&e_d_FSRO7=XRMf@ae73EO+IU\FEJ[5Z?fKR@4f9g>d:
Ne]6#_1SE5&Oc@Taf;,Q<?FcJ4,WLB,MEIM-)(-J>&-@4\@>-^9N@>@Vc\Mb,,:Z
,Y_I_d;26L;LcGPS<P_+eK3be0c0O;,YCH^SIf8Z7TP&WF-gY6a[=NZf4TOD-&R=
M,a&bD/V,>R5AX3V\Mc\:feSVadB2R:]08-S)Ef.Hb<MY?S/6I[F<XAUPK<:R.>R
4&I@FNQE2-d3=]=HS0:WMW<1U<P8N?f+eQUc42d+\Z6JB]JGQL0@]F5;Yb0@Ne-N
ES/.I#Y,E9:I_BA)Z>S0]<S=QUfUEH?+_-/g4Me#Kd:EUU_<Z;C.XTc;H/(N9E/9
-66F;ZYT?+?6TU>-+A,EV5(2GLH8<JK6L7;-g(d#FM_Y^XK0cHf/^9,M5C#M1eU5
&_>:Z14@Y2E.[6)/?5-dB<#eQ\=^OFKTb5X+=gJUG8_V-PCGDBcQEA_C,QaQ@,<@
5HQ]L>WfH+Z5f7]^/,HDG17(,)_HG+U&)&L9W\Q3.1+M3C^^:cc^;SLU(P(XAe0?
^MGXaD2^T1WMS?+^&F]Zc-FG38c481&^:-Z@\=]\E29?S5gJI/P&@Tf/7<5d_JW5
L3I@S#9^Z[W/TR<\=[EM_fS=1D_U=OJfVM@URA0MVWEd<M#R203/[XCX7g_6eY;g
3e\D6HCM([6I8B&9V?^eA^/fX2T5P5XWS6?>g0e-O]67f#e=2.W/U9Z8O(>0Nd\R
[GUeE]_DE(T?O8,GR8EDUg(4BD=0O_6G&_dXLBf>.bBH9CGV@&>HBcU=Q2.2@&[_
WdbcR)EAH=N8\;1f5CeL76P\NaQDU>.Y@d1<JIX6F//XX-IG?a3OC-b1M=CYVQCR
eA,40PVNAL,Mf#^8[+]N8Za(OI5PMLE/cbd,RG8P;df[22DQ5GW]7#B1\6+c)9B:
/FeaP90,9PP6=dWB_7OOUg5=2=T6RISN?Y?&9Y^SD&BMUAO<DKgLd2Lc6T9@dF[G
O9XCdI6\C3VXL2EeL,f-@<#4EE8b[MO6O)S3K_7?2]58_ZKG3g4?[/,6]Ob)ZL8B
2a@G6FegG8K>G,dbNHA720)2G,H6]g)gf3E3[_B?E2@PR[a8K(BR[5Z.)J:f0aL[
Y03;0QLR?dAF0HX=a:8]7@656LXY=[7[c^Q4]f/M4.6A[6F<+#Oe2Z=aVQ6e&N3]
ag_[Q#Q@LT6#VLH#fF6D#cUeg-I:ILUAU-F03U0^b9Jbe0-[,7D:(O+8BZBSBeDe
A53N:C@dWO_b^YFPKX<>YYIUDI\O7GZ@;KS+52\\=/T?U+)NCQB,e<BLY3?f((/b
)f=ge7+L96J#X2\-Pc-9>VL+<WA8H+>:EF[(#1;81@M:Xc2[dGc,]6JFC;SCX-V<
]V7_)[MLIY1@M0NU(Rc5^\^LAWY2gaK42M8&T5.H2=QCMV(\CFdDQR6DaIP9G^#:
@fUQ2JAFe+ZfI[gL&cf1Y,fY\3=:8J)_[YH:eP0&=JON5_M7b^-=.XdfV99Xg+.I
/[]7>g9,XIBWeeTZV],;.?Gb@78>29T^,XdO/]J@9/.?M+Z3gW\COd+;[=PGF92g
09bG4eL_:HRb#.P7G6?=]Nad7c\(AKgf2+@#eLg4,]gH/20cScbDFc=LXLU8/dRQ
U7A(7d2bfd^LK&8&0AId44e.,S-&W#XF-XO5<>FR.[T\4Xcdf@TO++MB#/eW+C)/
aRaAadcAAZH;NWRf_,e:6+E9ff\g6cHc-YGTS>R&AdUG8X9[2T_6WY,9cfV8,4MC
XE7VJUOMd57;,=X3B9aGZPf@YKb+Xg5<[NK)BKff(L&gNZdHb-<4F2U_]N0618J/
OBT93d/L052B2/J=M:bZ>8Y)KW\_2KB20/Y7_^@6K,#5O414IH_ZF8[#&U<-Of<V
bX1DI0J66c<fJaSPWVUE351=(3;aZe)eIDZ.5.gNSgWL^?QLR]@&VFL\@G1>-2HK
1<S)cdX::1X0&Xa#N,_CW7-J3T[/OP7Y@bP2a,VA0J_aXM,:_4@0]XMW78>];\L>
1MFW@e#&Y7.b1@Y6:415I[J]B<g+OHNC72S85>3(KC?AN0(ScF]C7C3^G4)e#)HS
I^ba#BbLY1,FdaL:[,R;(KTM(#>.OGJ1B]<D;bE:6)VHV)_;0RO5.XZ\ULPd.^gA
cBGPCCXH<1CBWP(E\?OY4;JeM0/]S^@Vg0@cAe8T,/T8Z-9DN#DPGc[I^RX2K7C0
c-5eO.8/1-YGPc.+cTI;U7#5+Z[4B:,-\c0M2#@gQZILMG^_W@#VLNLc33HLIBF1
-LO6Q_c.A1=-JeD,^:T(1aDZ:)_QD#JXJ;Uc-_8,d#-@eMGI#:FHY)]3FEEPZLJT
Bb0/O_ZXK:^.#)@#3Q@<R(8(IA#9.YI3622)NMIRND_EX_UKc<e<991>(5WDC0F7
cFH;,5MJ:,FegX(/PS.3A(GV#eWZ:A(MQJE#&gaNU+3V.>?f#4IEK=OOeR:8&F^e
g[fZ862[QV23MAY>aYJ1f@CURF617/]7c_I47=8BR[OV[A?@+++YJa.c^S-8\QQ,
Ugc@f+_7\?BS?XOLQX52U)Z.,bULT1dU_5Q&aJCQgR2V&E.(BR;TCS+RK8\Q/L-_
cB@Bb84FZXO5^]J6D5C/f/,-0:<JPO^7U=JZ:bed3<,1IM0H4E[9E,VeB,+b:=c^
^N[A)<B&Zc](VR(V?T<Z5AP=BU\A2ae4eY0,IOY:UT7HefgC4,(9G\BCKaM]\,B[
PSNgNHA&YV><H4g/^ggTA@]A1+@9396B/HTQ;H38EcV-Fb7=L&=gYRRS3N]UF(4H
4ZIH^cKg?P40.J.LEU/)(eICQZDZQEWKZWU?S\bX5Y?VH_Yb7AL4D9N>:67<8^IT
;/FSO^,4fcD3@L/F,>7&C6C_?5BSU18@(a)ZS-&0J0PX)1-]dd<MfX/3+O<3f7#=
KGZYI)/K[56-@9;ATLD)<@3eMMaBTfGcK1O(gC&S:V:b]4.c^;TRXLc+YE@e<#,8
Y-YV_R/MZ20a_68]d.8E6b#++NC:B:Y(FK,2RHD4?d]G^G_R@#,6?&W@bYMaAb[0
6GBZ&J?AHR-?bJ9E4\#cT[R[U_7?+J>)[1H2C&+cb78VM]g3;C3-YCS@#WYX/fa=
L9=:6RCfKCVRgQ?_9R1V938Q>:>_MTedUT))&&-(+A\fXOU8]?3=X3+b2gY_Keg/
HT?&A/M1;N#>=L6F)NYQ3=NGL_I^I(#O9(8(44N)JH@WaKY-FU^XWa@fB(bd_[ff
@LFD)B^X&e/c/@/RX-cD+KAS<^/.f56>AJEO<ON2gPN@]P[I]J;]9GY6+AdS_>V6
O0O0W]7:E/X#J:2;OBK?&FfS1D)6S3964<XVS_I<8S]\^f3(Pe[^,B3,Z5Q4B@4L
F3]D&[P9[cc??6#J7Vb0L>e?.a6^eQS=X<6>A7\9&_g/52A92e<I[1O8E9g9Oc_@
1LU(?8I@XZ##73E5Y2&d;#>4deM0gDK(+d5@TL-5L&@@X&;AeT&_XF8C2M;83/#7
]K]Zc;4CP;(\3-^cH._6VF2#@2:2XEN-&LNK<4Y0eb&BTPdP5J+O_6]KCVV/UE\1
YAKI,)[.C;77>R+aWO#IPD4YT(HZTXE]g&Df(/O4[dI0_cS<b+de(Y(H,Z9(2[6H
f#[ZXHPSS=8K803<=A?@<@eI)bF-S_K)6;cRe8:XEX53(E\dUW[?8M<+c:#VRV@Q
\1U#:22I3ZSI\3-V2&SOCKJ^JDJ8a#f(HIXg?f^64QGI495N,R)_A&fRd30[T(\^
4H9/bJ=@39UPX:2).aDSS4N+.<H)d:Qc#W37?<H/@a=/VJRFaab7A(Y<fbWI>d.&
6B[,#[^72^E_gPdJ:K7JagH66Ua8+9[]8^3E]d\AXZR:\8WI+Xf5AG8Q+-3AP>B<
K:M;g-5GQ/c4\C#P@LGRZ8<MMVWCE1X;S3HZ[I^Xcc,:DbfO-@BWI+K^XBLPDO(A
\bNKGB?/1\?.?(,\@8fd)SP)7NJPK>B<ab#ATSIGK53d;Nd80QbZIfG2]V/@H0,0
BA3RG2<JdV@gHPTb+L@.G0&\9Q[PYRUQP-Q0d,NGeHF5Wg(^MQV1.V;\:0YB3aI9
CWd:IQP6IDJ/?7/(OM5]+K\=^5KBL#K,(Gc#):5bZ6>WQ[71,5c/OG8_AZS65bZA
c[/]feV&>>Z5/SOP\Z,5C]WdN&DB2.IJd)MLeE:XU,&=Q3HaX(2FR[ZMU?K=R)Ub
fg+Q#L(B@V/G&O,SPdH/2<;e]\W;0Rd(dM-24a=</EH>L1cZA2:S,YaEdKQM2cDc
S7\DARM.9V5^BI&VQE]ea^7,SDL;):+CefHJ1;/5M;0J7,#JSaQA-X\aBJK5]Z/5
Y@FC3N_#SeQ[[B&3RU5,VF7WI.?M/KF&BX>c#IZ=;Q[_.bK\(92HX#R8=DZV7)^G
Z9dP\U/_QG)G91R@6^&2?M@P9d&Db,.g.Q^?7MCEB0E2VRC\W-JQ;Y\_5f_#e)d2
63;QeE@JeF&\XRXP(6GE8?3HCD5)N\UMZ;&SSA?LCV:N?8Cf6f#Q6U48@U:[7&?(
eNM;@bAP3+><YVH#^4)a97>;^e<eZa.A<Rdee06KF]/4\4-AZVGDe^-?Kg;O4OW;
+68.)Z3FYJ=?.7>?01[fHLV[e;Z3F1LN-OV926[d\S+&N?^+WM>C<N,Q3EF&g><2
/C)_6.T.:Y[HUaC[BS()O_V/^2cSF85-2TFVdN5>V:XX_gZ_JA-1<Qag::GKbF4C
fPZ^[8I8#V0I.U:P659S:ITA25(Ne=b_?VGc_L0;GJS=gL>BLV1/5@^T5M(AHV,J
O[[,WVL/1\E3]K0-S04.[GP?J4E8+#TB;15-d80^\+7ARfBdb[T^R5F<O&B33AMD
CKBV;-A851[T&KIHIG?+G4R9TED(B[3fd5=L-7A/XQ#cBP7>>0NGNZ_X6;OM=\d8
T/V><bg(R]SBdGU:ZZXT--IU:_eDOfL4L,bL.[/AH;?H2eE]=_UN>VCXW<+G<WOO
@PUA.]35L\M+V/4W+NG4Q\U7].VB(gg5K4:+fVFP/J6N03^L,U,dKU6=_BXE4e=I
[9T5(6H_(_V@_>;eT5XLA9?CC5cJTLf12M/U@B5Q=T0.ZGZeG6WK-XRgegg(8,b(
\=,3;0GA3O;^W,Eg.^<=?XXB-+@8:@B,?LA-Rg)GFBF[\XPZe/.^<7;e)V/E(+EZ
3Q[d+9/J32@:BFOdT<V=O65GFgD.Y6-D/(FXE?BX7KM(],GQM&IQJWUA<Y1G5N)G
8X^A,:6RU/X,P[_0?C4EDYBL_S[-HWQ3D7:)L#ZaO.Ea-\6(:eT;]<N?2Vg3M]8M
.W1J00=L(.D1dS4+SM<B96JX6\)/R3)>AY1eL;IO1-R,cA_dBS<7RfO-g6;EWYIb
-R?.;?c\M:.fP9=_X:4<VE[H^^I)2WK[OV,GPYgDAgLSI+_2[IL&f75(.eE@/5R8
@3_/7GTTb9Q1bV+TUC-5->WJH7]+F/V]0d</Q143-Z[,N6G;4,Fc7J;g\FIN<9#2
&cQ2X.9-#99S1OL6f0d?Y3#-53MIG<FWW:1OE\^,fY(>;H4OPCeB]3=(0QdC,&=g
8(;)=#U2?E\d[,6Ob_^?fT=/:0U<cS+273Ud<g<>^9T@#?TgK+>@;4JcKcNEdEgN
41.2I4QW,)4HT>]6DIgOA#>NXM#>-aAL]I1FLJc)caNKZDSc/14b<aa6N<@?4\O7
LI-4^a^/&cK5&(6^4FaI4?CdLO9;)Q_Ed0C+WFUM40Q9N>[H75OPKVD@8@AM/G@2
39D;RD^Sd;Lf>KJDQa5YJBINe?Y+^VOH1FaKL>,Jd_:7DDZZ)#:(6g<3AV_eB10\
KTE&_E8QIW-gST<\+&JG9N&XK\::<dK8U6G?f+;;>S4WPXLaYgXQJQ8_/f2JP?QZ
/g&c._GT9<#;R(+\.BTJ#8)<6+.F;>fXGRW>-1J;GFF2?HM;W.gXSI5DQcL3,5@#
YcM<L&XdTMc)->D>,\KE=d<Q92N2UEMf_b&:gAc6/f_JcF7RR&TI^FaDHAQ7#K/9
f:b6G59QHff6+8c4#N?,1INBbHQ_=-7TEdg9[=.F++@H@NaR/EGUf?<aO.C@_QKO
S2+GBL<O&\R+5QgHOPT:[7A2BaL58[I_#MX1]#-fe6SX<;&@L.855S)#Ke4DE:+b
41/?SM4]_8S1X^=S1V,#SJ>MWKaO??HdQA[.8HL#R;N,@PC(gJMKTL^,fMcIGYdB
[LXTMJB>d6Q-0\C)L_@49?PQbJ[Y^G,Ca/,&B5O[DGg@U[^I6\J,=WJ.=O\92TYN
J;&GP3)SZL=ZHHT5]N#O4YOFMa[D__8cKPG2P.]#2d,AS4P1,]&dK[^41_&Q=Gdc
>2G7G_]OP7LQ7(2e9626\S:+dB9@83BXb1#]X(T&-DLd9ZEO=;A#OYI)0:\#MO^E
d/TfLd-Q_^C4MRWX)9K6TaCJTP3:aJ\bG4_PT/b6#_ERDBXX((<]W0U<,HT24K6(
gFXPLbAX/[Z,3V(+FN0O;-eQRGgX,M15O?#>SJRdcBAZE>=gO@a1)6]NIK:@135U
QS.L6X=UGRC]3^;?c5[_E?a0>8G5<E-EP7A_:_)7K&Z8EC(RPCZ9<>N.TXORW);F
PX6DO=g42\5H:f+-Ta5d9?(PSe(bTLcJ?27.=?9.?ZEO]b9Eb\Sc9T1:=O-BU_f^
UOdMW5C=^_LM5<3=(/6fR4a^[O:(VOD)fd_,3DYH>gb+O1\B.MANI^P3P@YR_2=X
dPD+-1cP8c62KY49A#CVWVGHg5CVHEB,C:J3RIK+PJ;8\M/L<22NKFHL7FOE&[d)
gRcU?O=GF8R<^7^^=KU&SOYXS8FFA+OdT,gF(27:8+DW_ZKT]Rd14NVQ_Xc>03N+
<-&V5JL45ZgT2M6VcR@.BLEW,<&7RI^URI__E]<Agf0HY;3FYW[KM-F0FL#MK)6f
/J6b)1BW9[ARUI_>Z)B=OXQg3e@;a;;=1-f&gM,],@98,^F&f9VeS1d9XFI;2@?D
+8H5(A4gS;K+d@:P_D,YM?XdH_<,-N>3dB8ZO]6U5F,XY@+:F#;AC)^6(-5Q@0b(
Ybd[90L_:P;1&D=;QAHgFSBEVO^Xd\^a,T2bZRGP8N4FOAG0\Zc-S/eC3X/#bTdA
P79ZC9CN_VW.bOD^3gFf.P))R=ZB7+YK5&\;R_<)PZd+9X@),g@M?LV]&9Vf/8TC
D;9RT?EG@IcCU4L7QHLf:^<JHM\bU#BTfAT9Jd::2eXYWP50?QD?b6MHa1BQ=^Za
[IJE-N;dSK0@E;::0+F=G./DZ2-Z_(\RUTe2;FQ]U2/#0f6)&d^ZeA(T3K?b>KWK
/U5>Z2\eSBbAS_YR^3=,2#Z[G<+.(;_^AFSD>+FaT0[&[@9U^WM?W:[X4RCe:Q]W
L&\9_f8W9eAVS0#26.RO=@c_GIH?^&a@.?72J?;ba)WLc(W[32URTPR)Se+@HX))
5.8CQY;.]U^QV6G;8GJb6/J:)I>D_O<CGC6-15fCMVR/g/TJDJQ_(@,dL-1OA54_
<:@_7,ODg2IJ#UDHUgR/g>#d[g/S7A9);MK0W8Z0aTb@=eJbX&VS>BNOGbc=XYY#
7T\N(RNB=ETLE[3e,RP,B.\aD-)3bKE,RGPH2_C.eEOCJO)^+3,UQM\R;->g=f(+
f5_W7=XaJH#6QW\8/Gb=cg;?6LKI]+5K4]R,=\>M^Y.DLCI1UCWS\fMVO)8gBB&#
:?,L>f-&f-E1@KTX_WV8](RB&Pea71BYPdKd=D0[PFZ&=TVBRfRB(8,?e-]a4:XW
Ob,61:4]@&SgSH1^HGg?C#K-LZX[.[<g_,QL\=OEI6AXf#ZcRLRD8c@>GAME3;9O
e&?_U-->a8Bc30HMZMES;f2a(T(+3HC^=P)0;U.[GQQ2(R2bS3^:>6JZET(Z>0Ug
b9VUB=gKa5(X:GPR.:]AY]Y&JfHT<R_QH8:^g:YGC=Z&9eL)))>gOH2W=(5<,MRG
=-GW__1NZe]-UDEceCbYOQGdda\aUIOZ9c^PHdE^KMM1[0Y#7<-1SR&#WDBdRT0g
4d<^53DD@G>.3-ZG<2DSf20/KOI>45CJ\^-485K_X<D^)6K>F@g5MI2PDH06&:b3
=;0UJ6&3?N+X=+S/T=#Mf1Zd@,I>)V&18>X+b/=aD8bQ,_(:c7KJ_?C,<VG/acYI
>F2fM)B_A68UBGISb@X:6&MeeFc[)8R/^N@e,,f<.J2#0+&Pde/@>a:>1J/c8<4Y
3QG\J<;QMc::+>KN/.8g(fCD\P-476@)g(,4J4/KYJ,V&PdL#,U<Z+H:G@QBRC>^
84032d&[G\E2&(+7W03:Y](M<A[#[<&ef+,2(RDS6^bLU\H8:6<5RDNc>OcF&TGO
IX2[[@9/@:>XHXEb/dLZa1&TT4,57GKLIEXTZTZB1HPT_5,d;Y;Ma:UP#Q6VUW^B
<>M,a:NYI^c?g>aWYN>@X+@[]fFc10(5DAXFL0RQOe@_c?P?Yf^d[Tb#KU]JS;^/
EeG;^I2dR94Y1OHZ>U];aL&,\1E726K#7QTbK9]_10BgZ8P47Ca8WDCaW7b<WH(4
],?O<a@.aRVb59@:/#/H=98-Y0b5?gK(=031W_34<BcNSMeWG_CgVF/S5=7f?Ob)
gE?&SP65#;1PaE_&W(b_D2@KU6b/1/gcc#(M,Z\?C].2)7>AOU\52Z47aF6<31=2
aB;UB3#3=CP=,@SO6=NcJ2Fbc>64C8_KE+]NQAJII[IAb+^4[]7E^XO.eD=7SR8V
RA<ZNUQ(3R2=-7WJYfZ>QY4>0/N4J<T9eUR=[Q3FUE(MdeDZPA56aHd-?H_[_13b
QM#>(JA@C24EM87R?K]SJ:8C8dS=_]4+edR9=-1VS,gA_JHI@afL[SSW#bf6E[_/
T_Z3FHOU4KWBZ,fB?agV7Of##eCefE0ZT+:V<)HYMSV0ILOJ+b59X26>[W)]#fN_
W72U,g2)CgVRNO=V\@OH#HX@7QdCG4ddLbM6>3@)B160AX22I).H9D)=6H_:[VJ1
<7@Y.&]6a1PBFMUR_S_7=3NY0;_1^MOb]GGOMPP5KP#.J#X(9<,_abd<GT(N2G@R
LDAf/&W#_U/Ie?-WL?b^BTIZ:D_CJf>:L-92LYeV4?N07+d()gS7)2>.;/CN^R,=
G6A85(F@3E3SN/^<8S-_CL2\&YKFBT:<?D_@_VUE@<-QTId+62+@59)U8(I2I=23
X/[M;];2<F<42](69]V[QA.\)Z2S)>bYfeV@]/4Sec59IZ:)bA-\&O:SY^OKKdL?
[^HJ1@H/:#4Pc=KOUdGB6W3c:3=QDa#9./=K3#9:X2XaE7=<]2aXZ>^M_0<DLY7S
7#I(;-Z:4Tb)?=ZDB84bHZME<6U\;GN4&Dbfa)JW@)>-+J/?;0H+WBI@SIBF.E=L
K_O[TC>?02^43II&g1QFUf9HR)7MH<\E)4LH+3QLE#-LYUPN+NeQYYHdA(3FEDS8
07&bM6GKC3cT&\a791^eK2FGU+#MT4I8_[W8]?:D\L_7AN4aQPEKZ?>(+BF9.\W0
P4Ed226NVXB([K>PgYd^2)gV=aF>),+U-387]Z@cV33BL6,=GX,e[DUM,IVBf)XY
O&Zb6F(:BU9f1-U_@fbQ/-?=c4-=5Ob^G+/+c&O<e5(03Y,&GRQ<AGON4PDW_30g
?AJN?1a^.eDNd6e-H8^^8^^T@-U8Y>+,OB7-Y(.?BB5C96<+>.UE3M2FB2BXXfL0
>FFBAAA@cEa47W;(FO#;5&DF<&C<KEaOdIW^Z&]cXYIFfO-OV:KK/QZ_QB&K^RWg
bKDMaGHYL+8(;49.b=&_ORXWT=@3T&R<,_IH@O#RFG#[1.=[.:95Y&O&0N4Z4(N2
1,)_A5<EBK/WX?#LBO+Zc1/P6dP>2^DI0MfX(P#2<&NRd8B3C_,_cbXU/U6Y/];O
BS>FS]#7G-fLRAS[B0.S3<Ea,Qc,RL?)?].P)NHdgNad),eA:fBIY-9J_A2AHBL(
0X.ce+9BbD+14H2gZXS[)CL&E],eMWVcfVM;+V?ZH7>VR]C:EbSH70b]Y=MFDRaI
#V9E72[&[)0YMZ6T@(.=/H_/DG-NWJLN_6K4ca8TcEG0M2]LM3AXVH4BA1^ZV@@5
+Cb2X4NI>::WbMdV.N]@;3fP/PC,e@,QJ;+Y@Va76#JH^.6PN?&\VAd1?JOI:090
eIXBIID83-NHeJ+_Rc6g7XQgC7A6P(eca4S)8^8XUXOPV601M;#,T[_W>8L0K6^[
XLJ>e4Bg69_B@9/ONS-6@\H]:58?DB+17A;=9#VMKTg&2LF7U=]MAGA9D-6[RXLg
0YMA&T1_]4H]U<CS=)6L11[5^K:.g>2IK(,B5@JKfA,3L8(K[Af)fbE7cSK\@QC^
W#Wac[4NM&66WNV,BcJYC84U;NgY9Dd)>>5_ODU+1PL^9:\YH7G\R2,:0[P3[4?d
C0T38D7F5:eT<NfOJ@#Id0;B8:5(ecDc\[2&2_,cUdHf,U@R13/+Y)V@Cd\RWB<>
,-GASOLS;60V._U1R9d)WV8F]/V?e8BWXPP9:1.BbdA^/PLA[DKFg;9@IN/-<E^P
K,V78..[3^\-V[UF\7]Yb_T@ET,<OSNI7IDRS=RKDEc_eTTPK\X?b_e#^fES+A-f
97KZ;f:W90B00\L^?Ld8d.>1.B+<Q8?48#+\,3g;ec#,@C[;WdIRK+0@TDL<2]Z/
(KU4)@Ld(P,3(-Igf0b:(FKNB];262)1#B,>W#-VGLgM=g#/0+TRfY3=R6S/GS+b
GVOb+(-0I\YJ@c9OdT;;;T]aM?<9AR+.4b3M&a,#Y=eV^2637-=-K)KJ#]0_DH8R
e<WI\<LO997\2=MDF1a;RHbCQ.65FI7\O681c.I<2-,64d&=d\:I&Fdf<(&1SR2g
gN.3LV]U_aKUK7ZTF#WS[#9c=G890>ZZ)d5?1/8;TMWc9Kc;XNUNUP<CEeGc9_a/
:b_QE8W#R<A/5NQ;#T2V5J(,WJAE1FKL#B738MN3PS4eHg?4&6g.)8gb?H.D0TR@
0aLB?53TE+;56PBZ1(,cdJ)MV3S<?1(^YdIDKG8A[Y&8,STfLb1A]B+,6:6PMFa4
N?ZMcJ:&eS?@/(@[+L7,=d2_6U=gHB=b2Mf+?YFf):SQ/dRHU+4e]U[=ZG@VA9<M
fb8NL\KHT9<Cd\6JIf9=J8,Zc2K&5DK^J1T.:;U+J\GF>15g8W=TN(GeS[K&PAHI
YP/+DSgR]V_dMKFff:46Q,bc-0.b#K[EGEef/@(U.64&+,cfMdONg:;6#.#7FF:U
\Z):&#Af4&Q0,AH@PXSYFcM9^2K?IXKLPO.8@<84LIae0T561eE1\&#Y:EK1OQMJ
=g@BJ/CR/^\.ICfHJ>e(gd3UJ\Of>,:?cIFM)5#A<-./e#Uc/]U&J(KY0<bd]9&=
]MUM.Y2MXU>B85DB79N_.:3bePQJWH6ED44QOVa<3-d]EP#E3Ce;a:XcMfEJ7;bC
91[NL;/]DAI\GKGAWE@UL[OL:Y4aI0>_-cM83Cc,S9PQA2.[G=Cb#8HX7;FI=b=G
M(a80H/2@Y5-9acg2<PZC[Q>@DRDZZ#-@KS-6N\P)d/-S^EBRS^QbF5&V>c.[.)/
,-9Sd]X.&YaRZ8GB++GI;T\@YN&(X>2OH9fQKPSRR:NUI_af:]bQB]BO>ULaPO+=
WN^?72ZGf4@aM9J4g9/gMa95&d[9+7=2)NQ.SRVH/eW?&._gX;Y(]Y;&R6^5FbbU
XA@G/2K45M5L[;A-BVPVA01XD&64AE7AYO1=-e&7T1e;X9DcJB[O40SB@a:\#8CB
J^bOb^&4:(We9;,1B-OW&UL0JQX<SOgd_5#/&a;TZOZOa;aUcf?)7TQ5LMIY(#GX
CSGN6.]-_c<M/#^2ceV.TQ..B2YMFF5,/_M,Zb\EV>S<GZFNa03F7^NZGO3NS3=e
edL.-eE30+_FCB6:N)31>NB,MWY)>cKNgbbe]:P8.<#CePS#d7<0,:75)\JQIgd@
D^?]JWYB\DRRU]5<.<4=Z(-c<35OE3f?8+.c.F03MON&;U&4J5O-=PU+DE6L3.;b
=6-;@25YN^W9V5C3QMWF]I,NgT,;#G<=Bf@W\7\d<Qef<XODY52e6F?.H74G?ZdZ
B:f4R=e0]L)8D@PQ\K,IQ(X4K3&7?eE=WdKG2B?CH3f[R-1GJB[A5@WRTN5DfYP_
?)TdPG8V./C,Q0A:5AYS_ZV_OT@V,P<3/9a@GR9]FA#g/H1UJOL.KB+3WK1NLTS9
5b=NJD.g1AAS9B\05P,EU_406fR9S>@A^(UdYD8A5>A:[ObFZ77O2ONH,N5;)S<F
1#WaW-.>8_dBQgY:Fc]Og2Y9\73JE9.#?#?)<GH.^dRadQ>9_cg/A-\0=]/M=7-#
cOgI?IcFRPb+c5#LbN70)dPeLI+Z@V:&4:c<C:_6GO@0I>SBHR[L?TXf=0G;WKLP
8K;b\9U,^4P)-/=HSQQ>S?F9OD&<7Z^^9VN?)FgIOc.35T5Q?a0=EN8HeQ2<7TM<
O^IfXOR[P53e_2R<V0L)\d=[PEAgW+Q/Sg1cFYDH^8?IY3\.\8;MM17T#=2MQ>YF
VSNegJEFf/&V02fFUXZVOgY=E7fVc_ZeFb6+>DBFC;.FLPIH-+M)T??PJ5-g8Y:7
e^ANQ[]Y4.X@+]5MP3d>9AS2(N=TUAYB7VIQEQ&YM6Y7cZP](C:?ZeS,QM:dV3(@
#_E3aL+]G6CTTRW&\L:LaXF;3;c7+&<N_dTXYI#GC6[@S7:[O4W;aJ)bY@7HD_H\
NG4?3V^K.TgT,X;5=LUO7769YM1BG^DW5#bIY.c9D\805:TTg.F-.RYC&;IWED,g
04cP8@BIPC<;LNcL/da/e8R=T9Wge>]K&JL/\L:.gV(O+aKMSea85b[;cU,R;D(O
Ia(YM<J[1DT@<g6W>@&.W6/X=0&f=E8c.3MD@I.T^)fTd@WOBJWG<E9Tec0H6F>U
@LfZ<UVPX2cN@#YK2F]Nbd8?6+;aY5)EeN&2OMRGS:<S82T>9G?K7>QX&;4X9F>g
J0,SCL#3?e-5X5[]6)ZDJgGRY]+4@HN.]^a;ZL5E5.-5ADL7[0+W.LNWXd7_.^Jg
F<eEb-.+S#38_]^]J7L+:;=,MK&J+c0/--=6WRg9,D@fELJ3U339-8MI&@UN@^NV
<JM<>BZ)HR5,03)9R]?g\&)>g\]NbIVO[-B)FL<(aa\fJU4]3P&/[IS-b(0?=:VV
?@WDU=4YN7H]T=L.bBTV.WBJ@fY.=:+P5)ABeFO]9H\-O/92c9WMCT&.D[U0L6M?
<<GL;UXPeM,KCd@Tce[\8/0BQZ1+O?ER5)[Z(]VS@RdUf2PW.B4LA^\:<f4+W9/M
;ULQM_c2USCB@>9RHF4=,X1GdQYN;\Z/.b^RRY[M#D,;fXV?_@)<4>#5V.5UAOM?
F9F9)c:1#b=LSXMEZ2@UbcOJM=M=(Z)-?(HV:Fd,Lc6Fa,6^LC;S?,H??7bX9g;]
FB[-L2;7@GMHcPNOUY9bAA]N.HFXL3NGe8YJ0O>C_-7&EXPCHfEP&U242YM(a0Id
M80F0-:XZ@V^X1f&&P5?LEIS?NK4PQ+aR123c9<0#aH+N2e/Rd6VG#=,=gLCeJL1
ba[&VHMRDFaL#&Ud/29eF5@8>F9>[.OI3(P^/2YS\-</VUbY(1FRGaGRE+B>M0e8
)7G3H/4@N^_;HASa&U<[X+RaT0R-H7YP7E=@5bgc7?4_M?TV4OUd2f28#WWa,4c#
OR=5X,3&T&QbTV:2H\CS#V.:-RSNIf?8T:O.5II?B5PB&RF2VZH>LI<LP,/S1<8U
f,)RdU7NV?a3K\NdL[a>-8BN+Z2f>X/^]3I>\VI[SWUUP=F^Ig@.W,^c[-6K<CGg
e-[<c8&eAf9a^cf;O[fIa[GOKM]KFS:^NSE#2c)Y[=V-4:\8R[:5XaUYT0E<H+1T
WHXdA0@OCS?P2Y(>:WDKcJL@0)#_5T9dK_00cP)_(3BKF^Q.bdYHMM62f\dNa\MB
&BAUbN\E;D[9A2C.J+7a?;H/7XZU(efRd?\I1SeRM5E.g#;OC5>5K([3f7UcLg<2
D(fZ,0FR3cFU,P\Q3ZQEX@cg[I6IXC=RI6C_M,#O,FV2H?N_?(<]5+@(M+8J7LcZ
1g:&)E[[:^dFQbS6GO2VQd9\7F(dG++U03SL1M<RGU+Ce_X=UZ&W-M+_5T](T2Yc
WI\T^4bC)ZV]/TGH)=:TDW1abX:_A_;B^1KeKSFBB;0+<.@==9IOM;L=YVS[D0e:
R,e&2Q.^=V&SFU8\;QDB6g3;P8E:\Efaf75X#eBLIH2-JT/>4[A(PN;MRJJF>\Y&
FaZ@]&WgNf82@AKU:5Q?1^\.gM(V@gc;A^IZN-^6IOD7DQBVVe0U7]f8dLBZ2BCd
D4T2aEY)da51cS;U_\e]<]3:aUYR7QZ?\DV.C[f#/DEff)O6c[0561@-IE](6&G-
,U/D[Z_,]9^\9^#967+&2-AG&LIbW9R_C2(:Ue_T9@I6M:4Sgf1WP]dLI-?7K9W3
)I1.[HZP=I>7fL_>_UCJ56WY0Wa4?GFNeKEScGT5_0M&W\b?#(7bC(bW#1\\@H2J
8?-(A>E#agIG48?d.gFQP7bb)9>)b^Ed54U^.?@Z,&eRc((9&V.QUX\O^c4VK6@#
2O>,5QFe^5L&MP/Id@<8^9S,(22I6RG>A,G?;a,U7XeUWVGB&GI\6cN4cBEH0D^(
Q_?\UWeJ<EXD94Y2L&YT=H)Q(cY/_09FRC:b8&TYEPe2f]01fPEbcg0eC,aPBQ+6
J_TLFYO+Z<(],1RW-]7(V6.@gc6\+@>fN+27&+aLUb[NZK[VB7Z.fQ-V;1B<IE<I
X-H2e3M^XF,]c2]#f4#FZ1^:K[__J@]790B/WK<?@4@01>M&?Af#P0)e5MA.?c>g
Y8)bS@B<+EPOOU5.fa9@6+[A\gUT7_,Y:W:(g8#+^XI3\TFPFgL/=@6(Y[BUY/Kb
,#SV7<76<WT&f+:.YG43NNNbZW/8PFd-\PPgQ2b^@9TGL3a(]D,\()R-;8<gW&c/
/YFc30g)&=S3>&+B8cE<.^1VV>a4<_M8?1V?.LJVN-YgBf>e\&+A@=a?A]0S:U8<
DX<VD:<B,5UT:3^F#EKKFgUU3fV_KggcR^&:4fTeX(\4(W(#BV&#gJ+@3.;17-@1
4M)JBSBI;(b8WZ_AFfFa.6J/\)GeAWE]cE>X)OG4D:B15/<Y<@6[>B6V&Z-V:<cH
-@^Ue\bM)R+=G:_6@Y;->END42_>-aC7\,8&:^L2J0@Q7GM@>Z_HJT5ad7AZ,OCS
XD)^F-J>.47F8Q-fBE12;_+?2ZM3fWP/T=eETeL\89IU1E<?V6N&((Y+\ABDf@Pf
gEK/eJZKS8RI4c#>[[b2(>,Vg3Q-FW[-^JLWO/S5R\E_])@J[A-eP\?,7-ZS7Z0_
R=J#K4-DbcZ#:(Ge>UXeV-D502,gQ=U6+HMO3[?)d@,KaX^df.>9,-GTb]0PH8^N
UVLGZ4.:;@1dIOT+T_PF-aU[[RR(SRVScLZ-GZA7:&7gFG<^abbSM^#a>+\V\_N-
J)Zg_F9:PLCAT\We:]EJ,a[6VQR=Q60(]bTb812=4/:X;D8.a#g0:]-aE[,e6(EB
eC#d>;)4@EPH=7M0.LVEJ9\^V^7P\W^:73ag:DGDf;<B&KFU4MFD@Mb^5N@VgF=6
)cUR9JV4:L:(+5cLK5EF4KF0R^b)D8Zg[[6_:Lff024DR?d/PD/KHMW@@7#I6ZF6
<Z-I?P;P1V;VK[McHU@<V)C4XF+<+1?FC.3TNLR>aJ-9,E?d&W;</MOU1CJeC;\8
8cc<XKJ<(NA@36YISCYBHg,@g;gC0>5MYT?P<U+fD3)7;X;W;b6#8G.9Z)=RAG(V
]SK(:2cBI8A?89>)DT2\Y9;41b:--VCE-cgJHZ)U/C.:f;]BL5;,7AEF>#>@5E84
FG2H4-ET&^;,IO,EN,Y,3eBM966/T/Q-:B>)YRLe#[:f4e5OM3)4bD&Vg=c?X.Vg
9c-2.R8N@&Sa1a/A>Q1W0cE?<HDB>cf8=?6\c9/E_B=D9@H0[Q\D\eeLT2;(-W46
Q2ZY6]JF/5:@McHL_8\3Z<(EX\#=I,HbG>MbI>:I(D0E;.O^<b^Cc4-55P,5N^2N
BKCEHY>ZW&W\4IC/#DXR[DJ9J2SP=:YT#2E(/A27\PNa_>40SFW.?H)P0/@L>,L#
0c)VHP:gKFW=@H12=/aX-[9J?1BUE+)E8H#:DP2MgNVc?F7)OAbe,N\2GfO>QG_F
5F+K:(Q:N2Bd:WBT&H/9]0I;1A:AWfCGD,59#,TZA5=e(?[T2@SFN<FFB]Tc6/E.
+:J7d1a>P:J>#0CGdfD.6,-SG<>_dYO9?O5&3=D33^&dF-C+^Q27,P6+>97/VB6U
#4U&)1J9:2YXQ>611H5d\eQQRAJfP8#G&SH(AXf6eS^Xe/Fc+X@VEJD3HV[TQ\O)
fc=g#cSc/BW>^<M2P)_aI:5c^^U67SPO?QGCP\R\>K8E_9?-)T0f]QcO+9(1\K0N
TPcT;+b?&WSdRL__0\2EMOS#WXZ8?7BgZ8;)K0e^JC1_LEf_5UdX<#A28IDS+4cd
]>e1H,)JAdg0=?R=SZEgda@E5)?g4#aPH8e][.cfLe-3[+IX#VC\,YfGPLY3E(TC
(8H=gF:(7>1?&BZ4:.^CE@5-0Z8W>BUdZ@:81CL9.M)gT4#&9#4UF1S@7-cH@=OC
/e/[4.0GWT/[8UKG[33LMY6)Z65B6V?GTe<H+PI1C2ScIJZGd&aRa6RRA\IQ>d<?
Z#-RL09A3c[.NgcR,L?PM+0\FZ)5-@f^<2eLGZ2D#&.;M2JD7Y)N;]EZ<E4US.e)
3[(5P.D[ID0IfRT.Z4=Q16fQ3@ZBL:dGY027e-4f0)^>^TG?9^>?>R?PSe4[739G
1,:TK<9=?@81b>QR0B9?N/cPf)WVQYHfLJ6M9AQPXXR\bU4S)SDJ8>4Ce@R<@9@1
FZ3V\Zb:HT;33R)WcRS0Ze7,6@F5PdA<E^FD#c_[7@H_-Pggc)=BSe>^Da[7bLF4
f(B9KLb=)PK)d@5])g8c2W-SZHTX-(,GB<S/K\GKN<AA5BWT-d);PVK#Y=6HP36/
[]=AD06[QKL;T-_K=G4e]2=S\]a9PZ/<HG+G\:6\\QaMbCZRS;YYf&1Pb,<<H:.0
:G?-EJcC3<;=R,.gAM(cd-8O(P<KbUWGcGWZ@@2Pd7_cGBDQD1/KO9NU>2&d)Q,E
90c/JVQ=0A;aTPIA;_<I1Nd>;L#_98fR+_K,>;2^VC1K93J+:LK-99;DQ;CC@]WU
?4BPfL;Z>;7a41gFVA9aGT54K?#a9N,cS7_]7&XfG=B2c9.2)&7)=BRH.8M0-8#[
<cRK1N1/]PY8B^Va7?A2\L5\FDA)X8ST+=_a3F/Dbb[=;K/J-0H)?0B,+@+DAB11
Zc/XSb-I0:XV]bI_.6O)E4?Q&(2dEQTANEIP&P:I_(0K@XaPI7C8?#-f(e\_Q,FF
?MN(RKH>P(+Q:;AD\:=RXW]R&(-J(5=6Md\.6D+YOF:]GO<1e:F@86^EA=1]3C[e
H;?3;(&/E;6F5YAJ<HO0/?HN3F1H>ZTb6b7A:LDF5OOTQa>87[86#]S68N)SYG8I
N<CLZJVWNU6JUL)QN&K,F;\=2e.2K)eS/=BOF<YX5B-d(EeC0[<8\:;/9NePgdH\
P3_&.a<IF<bCFKN0P9c@N79]c#Y-a>+NgNg5UBWN5.XJK2^^QXW]e+DB&U<L+GJE
e]4B1)XNI[8O+X<Z4.G&2]Z,aR+N9ZZ9D^W+#cIb(]]LOH];Yge(-(PAfH@RRY5f
1Y+H)&,FBQ]HH;P16FP5M8V,[J1Z=RCU>+&^C0eC=E_f;7E>2e23PC>\D(AGTQJV
(8a91[#EYA(XSUS1e?feCa\Q]9]Z>\=)SJJJPDPF2YU[.5&O9#=936;]\S,J-;eI
cc^]AWcdD3GKUOTOfAFd9<[\#DCCJ(N3MSY+8ZN2.-b@L0Ob^d2JV?J<ac\M>C4V
\\aJS/^6\\2\A.O+#Oc&GI,CC-;RQ/74P\,4cPXF&c@D-E/Sb7Y0V1QD18NOHNQ+
E9@U01CT2Q7J>HITFe,G\B:W2A\B]>^T[XI\H-QAV3,XQUM3f+QTTB.0c:J(Y[=)
M;&3<P=W^FcB>+&(#[9^+4X_>C4+L\9GJ\5C>D:a5D57XZSPZ9e\@(2e7:;cUga#
J#Qaf2e0GHETCYO/NdXO-4]X+;;29-[G8T)AV-QdG2;G0b0YS/<-V@ScTM9bZ,Za
1[H-<aS[@<9HLQcQCA_OAT>cE_3b1F&V-HTR6,gXEWXGU1#F#PN;F(O3]M/UQ@+)
ZR[6W4O;XAdGAQ_,f#9WUPL=c3EFG/a0JVH]@4JX/_K=0c-G35@W9&b8N920=8cH
b]#>4/aYM.XBP/JFc:8M=TT))#<HB.B,f10&]@[B3BKK1MZ8a<aY7f+OfNT:,0RK
6N?DMVKfb]>=D5LBW+;B2RRDEe@[E#L9A1T3+LLXYCX5FgPecFN^?@&3YGdEDHGM
6,<c96)?5:O/YRf?If3\<S[=O7fNOg^bX5V2?>ID4]B0:K.?,O85WCCP>UA][F>P
\59^gXF=8MK<DU6(DQe/BG4[VNT1;.B?^8&W8JY?HKY8aU<>=,QcNe+MD>\)7.?V
fHC[@M7+VbYWVSMEFf3H0A?/8420g7<=+4Rb,[U+-+VH]>cU->&J99N1TN583c<@
\cEUR_(gb^B>b5^G09(H4GR5-Ra&T<Q,ad4_OL^D8f5R\&Z6cF10<\48J[-OU@2J
:Wfg0/bE7+:G=+a2KFFa:CdVb_]XBZDdT1Z\(d?6/c+&1VNTFI@1K0HWKBHXA^M+
\=F=?1aZLKA&ZF<0+_+Q]BP]XW.T+KfE]2L_M_(UX@2AXL#WA^f(,H>QA0)\21#G
]=,9ZP\7,@&_<,HT[S_3DgLc[1O,^VVS;d=B5YgTU<KR^@+cQ8J@783@R4.gZ)I[
g^a[+&N<HBW.^(=\/Sd?KB4U@)+MG?V+E(G.KZFfK<EZS;LX[PIJCSQ1(_QHYCW=
02UFMXQCLA4..9@6.eLb=g##0SGR8XN6]>N;GH//Ne9;e8AGS_QUCf.AJZ2A73?Z
/XV;YP.N1K;5>N5X#PU]1=X2M[fZQ9-O60MPU/YgOG(/0[RA/BUDgGPA44O&I-DP
c6H1/Y0S->5W(:GgCOc\>LLV1aIc;;C>/g(gZ1^NGO/#^IO=RW.Z;c_V]Nf=:D7)
V&T-6.[(;_F,)UGFcQAGb-cW;AH2\_76^-^EMEdY+//QIGQb@A8XIHD#=PYS#\D:
\C&-JLC=^V=/^bY5R&L7,0XJG-]]:^>4gg_PGb?B6@5e3,ZMJ2AQ]\UV@NPU//@-
A\V@1);fH9IRRPS&a0T<EeE8bF<acKKM.d2OGV\fPf/Nbf;EP0M-B2P46gA6T7DW
\JCTdU_4[ULF?6ZDACS_@M=&#d95Ac98g)ZcG&;aNJ2BQ0e3;a@J#9<AA3)FA6RX
10b]b=]S@/(3<a#A9<,_8Ce/&cBDSIbAabD6_-ZFF[]GJaX2HV;M0:ATN>?b8bCU
TOD4(<.XU&/^P01_>L(_OfCMf6Ga1>HN99U<J5=]3DgR?P+gQF#GGFcgM1ZG=&1<
DSJ.1#+D5>(bIBdR2SJ\Q1<DcQUQccDR,R?P<)<0NBZ9EA8,+;ONSF]ReSYC&5(7
;Sa[-4B^H:g56_;=P_6:2_E6+KYM7O<b?,?^6TGdd0GZ;>\]Ja9IaCR]L1H?F=9.
4ZR\N&g7K7XGGGS]=/=K5c^)]cHfS@-@XY@BCc[.ALCb8W>d9E@a>X:I63MN.M9d
LTBQE/>=00VA^4.F2DD^6,[/Ae\68=.01552T-6WX[U2EIP>1aQ@IOgfLE7<B+2B
3.U,d26I;O5:ea+fW:PL2Dbb9;=]/fUTJeJE9)T5d5^#0;>94Ld0V5^b[SH1]K;C
;ZB^V@Y?O?\.N58.4IZ1Ofacfa:fT><(UASZB\5/ff8HF03799+UE0WRf)&<KXJ;
c[G4(UP#N(3C^)G[H)5_2FYLK2fQ3;@/>H#_7#fG12DF]G?[M=<8GAd0X//9AHA.
1]K0LXOJX<d=3(I3g3(<(>d)5#RQ]]TT7B8f/5TFgY+16QLe;g_AVGGWa:,fIUL&
MGeHNB]ZI@Od?(.?>G\F8badH+P>W4g=E3J-^C(?:KaRJ9C3c>YA+a@+5E;AY6]N
X),8PMJLfRccAcRcP8/fXDV5(Hf^+#,WG^LNg>69]G>gA</A4=@T^^OVH@4P<)3\
=^_76MZf3:LZ2Y.--6NgAD4BBFE<D.RX:5WV]H>IC:I#>WdE@aS[3=KeH1OfY2+F
1OWB7&c)YXRBbW/AGLbF[ZKS9(b1aC;(5U\:W5^ZfWKJKBWGQ_(aN;5RH^8Y/^F2
HY=3.CQcX[RSPLc,X(M^6JCa\0,)L.ebG+8FW[g37&7[#T9e0TN+[6NP3/O^d2@Q
?Y,2b2Z-<,f_gc#JJD_g7da_YLIZ&H16WWO1KTOV@2\H@ID/DB]178(,^@-4#Q+D
>P>P&[(H/5J7e3V3/S7^]:Zg&F\;(HaDfDG6cI:F.M>:WH6RX=)d9H@CTRTcJ[TN
S\NQB./_JM?.,3F;\I3:Hd7N\e?5WC9^bVW&YSE(II/P^G=N:g3M28MLf>F(Z/_)
CE[B&(4/>_JMW9F2Y@@SV&Bd9;=:2RC0^0_AK98(gIbc:bCF3W]OO(0d(fE]Eb7J
(_EU0a85H69Z]3KVS9Ig8b43-&#EI^T5J,Sc6;9.WENdB3#US86-c@49,3=,2/Og
<A5Z+a0PRCMI=RC_Hc#YWI9?TJ89aM.OC070Q\bL?<J+84W22+@Ba0@=6?>C>Q:f
J.+XC,XQ?@S-K@_dKP\XZ7V(73.V1B,X[a=dU(c<1UBJO:gV:P]3+9b6V5\7Aa&3
LYY4C/WMb20Y44&6fX;.bf^9[0R@RaR3&@Y59[aN?F<?Y1<J)\]Y]SfffW_5[_Cb
D?1Pa+18@NQb?c.T/2Q2SO#_X8K)N]BCFT=O<9T2>ZS)>/<a7/c^]/8)>-aGf2T5
V1=@@BG:e8JTd+\be:K[^+#WDKPBS]FA0c22Efb9Zc+05R/RadS;fX^.WV576e4N
]aF7F<:FP1#(==c@2Z#K2T2D[NQ=1Z2&)-KI,fAY\FXA.Cf1];b^0eXWD/aC\+,2
P(K99.A0C;Z/_<ONVC/G.Y4S)2GK1Qg#FSHYAA&VS6b460bf=U+]dHG\^.V0IKgJ
:HE#;839F1[CWK1N]fg^\5QbO4WdHB#(X+<X8,>1+[^L__08)aQR-<^eS>\/eO<W
92LEYbSf8_QF]:.&QL6?E<&3JQ@^AcF3=B=<6YI:#I7#)fE8Y]]SY]QBRa;YFVF@
ETN)K)B9=85:5eG)=]#6?^/]P?7J2];<2D;60J+(V:aM2=1aG,P9]2)=(P#0DYZg
#W7>@OcWDYZeC+=L;09gdE[cP2Aacb[+Ig(=1,[X;/cEEFeNeH39.S,N75BR.U,L
PRGARZH)35:OZ^28R(<FH-7Y]&-X3J2C/G:)Gc/,G-[I_@,#->_YF13X[XS,)4SI
#_IGZ54J2=J&H@0QLaUd;E.[PLT.VQfb>g><^=E7]78SRHE5CcGRD3)8LCf=4D&a
GGCKf40N7]\fa@]+X5eG4:K-c-N/88AK5c.;NVF4_^8C-P733G?2cf#/>?MU8_<T
adFcX48dH;?IcTDAa#cGg\,@<FU>Y7]0KGee;V[SC07SSLSb(SE^28OeLVU&VQ;g
U8FAe0e<NJB9dVKc&?JU7US8_7O]#A3Q]V,UFf:XF,6?D@\B3I\c6^]8=\LHCaT>
T#K5CDgQ9I[V6c<PebN)8ZARE2W@Na_SEM-b;#H\G(E]QcM)6BRW(6-R<CVPI21^
Lg<S:X/LGF<PE-;UUSC;U#Xg2].M>XcSC2,ZWfcec/<\JG^SI;Y9@QO_^c\b#UA0
-(1=GgB6/BZZ:QafE,,G&N[(Vcc^3XSc<?^<JZZ8XY1?^^RNIPc&=T3+JND3<_+G
&);g+E.bS[]IZY84(U<#SMO126N;)]CSOg.@0?KQH=a?5.XJV=H>@GO:ZR@.NMcB
bE[&/N7MJg4(A-b(_YVKg.5e:+4/1WGN-^86Ld0U6OO<^9NFS3Y=?O7<EHLCWP>;
S@8#(DZ@NZfcTYWXLg5N\Q>E7[N@,L+@=BaWcf@T+HWOO^KRW2>&1WfGY=Aa_d&M
\aI5@9<PO.8A(:bDd#KC@[O[Y9aEHc(.8G.+6d8<#6Y=EgYW>.;:F;_.M]=bA:MP
\:];?28f_#c[a0P-5cL;;ZLHV?^#)8g^&ICS-O=1A70_LF--][?RbXN/Z8[+KfJ+
>TSY)P47U/gT7HK9AXA?<XKST210+A_3)ca-4VC82WNR4b9)0C5Z-RUD8gc?#b_Y
UU9&)LMH9LFR0AFGaV,BfOLIJ@g:[K7[\CA[-D-.9D#J&De4+Xbc(_P[AJ.Q1(TN
U.1=56K?WH,,I#UM)3A:C:#-@?L9)(H=OUc8=AGF@>g4;_+7U4dL=E?SdWQ?2-=O
S?+fE8<BYY<C9ef::=^-2f&cbWS-bZ^ID#/W=(6/2P6gKQ)KCfTc2X?g/@I#2._;
bI].Q.5a/@L(<@=3L55.7#N@>5RC19)d.R(2=L02YRQe\O.#I\e52SH7B>-K.R9Y
Z)R_,L;9R1d/4b[8(O8J-deY38/6TSS6]V4]7=<^T/G^g/b)R-,\8Q8Re&R-[U;U
,U7D7&g>QE2Lb[2C=bOJMQ66Y_R#HObVTF[50,:dc/4BAO^_I_&=0G\CeI;Z?\?f
/B/V6QdE5_35,;.WJ/.5?75M.Tg@0TZcZ;.:PaCL\DBCB#a2LKY#ER=1@U3L_>KC
U<\KX9M&F&RO,a>M@IZ+\(dTU;BdE:;cb90g]2<+#3)\,V[;@F)E>B9Wf157K5MG
C\+VWeCba8&@,L8,OEP-13-E+9K[G<)_[B,(KPSd=GVU#NFaH9KM6agcHQ3SBD\7
?.J9:4\;e:+V>Rg=U3PQXPD:QW6#PD2>=Q3&dbRE;Ne7>O9aGT-S08,GSJd\J#?6
8?B+X_-A)ZfC)H6UEf:KQaEPX3PaY.6L/6_2)[d+712?JWK:]bR+\I_ge&.;89D#
+0OWVK_VH?2VaH:d9=4X,#I[0D+9dAYMMR-g6F9J]3e=],9S&J_:-/GR<LB_TO9Z
1\d8379XFf+PP\<66JaRMR6f;PBV0HE>G@SNPf33Me)H+d4U-?3(C\<f4^SUD2<)
[@W>L5;9:LL7/5?C/R?1>VKC2&]e2gZ^\VIe&bIgPY?e8P6TXCV3e#cT_/Iea=]N
;&X2VAfW-]=gQKRbPA<1-Kf7YaYLP9=,+/4Ka;UB-F[QA?)M8P^M@O#7Y)J8>fR)
=A1YG22=GOC\bK9)^PFQ?&N@\K?8S#B7#b,@\N3A<+8)3T[1g@Zg(3PCX:2b1R^K
O)=ZJSR+GWGgC3]0cX#@OZ;<B)>d/XcT7K9ZJX_g0;c1892S0FOP23fM5=-7M\_P
ESb<_d.R,ZK_:)@Z6MY84Q,Y-_/L1]#Y]-G2H(GK.5+&59:#g<&Sg_R=g:-FP^IF
_AP0dR?.UZ?/fS8FM6EP?8e^H1(<g;D(+DA:GO]X>?GTb/fI]JNd5=@.cMfZ);@N
,3;/UP6IGBRFX;B7.;^<EdUIX&SUYP&&6(A2OF89SCbRZ9N;[/QW9[QVcM)Yg?#9
+-;W/D/;G[.gJV&QEI+HYUDN\W9AF=LW5:7N>[NcFKCLKYZN_2UR@BI-K/D/FA0O
Ce\W0g(BK-D6O&\dF-)c+L]B](NefC?.^Oa?H8Q>YU5TYcCc=UCf&S:HF,>K(DbK
H2T\HRJfK]5gY.KYfWI=YIQ6fAeU+9ZOC7dM\MSQ6J]4PG.UDSG.PW6TMFF)bRCF
LJN]V,eMUJPgc_R4;cR@X4;dTL5Fc5I8U.4b<C0Y9X49>@XVFOP(2d<+TPKfKae]
K+g^9XV<b],.LI.H+.J@S&J-4(WTEO[I:EMJXNF[RHcfX(FL_0bOd_26U9c@:#NL
)OcV#8RcR_KV4f2<Z#)MK+#XG?a8#&+fEL6XK&15=7Y&W8>/9R)^31P\=]^aE#LS
AQ<4d^3&ZP+(;VaMD4_f]?3PXX\@3,P=2[W?&MSe3)?HQgE=N0B/SN-Y0c,7DA?P
=O7eKe5N)OTQ:+Sf2D9KSL=Oe^c_?WLd1[K1?@I3@:MHb@DC/X+3Vf2HM^\P(;Z9
IM/+T>eT2fW3>(RdX-1;b&R8VUEI#1L4ICdT?F[F1NEZG^6.4P-SSM;,PXLNY64>
?T?1?W>S9P.:)fR^UB>-G(eG[9Q/g=1OT95ObIGV,A]ZVO[AbB@EcJOO7P^)\9/-
B)Cb#.1E.9g6QDV):PAQ;?/R;cX1H-c&^+#?\1DYIg5E2daIFDB=Hb_8BY9gIMSD
b^U)UU^TBDWUcSVI-_70+#K6=53@WIU,Ma>J(6#Ef?/74g;P9L)QI5SS^b,E;M(:
\3/BBPFME4R#:TB^3>ebCUWN75b7f[OS8A=IC7,Z\cXI=MQ-J@LIIY?+,04Y@+GI
c(-LQ516/^?^A:aEgReTP<\>G1g)(D;_@C&a^?CJD=\QQFf6@^V0;1N3/4:aMKOM
dd=+,(I32QJB7^<R3baPS_cM]TT]T2B/#MAcB8\>B2ASL]YUNF51Ra=1Wb.L@S(U
E>3ST]K9@eI<?GZ/X#IeRPFVdP:g7=QEC:#[+]NbLE:.>HKTS]+ZKFH?VJA]&@Z2
O_5+-MFI[[1aHQ0)/-;PVIbG?WC.Cf4TN9_c_81-MVcG2G07e5\3:3^H_I2=JS_8
N0W(9#DId4FB3+.Q<2QG:4Z@GE6J_aG,H/?6#Dcb19L]1FP&;:?]LT;fGQ_?Gf9@
B5I&XW8aE2K-g:@@ME9[+4eM1/W/S1I.LIN:&@dT@f(A/&\d-YF#(B[QOL?_Ee)H
Z#?IV-F6([H:W+JL;I(#X]BRRf=P;f]A=fM9NIC49<,F,L.RA36e.TU15=2^Ve1b
W&5.COV_H?1bREX@25f4.;)KE:C\2\8]=8gG53/[Q&P->5C0KC[NOAO3;CPSYBaO
\G0FE@g6b_,XgX5W7P-5c<YdUM;5XE#S@@&0g[<I_Q\fdc4)&dege^0Z)1D3ENDK
#Xe;R^VTH+&=0RTLM^[<Dbg_E1B[J\PAeF;>73QL3;<#6GAE^+F2=LbT@TYVQ>H6
Uc#NH+\TbZUSYf2d(>5a5YgR\O+Z0eM.E^099.<QNX3dAH6X01TBKV6E@0Z[@aTU
b_:-9-5FCdGZK=Y5AO/^2<>FP6EaM(6[eN\.@f#6Xa+30<M&+D99V>B<]NZ,4US?
8b?0gAP;IFAKLNe.fRFWC9R@NP^3NZ_XS@M#_/]:d1T4LCR)E=[N:ae.Y=MdBF=9
9aKg^+-(O<P7B>L@ESL@._0f7fZ@aZ1+/G:b@&@ET/2aYf/=IfNRVd)[9\4Z;1YN
[dDG>C2gQYGaNRf[CO)93eCW@,gJY:09609_YWa6(C<+]G/I-X^I,:=GFOXAV4S;
Y[6gJ+SPg:Q)>Q[RLfg,-4gLQQN./WJGRM+VZ_W@Z\[/F3&YUK;V_0Y0X@2a\2WP
^AFe8eM68a5cK2&,#[P]MP)X\2T@?-MVd7d<2,dd9[Z0c_J0^5U9eO^WOfA.;;75
Ve7cQM5HOBXVdW).-3O0[Ug)9UX;Yg2SKB(e>:e:H@H>HC=L3LXV(7<X1d7I5_8&
>)UQ-c^eFOL=g&SU7SV-L_:Md8YZ(_H3).4N51=H/U-.5fK(R?ceK;]VB#0aEY^4
2=;MT>C2N@UAaSSTKL0b1ZUE88K[0+YT6P+PT?2@K)dQRHAT-_O.C2?BXHgO@YZH
GNHYeNO6HFV<K2[+Y0OZ=\2SO_VX3dIYcOXN1P0(\-OY+_&OH&fOY[BJ<\f-8^6)
7Jf?gZF?HB-B:X[FY8QSG2b#CB/8K:X\PV1/R@8(Gdb,+ZIfZVODD,2bg61)4(#]
-S59V,YXRWV18Z9)(-5DW@JC)DIN?HPeG_M^D96W.aTUM^1/7X/_G#Z)[2EJK7R8
<BMEH+&NO6T)<7e@R8H>bO[4?54WfM-:af,[(CeR].ZD\-MZ_#Q?d2:Y4@MadWcK
3;Z3)gD86C00]0MUD52Qg8+EDHbDEX0BXK;+1+^U+:R<,e@2Q&DF:f&D62NQ=<KB
6e/?Sd16>]R)^f25UB\/KPC#F2QdNDfIQf(bZKBH4f8=Cgd0dS.NC4?d-+?N8F/:
2?E?_)e=.Y@c50?3?aLKL(&)M2KM/XJG=;gPO<-(YYf_NOU(63GK_CBD_.I_R)gU
[V3GH1N3/DWY&Q7\\CGHPd2Q>.5#5;)F.QL\YG:VC\3&34C--FcDb+MT?(YHVbB3
GHN+L^<M,;0#gLcI#-V\/?KHc\EY2GWP0M8-I,0F3D8.0Y\gCWB0TQS-@22.>cU[
aUX7J+Uae^WP_=4eI<GIC]Y1S.</&HZ<2dc9YO-1.BIY3>=c=N^5XTM_)<,C?AU7
^]Yb1,Q1H:GX\C6K#.e-CIW5V3--1(6N9aAGUWF7@YUDH\FV/>AGNAbR.<G/2[_-
f6M]_,34,CHJVU/;SB679EfAYSFXHABDOGN:TY-N67+>F_JKA4+b)])M+d>cI(-^
4_R(Z:@]DA)AO.I7\?U6AI\\HP8)fP-ASEEcaA,^=cf9YU\D:V:R<9]&DgMU?Z/c
IXb=AXL-_G<59]-A7+FU<UD8#G7g4+<@9.FCV\7XZ]G_@[4KO/HZZ]LK=EPZ[7A?
G2(/S)<]3eFe/GT3cMY?@N\UC-RRP3Mb78+C]8dc_=VTa1-4?TCV;4@1\d[,9YQ4
gfQe<;9OYEBYGYa;ZgF3XfZ/24OB8++VNY@X_/@(d?dTQEU4<V265\.:N4/g)Ubb
bRV3;fY:E:^SC&&UgO1#RD4RCV_<@\LaW<REYAY6PcB::a_8dNOP0eBab2CIBEJ3
JeQY-&\M9S<(gd9T<cfRLK642f76BMFTBL.^OE&D&(g\H(FX+P[,V7aNT7Id8=<Q
_1-I-NGBDH?6+FQJ5E9TQAJ#WbGPPF8(EO1TWdU.YT[b\C4F5S\fI,&N&VGA5442
:A<5a#S]\2fHH::(=?GKNOB?,0IH_EC?890R&[499W,RL)TZ)d>V9RLV(HV3&C#M
BMQb9WAT]#CYA_+TE(:7JYDAN)^?#IC9M?#bF+P[B91H5EPf0-D[.PUJ7I_VX?Y7
QE3;8+ef<FV5^^X7\4EXR,7?(6P4X24_c#a4+UFF[]))[b20<-L/7QVAbB2#LO:(
NRA_=Pd<&C6RXK5./,JSc-Q,cGU69W:\_H0Ke_cZQ1a:Eg,/2-)\<+HYW2]]EO)Y
2P\>K=UXdB=UG.F8\-Y4R9NZBG[_-e3cOF)N7;b@,,4Gd_CPF\\+),gD;>[87;ac
fNP76bVb,2POOB5a37(_d2<YS9Q#QN7-=E63@;Y&2&UF8E,:=)JY8EZ>IYfL?IQ8
W2KDU/Bb8SaU#:<\Bf(\@d(Yc2(9cY:9+1I<5--,85,Oa,f2U::_F^J^L?=:W\6#
59FLHHCcVRRN_-,fQ8ZK7]4]QfMS[.N:P&VQ@69H+Ud=:+bQDfMcgM-=-eW_D#&.
24/RX)bO(N8&e/=OIf@6V<L<QLbS1QA8LS<QWI?S&2I;;6\0f,8J[U0M/D(S/M=d
.49Dg7>bI>U]ZT]LU/);@VC&b,.:3CBSC;R&(8)Oe2^ecdBScQ318\0,(Y9=75Pg
33QG--K5;EZN8/d-WbXJYLJ76&24[,[\b3PQ2O,.bPV\VJ&U?OV?D+f;,[#e8Bb,
>]C95Q]@UXY64^0)aQ=/J2bacJfEKHfBZWRK\f,f@FO[NGd29J/R6<f=&d1<&X5<
-V_cN13eWAPG3D#U?3</_.P?>6WZ:2^e1I)A-&7^XS4KI.7(JYMbI5X<9.80bUBF
fbM:6>G@fZH73:cdO)8#MW[\J-a,=M+NRKMPUMUcK^B/?L5SEJWMBL>GN^aaJM[^
I9;98YFVOgC/RU/G49gOIO:]8?bZ=+?JW&=7d^MSeP#S8H(=),I4f35aWV3294f<
F+EXGZ_CKg\>WXR,5UCRRZUXBSN@JK+_/gCV]5^e#\-V]LdM>:2b>UKeZEg]=]OU
4:/Z&R37d0)Qd3f,(M@K/dD;1bUQN:M>X=[2+QZM,N6KV/d^e/<VI=Lg278PE;9U
F_Wg8RLc\;@3W8QM0W,[@Z0PVE8XODBfS(NEG?eALXX_+<OLV/GAZ+E-OBeYF7(Z
SF,^RRD4F<P<TYTV/1OZ\5=/C^_-:RS/#-]OH8R@1Y0I=Ne,Qa5\)gOcFD(>NfG8
/f&G49I-X)>U[bAJaGVLfG,4SW^\d^.@]A]@+.)>#IUN-gBS9DA>@RLKVde:a&S2
C&8=g:]WJER1UF0^T5LB<X@dCU<6^AV(AZHX5A-+gBG7&,:5>eE]eecXT2-BY<>8
8GA<Z<Z0#)LIO0V3)cE]C^dJW63O_g@N/L?>f1=BJAT8MHLF+(?L<fcO<;>,Ka7K
VWG8#<G;<:g\Z=:L=@T=?ZDDSK(c430BIC6(51B86+W27P(XEg_^e/L(g73/M]&(
FD.PB:-V>R>?F/+.5^_P5YbQV[ZC/A-RYUF[2]I3BN^2eWY2::,655E]?PL3;V&.
46G/192+GO5Q.Y_8<_D[U?8L442I1C\^a3_WSeG?)C56gSF?aPP4DEVU5=K1S+>5
L[XL:3LGB>K8C#7CC;UX4e@/+Wad,U]&^?F4QY6de/@J^<._RJRdb@?;SdSO2,P(
7<J9e]81C/EWQcV+7D^XK>c]&d8aTF.N6&T&[^d.&Y#c-TGJWeU<50)L=CH/NDBQ
2gD//N(@^W.7<A27AO=N>O_L+]IR\]R6A,5LF,1JY_(8Pf2YMBC+e?)C/SE_S;NN
<a[+BfOe)6+/#_N)\8]9:O;B\GZ1.M9FAe(Y/]F=-7K.d[<D56T9JTK4[V6Wb>&,
Sc_#F5e^@d+Ag21@,-HaWJ5=Z(-WR>a;_fFd7Fc#L)]C]?V/@#-O>/5Kd6)g\W>L
GgaE8b>><>PA5DEZ21gMd0;E2=X3Rgf\B+QA/a7/W+/e9;(N[)YCH.f_9X=(L.E/
XKD]KdG.b,#,CY/@E2,?K?-bZ-E#GIIL?2a7,VT1F5#I:ICC>I9C.2PXIR@HRbB#
?LY-IO9RP=R?&KZ_HHS)e#NRC+=TR=;.\M(]]<DJ.O-),;21S&IEc6(=S\f9JSU-
;Ec.8[+R^[COK:B_TgJC;V<T_C>ge.8E\ZZ,<FVdLPP2>fN/?W]3N\&8HOTWPJ95
?/3UEd.FT<#2E;@MZ3M,O4;#UM^(AQOK8J91/34[&cU.bA^AcE\eK]c0;ccE6U4/
=+-T_CD;BAa22gfUa^]H134?_A?+<<JX]AT2RJIegN43Q@e&2PEQ0ET]OT#g>1(Q
HX86/DYC2[-e1K5f2N;8WL9ABJX,eKR[6bU8HVB7^.b2CZ.?D3b.T3Y+LRFBE35,
UY36@/N:.[3O2W-2X^EPac<dZX,f=K^OY:SK658UIK73[:+5=?,-4@IX<\Pa0;Jb
W4Y>=IU8:/^H^(-Z@\/<Q&JP=.C91[--KW_.?.(R9<Q3G$
`endprotected

`endif //  `ifndef SVT_AMBA_EXCLUDE_CHI_NODE_PL_CHECK_COVERAGE

`endif //  `ifndef SVT_VMM_TECHNOLOGY



// =============================================================================
/**
 * Derived sampling and checking class used by CHI Protocol components to 
 * register layer wide checks.
 */
class svt_chi_protocol_err_check extends svt_err_check;

  /**
    @grouphdr chi_protocol_err_valid_data_flit_check Valid DAT flit checks
    This group contains checks for Data flits.
    */

  /**
    @grouphdr chi_protocol_err_ordering_check Request ordering checks
    This group contains ordering related checks.
    */

  /**
    @grouphdr chi_protocol_err_valid_response_flit_check Valid RSP flit checks
    This group contains checks for Response flits.
    */

  /**
    @grouphdr chi_protocol_err_valid_request_flit_check Valid REQ flit checks
    This group contains checks for Request flits.
    */

  /**
    @grouphdr chi_protocol_err_response_ordering_check Response sequencing checks 
    This group contains checks related to the ordering of response flits.
    */

  /**
    @grouphdr chi_protocol_err_response_flit_to_xact_association_check RSP flit to transaction association checks
    This group contains checks related to the association of Response flits to coherent transactions.
    */

  /**
    @grouphdr chi_protocol_err_data_flit_to_xact_association_check DAT flit to transaction association checks
    This group contains checks related to the association of Data flits to coherent transactions.
    */

  /**
    @grouphdr chi_protocol_err_retry_check Retry related checks
    This group contains retry related checks.
    */

  /**
    @grouphdr chi_protocol_err_dvmop_check DVMOp related checks
    This group contains DVMOp related checks.
    */

  /**
    @grouphdr chi_protocol_err_valid_snoop_req_check SNP REQ flit checks
    This group contains checks for Snoop Request flits.
    */

  /**
    @grouphdr chi_protocol_err_valid_resperr_check RespErr field checks
    This group contains checks for the RespErr field.
    */

  /**
    @grouphdr chi_protocol_err_valid_data_source_checks data_source field checks
    This group contains checks for the data_source field.
    */

  /**
    @grouphdr chi_protocol_err_valid_cache_state_in_resp_check Resp cache state checks
    This group contains checks the validity of the cache state in the Resp field.
    */

  /**
    @grouphdr chi_protocol_err_valid_sactive_check SACTIVE signal validity checks
    This group contains checks for SACTIVE signal.
    */

  /**
    @grouphdr chi_protocol_err_perf_cst_check Built-in perf monitor checks
    This group contains checks for performance metrics constraints violations.
    */
  
  /**
    @grouphdr chi_protocol_transaction_inactivity_check transaction timeout related checks
    This group contains checks for transaction inactivity timeout.
    */
  
  /**
    @grouphdr chi_protocol_exclusive_access_check Exclusive access related checks
    This group contains checks for Exclusive Access.
    */
  
  /**
    @grouphdr chi_protocol_dmt_check DMT related checks
    This group contains checks for DMT feature.
    */
  
  /**
    @grouphdr chi_protocol_dwt_check DWT related checks
    This group contains checks for DWT feature.
    */
  
  /**
    @grouphdr chi_protocol_trace_tag_check trace_tag related checks
    This group contains checks for trace_tag feature.
    */
  
  /**
    @grouphdr chi_protocol_sysco_interface_check sysco interface related checks
    This group contains checks for sysco interface feature.
    */
  
  /**
    @grouphdr chi_custom_check custom related checks
    This group contains custom checks.
    */
  
  /** @cond PRIVATE */
  // ****************************************************************************
  // Local Data
  // ****************************************************************************

  /**
   * The group name of the checks defined in this class.
   */
  local string group_name = "protocol";

  /**
   * The sub-group name of the <specify sub-group purpose> checks defined in this class.
   */
  local string sub_group_name = "";

  /**
   * Controls whether checks are enabled by default
   */
  local bit enable_default_chks;

  local svt_chi_node_configuration node_cfg;

  /** Enables protocol check coverage provided it pl_protocol_checks_coverage_enable is set
  * in the node configuration as well. If enable_pc_cov is 0, then protocol checks coverage
  * will not be enabled, even if it is set in configuration
  */
  local bit enable_pc_cov = 1;

  /** @endcond */
  
  // ****************************************************************************
  // Public Data Properties
  // ****************************************************************************

//  /**
//   * Check: <Description of failure situation>
//   */
//  svt_err_check_stats <check_name>_check;
`ifndef __SVDOC__
  /** @cond DEPRECATED_CHECK */
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * This check is deprecated. Please refer to the documentation of the checks 
   * svt_chi_protocol_err_check::tx_dat_flit_data_id_check and
   * svt_chi_protocol_err_check::rx_dat_flit_data_id_check.
   * Check the DataId field value related to data size and the width of the 
   * of DAT Flit.
   * ARM-IHI0050A: 11.9.23
   */
  svt_err_check_stats dat_flit_data_id_check;
  /** @endcond */
`endif //  `ifndef __SVDOC__
  
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check the DataId field value of transmitted DAT flits from the monitored DUT. <br>
   * This is determined based on data width of DAT VC along with data size of the 
   * corresponding transaction. <br>
   * Note that this check, in case CCF Wrap Order is set to True at the sender, checks that the first data flit transmitted corresponds to the critical chunk indicated by CCID (,ie, the data_id of the first data flit matches the CCID value). 
   * For the subsequent flits, the check ensures that the data_id values are set correctly. <br>
   * In case CCF Wrap Order is set to False at the sender, this check only verifies that the data_id takes one of the legal values prescribed in Table 11-29 (ARM-IHI0050A) and Table 12-41(ARM IHI 0050B-ID080717). <br>
   * Following are the Tx DAT flit types considered by this check. <br>. 
   * If the monitored DUT is RN: <br>
   * - CopyBackWrData
   * - NonCopyBackWrData
   * - SnpRespData
   * - SnpRespDataPtl
   * .
   * If the monitored DUT is SN: <br>
   * - CompData
   * . 
   * @end_check_description
   *
   * @check_pass
   * DataID value in the data flit transmitted by the active RN/SN agent is as per Table 11-29 (ARM-IHI0050A) and Table 12-41 (ARM IHI 0050B-ID080717).
   * @end_check_pass
   *
   * @check_fail
   * DataID value in the data flit transmitted by the active RN/SN agent violates the legal values specified in Table 11-29 (ARM-IHI0050A) and Table 12-41 (ARM IHI 0050B-ID080717).
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN and Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats tx_dat_flit_data_id_check;


  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check the DataId field value of received DAT flits by the monitored DUT. <br>
   * This is determined based on data width of DAT VC along with data size of the 
   * corresponding transaction. <br>
   * Note that this check, in case of in-order Interconnect, checks that the first data flit transmitted corresponds to the critical chunk indicated by CCID (,ie, the data_id of the first data flit matches the CCID value). 
   * For the subsequent flits, the check ensures that the data_id values are set correctly. <br>
   * Incase of out-of-order interconnect, this check only verifies that the Data_ID takes one of the legal values prescribed in Table 11-29 (ARM-IHI0050A) and Table 12-41(ARM IHI 0050B-ID080717). <br>
   * Following are the Rx DAT flit types considered by this check. <br>. 
   * If the monitored DUT is RN: <br>
   * - CompData
   * .
   * If the monitored DUT is SN: <br>
   * - NonCopyBackWrData
   * . 
   * @end_check_description
   *
   * @check_pass
   * DataID value in the data flit received by the RN/SN agent is as per Table 11-29 (ARM-IHI0050A) and Table 12-41(ARM IHI 0050B-ID080717).
   * @end_check_pass
   *
   * @check_fail
   * DataID value in the data flit received by the RN/SN agent violates the legal values specified in Table 11-29 (ARM-IHI0050A) and Table 12-41 (ARM IHI 0050B-ID080717).
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats rx_dat_flit_data_id_check;
  
  /**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that single ordered stream of requests from RN are ordered as per Request Ordering rules. <br>
   * Request Ordering Rules update from CHI Issue D onwards:
   * - In CHI Issue C or earlier, the Endpoint ordering guarantees the order of multiple transactions, from the same agent, to the same endpoint address range and includes the guarantee of Request Order. 
   * - In CHI Issue D or later, there will be no ordering guarantees between two ordered transactions from the same source that have different ordering requirements. In other words, Endpoint ordering guarantees the order of multiple transactions, from the same agent, to the same endpoint address range, but doesn’t include the guarantee of Request Order.
   * .
   * @end_check_description
   *
   * @check_pass
   * In CHI Issue C or earlier:   
   * - When a new Ordered transaction is observed and there are either no preceding Ordered transactions or there are preceding Ordered transactions whose ordering conditions are already met.
   * .
   * In CHI Issue D or later:
   * - When a new Request_Ordered transaction is observed and there are either no preceding Request_Ordered transactions or there are preceding Request_Ordered transactions whose ordering conditions are already met.
   * - When a new Endpoint_Ordered transaction is observed and there are either no preceding Endpoint_Ordered transactions or there are preceding Endpoint_Ordered transactions whose ordering conditions are already met.
   * .
   * @end_check_pass
   *
   * @check_fail
   * In CHI Issue C or earlier:   
   * - When a new Ordered transaction is observed and there are preceding Ordered transactions whose ordering requirements are not yet met.
   * .
   * In CHI Issue D or later:
   * - When a new Request_Ordered transaction is observed and there are preceding Request_Ordered transactions whose ordering requirements are not yet met.
   * - When a new Endpoint_Ordered transaction is observed and there are preceding Endpoint_Ordered transactions whose ordering requirements are not yet met.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * - svt_chi_node_configuration::num_req_order_streams should reflect the number
   *   of request order streams that the RN has. 
   * - The passive RN agent performs this check only when the number of request
   *   order streams is one, ie, svt_chi_node_configuration::num_req_order_streams is set to 1. 
   *   This is because the stream ID to which a given transaction
   *   belongs is not transmitted on the interface. So it is important to make 
   *   sure that the passive RN agent is configured appropriately for this.
   * - The passive RN agent can track the transactions those have the ReqOrder
   *   information transmitted on the interface, that is available through
   *   svt_chi_base_transaction::order_type. Note that the CopyBack type transactions 
   *   do not transmit the ReqOrder information on the interface through REQ VC Flit.
   * .
   * @end_check_additional_information
   */
  svt_err_check_stats single_req_order_stream_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the DBID field value of the following RSP flits is as follows. <br>
   * This check is applicable only when svt_chi_system_configuration::chi_version is 
   * set to svt_chi_system_configuration::VERSION_3_0. <br>
   * RSP flits: <br>
   * - SnpResp, RetryAck, ReadReceipt: In case of CHI v3.0 DBID field must be set to either zeroes or
   *   TxnID of originating request if applicable. For SnpResp, originating request
   *   is the Snoop request.
   * - Comp/DBID/CompDBIDResp: DBID field must be unique for a given transaction and can be reused only after the transaction completes
   * .
   * In case of WriteNoSnpZero and WriteUniqueZero transactions dbid field in Comp/DBID/COMPSBISREesp is inapplicable and can take any value.
   * @end_check_description
   *
   * @check_pass
   * For Dataless transactions with ExpCompAck asserted, the DBID field in the Comp response is unique and there are no other outstanding non-DMT and non-DCT transactions that have received the same DBID value. <br>
   * For Read transactions with ExpCompAck asserted, the DBID field in the RespSepData response is unique and there are no other outstanding non-DMT and non-DCT transactions that have received the same DBID value. <br>
   * For Write transactions(except WriteNoSnpZero and WriteUniqueZero), the DBID field in Comp (for Issue B or lower revisions) or DBIDResp or CompDBIDResp is unique and there are no other outstanding non-DMT and non-DCT transactions that have received the same DBID value.
   * @end_check_pass
   *
   * @check_fail
   * For Dataless transactions with ExpCompAck asserted, the DBID field in the Comp response is not unique; there is already an outstanding non-DMT and non-DCT transaction with the same DBID value. <br>
   * For Read transactions with ExpCompAck asserted, the DBID field in the RespSepData response is not unique; there is already an outstanding non-DMT and non-DCT transaction with the same DBID value. <br>
   * For Write transactions(except WriteNoSnpZero and WriteUniqueZero), the DBID field in Comp (for Issue B or lower revisions) DBIDResp or CompDBIDResp is not unique; there is already an outstanding non-DMT and non-DCT transaction with the same DBID value. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats rsp_flit_dbid_check;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the DBID field value of the following DAT flits is as follows. <br>
   * DAT flits: <br>
   * - SnpRespData, SnpRespDataPtl, NonCopyBackWrData, CopyBackWrData: In case of CHI-A nodes, DBID field
   *   must be zeroes or must be set to TxnID of originating request. For SnpRespData*, 
   *   originating request is the Snoop request.
   * - CompData: DBID field must be unique for a given non-DMT and non-DCT Read transaction with ExpCompAck asserted
   *   and can be reused only after the transaction completes.
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * For Write/Snoop transactions, the DBID of the observed Data flit is either zero or equal to the TxnID of the associated transaction. <br>
   * SCENARIO 2: <br>
   * For Read transactions with ExpCompAck asserted, the DBID of the observed Data flits is unique and there are no other
   * Outstanding non-DMT and non-DCT transactions that have received read data with the same DBID value. <br>
   * @end_check_pass
   *
   * @check_fail
   * In case of Write/Snoop transactions, the DBID of the observed Data flit is neither zero or equal to the TxnID of the associated transaction. <br>
   * In case of non-DMT and non-DCT Read transactions with ExpCompAck asserted, the DBID of the observed Data flits is not unique; there already is an
   * outstanding non-DMT and non-DCT transaction that has received read data with the same DBID value.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats dat_flit_dbid_check;  

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * - A Comp response sent separate from a DBIDResp or DBIDRespOrd response for a write transaction (except Atomic transactions) must include the same DBID field value in the Comp and DBIDResp or DBIDRespOrd message.
   * - Applicable only in case of non-copyback Write transactions and non-copyback Combined Write plus CMO transactions as the copyback transactions always include a combined CompDBIDResp response. Applicable only if the Direct Write Data transfer is not exercised for the Write transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A same DBID field value is observed in Comp and DBIDResp or DBIDRespOrd reponses for a non-copyback Write transaction or non-copyback Combined Write plus CMO transaction with separate comp and DBIDResp or DBIDRespOrd reponses.
   * @end_check_pass
   *
   * @check_fail
   * A different DBID field value is observed in Comp and DBIDResp or DBIDRespOrd reponses for a non-copyback Write transaction or non-copyback Combined Write plus CMO transaction with separate comp and DBIDResp or DBIDRespOrd reponses.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats separate_dbidresp_and_comp_must_include_same_dbid_value_check;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * For a Read transaction, if the DBID is valid then the DBID field must take same value in all the corresponding read data flits. DBID is valid if ExpCompAck is set to 1 for the corresponding Read transaction.
   * @end_check_description
   * 
   * @check_pass
   * A same DBID field value is observed in all the read data flits (CompData or DataSepResp) corresponding to a Read request with ExpCompAck set to 1.
   * @end_check_pass
   *
   * @check_fail
   * A difference in DBID field value is observed across the read data flits (CompData or DataSepResp) corresponding to a Read request with ExpCompAck set to 1. 
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats dbid_value_must_be_same_across_read_data_flits_check;

  /**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that the Ordering field of the transaction corresponding to the readreceipt is set. <br>
   * @end_check_description
   *
   * @check_pass
   * A ReadReceipt response is received for an Ordered Read transaction.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A ReadReceipt is received for a Read transaction whose request order field was set to "NO ORDERING REQUIRED". <br>
   * SCENARIO 2: <br>
   * A ReadReceipt is received, at a CHI Issue C RN, for an Ordered Read transaction which has already received RESPSEPDATA. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * If the request Order field indicates that ordering is required then
   * a ReadReceipt response must be returned on the CRSP channel when order has been established.
   * @end_check_additional_information
   * 
   */
  svt_err_check_stats associate_readreceipt_to_xact_check;

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the CCID field value in the data flit is set correctly. <br>
   * - CCID of all the data packets belonging to a transaction must be the same and equal to addr[5:4] of the corresponding Request.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The CCID field in the Data flit does not match with addr[5:4] of the corresponding transaction.
   * @end_check_pass
   *
   * @check_fail
   * The CCID field in the Data flit are equal to addr[5:4] of the corresponding transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_ccid_in_dat_flit_check;
  
/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - Data flit type must be set to one of the permitted values for the Snoop Request
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * A SnpRespData or SnpRespDataPtl response is observed for a non-forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * A SnpRespDataFwded, CompData or SnpRespDataPtl response is observed for a forward type Snoop request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A data response other than SnpRespData and SnpRespDataPtl is observed for a non-forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * A data response other than SnpRespDataFwded, CompData and SnpRespDataPtl is observed for a forward type Snoop request. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_dat_flit_type_for_snp_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - NONCOPYBACKWRDATA is valid only in case of WriteNoSnoop, WriteUnique and DVMOp type transactions
   * .
   * @end_check_description
   * 
   * @check_pass
   * A NonCopyBackWrData flit is received for a WriteNoSnoop, WriteUnique or DVMOp type transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CopyBackWrData flit is received for a transaction type other than WriteNoSnoop, WriteUnique and DVMOp.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_noncbwrdata_flit_for_xact_check;

  `ifdef SVT_CHI_ISSUE_C_ENABLE
    /**
     * @groupname chi_protocol_err_valid_response_flit_check
     * @check_description
     * Check that RespSepData response is seen only for Read transactions with:
     * - exclusive bit de-asserted.
     * - order field de-asserted or order field asserted along with ExpCompAck.
     * .
     * Also, if order field is asserted in the request, there should be no READRECEIPT response in case RespSepData flow is seen.
     * @end_check_description
     *
     * @check_pass
     * SCENARIO 1: <br>
     * A RespSepData is received for an unordered, non-exclusive Read transaction. <br>
     * SCENARIO 2: <br>
     * A RespSepData is received for an ordered Read transaction with ExpCompAck asserted and the Read has not received READRECEIPT response. <br>
     * SCENARIO 3: <br>
     * A RespSepData is received for the HN with sep read and sep resp enabled.
     * @end_check_pass
     *
     * @check_fail
     * SCENARIO 1: <br>
     * A RespSepData is received for an Exclusive Read other than ReadPreferUnique and MakeReadUnique transaction. <br>
     * SCENARIO 2: <br>
     * A RespSepData is received for an ordered Read transaction with ExpCompAck de-asserted. <br>
     * SCENARIO 3: <br>
     * A RespSepData is received for an ordered Read transaction which has already received READRECEIPT. <br>
     * SCENARIO 4: <br>
     * A RespSepData is received for the HN with sep read and sep resp disabled.
     * @end_check_fail
     *
     * @applicable_device_type
     * RN
     * @end_applicable_device_type
     * 
     * @check_additional_information
     * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
     * and if any of the HNs uses RespSepData DataSepResp Flow 
     * @end_check_additional_information
     * 
     */
    svt_err_check_stats associate_respsepdata_to_xact_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C, check that NCBWRDATACOMPACK flits are seen only for WriteUnique* transactions with ExpCompAck asserted. <br>
    * When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later, check that NCBWRDATACOMPACK flits are seen only for WriteUnique* or  WriteNoSnp* transactions with ExpCompAck asserted. <br>
    * @end_check_description
    * 
    * @check_pass
    * Check is passed for one of the below scenraios:
    * - A NCBWRDATACOMPACK flit is seen for a WriteUnique* transaction with ExpCompAck asserted.
    * - A NCBWRDATACOMPACK flit is seen for a WriteNoSnp* transacion with ExpCompAck asserted when svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later.
    * .
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique* transaction with ExpCompAck de-asserted. <br>
    * SCENARIO 2: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteNoSnp* transaction with any of the following attribute settings:
    * - ExpCompAck de-asserted
    * - svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or earlier
    * .
    * SCENARIO 3:
    * - When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or earlier, NCBWRDATACOMPACK flit is seen for a transaction other than WriteUnique* .
    * - When svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later, NCBWRDATACOMPACK flit is seen for a transaction other than WriteUnique* or WriteNoSnp*.
    * .
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later.
    * @end_check_additional_information
    */
   svt_err_check_stats valid_ncbwrdatacompack_flit_for_xact_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * Check that NCBWRDATACOMPACK flits are seen for WriteUnique transactions only after the reception of both Comp and DBIDResp, or, CompDBIDResp response. <br>
    * Additionally checks that, in case separate Comp and DBID responses were observed, NCBWRDATACOMPACK flits are seen only if the Comp response was received first followed by the DBIDResp Response.
    * @end_check_description
    * 
    * @check_pass
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique transaction after the reception of both Comp and DBIDResp, or, CompDBIDResp response.
    * In case separate Comp and DBID responses were observed, the Comp response was received first followed by the DBIDResp Response.
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique transaction before the corresponding Comp and DBIDResp, or, CompDBIDResp is received. <br>
    * SCENARIO 2: <br>
    * A NCBWRDATACOMPACK flit is seen for a WriteUnique transaction which received a DBIDResp before Comp response. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C.
    * This check won't be constructed and executed for svt_chi_node_configuration::chi_spec_revision set to ISSUE_D or later as the rule related to this check is relaxed.
    * @end_check_additional_information
    */
   svt_err_check_stats ncbwrdatacompack_after_comp_and_dbid_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * Check that the NCBWRDATACOMPACK response for an Ordered Write Observation Write* transaction is seen after all earlier OWO Write* transactions which are required to be ordered with respect to the current OWO Write* transaction received Comp responses. 
    * @end_check_description
    * 
    * @check_pass
    * A NCBWRDATACOMPACK flit is seen for a OWO Write* transaction after all earlier OWO Write* transactions which are required to be ordered with respect to the current OWO Write* transaction received Comp responses.
    * @end_check_pass
    *
    * @check_fail
    * A NCBWRDATACOMPACK flit is seen for a OWO Write* transaction before all earlier OWO Write* transactions which are required to be ordered with respect to the current OWO Write* transaction received Comp responses.
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later and svt_chi_node_configuration::num_req_order_streams is set to 1. <br>
    * This check is performed on OWO WriteUnique transactions when svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later whereas for
    * OWO WriteNoSnp transactions when svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later.
    * NOTE: OWO Write* transactions includes Combined Write and (P)CMO transactions as well.
    * @end_check_additional_information
    */
   svt_err_check_stats ncbwrdatacompack_flit_timing_check;
   
   /**
    * @groupname chi_protocol_err_valid_response_flit_check
    * @check_description
    * Snoop response, SnpResp, SnpRespFwded, SnpRespData or SnpRespDataFwded, must wait for receiving of all read data packets, CompData.
    * @end_check_description
    * 
    * @check_pass
    * Snoop response is seen while there are no outstanding reads to the same cacheline that have received at least one data flit but waiting to receive the remaining data flits.
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * Snoop response with data, SnpRespData or SnpRespDataFwded, is seen before an outstanding Read transaction to the same cacheline has received of all read data packets, CompData or DataSepResp. <br>
    * SCENARIO 2: <br>
    * Snoop response, SnpResp or SnpRespFwded, is seen before an outstanding Read transaction to the same cacheline has received of all read data packets, CompData or DataSepResp. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN-F
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later.
    * @end_check_additional_information
    */
   svt_err_check_stats valid_snp_response_check;
 
   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * Check that the DBID and HomeNID values in the DataSepResp flits match the DBID and SrcID values in the corresponding RespSepData. <br>
    * @end_check_description
    * 
    * @check_pass
    * SCENARIO 1: <br>
    * A DATASEPRESP flit is seen after the reception of the corresponding RESPSEPDATA, and, the DBID and HomeNID values in the DATASEPRESP match with the DBID and SrcID values in the RESPSEPDATA. <br>
    * SCENARIO 2: <br>
    * RESPSEPDATA flit is seen after the reception of one or more DATASEPRESP, and, the DBID and SrcID values in the RESPSEPDATA match with the DBID and HomeNID values in the DATASEPRESP. <br>
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * A DATASEPRESP flit is seen after the reception of the corresponding RESPSEPDATA, and, the DBID and HomeNID values in the DATASEPRESP don't match with the DBID and SrcID values in the RESPSEPDATA. <br>
    * SCENARIO 2: <br>
    * RESPSEPDATA flit is seen after the reception of one or more DATASEPRESP, and, the DBID and SrcID values in the RESPSEPDATA don't match with the DBID and HomeNID values in the DATASEPRESP. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
    * and if any of the HNs uses RespSepData DataSepResp Flow 
    * @end_check_additional_information
    */
    svt_err_check_stats matching_dbid_home_nid_in_respsepdata_datasepresp_check;

   /**
    * @groupname chi_protocol_err_valid_data_flit_check
    * @check_description
    * For a given RN transactions, if resp_err_status set to NON_DATA_ERROR in one of the responses RespSepData or DataSepResp then both the responses RespSepData and DataSepResp
    * must have the resp_err_status as NON_DATA_ERROR and must have been generated from the same HN. Which also means that there must not be a scenario Where one of the responses
    * RespSepData or DataSepResp having NON_DATA_ERROR.
    * @end_check_description
    * 
    * @check_pass
    * One of the responses RespSepData or DataSepResp having resp_err_status set to NON_DATA_ERROR:
    * - Both the responses RespSepData and DataSepResp must have the resp_err_status as NON_DATA_ERROR. 
    * - Both the responses RespSepData and DataSepResp must have been generated from the same HN.
    * .
    * @end_check_pass
    *
    * @check_fail
    * SCENARIO 1: <br>
    * DataSepResp flits are not marked with resp_err_status NON_DATA_ERROR when RespSepData flit includes resp_err_status NON_DATA_ERROR. <br>
    * SCENARIO 2: <br>
    * RespSepData flits are not marked with resp_err_status NON_DATA_ERROR when DataSepResp flit includes resp_err_status NON_DATA_ERROR. <br>
    * SCENARIO 3: <br>
    * RespSepData and associated DataSepResp flits are not generated from the same HN when both RespSepData and associated DataSepResp flits resp_err_status set to NON_DATA_ERROR. <br>
    * @end_check_fail
    *
    * @applicable_device_type
    * RN
    * @end_applicable_device_type
    *
    * @check_additional_information
    * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later.
    * and if any of the HNs uses RespSepData DataSepResp Flow 
    * @end_check_additional_information
    */
    svt_err_check_stats matching_resp_err_nderr_in_respsepdata_datasepresp_check;
  `endif

  `ifdef SVT_CHI_ISSUE_B_ENABLE
    /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that the data type of the flit matches the expected value. <br>
       * - WRITEDATACANCEL is valid only in case of WriteNoSnoop transactions with mem_attr other than DEVICE memory type  and WriteUniquePtl type transactions
       * .
       * @end_check_description
       * 
       * @check_pass
       * A WriteDataCancel flit is received for a WriteNoSnoop with mem_attr other than DEVICE memory type and WriteUniqueptl type transaction.
       * @end_check_pass
       *
       * @check_fail
       * A WriteDataCancel flit is not received for a transaction with mem_attr other than DEVICE memory type 
       * and WriteUniqueptl type transactions, when BE and data are set to zero.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN and SN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_writedatacancel_flit_for_xact_check;

      /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that in Write Data, a byte enable value of zero must set the associated data byte value to zero. <br>
       * @end_check_description
       * 
       * @check_pass
       * For a Write transaction, data byte lanes whose corresponding BE is de-asserted are zeroed out.
       * @end_check_pass
       *
       * @check_fail
       * For a Write transaction, data byte lanes whose corresponding BE is de-asserted take a non-zero value.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN and SN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_write_data_when_be_is_zero_check;

      /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that in Write Data with TagOp Update, a TU value of zero must set the associated Tag value to zero. <br>
       * @end_check_description
       * 
       * @check_pass
       * For a Write transaction with data_tag_op set to Update, Tag nibbles whose corresponding TU is de-asserted are zeroed out.
       * @end_check_pass
       *
       * @check_fail
       * For a Write transaction with data_tag_op set to Update, Tag nibbles whose corresponding TU is de-asserted take a non-zero value.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN and SN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_tag_when_tu_is_zero_in_tag_update_write_check;

      /**
       * @groupname chi_protocol_err_valid_data_flit_check
       * @check_description
       * Check that in Snoop Data, a byte enable value of zero must set the associated data byte value to zero. <br>
       * @end_check_description
       * 
       * @check_pass
       * For a Snoop transaction, data byte lanes whose corresponding BE is de-asserted are zeroed out.
       * @end_check_pass
       *
       * @check_fail
       * For a Snoop transaction, data byte lanes whose corresponding BE is de-asserted take a non-zero value.
       * @end_check_fail
       *
       * @applicable_device_type
       * Passive RN
       * @end_applicable_device_type
       *
       * @check_additional_information
       * @end_check_additional_information
       */
      svt_err_check_stats valid_snprespdata_when_be_is_zero_check;
  `endif

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - COPYBACKWRDATA is valid only in case of WriteBack, WriteClean and WriteEvict type transactions
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CopyBackWrData flit is received for a WriteBack, WriteClean or WriteEvict transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CopyBackWrData flit is received for a transaction type other than WriteBack, WriteClean and WriteEvict.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_cbwrdata_flit_for_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the data type of the flit matches the expected value. <br>
   * - COMPDATA is valid only in case of Read type transactions
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CompData flit is received for a Read transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CompData flit is received for a non-Read type transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_compdata_flit_for_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_request_flit_check
   * @check_description
   * Check that the Target ID field in the transaction request is set to the node ID of the HN as per the RN SAM. <br>
   * - When Target ID is not expected to be remapped at the Interconnect, RN must program the tgt_id of the request flit to the
   * correct value as per the SAM.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A request is received with the tgt_id set to the expected HN node ID.
   * @end_check_pass
   *
   * @check_fail
   * A request is received with the tgt_id set to a value other than the expected HN node ID.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN 
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when svt_chi_system_configuration::expect_target_id_remapping_by_interconnect is set to 0.
   * @end_check_additional_information
   */
  svt_err_check_stats expected_tgt_id_in_rn_xact_check;
  
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the Target ID is remapped correctly at the Interconnect. <br>
   * - When Target ID remapping is expected at the Interconnect, the Target ID field in the received
   * request must be remapped correctly as per the SAM.
   * - This check is performed when target ID is remapped by the Interconnect and the SAM is 
   * specified correctly in the system configuration.
   * .
   * @end_check_description
   * 
   * @check_pass
   * Remapped Target ID received in the response from the Interconnect matches the HN node ID as per the SAM.
   * @end_check_pass
   *
   * @check_fail
   * Remapped Target ID received in the response from the Interconnect does not match the HN node ID as per the SAM.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when svt_chi_system_configuration::expect_target_id_remapping_by_interconnect and 
   * svt_chi_system_configuration::rn_sam_specified_with_exp_tgt_id_remap_at_icn_enabled are set to 1.
   * @end_check_additional_information
   */
  svt_err_check_stats expected_remapped_tgt_id_in_response_check;
  
/**
   * @groupname chi_protocol_err_valid_request_flit_check
   * @check_description
   * Check that there are no multiple outstanding transactions from the same source with the same transaction IDs. <br>
   * - The TxnID must be unique for a given Requester. The Requester can reuse the ID only after
   *   it has received all responses associated with a previous transaction that has used the same TxnID
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * A request is received at an RN, and there are no outstanding transactions with the same TxnID. <br>
   * SCENARIO 2: <br>
   * A request is received at an SN, and there are no outstanding non-DMT transactions with the same TxnID. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A request is received at an RN, but there already is an outstanding request with the same TxnID. <br>
   * SCENARIO 2: <br>
   * A request is received at an SN, but there already is an outstanding non-DMT request with the same TxnID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats single_outstanding_req_per_txn_id_check;
   
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TransactionID, TargetID and SourceID fields are set correctly in the CompAck response. <br>
   * - The TgtID and SrcID must be set to the the SrcID and TgtID of the read data respectively. 
   *   The TxnID is set to the same value as the DBID value provided in the read data response.
   * .
   * @end_check_description
   *
   * @check_pass
   * A CompAck response is received and there's an outstanding transaction with ExpCompAck asserted, whose Source ID, Target ID and DBID
   * match with the TargetID, Source ID and TxnID of the CompAck respectively.
   * @end_check_pass
   *
   * @check_fail
   * A CompAck response is received when there are no outstanding transactions with expcompack asserted, whose Source ID, Target ID and DBID
   * match with the TargetID, Source ID and TxnID of the CompAck respectively.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_compack_rsp_flit_check;
   
/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response is sent only afer Comp/CompData response. <br>
   * - CompAck, if part of the transaction, must be observed only after Comp or all CompData responses are received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * A CompAck response is received for a transaction with ExpCompAck set and whose data phase is complete. <br>
   * For OWO Write transactions(svt_chi_transaction::exp_comp_ack set to 1 and svt_chi_transaction::order_type set to REQ_ORDERING_REQUIRED),:
   * -  When svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Compack must be send out after reception of Comp response.
   * -  When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, Compack must be send out after reception of one of the response Comp or DBIDResp or CompDBIDResp.
   * .
   * In case of WriteEvictorEvict transaction, the check will pass when CompAck response is received after the reception of Comp response (When req_status will be set to ACCEPT).
   * @end_check_pass
   *
   * @check_fail
   * A CompAck response is received for a transaction with ExpCompAck set but whose data phase is not yet complete. <br>
   * For OWO Write transactions(svt_chi_transaction::exp_comp_ack set to 1 and svt_chi_transaction::order_type set to REQ_ORDERING_REQUIRED),:
   * -  When svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Compack send out before reception of Comp response.
   * -  When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, Compack received before reception of one of the responses Comp or DBIDResp or CompDBIDResp.
   * .
   * In case of WriteEvictorEvict transaction, the check will fail when CompAck response is received before the reception of any response (When req_status other than ACCEPT) from the Completer.
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * The data phase status can be known by looking at the data_status field in the transaction handle:
   * - data_status == INITIAL implies the data transfer hasn't yet begun for the transaction
   * - data_status == PARTIAL_ACCEPT implies the data transfer for the transaction is in progress
   * - data_status == ACCEPT implies the data transfer is complete.
   * .
   * @end_check_additional_information 
   */
  svt_err_check_stats expected_compack_check;
   
/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the SnpDVMOpResp is observed only after both SnpDVMOp request packets. <br>
   * - An RN must provide a response to a SnpDVMOp transaction only after it has received both SnpDVMOp request packets corresponding to that transaction.
   *   The TgtID and SrcID must be set to the the SrcID and TgtID of the read data respectively. 
   * .
   * @end_check_description
   *
   * @check_pass
   * A SnpResp flit is observed for a SnpDVMOp transaction, after both parts of the SnpDVMOp request are received 
   * @end_check_pass
   *
   * @check_fail
   * A SnpResp flit is observed for a SnpDVMOp transaction, while only one part of the SnpDVMOp request is received
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_snprsp_for_snpdvmop_check;

 /**
   * @groupname cache_state
   * @check_description
   * Check if the RN has transitioned from UCE to UD/UDP state while there is an ongoing READSHARED, READNOTSHAREDDIRTY,READCLEAN,  READONCE, 
   * READONCECLEANINVALID,READONCEMAKEINVALID transactions. 
   * This check will flag an error in case the cache is updated via frontdoor or backdoor accesses to move from UCE to dirty state while there is an outstanding Read.
   * .
   * @end_check_description
   *
   * @check_pass
   * If the RN has not transitioned to UD/UDP state from UCE state for READSHARED, READNOTSHAREDDIRTY,READCLEAN,  READONCE, 
   * READONCECLEANINVALID,READONCEMAKEINVALID transactions.
   * @end_check_pass
   *
   * @check_fail
   * If the RN has transitioned to UD/UDP state from UCE state for READSHARED, READNOTSHAREDDIRTY,READCLEAN,  READONCE, 
   * READONCECLEANINVALID,READONCEMAKEINVALID transactions.
   * @end_check_fail
   *
   * @applicable_device_type
   * Active RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is constructed only when partial_cache states are enabled at RN (svt_chi_node_configuration partial_cache_line_states_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats cache_transitioned_to_dirty_from_uce_for_read; 

  `ifdef SVT_CHI_ISSUE_E_ENABLE
  /**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the Range, Num, Scale, TG and TTL fields are set to valid values in a TLB Invalidate Type DVMOp transaction. <br>
   * - Range bit can be set to 1 only in case of DVMOp TLBI requests that are invalidate by VA or PA.
   * - Num and Scale fields can be set to non-zero values only in case of Range based DVMOp TLBI requests.
   * - TG and TTL can be set to non-zero values only in case of TLBI requests that are invalidate by VA or PA. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG and TTL fields are all set to zero in a DVMOp TLBI transaction. <br>
   * SCENARIO 2: <br>
   * Range is set to 1, TG is set to one of the permitted values and VA[15:12] is zeroed out based on the TG value in a DVMOp TLBI request that is Invalidate by VA or PA. <br>
   * SCENARIO 3: <br>
   * Range, Num and Scale are set to 0, and TG and TTL take legal combinations in a DVMOp TLBI with Leaf Hint request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG or TTL is set to a non-zero value in a DVMOp TLBI request that is not invalidate by VA or PA. <br>
   * SCENARIO 2: <br>
   * TG is set to zero in a Range based DVMOp TLBI request. <br>
   * SCENARIO 3: <br>
   * TG is set to 2'b10 in a Range based DVMOp TLBI request but VA[13:12] is not set to 0. <br>
   * SCENARIO 4: <br>
   * TG is set to 2'b11 in a Range based DVMOp TLBI request but VA[15:12] is not set to 0. <br>
   * SCENARIO 5: <br>
   * Num or Scale is set to a non-zero value in a non-Range based DVMOp TLBI request. <br>
   * SCENARIO 6: <br>
   * TTL is set to a non-zero value when TGT is 0 in a DVMOp TLBI request with Leaf Hint. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or greater  
   * svt_chi_node_configuration::dvm_version_support is set to DVM_v8_4 or greater and
   * DVM support is enabled in the RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
    svt_err_check_stats valid_tlbi_fields_in_dvmop_check;

  /**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the Range, Num, Scale, TG and TTL fields are set to valid values in a TLB Invalidate Type SnpDVMOp transaction. <br>
   * - Range bit can be set to 1 only in case of SnpDVMOp TLBI requests that are invalidate by VA or PA.
   * - Num and Scale fields can be set to non-zero values only in case of Range based SnpDVMOp TLBI requests.
   * - TG and TTL can be set to non-zero values only in case of TLBI requests that are invalidate by VA or PA. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG and TTL fields are all set to zero in a SnpDVMOp TLBI request. <br>
   * SCENARIO 2: <br>
   * Range is set to 1, TG is set to one of the permitted values and VA[15:12] is zeroed out based on the TG value in a SnpDVMOp TLBI transaction that is Invalidate by VA or PA. <br>
   * SCENARIO 3: <br>
   * Range, Num and Scale are set to 0, and TG and TTL take legal combinations in a SnpDVMOp TLBI with Leaf Hint request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Range, Num, Scale, TG or TTL is set to a non-zero value in a SnpDVMOp TLBI request that is not invalidate by VA or PA. <br>
   * SCENARIO 2: <br>
   * TG is set to zero in a Range based SnpDVMOp TLBI transaction. <br>
   * SCENARIO 3: <br>
   * TG is set to 2'b10 in a Range based SnpDVMOp TLBI transaction but VA[13:12] is not set to 0. <br>
   * SCENARIO 4: <br>
   * TG is set to 2'b11 in a Range based SnpDVMOp TLBI transaction but VA[15:12] is not set to 0. <br>
   * SCENARIO 5: <br>
   * Num or Scale is set to a non-zero value in a non-Range based SnpDVMOp TLBI request. <br>
   * SCENARIO 6: <br>
   * TTL is set to a non-zero value when TGT is 0 in a SnpDVMOp TLBI request with Leaf Hint. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or greater  
   * svt_chi_node_configuration::dvm_version_support is set to DVM_v8_4 or greater and
   * DVM support is enabled in the RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
    svt_err_check_stats valid_tlbi_fields_in_snpdvmop_check;
  `endif

/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered WriteUnique transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteUnique transaction are received. 
   * - When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, DBIDResp or CompDBIDResp or Comp response for the current OWO WriteUnique is received whereas for 
       svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Comp response for the current OWO WriteUnique is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered WriteUnique transaction is sent only after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteUnique transactions are received.
   * - When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, DBIDResp or CompDBIDResp or Comp response for the current OWO WriteUnique is received whereas for 
       svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, Comp response for the current OWO WriteUnique is received 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered WriteUnique transaction is sent before Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteUnique transactions are received.
   * - When svt_chi_node_configuration::chi_spec_revision >= ISSUE_D, CompAck response for an ordered WriteUnique transaction is sent before DBIDResp or CompDBIDResp or Comp response for the current OWO WriteUnique is received whereas for svt_chi_node_configuration::chi_spec_revision <= ISSUE_C, CompAck response for an ordered WriteUnique transaction is sent before Comp response for the current OWO WriteUnique is received.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_writeunique_enable set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. <br>
   * This check is performed only on OWO WriteUnique transactions for which order field set to REQ_ORDERING_REQUIRED and exp_comp_Ack is set to 1.  
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_writeunique_compack_timing_check;
   
`ifdef SVT_CHI_ISSUE_D_ENABLE
/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered WriteNoSnp transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteNoSnp transaction are received. 
   * - DBIDResp or CompDBIDResp or Comp response for the current OWO WriteNoSnp transaction is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered WriteNoSnp transaction is sent only after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current WriteNoSnp transactions are received.
   * - DBIDResp or CompDBIDResp or Comp response for the current OWO WriteNoSnp is received. 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered WriteNoSnp transaction is sent before Comp response of all earlier ordered Write transactions which are required to be ordered with respect to the current WriteNoSnp transactions are received.
   * - CompAck response for an ordered WriteNoSnp transaction is sent before DBIDResp or CompDBIDResp or Comp response for the current OWO WriteNoSnp is received.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_D_ENABLE macro is defined and svt_chi_node_configuration::chi_spec_revision is ISSUE_D or later. <br>
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_writenosnp_enable set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. <br>
   * This check is performed only on OWO WriteNoSnp transactions for which order field set to REQ_ORDERING_REQUIRED and exp_comp_Ack is set to 1.  
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_writenosnp_compack_timing_check;
  
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * Persist response seen for CleanSharedPersistSep or Combined Write_CleanSharedPersistSep transaction.
   * @end_check_pass
   *
   * @check_fail
   * Persist seen for transactions other than CleanSharedPersistSep and Combined Write_CleanSharedPersistSep
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_persist_flit_type_for_xact_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * CompPersist response seen for CleanSharedPersistSep or Combined Write_CleanSharedPersistSep transaction.
   * @end_check_pass
   *
   * @check_fail
   * CompPersist seen for transactions other than CleanSharedPersistSep and Combined Write_CleanSharedPersistSep
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In  case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_comppersist_flit_type_for_xact_check;

   /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response type must correspond to one of the permitted combinations for the CleanSharedPersistSep transaction 
   * @end_check_description
   * 
   * @check_pass
   * CompPersist response seen for CleanSharedPersistSep transaction.
   * Comp and Persist response is seen for CleansharedpersistSep transaction
   * @end_check_pass
   *
   * @check_fail
   * CompPersist response and Comp response is seen for  CleanSharedPersistSep transaction.
   * CompPersist response and Persist response is seen for  CleanSharedPersistSep transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later.
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_response_combinations_for_cleansharedpersistsep_check;
  
 /**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp/Persist/CompPersist response packet has valid resp_err value for CleanSharedPersistSep transaction. <br>
   * The associated comp/persist/comppersist response packet's resp_err field should not take EXOK value for CleanSharedPersistSep transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp/Persist/CompPersist response flits of a CleanSharedPersistSep transaction are as per Table 9-4 in the CHI-D or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp/Persist/CompPersist response flits of a CleanSharedPersistSep transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleansharedpersistsep_associated_response_legal_resperr_check;

  /**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp/CompPersist response packet has valid cache state value for a CleanSharedPersistSep transaction. <br>
   * The cache state in the associated comp/comppersist response packets of a CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp/CompPersist response of a CleanSharedPersistSep transaction is set to UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp/CompPersist response of a CleanSharedPersistSep transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_D_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_D or later. <br>
   * In case of RN, this check is applicable when svt_chi_node_configuration_attribute cleansharedpersistsep_xact_enable is set to 1. <br>
   * In case of SN, this check is applicable when svt_chi_node_configuration_attribute slave_persist_cmo_enable is set to 1. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleansharedpersistsep_associated_response_legal_cache_state_check;

`endif //issue_d_enable
   
`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Checks that a transaction receives either (COMP)DBIDResp or DBIDRespOrd, but not both. 
   * @end_check_description
   * 
   * @check_pass
   * When the transaction has received either (Comp)DBIDResp or DBIDREspOrd, but not both.
   * @end_check_pass
   *
   * @check_fail
   * When the transaction has received both (Comp)DBIDResp and DBIDREspOrd.  
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dbidresp_or_dbidresoprd_response_received_check;

 /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that DBIDRespOrd Response flit is seen only in case of non-Copyback Write or atomic transactions. <br>
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * DBIDRespOrd is received for a WriteNoSnp or WriteUnique or NoncopybackwriteCmos, Atomic request.
   * @end_check_pass
   *
   * @check_fail
   * DBIDRespOrd is received for a Copyback request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
 svt_err_check_stats valid_dbidrespord_flit_type_for_xact_check;

 /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The data_pull in the Snoop response to a stash snoop should be set to 0 when there exists outstanding transactions to the cache line which have received DBIDRespOrd response.
   * @end_check_description
   * 
   * @check_pass
   * If data_pull in the Snoop response for a Stash type snoop is set to 1 and there are no outstanding transactions targeting the same cacheline that have received a DBIDRespOrd response . <br>
   * @end_check_pass
   *
   * @check_fail
   * If data_pull in the Snoop response for a Stash type snoop is set to 1 and there are outstanding transactions targeting the same cacheline that have received a DBIDRespOrd response. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_E_ENABLE defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_E or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats data_pull_set_for_stash_snoop_when_outstanding_xacts_with_dbidrespord;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TargetID, TagGroupID and GroupIDExt fields are set correctly in TagMatch responses. <br>
   * - A TagMatch response can be received only for Write or Atomic transactions whose TagOp is set to Match.
   * - The TgtID and TagGroupID fields in a TagMatch response must match the SrcID and TagGroupID fields
   *   of the corresponding Write transaction with TagOp set to Match.
   * .
   * @end_check_description
   *
   * @check_pass
   * A TagMatch response is received and the TgtID and TagGroupID fields match with the SrcID and TagGroupID of an outstanding
   * Write transaction whose TagOp is set to Match.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A TagMatch response is received while there are no outstaning Writes or Atomics with TagOp set to Match. <br>
   * SCENARIO 2: <br>
   * A TagMatch response is received while there are outstaning Writes or Atomics with TagOp set to Match but
   * the TgtID and TagGroupID fields does not match with the SrcID or TagGroupID of an outstanding. <br>
   * Write transaction whose TagOp is set to Match.
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats associate_tagmatch_to_xact_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the resp field is as per the expectation.The Resp value in the TagMatch response must be:
   * - A Fail when MTE is not supported.
   * - A Pass when MTE is supported but the Tag Match is not performed.
   * - A Pass if BE is all zeroes.
   * - A Pass if Write transaction is cancelled.
   * - A Fail when tag_match response is received and we see that data status is not ACCEPT
   * . 
   * @end_check_description
   *
   * @check_pass
   * The resp field is valid. The resp field is as below
   * - A Fail when MTE is not supported.
   * - A Pass when MTE is supported but the Tag Match is not performed.
   * - A Pass if BE is all zeroes.
   * - A Pass if Write transaction is cancelled.
   * - A Fail when tag_match response is received and we see that data status is not ACCEPT
   * . 
   * @end_check_pass
   *
   * @check_fail
   * The resp field is not valid. The resp field violates one or more of the below rules:
   * - A Fail when MTE is not supported.
   * - A Pass when MTE is supported but the Tag Match is not performed.
   * - A Pass if BE is all zeroes.
   * - A Pass if Write transaction is cancelled.
   * - A Fail when tag_match response is received and we see that data status is not ACCEPT
   * . 
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats associated_tagmatch_response_legal_resp_check;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multiple Write data flits corresponding to a Write or Atomic type transaction, the TagOp field
   * is set to the same value across all the Write data flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the Write data flits corresponding to a Write or Atomic type transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different value in the Write data flits corresponding to a Write or Atomic type transaction. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN, SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_write_data_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multiple Snoop data response flits corresponding to a Snoop transaction, the TagOp field
   * is set to the same value across all the Snoop data response flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the SnpRespData* flits corresponding to a Snoop transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different value in the SnpRespData* flits corresponding to a Snoop transaction. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_snoop_data_response_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multiple Read data flits corresponding to a Read type transaction, the TagOp field
   * is set to the same value across all the Read data flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the Read data flits corresponding to a Read or Atomic type transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different value in the Read data flits corresponding to a Read or Atomic type transaction. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_read_data_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multipe Forwarded CompData flits corresponding to a Forward type Snoop, the TagOp field
   * is set to the same value in all the Forwarded Compdata flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the Compdata flits corresponding to a Forward type Snoop. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different values in the Compdata flits corresponding to a Forward type Snoop. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1, DCT is enabled for atleast one of the HN-Fs and the
   * flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_fwded_compdata_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that, in case there are multipe DataPull CompData flits corresponding to a Stash type Snoop involving DataPull, the TagOp field
   * is set to the same value in all the DataPull Compdata flits. <br>
   * @end_check_description
   *
   * @check_pass
   * The TagOp field is set to the same value in all the DataPull Compdata flits corresponding to a Stash type Snoop. <br>
   * @end_check_pass
   *
   * @check_fail
   * The TagOp field is set to different values in the DataPull flits corresponding to a Stash type Snoop. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is
   * ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1, Cache Stash and Data Pull are enabled for at least one HN-F
   * and the flit data interface width (svt_chi_node_configuration::flit_data_width) is less than 512 Bits. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats same_tagop_value_in_all_data_pull_compdata_flits_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in a Read data flit is set to a valid value for the corresponding Atomic or Read transaction type. <br>
   * This check is not performed in case the Read transaction has received a NON_DATA_ERROR response as the TagOp in the Read data can take
   * any value in such a case. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Read data flit is set to TAG_TRANSFER when the Target HN supports memory tagging. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the request TagOp is not TAG_INVALID,
   * the transaction type is not Atomic*, ReadNoSnp or ReadOnce* and the Target HN supports memory tagging. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_FETCH_MATCH. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Read data flit is set to TAG_TRANSFER when the Target HN does not support memory tagging. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the Target HN does not support memory tagging. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the transaction type is Atomic*, ReadNoSnp or ReadOnce*. <br>
   * SCENARIO 5: <br>
   * The TagOp field in a Read data flit is set to TAG_UPDATE when the TagOp in the request is TAG_INVALID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_read_data_check;

 /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in a Read data flit is not set to Invalid when the Read Request TagOp is Transfer or Fetch and the 
   * target HN supports memory tagging. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_TRANSFER or TAG_UPDATE when the Read request TagOp is TAG_TRANSFER or TAG_FETCH_MATCH. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Read data flit is set to TAG_INVALID when the Read request TagOp is TAG_TRANSFER or TAG_FETCH_MATCH. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and 
   * svt_chi_system_configuration::mem_tagging_setting_applicable_for_all_addresses_at_completer is set to 1. <br>
   * The check is applicable only in case of Read transactions targeting an HN that supports memory tagging.
   * @end_check_additional_information 
   */
 svt_err_check_stats read_data_tagop_not_invalid_for_transfer_fetch_req_tagop;

  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in a Write data flit is set to a valid value for the corresponding Atomic or Write transaction type. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Write data flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Write data flit is set to TAG_TRANSFER and the TagOp in the Write transaction request is TAG_TRANSFER. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Write data flit is set to TAG_TRANSFER and the TagOp in the corresponding CopyBack Write transaction request is TAG_UPDATE. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Write data flit is set to TAG_UPDATE and the TagOp in the Write transaction request is TAG_UPDATE. <br>
   * SCENARIO 5: <br>
   * The TagOp field in a Write data flit is set to TAG_FETCH_MATCH and the TagOp in the corresponding Write or Atomic transaction request is TAG_FETCH_MATCH. <br>
   * SCENARIO 6: <br>
   * The TagOp field in a Write data flit corresponding to a DVMOp transaction is set to TAG_INVALID. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Write data flit is set to TAG_UPDATE but the TagOp in the Write transaction request is TAG_TRANSFER. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Write data flit is set to TAG_FETCH_MATCH but the TagOp in the corresponding Write or Atomic transaction request is not TAG_FETCH_MATCH. <br>
   * SCENARIO 3: <br>
   * The TagOp field in a Write data flit is set to TAG_FETCH_MATCH, TAG_TRANSFER or TAG_UPDATE and the TagOp in the corresponding Write transaction request is TAG_INVALID. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Write data flit is set to TAG_TRANSFER but the TagOp in the corresponding Non-CopyBack Write transaction request is TAG_UPDATE. <br>
   * SCENARIO 4: <br>
   * The TagOp field in a Write data flit corresponding to a DVMOp transaction is set to a value other than TAG_INVALID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN, SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_write_data_check;
 
  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TagOp field in the Comp response is set to a value that is permitted by the specification for the corresponding transaction type. <br>
   * This check is not performed in case the Comp response has RespErr set to NON_DATA_ERROR as the TagOp in the response can take any value in case of
   * a Non-Data Error.
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Comp response flit is set to TAG_INVALID (irrespective of the transaction type). <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Comp response flit corresponding to a MakeReadUnique transaction is set to TAG_UPDATE and
   * the TagOp in the MakeReadUnique transaction request is TAG_TRANSFER. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Comp response flit corresponding to a transaction type other than MakeReadUnque is set to a value other than
   * TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Comp response flit corresponding to a MakeReadUnique transaction is set to TAG_UPDATE but
   * the TagOp in the MakeReadUnique transaction request is TAG_INVALID. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_comp_response_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in the Comp response is set to a value that is permitted by the specification for the corresponding transaction type. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_TRANSFER. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_UPDATE. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a Forwarded CompData flit is set to TAG_FETCH_MATCH. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision is ISSUE_E or later, svt_chi_node_configuration::mem_tagging_enable is set to 1 and DCT is enabled for atleast one of the HN-Fs. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_fwded_compdata_check;
 
  /**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TagOp field in the DataPull Compdata response corresponding to a Stash type Snoop involving DataPull
   * is set to a value that is permitted by the specification. <br>
   * @end_check_description
   *
   * @check_pass
   * SCENARIO 1: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_INVALID. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_TRANSFER. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_UPDATE. <br>
   * SCENARIO 2: <br>
   * The TagOp field in a DataPull CompData flit is set to TAG_FETCH_MATCH. <br>
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later, , Cache Stash and Data Pull are enabled for at least one HN-F and
   * svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * @end_check_additional_information 
   */
 svt_err_check_stats expected_tagop_value_in_data_pull_compdata_check;

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the TU bits are set correctly in the Write data responses seen for Write transactions. <br>
   * - For all Write transactions with TagOp set to Update, TU bits that are not within the data window, specified by Addr and Size, 
   *   must be deasserted.
   * - In case of full cacheline Write transactions (Write*Full) with TagOp set to Update, all TU bits must be asserted.
   * - In case of Writes with TagOp set to a value other than TAG_UPDATE, the TU bits are inappicable and must be set to zero.
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * For a full cacheline Write transaction with TagOp in the data set to TAG_UPDATE, all TU bits are asserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write with TagOp in the data set to TAG_UPDATE, none of the TU bits outside of the data window are set. <br>
   * SCENARIO 3: <br>
   * For a Write with TagOp in the data set to a value other than TAG_UPDATE, none of the TU bits are set.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * For a full cacheline Write with TagOp in the data set to TAG_UPDATE, one or more TU bits are deasserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write with TagOp in the data set to TAG_UPDATE, any of the TU bits outside of the data window are set. <br> 
   * SCENARIO 3: <br>
   * For a Write with TagOp in the data set to a value other than TAG_UPDATE, one or more TU bits are asserted.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined, svt_chi_node_configuration::chi_spec_revision 
   * is ISSUE_E or later and svt_chi_node_configuration::mem_tagging_enable is set to 1. <br>
   * This check is only applicable for Write type transactions. <br>
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_tag_update_value_in_write_data_check;

  /**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteNoSnp_CMO type transaction are received. 
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteNoSnp_(P)CMO type transaction is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is seen after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteNoSnp_CMO type transaction are received.
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteNoSnp_(P)CMO type transaction is received. 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is seen before Comp response of all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteNoSnp_(P)CMO type transaction are received.
   * - CompAck response for an ordered Combined WriteNoSnp_(P)CMO type transaction is seen before the reception of associated DBIDResp or CompDBIDResp or Comp response.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined and svt_chi_node_configuration::chi_spec_revision is ISSUE_E or later. <br>
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_combined_writenosnp_cmo_enable is set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. 
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_combined_writenosnp_cmo_compack_timing_check;

/**
   * @groupname chi_protocol_err_response_ordering_check
   * @check_description
   * Check that the CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is sent only afer following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteUnique_(P)CMO type transaction are received. 
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteUnique_(P)CMO type transaction is received. 
   * .
   * @end_check_description
   *
   * @check_pass
   * CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is seen after following conditions are met:
   * - Comp response for all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteUnique_(P)CMO type transaction are received.
   * - DBIDResp or CompDBIDResp or Comp response for the current Combined WriteUnique_(P)CMO type transaction is received. 
   * .
   * @end_check_pass
   *
   * @check_fail
   * Check will fail for any one or both of the below cases:
   * - CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is seen before Comp response of all earlier ordered Write transactions which are required to be ordered with respect to the current Combined WriteUnique_(P)CMO type transaction are received.
   * - CompAck response for an ordered Combined WriteUnique_(P)CMO type transaction is seen before the reception of associated DBIDResp or CompDBIDResp or Comp response.
   * .
   * @end_check_fail
   *
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check will be constructed only when SVT_CHI_ISSUE_E_ENABLE macro is defined and svt_chi_node_configuration::chi_spec_revision is ISSUE_E or later. <br>
   * This check is applicable only when svt_chi_node_configuration::streaming_ordered_combined_writeunique_cmo_enable is set to 1 and svt_chi_node_configuration::num_req_order_streams set to 1. 
   * @end_check_additional_information 
   */
  svt_err_check_stats owo_combined_writeunique_cmo_compack_timing_check;

 /**
   * @groupname chi_protocol_dwt_check
   * @check_description
   * DWT is applicable only for non-copyback write transactions.
   * @end_check_description
   * 
   * @check_pass
   * DWT is used for non-copyback writes.
   * @end_check_pass
   *
   * @check_fail
   * DWT is used for transactions other than non-copyback writes.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DWT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_transaction_supporting_dwt_check;

 /**
   * @groupname chi_protocol_dwt_check
   * @check_description
   * DWT is not permitted in Non-CopyBack writes that are OWO writes.
   * DWT for Non-CopyBack writes cannot be used with ordering set to REQ_ORDERING_REQUIRED and exp_comp_ack set to 1. 
   * @end_check_description
   * 
   * @check_pass
   * DWT is used for non OWO writes.
   * @end_check_pass
   *
   * @check_fail
   * DWT is used for OWO writes.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DWT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_ordering_and_compack_combination_for_dwt_check;

 
 /**
   * @groupname chi_protocol_dwt_check
   * @check_description
   * DWT can be used by an HN only when DWT is enabled for that HN through svt_chi_system_configuration::set_hn_dwt_enable()
   * @end_check_description
   * 
   * @check_pass
   * DWT is used by an HN and DWT is enabled for that HN through svt_chi_system_configuration::set_hn_dwt_enable()
   * @end_check_pass
   *
   * @check_fail
   * DWT is used by an HN and DWT is not enabled for that HN through svt_chi_system_configuration::set_hn_dwt_enable()
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dwt_used_by_hn_with_dwt_enabled_check;

  
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packet has valid resp_err value for StashOnceSepUnique transaction. <br>
   * The associated response packet's resp_err field should not take EXOK value for StashOnceSepUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits of a StashOnceSepUnique transaction are as per CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits of a StashOnceSepUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashoncesepunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response has valid cache state value for a StashOnceSepUnique transaction. <br>
   * The cache state in the associated response of a StashOnceSepUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the response of a StashOnceSepUnique transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the response of a StashOnceSepUnique transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashoncesepunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packet has valid resp_err value for StashOnceSepShared transaction. <br>
   * The associated response packet's resp_err field should not take EXOK value for StashOnceSepShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits of a StashOnceSepShared transaction are as per the CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits of a StashOnceSepShared transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashoncesepshared_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response has valid cache state value for a StashOnceSepShared transaction. <br>
   * The cache state in the associated response of a StashOnceSepShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the response of a StashOnceSepShared transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the response of a StashOnceSepShared transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashoncesepshared_associated_comp_response_legal_cache_state_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that STASHDONE Response flit is seen only in case of StashOnceSepUnique and StashOnceSepShared transaction.
   * @end_check_description
   * 
   * @check_pass
   * STASHDONE response is received for StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_pass
   *
   * @check_fail
   * STASHDONE response is received for a transaction for non StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_stashdone_flit_type_for_xact_check;
  
  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that COMPSTASHDONE Response flit is seen only in case of StashOnceSepUnique and StashOnceSepShared transaction.
   * @end_check_description
   * 
   * @check_pass
   * COMPSTASHDONE response is received for StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_pass
   *
   * @check_fail
   * COMPSTASHDONE response is received for a transaction for non StashOnceSepUnique or StashOnceSepShared transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_compstashdone_flit_type_for_xact_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TargetID, DBID[7:0] and GroupIDExt fields are set correctly in StashDone responses. <br>
   * A StashDone response can be received only for StashOnceSep* transaction.
   * @end_check_description
   *
   * @check_pass
   * A StashDone response is received and the TgtID and DBID[7:0] fields match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_pass
   *
   * @check_fail
   * A StashDone response is received and the TgtID and DBID[7:0] fields does not match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   */
 svt_err_check_stats associate_stashdone_to_xact_check;

  /**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the TargetID, DBID[7:0] and GroupIDExt fields are set correctly in CompStashDone responses. <br>
   * A CompStashDone response can be received only for StashOnceSep* transaction.
   * @end_check_description
   *
   * @check_pass
   * A CompStashDone response is received and the TgtID and DBID[7:0] fields match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CompStashDone response is received and the TgtID and DBID[7:0] fields does not match with the SrcID and StashGroupID of an outstanding StashOnceSep* transaction.
   * @end_check_fail
   *
   * @applicable_device_type
   * Active and Passive RN
   * @end_applicable_device_type
   *
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E and 
   * svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * @end_check_additional_information 
   */
 svt_err_check_stats associate_compstashdone_to_xact_check;
 
`endif
   
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the SnpResp is observerd for a SnpDVMOp(sync) only when there are no outstanding DVMOp transactions at the RN. <br>
   * - Sending of a SnpResp implies that all DVM related operations have completed at the RN structures. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpResp flit is observed for a SnpDVMOp(sync) and there are no outstanding DVMOp transactions at the RN
   * @end_check_pass
   *
   * @check_fail
   * A SnpResp flit is observed for a SnpDVMOp(sync) while there are outstanding DVMOp transactions at the RN
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1) and
   * svt_chi_node_configuration::snp_dvmop_sync_response_policy is set to WAIT_FOR_ALL_OUTSTANDING_DVM_NON_SYNC_TO_COMPLETE.
   * @end_check_additional_information 
   */
  svt_err_check_stats snpresp_for_snpdvmop_sync_only_after_completion_of_all_non_dvm_sync_check;
    
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Snoop response flits. <br>
   * - The TgtID must be set to the the SrcID of the Snoop request. 
   *   The TxnID is set to the same value as the TxnID of the Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpResp is observed corresponding to one of the outstanding Snoop requests at the RN
   * @end_check_pass
   *
   * @check_fail
   * A SnpResp is observed but there are no outstanding Snoop requests with matching SourceID and TxnID values
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_snprsp_flit_check;
    
`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Snoop response flits. <br>
   * - The TgtID must be set to the the Src of the Forward type Snoop request. 
   *   The TxnID must be set to the same value as the TxnID of the Forward type Snoop request. 
   *   The SrcID must be set to the same value as the TgtID of the Forward type Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpRespFwded is observed corresponding to one of the outstanding Forward type Snoop requests at the RN.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * A SnpRespFwded is observed but there are no outstanding Snoop requests with matching SourceID and TxnID values. <br>
   * SCENARIO 2: <br>
   * A SnpRespFwded is observed but the corresponding Snoop request with matching SourceID and TxnID values, is not a forward type Snoop. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_snprspfwded_flit_check;
  
/**  
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that SnpRespFwded is issued from the snooped RN to the Interconnect in case DCT is observed for a Forward type snoop with RetToSrc asserted. <br>
   * @end_check_description
   * 
   * @check_pass
   * A SnpRespDataFwded response corresponding to one of the outstanding Forward type Snoop requests with RetToSrc set to 1 is observed.
   * @end_check_pass
   *
   * @check_fail
   * A SnpRespFwded response corresponding to one of the outstanding Forward type Snoop requests with RetToSrc set to 1 is observed.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_fwded_response_type_for_ret_to_src_check;
  
/**  
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the FwdState indicated in the SnpRespFwded or SnpRespDataFwded response matches with the Resp field in the forwarded CompData. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * The FwdState field in the SnpRespDataFwded response matches with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * The FwdState field in the SnpRespFwded response matches with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * The FwdState field in the SnpRespDataFwded response does not match with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * SCENARIO 2: <br>
   * The FwdState field in the SnpRespFwded response does not match with the Resp field of the CompData for a given Forward type Snoop request. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats valid_fwd_state_in_fwded_snoop_response_check;
  
/**  
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the data sent in the SnpRespDataFwded response matches with the data sent in the forwarded CompData for a given Forward type Snoop request. <br>
   * @end_check_description
   * 
   * @check_pass
   * The data in the SnpRespDataFwded response matches with the data in the CompData for a Forward type Snoop request.
   * @end_check_pass
   *
   * @check_fail
   * The data in the SnpRespDataFwded response does not match with the data in the CompData for a Forward type Snoop request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats snprspdatafwded_compdata_data_integrity_check;
  
/**  
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that when Byte Enables in the CopyBackWriteData are all de-asserted during CopyBack cancellation the Write Data bytes are all zeroed. <br>
   * @end_check_description
   * 
   * @check_pass
   * The byte enables in the CopyBackWriteData_I are all de-asserted and the Write Data bytes are all zeroed.
   * @end_check_pass
   *
   * @check_fail
   * The byte enables in the CopyBackWriteData_I are all de-asserted but the Write Data is not zeroed.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later.
   * @end_check_additional_information 
   */ 
  svt_err_check_stats copyback_cancellation_write_data_check;
`endif     

/**
   * @groupname chi_protocol_err_response_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in the Response flits. <br>
   * - The SrcID and TgtID of the response flit must match the TgtID and SrcID of the request while
   *   the Txn ID of the response flit must be the same as that of the Request 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A response flit is received for one of the outstanding transactions which is yet to receive a coherent response.
   * @end_check_pass
   *
   * @check_fail
   * A response flit is received but there are no outstanding transactions whose SrcID,TgtID and TxnID match the TgtID,SrcID and TxnID of the response.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * In case svt_chi_system_configuration::expect_target_id_remapping_by_interconnect is set to 1,
   * the SrcID of the response flit will not be compared with the TgtID of the outstanding requests at the RN.
   * @end_check_additional_information 
   */
  svt_err_check_stats associate_rsp_flit_to_xact_check;
      
/**
   * @groupname chi_protocol_err_response_flit_to_xact_association_check
   * @check_description
   * Check that the transaction for which the coherent response is received has not already received a coherent response <br>
   * - The number of Response flits received for a transaction must match the number of responses,
   *   specified in the spec, for that transaction type.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A response flit is received for one of the outstanding transactions which is yet to receive a coherent response.
   * @end_check_pass
   *
   * @check_fail
   * A response flit is received for one of the outstanding transactions which has already received all applicable coherent responses (resp_status == ACCEPT).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats expected_rsp_flit_for_xact_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Read Data flits. <br>
   * - When SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE  macro is not defined:
   * - The TgtID of the Read data flit must match the SrcID of the Request
   * - The SrcID of the Read data flit must match the TgtID of the Request
   * - The TxnID of the Read data flit must be the same as that of the Request 
   * .
   * - When SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE macro is defined:
   * - For RN: The TgtID of the Read data flit must match the SrcID of the Request irrespective of spec revision 
   * - For SN/HN: The TgtID of the Read data flit must match the SrcID of the Request for spec revision ISSUE_A 
   * - For SN/HN: The TgtID of the Read data flit must match the ReturnNID of the Request for spec revision ISSUE_B or later 
   * - For RN: The SrcID of the Read data flit must match the TgtID of the Request for ISSUE_A
   * - For RN: The HomeNID of the Read data flit must match the TgtID of the Request for ISSUE_B or later
   * - For SN/HN: The SrcID of the Read data flit must match the TgtID of the Request irrespective of spec revision 
   * - For RN: The TxnID of the Read data flit must be the same as that of the Request irrespective of spec revision
   * - For SN/HN: The TxnID of the Read data flit must be the same as that of the Request for spec revision ISSUE_A 
   * - For SN/HN: The TxnID of the Read data flit must be the same as that of the ReturnTxnID Request for spec revision ISSUE_B or later
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CompData flit is received for one of the outstanding Read transactions whose data phase isn't complete yet.
   * @end_check_pass
   *
   * @check_fail
   * In case of a CHI-A node, a CompData flit is received but there are no outstanding transactions whose TgtID,SrcID and TxnID match with the SrcID,TgtID and TxnID of the CompData.
   * In case of CHI-B or later RN, a CompData flit is received but there are no outstanding transactions whose TgtID,SrcID and TxnID match with the HomeNID,TgtID and TxnID of the CompData.
   * In case of CHI-B or later SN, a CompData flit is received but there are no outstanding transactions whose TgtID,ReturnNID and ReturnTxnID match with the HomeNID,TgtID and TxnID of the CompData.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_read_dat_flit_with_xact_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the number of Read Data flits is equal to the expected value <br>
   * The number of data flits for a transaction is determined by number of bytes to be transferred and data bus width
   * @end_check_description
   * 
   * @check_pass
   * A Read Data flit is received for a Read transaction whose data phase is not yet complete  (data_status is either INITIAL or PARTIAL_ACCEPT)
   * @end_check_pass
   *
   * @check_fail
   * A Read Data flit is received for a Read transaction whose data phase is complete (data_status == ACCEPT)
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats expected_num_read_data_flits_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in Write Data flits. <br>
   * - The SrcID of the Write data flit must match the Tgt ID of the request while
   *   the Txn ID of the response flit must be the same as that of the Request 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Write Data flit is received for one of the outstanding transactions whose data phase isn't yet complete (data_status is either INITIAL or PARTIAL_ACCEPT).
   * @end_check_pass
   *
   * @check_fail
   * A Write Data flit is received but there are no outstanding transactions whose SrcID,TgtID and TxnID match the SrcID, TgtID and TxnID of the Write Data.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_write_dat_flit_with_xact_check;
 
/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Write Data flits are transmitted only after CompDBIDResp/DBIDResp. <br>
   * @end_check_description
   * 
   * @check_pass
   * A Write Data flit is received and there is an active xact with matching
   * src_id, tgt_id and txn_id which has received a DBIDResp/CompDBIDResp
   * @end_check_pass
   *
   * @check_fail
   * A Write Data flit is received and there is an active transaction with matching
   * src_id, tgt_id and txn_id which hasn't yet received a DBIDResp/CompDBIDResp
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats write_dat_xfer_after_dbid_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the number of Write Data flits is equal to the expected value <br>
   * The number of data flits for a transaction is determined by number of bytes to be transferred and data bus width
   * @end_check_description
   * 
   * @check_pass
   * A Write Data flit is received and there is an active xact with matching
   * src_id, tgt_id and txn_id whose data_status is either INITIAL or PARTIAL_ACCEPT.
   * @end_check_pass
   *
   * @check_fail
   * A Write Data flit is received and there is an active xact with matching
   * src_id, tgt_id and txn_id whose data_status is ACCEPT.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats expected_num_write_data_flits_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Byte Enables are set correctly for Write Data <br>
   * - For all Write transactions, byte enables that are not within the data window, specified by Addr and Size, must be deasserted.
   * - For DVMOp transactions, only the least significant 8 bits must be asserted.
   * .
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * For a full cacheline Write transaction, all Byte Enable bits are asserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write, none of the Byte Enable bits outside of the data window are set. <br>
   * SCENARIO 3: <br>
   * When chi_spec_revision is ISSUE_B or greater, the cache state in the CopyBackWriteData is set to I and all BE bits are set to zero. <br>
   * SCENARIO 4: <br>
   * For a DVMOp, Byte Enable is set to 'hff. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * For a full cacheline Write transaction, one or more Byte Enable bits are deasserted. <br>
   * SCENARIO 2: <br>
   * For a partial cacheline Write, any of the Byte Enable bits outside of the data window are set.  <br>
   * SCENARIO 3: <br>
   * When chi_spec_revision is ISSUE_B or greater, the cache state in the CopyBackWriteData is set to I but one or more Byte Enable bits are asserted. <br>
   * SCENARIO 4: <br>
   * For a DVMOp, Byte Enable is not set to 'hff. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check currently supports full Cacheline Write transaction types only.
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_byte_enable_for_write_data_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/** @cond PRIVATE */
/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Poison is set correctly for valid bytes of Write Data <br>
   * - For all transactions, poison bit is set to 1 only for the data with  valid byte enable asserted.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Write Data, the poison bit is set to 0 for all chunks of 8 data bytes whose Byte Enables are all de-asserted. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Write Data, the poison bit is set to 1 for any 8 byte data chunk whose Byte Enables are not all de-asserted. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::poison_enable is set to 1 
   *  .
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_poison_for_write_data_check;

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Datacheck is set correctly for valid bytes of Write Data <br>
   * - For all transactions, datacheck bit is set to 1 only for the data with  valid byte enable asserted.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Write Data, the datacheck bit is set to 0 for all data bytes whose Byte Enable is de-asserted. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Write Data, the datacheck bit is set to 1 for any of the data bytes whose Byte Enable is de-asserted. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_datacheck_for_write_data_check;  
/** @endcond */

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Checks that the Datacheck is set correctly such that ODD Byte parity is generated for Write Data <br>
   * - For all transactions, datacheck bit is set appropriatly such that ODD Byte parity is generated across the data that is being transmited.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Write Data, when the datacheck along with data maintains ODD parity. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Write Data, when the datacheck along with data does not maintain ODD parity. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN and passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   *  The error message currently displays the expected and received datacheck values without masking out the invalid and poisoned byte lanes.
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_parity_datacheck_for_write_data_check;  

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Datacheck is set correctly such that ODD Byte parity is generated for Read Data <br>
   * - For all transactions, datacheck bit is set appropriatly such that ODD Byte parity is generated across the data that is being received.
   * .
   * @end_check_description
   * 
   * @check_pass
   * For a transaction involving Read Data, when the datacheck along with data maintains ODD parity. <br>
   * @end_check_pass
   *
   * @check_fail
   * For a transaction involving Read Data, when the datacheck along with data does not maintain ODD parity. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   *  The error message currently displays the expected and received datacheck values without masking out the invalid and poisoned byte lanes.
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_parity_datacheck_for_read_data_check;  

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Checks that the Datacheck is set correctly such that ODD Byte parity is generated for Snoop Data <br>
   * - For all snoop transactions that involve data transfers, datacheck bit is set appropriatly such that ODD Byte parity is generated across the data that is being transmited.
   * .
   * @end_check_description
   * 
   * @check_pass
   * All SnpRespData flits corresponding to a Snoop request are received, and the datacheck in the SnpRespData was set such that ODD Byte parity is generated. <br>
   * @end_check_pass
   *
   * @check_fail
   * All SnpRespData flits corresponding to a Snoop request are received, and the datacheck in the SnpRespData was set such that ODD Byte parity is not generated <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   *  This check is applicable only when 
   *  -svt_chi_node_configuration::chi_spec_revision is greater than or equal to svt_chi_node_configuration::ISSUE_B 
   *  -svt_chi_node_configuration::datacheck_type is set to svt_chi_node_configuration::ODD_PARITY 
   *  .
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_parity_datacheck_for_snoop_data_check; 
`endif 

/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the Transaction ID, SourceID and TargetID fields are set correctly in SnpResp Data flits. <br>
   * - The TgtID must be set to the the SrcID of the Snoop request.
   *   The TxnID must be set to the same value as the TxnID of the Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * A SnpRespData is received whose TgtID and TxnID match with the SrcID and TxnID of one of the outstanding Snoop requests. <br>
   * Scenario 2: <br>
   * In a CHI-B or later system, a SnpRespDataFwded response is received whose TgtID and TxnID match with the SrcID and TxnID of one of the outstanding Forward type Snoop requests. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * A SnpRespData is received but there are no Snoop requests whose SrcID and TxnID match with the TgtID and TxnID of the SnpRespData flit. <br>
   * Scenario 2: <br>
   * In a CHI-B or later system, a SnpRespDataFwded response is received but there are no Forward type Snoops SrcID and TxnID match with the TgtID and TxnID of the SnpRespDataFwded flit. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_snprspdata_flit_with_snp_xact_check;
 
  `ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_data_flit_to_xact_association_check
   * @check_description
   * Check that the SourceID, TargetID, Transaction ID and DBID fields are set correctly in the CompData flits used for DCT. <br>
   * - The TgtID must be set to the the FwdNID of the Snoop request.
   *   The SrcID must be set to the the TgtID of the Snoop request.
   *   The TxnID must be set to the FwdTxnID of the Snoop request. 
   *   The DBID must be set to the TxnID of the Snoop request. 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CompData is received from an RN whose SrcID, TgtID, TxnID and DBID match with the TgtID, FwdNID, FwdTxnID and TxnID of one of the outstanding Forward type Snoop requests.
   * @end_check_pass
   *
   * @check_fail
   * A CompData is received from an RN but there are no forward type Snoop requests whose TgtID, FwdNID, FwdTxnID and TxnID match with the SrcID, TgtID, TxnID and DBID of the CompData flit
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats associate_compdata_flit_with_fwd_type_snp_xact_check;
`endif

/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that the credit type field in a PCrdReturn transaction is set correctly. <br>
   * Before the PCrdReturn flit, a PCrdGrant must have been received with the same PCrdType
   * @end_check_description
   * 
   * @check_pass
   * A PCrdReturn flit is seen after the reception of a corresponding PCrdGrant with the same PCrdType value.
   * @end_check_pass
   *
   * @check_fail
   * A PCrdReturn flit is seen without prior reception of a PCrdGrant with the same PCrdType value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_p_crd_type_in_pcrdreturn_flit_check;

/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * The transaction must only be retried by the Requester when a PCrdGrant is received with the correct PCrdType 
   * @end_check_description
   * 
   * @check_pass
   * A retry transaction is received while there are available granted credits for the PCrdType.
   * @end_check_pass
   *
   * @check_fail
   * A retry transaction is received while there are no available granted credits for the PCrdType,ie,
   * the retry tranaction is received without the recpetion of a PCrdGrant with the same PCrdType
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_retry_xact_after_pcrdcgrant_check;
  
/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that the transaction is retried only after RetryAck and PCrdGrant responses are received from the Target node. <br>
   * The transaction with credit must only be sent by the Requester after both the RetryAck response and an appropriate PCrdGrant response are received, and
   * the transaction attributes other than PCrdType, AllowRetry and QoS must be the same as the original request.
   * @end_check_description
   * 
   * @check_pass
   * A retry transaction is seen after the prior reception of PCrdGrant and RetryAck, with the SrcID and PCrdType set to the same value as the TgtID and PCrdType of the retry transaction, and, <br>
   * The attributes of the retry transaction match with those of the original request.
   * @end_check_pass
   *
   * @check_fail
   * A retry transaction is seen but there were no corresponding PCrdGrant and RetryAck, whose SrcID and PCrdType match the TgtID and PCrdType of the retry transaction, or, <br>
   * One or more attributes of the retry transaction do not match with those of the Original request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_retry_xact_check;
   
/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that PCrdReturn is sent only after RetryAck and PCrdGrant flits are received from the Target node. <br>
   * PcrdReturn transaction can only be sent after the reception of a PcrdGrant flit 
   * @end_check_description
   * 
   * @check_pass
   * A PCrdReturn transaction is seen after the prior reception of PCrdGrant and RetryAck, with the SrcID and PCrdType set to the same value as the TgtID and PCrdType of the PCrdReturn.
   * @end_check_pass
   *
   * @check_fail
   * A PCrdReturn transaction is seen but there were no corresponding PCrdGrant and RetryAck, whose SrcID and PCrdType match the TgtID and PCrdType of the PCrdReturn.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information
   */
  svt_err_check_stats valid_pcrdreturn_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Checks PcrdGrant is not seen without any outstanding transaction. 
   * @end_check_description
   * 
   * @check_pass
   * PcrdGrant is seen and there are outstanding transaction.
   * @end_check_pass
   *
   * @check_fail
   * PcrdGrant is seen without any outstanding transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
 svt_err_check_stats valid_pcrdgrant_check;

/**
   * @groupname chi_protocol_err_retry_check
   * @check_description
   * Check that there shouldn't be any outstanding protocol credits at the end of simulation. Protocol credits must be utilized by retrying the original transaction or returned via PCRDRETURN.
   * @end_check_description
   * 
   * @check_pass
   * There are no outstanding protocol credits at the end of simulation.
   * @end_check_pass
   *
   * @check_fail
   * There are outstanding protocol credits at the end of simulation.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when svt_chi_node_configuration::end_of_simulation_checks_enable is set to 1.
   * @end_check_additional_information 
   *  
   */
 svt_err_check_stats end_of_simulation_outstanding_protocol_credit_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that there is only one outstanding DVMOp sync transaction at a given point in time. <br>
   * Only one SnpDVMOp(Sync) transaction can be outstanding from an MN to an RN. 
   * @end_check_description
   * 
   * @check_pass
   * A SnpDVMOp(Sync) request is received and there are no outstanding SnpDVMOp(Sync) requests at the RN.
   * @end_check_pass
   *
   * @check_fail
   * A SnpDVMOp(Sync) request is received but there are already outstanding SnpDVMOp(Sync) requests at the RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats single_outstanding_snpdvmop_sync_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the TxnID of a SnpDVMOp must be unique for a given Requester. <br>
   * - The TxnID must be unique for a given Requester.
   * - The Requester can reuse the ID only after it has received all responses associated with
   * - a previous transaction that has used the same TxnID 
   * .
   * @end_check_description
   * 
   * @check_pass
   * A SnpDVMOp request is received and there are no outstanding SnpDVMOp requests with the same TxnID value.
   * @end_check_pass
   *
   * @check_fail
   * A SnpDVMOp request is received but there is already an outstanding SnpDVMOp request with the same TxnID value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats single_outstanding_snpdvmop_per_txn_id_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a request to a cache line is issued when there are no outstanding Copyback transactions that are expecting CompDBIDResp. <br>
   * - An RN-F must wait for the CompDBIDResp response to be received for an outstanding CopyBack transaction before issuing another request
   *   to the same cache line.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A request flit is received and there are no pending Copybacks to the same address that are yet to receive CompDBIDResp.
   * @end_check_pass
   *
   * @check_fail
   * A request flit is received and there is an outstanding Copyback to the same address which is yet to receive CompDBIDResp.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable for all the Copyback transactions except WriteEvictorEvict transaction which are introduced in CHI ISSUE E. Similar kind of check for WriteEvictorEvict transaction is new_req_before_comp_or_compdbid_resp_for_copyback_writes_with_optional_data_to_same_cacheline_check.
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_compdbid_resp_for_copyback_to_same_cacheline_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a request to a cache line is issued when there are no outstanding Copyback Writes with Optional Data transactions (WriteEvictorEvict) that are expecting Comp/CompDBIDResp. <br>
   * - An RN-F must wait for the Comp/CompDBIDResp response to be received for an outstanding WriteEvictorEvict transaction before issuing another request
   *   to the same cache line.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A request flit is received and there are no pending WriteEvictorEvict transactions to the same address that are yet to receive Comp/CompDBIDResp.
   * @end_check_pass
   *
   * @check_fail
   * A request flit is received and there is an outstanding WriteEvictorEvict transaction to the same address which is yet to receive Comp/CompDBIDResp.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_comp_or_compdbid_resp_for_copyback_writes_with_optional_data_to_same_cacheline_check;
`endif

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that for an RN-F node, Snoop request is observed when there are no outstanding Snoop transactions targetting the same cache line.
   * @end_check_description
   * 
   * @check_pass
   * A Snoop request flit is received and there are no outstanding Snoop transactions targetting the same cache line.
   * @end_check_pass
   *
   * @check_fail
   * A Snoop request flit is received and there are one or more outstanding Snoop transactions targetting the same cache line.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats new_snp_req_before_completion_of_previous_snp_xact_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that for an RN-F node, Snoop request is observed when there are no outstanding coherent transactions targetting the same cache line that received completion response and has not yet sent out the CompAck or Write Data. <br>
   * Once a completion is received for a transaction, the completer must not send a snoop request to the same cache line until it receives:
   * - A CompAck for any Read and Dataless requests except for ReadOnce* and ReadNoSnp.
   * - A WriteData response for CopyBack and Atomic requests.
   * - For WriteUnique, a WriteData response and, if applicable, CompAck.
     * .
   * @end_check_description
   * 
   * @check_pass
   * A Snoop request flit is received and there are no outstanding coherent transactions targetting the same cache line that received completion response and has not yet sent out the CompAck/WrData.
   * @end_check_pass
   *
   * @check_fail
   * A Snoop request flit is received and there are outstanding coherent transactions targetting the same cache line that received completion response and has not yet sent out the CompAck/WrData.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   */
  svt_err_check_stats new_snp_req_before_compack_of_coherent_xact_which_received_comp_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a Read, Write, Dataless or Atomic request is issued when there are no outstanding Read or Write transactions to the same cache line. <br>
   * - "Outstanding Read" refers to all Read as well as dataless transactions other than CMOs.  
   * - "Outstanding Write" refers to all Write and Atomic transactions.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Read, Write, Dataless or Atomic request flit is received and there are no outstanding Read, Write, Dataless or Atomic transactions to the same cache line.
   * @end_check_pass
   *
   * @check_fail
   * A Read, Write, Dataless or Atomic request flit is received and there are one or more outstanding Read, Write, Dataless or Atomic transactions to the same cache line.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN, SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - In case there are multiple sources within an RN, it cannot be determined if the requests are issued by the
   *   same source based on the request fields. Therefore, this check will not be performed at passive RN when 
   *   svt_chi_node_configuration::multiple_req_sources_within_rn_node is set to 1.
   * - In case DMT Reads are issued at the SN, it is possible that the Interconnect de-allocates the Reads before SN
   *   sends CompData to the RN. In such a case, it is possible that the Interconnect issues a second request to the same address
   *   while the CompData of the previous DMT Read is in progress or is yet to be sent to the RN. 
   *   Therefore, this check will not consider DMT Reads at the SN while looking for outstanding transactions to a given cacheline.
   * .
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_completion_of_previous_read_write_xact_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a request, other than Evict, WriteEvictFull, WriteEvictorEvict and Prefetch, is issued when there are no outstanding CMO transactions to the same cache line. <br>
   * @end_check_description
   * 
   * @check_pass
   * A request flit is received and there are no pending CMOs to the same cache line.
   * @end_check_pass
   *
   * @check_fail
   * A request flit is received and there is an outstanding CMO to the same cache line.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * Propogation of CMOs to Slave nodes is currently not supported by the VIP.
   * Therefore, this check is not applicable for SN.
   * @end_check_additional_information 
   */
  svt_err_check_stats new_req_before_completion_of_previous_cmo_xacts_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that a CMO request is issued when there are no outstanding transactions of type mentioned below to the same cache line that can allocate the received data in the Requester caches:
   * - ReadShared, ReadClean, ReadUnique, ReadNotSharedDirty, CleanUnique, MakeUnique
   * .
   * @end_check_description
   * 
   * @check_pass
   * A CMO request flit is received and there are no pending transactions of type mentioned below to the same cache line that can allocate the received data in the Requester caches:
   * - ReadShared, ReadClean, ReadUnique, ReadNotSharedDirty, CleanUnique, MakeUnique
   * .
   * @end_check_pass
   *
   * @check_fail
   * A CMO request flit is received and there are one or more pending transactions of type mentioned below to the same cache line that can allocate the received data in the Requester caches:
   * - ReadShared, ReadClean, ReadUnique, ReadNotSharedDirty, CleanUnique, MakeUnique
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * Propagation of CMOs to Slave nodes is currently not supported by the VIP.
   * Therefore, this check is not applicable for SN.
   * @end_check_additional_information 
   */
  svt_err_check_stats cmo_xact_before_completion_of_previous_xacts_to_same_cacheline_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that there are no outstanding Normal Non-cacheable or Device type writes, that are targeting an HN-I, which haven't
   * received a Comp Repsonse, before a Barrier is issued by an RN. <br>
   * - An RN must wait until all Normal Non-cacheable writes, and all Device type writes, that are targeting an
   *   HN-I, have received a completion response before issuing an EOBarrier or an ECBarrier request.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Barrier is received and there are no pending normal,non-cacheable or 
   * Device type Writes to the same address that are yet to receive Comp Response
   * @end_check_pass
   *
   * @check_fail
   * A Barrier is received and there are one or more pending normal,non-cacheable or 
   * Device type Writes to the same address that are yet to receive Comp Response
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when Barrier support is enabled in the passive RN node (svt_chi_node_configuration::barrier_enable == 1)
   * @end_check_additional_information 
   */
  svt_err_check_stats comp_received_for_normal_non_cacheable_or_device_writes_before_barrier_check;

/**
   * @groupname chi_protocol_err_ordering_check
   * @check_description
   * Check that Normal Non-cacheable or Device type writes were received, prior to the current Barrier and
   * after the previous Barrier transaction <br>
   * - It is recommended that an RN only issues an EOBarrier or ECBarrier if it has issued a Normal Non-cacheable, or
   *   Device type memory write request since previously completing an EOBarrier or ECBarrier.
   * .
   * @end_check_description
   * 
   * @check_pass
   * A Barrier transaction is received and there were normal,non-cacheable or 
   * Device type Writes seen before the Barrier, and after the previous Barrier if any.
   * @end_check_pass
   *
   * @check_fail
   * A Barrier transaction is received and there were no normal,non-cacheable or 
   * Device type Writes seen before the Barrier, and after the previous Barrier if any.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when Barrier support is enabled in the passive RN node (svt_chi_node_configuration::barrier_enable == 1)
   * @end_check_additional_information 
   */
  svt_err_check_stats normal_non_cacheable_or_device_writes_between_barriers_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that both parts of a SnpDVMOp request are received at the RN. <br>
   * -SnpDVMOp requests consist of two parts. Both SnpDVMOp request packets corresponding to a single transaction must use the same TxnID  
   * .
   * @end_check_description
   * 
   * @check_pass
   * At the end of the simulation, there are no SnpDVMOp transactions for which only one part of the SnpDVMOp request was received.
   * @end_check_pass
   *
   * @check_fail
   * At the end of the simulation, there are one or more SnpDVMOp transactions for which only one part of the SnpDVMOp request was received.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_snpdvmop_part_check;

/**
   * @groupname chi_protocol_err_valid_snoop_req_check
   * @check_description
   * Check that only DVMOp related snoop transactions are seen on the Snoop Channel in case of RN-D. <br>
   * Use of the SNP channel is limited to DVM data transfers in case of RN-D nodes.  
   * @end_check_description
   * 
   * @check_pass
   * A SnpDVMOp is received for an RN-D node.
   * @end_check_pass
   *
   * @check_fail
   * A Snoop transaction, other than a SnpDVMOp, is received for an RN-D node.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   */
  svt_err_check_stats valid_rn_d_snoop_flit_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_snoop_req_check
   * @check_description
   * Check that only supported snoop transactions are seen on the Snoop Channel in case of RN-F. <br>
   * SYNOPSYS DEFINED : <br>
   * - Stash and Forward type snoops are expected to be received only by a CHI-B or later compliant RN-F, when Stashing and DCT features are enabled in the corresponding HN, respectively.  
   * - SnpNotSharedDirty, Stash and Forward type snoops are expected to be received only by a CHI-B or later compliant RN-F.  
   * .
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * A Snoop request other than SnpNotSharedDirty, Stash and Forward type snoop is received by a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A Snoop request other than Stash/Forward type snoop is received by a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A Forward type Snoop request is received by a CHI-B or later RN-F from an HN-F for which DCT is enabled through svt_chi_system_configuration::set_hn_dct_enable(). <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * A SnpNotSharedDirty/Stash/Forward type snoop is received by a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A Stash/Forward type snoop is received by a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A Forward type Snoop request is received by a CHI-B or later RN-F from an HN-F for which DCT is not enabled through svt_chi_system_configuration::set_hn_dct_enable(). <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined. <br>
   * Once support for Stashing is added, Stash type snoops will be expected to be received only by a CHI-B or later compliant RN-F, 
   * when the feature is enabled in the corresponding HN.  
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats expected_snoop_xact_type_check;
`endif

/**
   * @groupname chi_protocol_err_valid_request_flit_check
   * @check_description
   * Check that only supported transaction types are received for a given node. <br>
   * SYNOPSYS DEFINED: <br> 
   * - DVMOp transactions are epected to be seen only for RNs with svt_chi_node_configuration::dvm_enable set to 1
   * - CHI-B or later specific transactions (RNSD, ROMI, ROCI, CSP, PrefetchTgt, AtomicOps) are expected to be seen only for a CHI-B or later compliant RN.  
   * - CHI-E or later specific transactions (Write*Zero, WriteEvictorEivct,...) are expected to be seen only for a CHI-E or later compliant RN.  
   * - VIP currently does not support PrefetchTgt transactions.
   * .
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * A request other than PrefetchTgt, ReadNotSharedDirty, ROMI, ROCI, PrefetchTgt and AtomicOps is seen for a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A request other than PrefetchTgt is seen for a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A ReadNoSnp or WriteNoSnp transaction is received by an SN. <br>
   * Scenario 4: <br>
   * A DVMOp transaction is seen for an RN-F or RN-D whose svt_chi_node_configuration::dvm_enable is set to 1. <br>
   * Scenario 5: <br>
   * ReadNoSnpSep is seen by an SN for a CHI-C or later. <br>
   * Scenario 6: <br>
   * ReadNoSnpSep is send from an HN with sep read and sep resp enabled.
   * Scenario 7: <br>
   * CHI ISSUE E specific transaction request is seen for a CHI-E or later compliant RN.
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * A PrefetchTgt, ReadNotSharedDirty, ROMI, ROCI, PrefetchTgt or AtomicOps transaction request is seen for a CHI-A RN-F. <br>
   * Scenario 2: <br>
   * A PrefetchTgt transaction request is seen for a CHI-B or later RN-F. <br>
   * Scenario 3: <br>
   * A transaction of type other than WriteNoSnp and ReadNoSnp is received by an SN. <br>
   * Scenario 4: <br>
   * A DVMOp transaction is seen for an RN whose svt_chi_node_configuration::dvm_enable is 0. <br>
   * Scenario 5: <br>
   * A DVMOp transaction is seen for an RN-I. <br>
   * Scenario 6: <br>
   * ReadNoSnpSep is seen by an SN for a CHI-B or before. <br>
   * Scenario 7: <br>
   * ReadNoSnpSep is send from an HN with sep read and sep resp disabled. <br>
   * Scenario 8: <br>
   * CHI ISSUE E specific transaction request is seen for a CHI-D or earlier compliant RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * VIP CHI-E or later SN currently does not support combined write and (P)CMO transactions. <br>
   * VIP CHI-B or later RN currently does not support Prefetch transactions. <br>
   * VIP CHI-B or later SN currently does not support AtomicOps and CMO transactions. <br>
   * The check will be updated once support for these transactions is added.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats expected_xact_type_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that there are no outstanding DVMOp(Non-sync) transactions when a DVMOp(Sync) request is received. <br>
   * - All previous DVMOp requests whose completion needs to be guaranteed by the DVMOp(Sync) must have received a
   *   Comp response before the RN can send a DVMOp(Sync).
   * .
   * @end_check_description
   * 
   * @check_pass
   * When svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_ALL_NON_SYNC_TO_COMPLETE and a DVMOp(sync) request is received and there are no outstanding DVM(Non-sync) requests at the RN.
   * When svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_NON_SYNC_FROM_SAME_LPID_TO_COMPLETE and a DVMOp(sync) request is received and there are no outstanding DVM(Non-sync) requests with the same LPID at the RN.
   * @end_check_pass
   *
   * @check_fail
   * When svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_ALL_NON_SYNC_TO_COMPLETE and a DVMOp(sync) request is received but there are one or more outstanding DVM(Non-sync) requests at the RN.
   * svt_chi_node_configuration::dvm_sync_transmission_policy is set to WAIT_FOR_NON_SYNC_FROM_SAME_LPID_TO_COMPLETE and a DVMOp(sync) request is received but there are one or more outstanding DVM(Non-sync) requests with the same LPID at the RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1) and 
   * svt_chi_node_configuration::dvm_sync_transmission_policy is set to a value other than DO_NOT_WAIT_FOR_NON_SYNC_TO_COMPLETE.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats expected_dvmop_sync_request_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that there are no outstanding DVMOp(Sync) transactions when a DVMOp(Sync) request is received. <br>
   * SYNOPSYS DEFINED <br> 
   * Not more than one DVMOp(Sync) transaction is expected to be outstanding from an RN at any given point in time, when svt_chi_node_configuration::allow_multiple_dvm_sync_oustanding_xacts is set to 0.
   * @end_check_description
   * 
   * @check_pass
   * A DVMOp(sync) request is received and there are no outstanding DVM(Sync) requests at the RN.
   * @end_check_pass
   *
   * @check_fail
   * A DVMOp(sync) request is received but there already is an outstanding DVM(Sync) requests at the RN.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1) and svt_chi_node_configuration::allow_multiple_dvm_sync_oustanding_xacts is set to 0.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats single_outstanding_dvmop_sync_request_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the part numbers of the SnpDVMOp request packets are set correctly. <br>
   * Part number must be 0b0 for SnpDVMOp Part 1 and 0b1 for SnpDVMOp Part 2.
   * @end_check_description
   * 
   * @check_pass
   * SnpDVMOp_Part1 and SnpDVMOp_Part2 request flits corresponding to a DVM Snoop transaction are received and the part numbers are set correctly.
   * @end_check_pass
   *
   * @check_fail
   * Two SnpDVMOp_Part request flits corresponding to a DVM Snoop transaction are received but the part numbers of the two parts are the same.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_snpdvmop_req_part_num_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the order of the responses sent by the Completer is correct in case of DVMOp transactions. <br>
   * Completer first returns a DBIDResp indicating that it can receive data and sends a Comp Response after the data transfer is complete.
   * When the spec_revision is ISSUE_D or later and the DVMOp is a Non-sync DVMOp, then the interconnect is permitted but not required to wait for WriteData before sending the Comp.
   * Currently VIP does not support early COMP support for DVM transaction.
   * @end_check_description
   * 
   * @check_pass
   * A Comp response is received after the DBIDResp/WriteData flit.
   * @end_check_pass
   *
   * @check_fail
   * A Comp response is received before DBIDResp/WriteData flit. 
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_order_of_dvmop_rspflits_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that only Comp Response is used for DVMOp transactions, and not CompDBIDResp <br>
   * When the spec_revision is ISSUE_D or later the Completer is permitted to opportunistically combine Comp and DBIDResp into CompDBIDResp response. 
   * This is applicable only in case of early comp support. Currently VIP does not support early COMP support for DVM transaction. 
   * A Comp response, with the Resp field set to zero, is always used for Barrier and DVM transaction completion. 
   * @end_check_description
   * 
   * @check_pass
   * A Comp response is received for a DVMOp transaction.
   * @end_check_pass
   *
   * @check_fail
   * A CompDBIDResp flit is received for a DVMOp transaction.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_rspflit_for_dvmop_check;

/**
   * @groupname chi_protocol_err_dvmop_check
   * @check_description
   * Check that the unused bits in the Write data of a DVMOp transaction are set to zero. <br>
   * @end_check_description
   * 
   * @check_pass
   * All the bits in the DVMOp write data that are not valid or unused are set to zero.
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Bits corresponding to data[55:51] are set to a non-zero values. <br>
   * SCENARIO 2: <br>
   * VA Valid is 0, but the bits corresponding to data[50:4] are set to non-zero values. <br>
   * SCENARIO 3: <br>
   * VA Valid is set to 1 in the DVMOp transaction request that is Invalidate by PA, but bits corresponding to data[50:(`SVT_CHI_MAX_PA_WIDTH-2)] are set to non-zero values. <br>
   * SCENARIO 4: <br>
   * VA Valid is set to 1 in the DVMOp transaction request that is not Invalidate by PA, but bits corresponding to data[50:(`SVT_CHI_MAX_VA_WIDTH-2)] are set to non-zero values. <br>
   * SCENARIO 5: <br>
   * In case of CHI-A, bits corresponding to data[63:56] are set to non-zero values. <br>
   * SCENARIO 6: <br>
   * In case of CHI-B or greater revisions, VMID Valid in the DVMOp transaction request is set to 0 but the bits corresponding to data[63:56] are set to non-zero values. <br>
   * SCENARIO 7: <br>
   * In case of CHI-D or earlier revisions, the bits corresponding to data[3:0] are set to non-zero values. <br>
   * SCENARIO 8: <br>
   * In case of CHI-E or greater revisions, for a DVM operation that is not Invalidate by VA type TLBI, the bits corresponding to data[3:0] are set to non-zero values. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1). 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats unused_bits_in_dvm_write_data_check;


/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that a single transaction does not mix OK and EXOK responses within its data packets . <br>
   * A single transaction is not permitted to mix OK and EXOK responses. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the data flits corresponding to a transaction are all set to the same value.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the data flits corresponding to a transaction are not set to the same value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats single_xact_mix_ok_exok_response_check;

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Check that the resp field has the same value for all data flits of a multi-flit data transfer  . <br>
   * The resp field in a response must have the same value for every packet of a data message regardless of whether or not there is an error condition. 
   * @end_check_description
   * 
   * @check_pass
   * The Resp field in the data flits corresponding to a transaction are all set to the same value.
   * @end_check_pass
   *
   * @check_fail
   * The Resp field in the data flits corresponding to a transaction are not set to the same value.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_resp_for_data_packet_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadNoSnp transaction. <br>
   * The Exclusive Okay response must only be given for a transaction that has the Excl attribute set. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadNoSnp transaction are as per Table 9-2 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadNoSnp request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadNoSnp request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readnosnp_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadOnce transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadOnce transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadOnce transaction are as per Table 9-2 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadOnce transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readonce_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadClean transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadClean transaction are as per Table 9-2 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadClean request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadClean request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readclean_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadShared transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadShared transaction are as per Table 9-2 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadShared request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadShared request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readshared_associated_compdata_packets_legal_resperr_check;

  `ifdef SVT_CHI_ISSUE_C_ENABLE
  /**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the DataSource field in the associated Compdata packets have a valid value. <br>
   * @end_check_description
   * 
   * @check_pass
   * The DataSource field in the associated DataSepResp flits from the Interconnect are set to zero and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0.
   * The DataSource field in the associated DataSepResp flits from the Interconnect are set and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The DataSource field in the associated DataSepResp flits from the Interconnect are set to non-zero values but svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later. <br>
   * and if any of the HNs uses RespSepData DataSepResp Flow 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_data_source_in_datasepresp_check;
  `endif

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_data_source_checks
   * @check_description
   * Check that the DataSource field in the associated Compdata packets have a valid value. <br>
   * @end_check_description
   * 
   * @check_pass
   * The DataSource field in the associated Compdata flits from the Interconnect are set to zero and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0. <br>
   * The DataSource field in the associated Compdata flits from the Interconnect are set and svt_chi_system_configuration::data_source_supported_by_interconnect is set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The DataSource field in the associated Compdata flits from the Interconnect are set to non-zero values but svt_chi_system_configuration::data_source_supported_by_interconnect is set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_data_source_in_compdata_check;

/**
   * @groupname chi_protocol_err_valid_data_source_checks
   * @check_description
   * Check that the DataSource field in the associated snprespdataptl,snprespdata packets have a valid value. <br>
   * @end_check_description
   * 
   * @check_pass
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction should not take values DATA_SOURCE_UNSUPPORTED, PREFETCHTGT_WAS_USEFUL, PREFETCHTGT_WAS_NOT_USEFUL when svt_chi_node_configuration::data_source_enable is set to 1. <br>
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction should take value DATA_SOURCE_UNSUPPORTED when svt_chi_node_configuration::data_source_enable is set to 0.
   * @end_check_pass
   *
   * @check_fail
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction set to one of the values DATA_SOURCE_UNSUPPORTED, PREFETCHTGT_WAS_USEFUL, PREFETCHTGT_WAS_NOT_USEFUL when svt_chi_node_configuration::data_source_enable is set to 1.
   * The DataSource field in the associated snprespdata or snprespdataptl flits of a snoop transaction not set to the value DATA_SOURCE_UNSUPPORTED when svt_chi_node_configuration::data_source_enable is set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_data_source_in_snprespdata_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadNotSharedDirty transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadNotSharedDirty transaction are as per Table 9-2 in the CHI-B or later Specification.
   * If RespErr is EXOK, the exclusive attribute in the ReadNotSharedDirty request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits are set to EXOK but the Exclusive attribute in the ReadNotSharedDirty request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readnotshareddirty_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadSpec transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadSpec transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadSpec transaction are as per the CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadSpec transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response has valid resp_err value for ReadSpec transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for ReadSpec transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response of a ReadSpec transaction is as per the CHI-E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response of a ReadSpec transaction is set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadOnceCleanInvalid transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadOnceCleanInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadOnceCleanInvalid transaction are as per Table 9-2 in the CHI-B or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadOnceCleanInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readoncecleaninvalid_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadOnceMakeInvalid transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadOnceMakeInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadOnceMakeInvalid transaction are as per Table 9-2 in the CHI-B or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadOnceMakeInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readoncemakeinvalid_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanSharedPersist transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for CleanSharedPersist transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanSharedPersist transaction are as per Table 9-3 in the CHI-B or later Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a CleanSharedPersist transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleansharedpersist_associated_comp_response_legal_resperr_check;

`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Compdata packet has valid resp_err value for ReadUnique transaction. <br>
   * The associated compdata packet's resp_err field should not take EXOK value for ReadUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Compdata flits of a ReadUnique transaction are as per Table 9-2 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Compdata flits of a ReadUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readunique_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanShared transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for CleanShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanShared transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a CleanShared transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleanshared_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanInvalid transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for CleanInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanInvalid transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a CleanInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleaninvalid_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for CleanUnique transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a CleanUnique transaction are as per Table 9-3 in the CHI Specification.
   * If RespErr is EXOK, the exclusive attribute in the CleanUnique request was set to 1.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits are set to EXOK but the Exclusive attribute in the CleanUnique request was set to 0.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats cleanunique_associated_comp_response_legal_resperr_check;


/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for MakeInvalid transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for MakeInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a MakeInvalid transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a MakeInvalid transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makeinvalid_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for MakeUnique transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for MakeUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a MakeUnique transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a MakeUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makeunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for Evict transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK or DERR value for Evict transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of an Evict transaction are as per Table 9-3 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of an Evict transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats evict_associated_comp_response_legal_resperr_check;

  `ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp or RespSepData response flit has valid resp_err value for MakeReadUnique transaction. <br>
   * The associated Comp or RespSepData response flit's resp_err field should not take EXOK for MakeReadUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The RespErr field in the associated Comp response flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated RespSepData response flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The RespErr field in the associated Comp response flit of a MakeReadUnique transaction is set to EXOK. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated RespSepData response flit of a MakeReadUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makereadunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated CompData or DataSepResp flits have valid resp_err value for MakeReadUnique transaction. <br>
   * The associated CompData or DataSepResp flit's resp_err field should not take EXOK for MakeReadUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a MakeReadUnique transaction is set to EXOK response. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a MakeReadUnique transaction is set to EXOK. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a MakeReadUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makereadunique_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated CompData or DataSepResp flits have valid resp_err value for ReadPreferUnique transaction. <br>
   * The associated CompData or DataSepResp flit's resp_err field should not take EXOK for ReadPreferUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a ReadPreferUnique transaction is set to EXOK response. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a ReadPreferUnique transaction is set to EXOK response. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The RespErr field in the associated CompData flit of a ReadPreferUnique transaction is set to EXOK. <br>
   * Scenario 2: <br>
   * The RespErr field in the associated DataSepResp flit of a ReadPreferUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readpreferunique_associated_compdata_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp or RespSepData packet has valid cache state value for a MakeReadUnique transaction. <br>
   * The cache state in the associated Comp or RespSepData flits of a MakeReadUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp or RespSepData is set to UC or UD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp or RespSepData is set to SC or SD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makereadunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated CompData or DataSepResp packet has valid cache state value for a MakeReadUnique transaction. <br>
   * The cache state in the associated CompData or DataSepResp flits of a MakeReadUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData or DataSepResp is set to UC or UD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData or DataSepResp is set to SC or SD for a non-exclusive MakeReadUnique transaction. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makereadunique_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated CompData or DataSepResp packet has valid cache state value for a ReadPreferUnique transaction. <br>
   * The cache state in the associated CompData or DataSepResp flits of a ReadPreferUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData or DataSepResp is set to UC UD or SC for a ReadPreferUnique transaction. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData or DataSepResp is set to I or SD for a ReadPreferUnique transaction. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readpreferunique_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Checks that either all or none of the data flits sent by a completer in response to a READ transaction have the RespErr field set to NDERR. <br> 
   * @end_check_description
   * 
   * @check_pass
   * If RespErr fields in all the data_packets issued in response to READ request is set to NDERR.<br>
   * If RespErr field in none of the data packets issued in response to READ request is set to NDERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * If RespErr field in some of the data packets issued in response to READ request is set to NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN.
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_combination_of_data_resp_err_field_in_read_xact_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the home node sends a data response for a MakeReadUnique transaction if the line is not cached at the requester at the time of response. <br>
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: <br>
   * The active RN-F receives a data response for a MakeReadUnique transaction when the line is no longer cached at the RN-F. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * The active RN-F receives a dataless response for a MakeReadUnique transaction even though the line is no longer cached at the RN-F. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats expected_response_for_makereadunique_xact_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the data returned in the data response for a MakeReadUnique is the same as the data cached in the Requester when the 
   * cachestate at the requester before receiving the response is SC and the final state in the associated data response is UD. <br>
   * This check is applicable only when there are no error responses seen in the data response for the MakeReadUnique and the data cached in the RN is not poisoned.
   * @end_check_description
   * 
   * @check_pass
   * A data response with final state set to UD is received for a MakeReadUnique transaction even though the line is cached in SC state at the RN and
   * the Read data matches the cache data. <br>
   * @end_check_pass
   *
   * @check_fail
   * A data response with final state set to UD is received for a MakeReadUnique transaction even though the line is cached in SC state at the RN and
   * the Read data does not match the cache data. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Active RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * - This check will not be performed in the following cases:
   *   - Error response is received in the received MakeReadUnique read data.
   *   - Poison is set to a non-zero value in the received MakeReadUnique read data.
   *   - DataCheck error is detected in the received MakeReadUnique read data.
   *   - Poison is set to a non-zero value in the RN cache.
   *   .
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats makereadunique_data_response_cache_data_match_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the final state in the Snoop response for a non-invaldating type snoop is not I if
   * there is already an outstanding MakeReadUnique transaction to the same cacheline given that the snoop response does not indicate a NON_DATA_ERROR. 
   * The MakeReadUnique transaction will be considered only if there were no prior invalidating type Snoops seen 
   * while the MakeReadUnique was outstanding. In other words, this check will not be performed if the RN had already received a 
   * an invalidating type Snoop overlapping with the MakeReadUnique.
   * @end_check_description
   * 
   * @check_pass
   * There is an outstanding MakeReadUnique transaction when a non-invaldating type Snoop request is received and the RN-F sets the final state
   * in the Snoop response to a value other than I. <br>
   * @end_check_pass
   *
   * @check_fail
   * There is an outstanding MakeReadUnique transaction when a non-invaldating type Snoop request is received but the RN-F sets the final state
   * in the Snoop response to I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the macro SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_final_state_for_non_invalidating_snp_when_outstanding_makereadunique_to_same_cacheline_check;
  `endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadNoSnp transaction. <br>
   * The cache state in the associated CompData flits of a ReadNoSnp transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to a value other than I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to a value other than I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadNoSnp transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readnosnp_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadOnce transaction. <br>
   * The cache state in the associated CompData flits of a ReadOnce transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   * In case of a CHI-A node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to a value other than I. <br>
   * In case of a CHI-B or later node: <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to a value other than I or UC when DMT is not used. <br>
   *  final cache state in the CompData of a ReadOnce transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readonce_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadClean transaction. <br>
   * The cache state in the associated CompData flits of a ReadClean transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadClean transaction is set to UC or SC. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadClean transaction is set to I, UD or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readclean_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadShared transaction. <br>
   * The cache state in the associated CompData flits of a ReadShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadShared transaction is set to UC, UD, SC or SD. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadShared transaction is set to I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readshared_associated_compdata_packets_legal_cache_state_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadNotSharedDirty transaction. <br>
   * The cache state in the associated CompData flits of a ReadNotSharedDirty transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadNotSharedDirty transaction is set to UC, UD or SC. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadNotSharedDirty transaction is set to I or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats readnotshareddirty_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadSpec transaction. <br>
   * The cache state in the associated CompData flits of a ReadSpec transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadSpec transaction is set to UC or SC. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadSpec transaction is set to UD, SD or I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a ReadSpec transaction. <br>
   * The cache state in the associated comp response of a ReadSpec transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a ReadSpec transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a ReadSpec transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_system_configuration::readspec_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readspec_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadOnceCleanInvalid transaction. <br>
   * The cache state in the associated CompData flits of a ReadOnceCleanInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to I or UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to a value other than I and UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceCleanInvalid transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readoncecleaninvalid_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadOnceMakeInvalid transaction. <br>
   * The cache state in the associated CompData flits of a ReadOnceMakeInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to I or UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to UC when DMT is used. <br>
   * @end_check_pass
   *
   * @check_fail
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to a value other than I and UC when DMT is not used. <br>
   *  Final cache state in the CompData of a ReadOnceMakeInvalid transaction is set to a value other than UC when DMT is used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readoncemakeinvalid_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response packet has valid cache state value for a CleanSharedPersist transaction. <br>
   * The cache state in the associated comp response packets of a CleanSharedPersist transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanSharedPersist transaction is set to UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanSharedPersist transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleansharedpersist_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT is applicable only for the following transactions: Readclean, Readshared, Readunique, RNSD, Readnosnp, Readonce, ROCI, ROMI, ReadPreferUnique and MakeReadUnique
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for the transaction types mentioned in the description.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used for transaction types apart from the ones mentioned in the description.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or later is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_transaction_supporting_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT for Readnosnp, Readonce, ROCI and ROMI can be used only for the following combinations of order and compack
   * - No ordering and No compack
   * - No ordering and compack
   * - Ordering and compack
   * .
   * DMT for Readnosnp, Readonce, ROCI and ROMI cannot be used with ordering and No compack 
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for one of the valid combinations of transaction type, order and compack mentioned in the description.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used for a combination of transaction type, order and compack apart from the ones mentioned in the decription.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or later is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_ordering_and_compack_combination_for_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * Exclusive transaction other than ReadPreferUnique and MakeReadunique that do not fail must not use DMT flow.
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for a Read transaction expect for ReadPreferUnique and MakeReadUnique with excluisve bit set to 0 or
   * when the exclusive read fails with NORMAL_OKAY response.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used for a Read transaction expect for ReadPreferUnique and MakeReadUnique with excluisve bit set to 1 and 
   * the excluisve read passes with EXOKAY response.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or later is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_exclusive_access_for_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * Order field can be set to REQ_ACCEPTED for readnosnp from HN to SN only when DMT is used
   * @end_check_description
   * 
   * @check_pass
   * Order field is set to REQ_ACCEPTED in a DMT ReadNoSnp from HN to SN. <br>
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: <br>
   * Order field is set to REQ_ACCEPTED in any transaction request issued by RN. <br> 
   * Scenario 2: <br>
   * Order field is set to REQ_ACCEPTED in a WriteNoSnp request issued by HN. <br>
   * Scenario 3: <br>
   * Order field is set to REQ_ACCEPTED in a ReadNoSnp from HN to SN, but DMT is not used. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_order_type_for_non_dmt_check;

/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * A transaction request from Home to Slave also includes a ReturnTxnID field to convey the value of TxnID in the
   * data response from the Slave. Its value, when applicable, must be either:
   * - The TxnID generated by Home, when the ReturnNID is the Node ID of the Home when DMT is not used
   * - The TxnID of the original Requester, when the ReturnNID is the Node ID of the original Requester when DMT is used
   * .
   * @end_check_description
   * 
   * @check_pass
   * DMT is used and the ReturnTxnID in the request is set to the TxnID of the corresponding request issued by RN.
   * DMT is not used and the ReturnTxnID is set to the same value as the TxnID field.
   * @end_check_pass
   *
   * @check_fail
   * DMT is used but the ReturnTxnID in the request is not set to the TxnID of the corresponding request issued by RN.
   * DMT is not used but the ReturnTxnID is not set to the same value as the TxnID field.
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_return_txn_id_check;
 
 /**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT can be used by an HN only when DMT is enabled for that HN through svt_chi_system_configuration::set_hn_dmt_enable()
   * @end_check_description
   * 
   * @check_pass
   * DMT is used by an HN and DMT is enabled for that HN through svt_chi_system_configuration::set_hn_dmt_enable()
   * @end_check_pass
   *
   * @check_fail
   * DMT is used by an HN and DMT is not enabled for that HN through svt_chi_system_configuration::set_hn_dmt_enable()
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision 
   * is set to ISSUE_B. 
   * - Note that CHI Interconnect VIP doesn't support DMT, so it's not allowed to enable DMT for any HN along with
   * enabling VIP Interconnect (svt_chi_system_configuration::use_interconnect = 1).
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dmt_used_by_hn_with_dmt_enabled_check;

  /**
   * @groupname chi_protocol_cmo_check
   * @check_description
   * SN can receive CleanSharedPersist/CleanSharedPersistSep transaction from HN only when svt_chi_hn_configuration attribute forward_persist_cmos_to_slave_enable is set.
   * @end_check_description
   * 
   * @check_pass
   * If SN receives CleanSharedPersist/CleanSharedPersistSep transaction and the svt_chi_hn_configuration attribute forward_persist_cmos_to_slaves_enable was set.
   * @end_check_pass
   *
   * @check_fail
   * If SN receives CleanSharedPersist/CleanSharedPersistSep transaction and the svt_chi_hn_configuration attribute forward_persist_cmos_to_slaves_enable was set.
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision 
   * is set to ISSUE_B. 
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats persist_cmos_forwarded_to_slave_by_hn_with_forward_persist_cmos_to_slave_enable_check;

  /**
   * @groupname chi_protocol_cmo_check
   * @check_description
   * SN can receive CleanShared, CLeanInvalid, MakeInvalid transaction from HN only when svt_chi_hn_configuration attribute forward_cmos_to_slaves_enable is set.
   * @end_check_description
   * 
   * @check_pass
   * If SN receives CleanShared, CLeanInvalid, MakeInvalid  transaction and the svt_chi_hn_configuration attribute forward_cmos_to_slaves_enable was set.
   * @end_check_pass
   *
   * @check_fail
   * If SN receives CleanShared, CLeanInvalid, MakeInvalid  transaction and the svt_chi_hn_configuration attribute forward_cmos_to_slaves_enable was set.
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN 
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision 
   * is set to ISSUE_B. 
   * - Note that CHI Interconnect VIP doesn't support forwarding of CleanShared, CLeanInvalid, MakeInvalid  transaction to SN, so it's not allowed to enable 
   * forward_cmos_to_slaves_enable for any HN along with
   * enabling VIP Interconnect (svt_chi_system_configuration::use_interconnect = 1).
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cmos_forwarded_to_slave_by_hn_with_forward_cmos_to_slave_enable_check;
  
  /**
    * @groupname chi_protocol_trace_tag_check 
    * @check_description 
    * The response or data packet should have the valid trace_tag value in response to the request packet.
    * @end_check_description
    *
    * @check_pass
    * - If trace tag in request is set to 1 and the spawned response or data packet has the same value of trace tag.
    * - If svt_chi_system_configuration::loopback_trace_tag is set to 1 and request's trace_tag is equal to spawned response or data packet's trace_tag.  
    * .
    * @end_check_pass
    *
    * @check_fail
    * - If trace tag in request is set to 1 and the spawned response or data packet has the value set to 0.
    * - If svt_chi_system_configuration::loopback_trace_tag is set to 1 and request's trace_tag is not equal to spawned response or data packet's trace_tag.  
    * .
    * @end_check_fail
    *
    * @applicable_device_type
    * @end_applicable_device_type
    *
    * @check_additional_information
    * @end_check_additional_information      
   */
  svt_err_check_stats trace_tag_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * - A transaction that permits it to cache a coherent location should be issued only in the coherency_enabled state.
    * - If svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1 then any transaction should be issued only in the coherency_enabled state. 
    * .
    * @end_check_description
    *
    * @check_pass
    * A transaction that permits it to cache a coherent location is issued in the coherency_enabled state.
    * @end_check_pass
    *
    * @check_fail
    * A transaction that permits it to cache a coherent location is issued in the state other than coherency_enabled.
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_coherency_enabled_state_traffic_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * - All coherent transactions that can be cached must be completed before entering COHERENCY_DISCONNECT_STATE.
    * - If svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1 then there should not be any outstanding transactions in COHERENCY_DISCONNECT_STATE. 
    * .
    * @end_check_description
    *
    * @check_pass
    * - All coherent transactions that can be cached are completed before entering COHERENCY_DISCONNECT_STATE.
    * - When svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1, there aren't any outstanding transactions in COHERENCY_DISCONNECT_STATE. 
    * .
    * @end_check_pass
    *
    * @check_fail
    * - All coherent transactions that can be cached are not completed before entering COHERENCY_DISCONNECT_STATE.
    * - When svt_chi_node_configuration::block_all_transactions_until_coherency_enabled is set to 1, there are still outstanding transactions in COHERENCY_DISCONNECT_STATE. 
    * .
    * @end_check_fail
    *
    * @applicable_device_type
    * Passive RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_coherency_disconnect_state_traffic_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * During COHERENCY_DISABLED_STATE there should not be any outstanding snoop transactions.
    * @end_check_description
    *
    * @check_pass
    * During COHERENCY_DISABLED_STATE there aren't any outstanding snoop transactions.
    * @end_check_pass
    *
    * @check_fail
    * During COHERENCY_DISABLED_STATE there are outstanding snoop transactions.
    * @end_check_fail
    *
    * @applicable_device_type
    * RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_coherency_disabled_state_traffic_validity_check;

  /**
    * @groupname chi_protocol_sysco_interface_check 
    * @check_description 
    * Interconnect can send snoops only in COHERENCY_CONNECT and COHERENCY_ENABLED state.
    * @end_check_description
    *
    * @check_pass
    * Interconnect sends snoops in COHERENCY_CONNECT and COHERENCY_ENABLED state.
    * @end_check_pass
    *
    * @check_fail
    * Interconnect send snoops in COHERENCY_DISCONNECT or COHERENCY_DISABLED state.
    * @end_check_fail
    *
    * @applicable_device_type
    * RN-F and RN-D with DVM enabled
    * @end_applicable_device_type
    *
    * @check_additional_information
    * - This check is applicable only when the macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. 
    * - Applicable only when svt_chi_node_configuration::sysco_interface_enable is set to 1.
    * . 
    * @end_check_additional_information      
   */
  svt_err_check_stats sysco_interface_snoop_traffic_validity_check;

`endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Compdata packet has valid cache state value for a ReadUnique transaction. <br>
   * The cache state in the associated CompData flits of a ReadUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the CompData of a ReadUnique transaction is set to UD or UC.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the CompData of a ReadUnique transaction is set to SD, SC or I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats readunique_associated_compdata_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a CleanShared transaction. <br>
   * The cache state in the associated comp response of a CleanShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanShared transaction is set to UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanShared transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleanshared_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a CleanInvalid transaction. <br>
   * The cache state in the associated comp response of a CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanInvalid transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanInvalid transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleaninvalid_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a CleanUnique transaction. <br>
   * The cache state in the associated comp response of a CleanUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a CleanUnique transaction is set to UC.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a CleanUnique transaction is set to a value other than UC.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats cleanunique_associated_comp_response_legal_cache_state_check;


/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a MakeInvalid transaction. <br>
   * The cache state in the associated comp response of a MakeInvalid transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a MakeInvalid transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a MakeInvalid transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN, Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makeinvalid_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a MakeUnique transaction. <br>
   * The cache state in the associated comp response of a MakeUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a MakeUnique transaction is set to UC.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a MakeUnique transaction is set to a value other than UC.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats makeunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a Evict transaction. <br>
   * The cache state in the associated comp response of an Evict transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of an Evict transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of an Evict transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats evict_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteNoSnp transaction. <br>
   * The associated data packet's resp_err field should not take EXOK or NDERR value for WriteNoSnp transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnp transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteNoSnp transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnp transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteNoSnp transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnp_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteUnique transaction. <br>
   * The associated Comp and CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUnique transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteUnique transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUnique transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteUnique transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeunique_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packets has valid resp_err value for WriteNoSnpZero transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: 
   * - The RespErr field in the associated DBIDResp response of a WriteNoSnpZero transaction is set to NORMAL_OKAY. 
   * - The RespErr field in the associated Comp response of a WriteNoSnpZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR. 
   * .
   * SCENARIO 2: 
   * - The RespErr field in the associated CompDBIDResp response of a WriteNoSnpZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR.
   * .
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1:
   * - The RespErr field in the associated DBIDResp response of a WriteNoSnpZero transaction is set to values other than NORMAL_OKAY. 
   * .
   * SCENARIO 2:
   * - The RespErr field in the associated Comp response of a WriteNoSnpZero transaction is set to EXCLUSIVE_OKAY. 
   * .
   * SCENARIO 3:
   * - The RespErr field in the associated CompDBIDResp response of a WriteNoSnpZero transaction is set to EXCLUSIVE_OKAY. 
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpzero_associated_response_packets_legal_resperr_check;
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response packets has valid resp_err value for WriteUniqeZero transaction.
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: 
   * - The RespErr field in the associated DBIDResp response of a WriteUniqeZero transaction is set to NORMAL_OKAY. 
   * - The RespErr field in the associated Comp response of a WriteUniqeZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR. 
   * .
   * SCENARIO 2: 
   * - The RespErr field in the associated CompDBIDResp response of a WriteUniqeZero transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR.
   * .
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1:
   * - The RespErr field in the associated DBIDResp response of a WriteUniqeZero transaction is set to values other than NORMAL_OKAY. 
   * .
   * SCENARIO 2:
   * - The RespErr field in the associated Comp response of a WriteUniqeZero transaction is set to EXCLUSIVE_OKAY.
   * .
   * SCENARIO 3:
   * - The RespErr field in the associated CompDBIDResp response of a WriteUniqeZero transaction is set to EXCLUSIVE_OKAY.  
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquezero_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated comp response packet has valid resp field for a WriteNoSnpZero transaction. <br>
   * The cache state indicated by resp field in the associated Comp response packet of a WriteNoSnpZero transaction should take a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the comp response flit of a WriteNoSnpZero transaction is set to 'I' (Resp field in the comp response set to zero).
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the comp response flit of a WriteNoSnpZero transaction is set to a value other than 'I' (Resp field in the comp response set to a value other than zero).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpzero_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated comp response packet has valid resp field for a WriteUniqueZero transaction. <br>
   * The cache state indicated by resp field in the associated Comp response packet of a WriteUniqueZero transaction should take a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the comp response flit of a WriteUniqueZero transaction is set to 'I' (Resp field in the comp response set to zero).
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the comp response flit of a WriteUniqueZero transaction is set to a value other than 'I' (Resp field in the comp response set to a value other than zero).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquezero_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_custom_check
   * @check_description
   * Checks that the SNPQUERY is generated for valid transaction types <br>
   * @end_check_description
   * 
   * @check_pass
   * SNPQUERY is generated for exclusive MakereadUnique when Snoop filter is disabled at the Interconnect.
   * @end_check_pass
   *
   * @check_fail
   * - SNPQUERY is issued for transaction other than MakeReadUnique. 
   * - SNPQUERY is issued for non exclusive MakeReadUnique.
   * - SNPQUERY is issued when Snoop filter is enabled at the Interconnect.
   * - SNPQUERY is issued, however there are no outstanding transaction to the same cache line.  
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and 
   * svt_chi_node_configuration::enable_custom_snp_query_check is set to 1.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats expected_snpquery_custom_check;
`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteBack transaction. <br>
   * The associated CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteBack transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBack transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteBack transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBack transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteBack transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeback_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteClean transaction. <br>
   * The associated CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteClean transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteClean transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteClean transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteClean transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteClean transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeclean_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteEvict transaction. <br>
   * The associated CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteEvict transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteEvict transaction are as per Table 9-5 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteEvict transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteEvict transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteEvict transaction violate the legal values specified in Table 9-4 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeevict_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteEvictorEvict transaction.
   * - The associated CompDBIDResp should not take EXOK resp_err value for WriteEvictorEvict transaction.
   * - The associated Comp should not take EXOK or DATA_ERROR resp_err value for WriteEvictorEvict transaction.
   * - The associated write data packets should not take EXOK or NON_DATA_ERROR resp_err value for WriteEvictorEvict transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteEvictorEvict transaction should take a legal value as per CHI ISSUE E Specification. <br>
   * The RespErr field in the associated response flits of a WriteEvictorEvict transaction should take a legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteEvictorEvict transaction are set to EXOK or NDERR. <br>
   * The RespErr field in the associated response flits of a WriteEvictorEvict transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Write data in Passive RN_F. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Comp/CompDBIDResp response in both Active and Passive RN_F.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeevictorevict_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpFull_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpFull_CleanSharedPersitSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpFull_CleanSharedPersitSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanSharedPersitsSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanSharedPersitsSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpFull_CleanSharedPersitsSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpFull_CleanInvalid transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpFull_CleanInvalid transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanInvalid transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpFull_CleanInvalid transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpFull_CleanInvalid transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanInvalid transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpFull_CleanInvalid transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpPtl_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpPtl_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpPtl_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpPtl_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpPtl_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpPtl_CleanSharedPersistSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpPtl_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteNoSnpPtl_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteNoSnpPtl_CleanInvalid transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteNoSnpPtl_CleanInvalid transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanInvalid transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteNoSnpPtl_CleanInvalid transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteNoSnpPtl_CleanInvalid transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanInvalid transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteNoSnpPtl_CleanInvalid transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniqueFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniqueFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniqueFull_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniqueFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniqueFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniqueFull_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniqueFull_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniqueFull_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniqueFull_CleanSharedPersistSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniqueFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniqueFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniquePtl_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniquePtl_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniquePtl_CleanShared transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniquePtl_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO) of a WriteUniquePtl_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteUniquePtl_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteUniquePtl_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniquePtl_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteUniquePtl_CleanSharedPersistSep transaction.
   * - The associated responses (Comp, CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniquePtl_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(Comp, CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteUniquePtl_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteBackFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteBackFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteBackFull_CleanShared transaction.
   * - The associated responses (CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteBackFull_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteBackFull_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteBackFull_CleanSharedPersistSep transaction.
   * - The associated responses (CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteBackFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteBackFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteBackFull_CleanInvalid transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteBackFull_CleanInvalid transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanInvalid transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteBackFull_CleanInvalid transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleaninvalid_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteBackFull_CleanInvalid transaction.
   * - The associated responses (CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanInvalid transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteBackFull_CleanInvalid transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writebackfull_cleaninvalid_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteCleanFull_CleanShared transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteCleanFull_CleanShared transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanShared transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanShared transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleanshared_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteCleanFull_CleanShared transaction.
   * - The associated responses (CompDBIDResp, CompCMO) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteCleanFull_CleanShared transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO) of a WriteCleanFull_CleanShared transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleanshared_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated write data flits has valid resp_err value for WriteCleanFull_CleanSharedPersistSep transaction.
   * - The associated write data flits should not take EXOK or NON_DATA_ERROR resp_err value for WriteCleanFull_CleanSharedPersistSep transaction.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanSharedPersistSep transaction is set to a legal value (NORMAL_OKAY or DATA_ERROR) as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteCleanFull_CleanSharedPersistSep transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleansharedpersistsep_associated_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response flits has valid resp_err value for WriteCleanFull_CleanSharedPersistSep transaction.
   * - The associated responses (CompDBIDResp, CompCMO, Persist, CompPersist) should not take EXOK resp_err value.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteCleanFull_CleanSharedPersistSep transaction are set to legal values specified as per CHI ISSUE E Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated response flits(CompDBIDResp, CompCMO, Persist, CompPersist) of a WriteCleanFull_CleanSharedPersistSep transaction violate the legal values specified as per CHI ISSUE E Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writecleanfull_cleansharedpersistsep_associated_response_packets_legal_resperr_check;

`endif

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets have valid resp_err value for Atomic transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of an Atomic transaction are as per Table 9-7 in the CHI Specification.
   * The RespErr field in the associated Comp/CompDBIDResp flit of an AtomicStore transaction is as per Table 9-6 in the CHI Specification.
   * The RespErr field in the associated CompData flits of an AtomicLoad/Swap/Compare transaction are as per Table 9-6 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp/CompDBIDResp flit of an Atomic Store transaction is set to EXOK.
   * The RespErr field in the associated CompData flits of an Atomic Load/Swap/Compare transaction are set to EXOK or NDERR.
   * The RespErr field in the associated Write data flits of an Atomic transaction are set to EXOK or NDERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::atomic_transactions_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats atomic_associated_response_data_packets_legal_resperr_check;

  /**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response and data packets have valid cache state value for an Atomic transaction. <br>
   * The cache state in the associated response and data packets of an Atomic transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data of an Atomic transaction is set to I.
   * Final cache state in the Comp response of an Atomic transaction is set to I.
   * Final cache state in the returned initial data of an Atomic transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data of an Atomic transaction is set to a value other than I.
   * Final cache state in the Comp response of an Atomic transaction is set to a value other than I.
   * Final cache state in the returned initial data of an Atomic transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::atomic_transactions_enable is set to 1.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats atomic_associated_response_data_packets_legal_cache_state_check;
  
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteUniqueptlstash transaction. <br>
   * The associated Comp and CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteUniqueptlstash transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniqueptlstash transaction are as per Table 9-6 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteUniqueptlstash transaction are as per Table 9-5 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniqueptlstash transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteUniqueptlstash transaction violate the legal values specified in Table 9-5 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptlstash_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteUniqueptlstash transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniqueptlstash transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteUniqueptlstash transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteUniqueptlstash transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniqueptlstash_associated_response_data_packets_legal_cache_state_check;
  
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated response and data packets has valid resp_err value for WriteUniquefullstash transaction. <br>
   * The associated Comp and CompDBIDResp should not take EXOK value whereas data packet should not take EXOK or NDERR resp_err value for WriteUniquefullstash transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Write data flits of a WriteUniquefullstash transaction are as per Table 9-6 in the CHI Specification.
   * The RespErr field in the associated response flits of a WriteUniquefullstash transaction are as per Table 9-5 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Write data flits of a WriteUniquefullstash transaction are set to EXOK or NDERR.
   * The RespErr field in the associated response flits of a WriteUniquefullstash transaction violate the legal values specified in Table 9-5 in the CHI Specification.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefullstash_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteUniquefullstash transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniquefullstash transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteUniquefullstash transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteUniquefullstash transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeuniquefullstash_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for StashOnceUnique transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for StashOnceUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a StashOnceUnique transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a StashOnceUnique transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashonceunique_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a StashOnceUnique transaction. <br>
   * The cache state in the associated comp response of a StashOnceUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a StashOnceUnique transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a StashOnceUnique transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashonceunique_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated Comp response packet has valid resp_err value for StashOnceShared transaction. <br>
   * The associated comp response packet's resp_err field should not take EXOK value for StashOnceShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * The RespErr field in the associated Comp response flits of a StashOnceShared transaction are as per Table 9-4 in the CHI Specification.
   * @end_check_pass
   *
   * @check_fail
   * The RespErr field in the associated Comp response flits of a StashOnceShared transaction are set to EXOK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats stashonceshared_associated_comp_response_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated Comp response has valid cache state value for a StashOnceShared transaction. <br>
   * The cache state in the associated comp response of a StashOnceShared transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Comp response of a StashOnceShared transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Comp response of a StashOnceShared transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - svt_chi_node_configuration::cache_stashing_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats stashonceshared_associated_comp_response_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpUniqueStash transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUniqueStash transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUniqueStash transaction is set to OK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in RespSepData of a SnpUniqueStash transaction is set to OK or NDERR. <br>
   * SCENARIO 4: <br>
   * RespErr field in CompData or DataSepResp of a SnpUniqueStash transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUniqueStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUniqueStash transaction is set to EXOK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in RespSepData of a SnpUniqueStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 4: <br>
   * RespErr field in CompData or DataSepResp of a SnpUniqueStash transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquestash_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, RespSepData, DataSepResp or CompData packet has valid resp_err value for SnpMakeInvalidStash transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalidStash transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpMakeInvalidStash transaction is set to OK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpMakeInvalidStash transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalidStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpMakeInvalidStash transaction is set to EXOK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpMakeInvalidStash transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalidstash_associated_response_data_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpStashUnique transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashUnique transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashUnique transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashunique_associated_response_data_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpStashShared transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashShared transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashShared transaction is set to OK or NDERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashShared transaction is set to OK, NDERR or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpStashShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in RespSepData of a SnpStashShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 3: <br>
   * RespErr field in CompData or DataSepResp of a SnpStashShared transaction is set to EXOK. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashshared_associated_response_data_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp,RespSepData,DataSepResp or CompData has valid cache state for SnpMakeInvalidStash transaction. <br>
   * The cache state in the associated response of a SnpMakeInvalidStash transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Final cache state in the SnpResp of a SnpMakeInvalidStash transaction is set to I. <br>
   * SCENARIO 2: <br>
   * Final cache state in the RespSepData corresponding to a SnpMakeInvalidStash transaction with DataPull is set to I, UC or UD. <br>
   * SCENARIO 3: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpMakeInvalidStash transaction with DataPull is set to UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Final cache state in the SnpResp of a SnpMakeInvalidStash transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the RespSepData corresponding to a SnpMakeInvalidStash transaction with DataPull is set to SC or SD. <br>
   * SCENARIO 3: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpMakeInvalidStash transaction with DataPull is set to I, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalidstash_associated_response_data_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated RespSepData, DataSepResp or CompData has valid cache state for SnpStashUnique transaction. <br>
   * The cache state in the associated response of a SnpStashUnique transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashUnique transaction with DataPull is set to I, UC or UD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashUnique transaction with DataPull is set to UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashUnique transaction with DataPull is set to SC or SD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashUnique transaction with DataPull is set to I, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashunique_associated_response_data_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated RespSepData, DataSepResp or CompData has valid cache state for SnpStashShared transaction. <br>
   * The cache state in the associated response of a SnpStashShared transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashShared transaction with DataPull is set to I, SC, UC or UD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashShared transaction with DataPull is set to SC, UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * Final cache state in the RespSepData corresponding to a SnpStashShared transaction with DataPull is set to SD. <br>
   * SCENARIO 2: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpStashShared transaction with DataPull is set to I or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpstashshared_associated_response_data_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespData, RespSepData, DataSepResp or CompData has a valid cache state for SnpUniqueStash transaction. <br>
   * The cache state in the associated response of a SnpUniqueStash transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueStash transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUniqueStash transaction is set I. <br>
   * SCENARIO 3: <br>
   * Final cache state in the RespSepData corresponding to a SnpUniqueStash transaction with DataPull is set to I, UC or UD. <br>
   * SCENARIO 4: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpUniqueStash transaction with DataPull is set to UC or UD. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueStash transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUniqueStash transaction is set UC, UD, SC or SD. <br>
   * SCENARIO 3: <br>
   * Final cache state in the RespSepData corresponding to a SnpUniqueStash transaction with DataPull is set to SC or SD. <br>
   * SCENARIO 4: <br>
   * Final cache state in the CompData or DataSepResp corresponding to a SnpUniqueStash transaction with DataPull is set to I, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs..
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquestash_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the DataPull value in the Snoop response for a Stash type Snoop is set to a valid value. <br>
   * DataPull must not be set if DoNotDataPull in the Snoop requests was set to 1 or if there are ongoing transactions to the same cacheline. 
   * @end_check_description
   * 
   * @check_pass
   * DataPull is set in the Snoop response when the corresponding Snoop request had DoNotDataPull set to 1 and there are no outstanding requests to the same cacheline. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * DataPull is set in the Snoop response but the corresponding Snoop request had DoNotDataPull set to 1. <br>
   * SCENARIO 2 : <br>
   * DataPull is set in the Snoop response but there are outstanding coherent and/or outstanding Stash Snoops involving DataPull targeting the same cacheline. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash is enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats invalid_data_pull_in_snoop_response_check;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that the DBID value in the Snoop response for a Stash type Snoop is set to a unique value when DataPull is asserted. <br>
   * The DBID must not coincide with the TxnID of any of the outstanding transactions at the RN or the DBID of any of the outstanding Stash type Snoops involving DataPull. 
   * @end_check_description
   * 
   * @check_pass
   * DBID value in the SnpResp for a Stash type Snoop does not coincide with the TxnID of any of the outstanding transactions at the RN or the DBID of any of the outstanding Stash type Snoops involving DataPull. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * DBID value in the SnpResp for a Stash type Snoop matches with the TxnID of one of the outstanding transactions at the RN. <br>
   * SCENARIO 2 : <br>
   * DBID value in the SnpResp for a Stash type Snoop matches with the DBID of one of the outstanding Stash type Snoops involving DataPull. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_B or later
   * - Cache Stash and Data Pull are enabled for atleast one of the HN-Fs.
   * .
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats dbid_in_snoop_response_with_data_pull_check;
`endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteNoSnp transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnp transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteNoSnp transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteNoSnp transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writenosnp_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteUnique transaction. <br>
   * The cache state in the associated Write data flits of a WriteUnique transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the Write data flits of a WriteUnique transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the Write data flits of a WriteUnique transaction is set to a value other than I.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeunique_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteBack transaction. <br>
   * The cache state in the associated Write data flits of a WriteBack transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * - Final cache state of the Write data flits in a WriteBackPtl transaction is either UD or I.
   * - Final cache state of the Write data flits in a WriteBackPtl transaction is either UC or SC or SD and byte_enable is set to all 1's.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Final cache state of the Write data flits in a WriteBackPtl transaction is UC, SC or SD and byte_enable is not set to all 1's.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeback_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteClean transaction. <br>
   * The cache state in the associated Write data flits of a WriteClean transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state of the Write data flits in a WriteCleanPtl transaction is either UD or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state of the Write data flits in a WriteCleanPtl transaction is either UC, SC or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeclean_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data packets has valid cache state value for a WriteEvict transaction. <br>
   * The cache state in the associated Write data flits of a WriteEvict transaction should indicate a valid value when the RespErr field does not indicate any errors. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state of the Write data flits in a WriteEvict transaction is UC, SC or I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state of the Write data flits in a WriteEvict transaction is UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats writeevict_associated_response_data_packets_legal_cache_state_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE

/**
   * @groupname chi_protocol_err_valid_data_flit_check
   * @check_description
   * Checks that the memory tag is same in the Tag fields corresponding to the compare and swap data.
   * Applicable only for ATOMICCOMARE transaction when tag_op is set to TAG_FETCH_MATCH.
   * @end_check_description
   * 
   * @check_pass
   * The tag field corresponding to the compare and swap data is same.
   * @end_check_pass
   *
   * @check_fail
   * The tag field corresponding to the compare and swap data is different.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when:
   * - The macro SVT_CHI_ISSUE_E_ENABLE or later is defined
   * - svt_chi_node_configuration::chi_spec_revision is set to svt_chi_node_configuration::ISSUE_E or later
   * - svt_chi_node_configuration::atomic_transactions_enable is set to 1.
   * - svt_chi_node_configuration::mem_tagging_enable is set to 1.
   * .
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats atomic_compare_valid_tag_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response and data packets has valid resp field {cahe state and resp_pass_dirty} value for a WriteEvictorEvict transaction. <br>
   * The cache state in the associated Write data flits or Comp reponse flits of a WriteEvictorEvict transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state of the Write data flits in a WriteEvictorEvict transaction is either UC or SC or I.
   * - resp_pass_dirty field in write data flits of WriteEvictorEvict transaction is set to 0.
   * .
   * Scenario 2: 
   * - resp field {cahe state and resp_pass_dirty} in the associated comp response flit of WriteEvictorEvict transaction is set to zero.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state of the Write data flits in a WriteEvictorEvict transaction is set to other than UC or SC or I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty field in write data flits of WriteEvictorEvict transaction is set to 1.
   * .
   * Scenario 3: 
   * - resp field {cahe state and resp_pass_dirty} in the associated comp response flit of WriteEvictorEvict transaction is set to non-zero.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN_F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Write data in Passive RN_F. <br>
   * This check is performed for WriteEvictorEvict transaction assocaiated Comp response in both Active and Passive RN_F.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeevictorevict_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpFull_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpFull_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpFull_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpFull_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanInvalid transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpFull_CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpFull_CleanInvalid transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpFull_CleanInvalid transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpFull_CleanInvalid transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanInvalid transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpFull_CleanInvalid transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpfull_cleaninvalid_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpPtl_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpPtl_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpPtl_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpPtl_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpPtl_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteNoSnpPtl_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanInvalid transaction. <br>
   * The cache state in the associated Write data flits of a WriteNoSnpPtl_CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteNoSnpPtl_CleanInvalid transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteNoSnpPtl_CleanInvalid transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteNoSnpPtl_CleanInvalid transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanInvalid transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteNoSnpPtl_CleanInvalid transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writenosnpptl_cleaninvalid_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniqueFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniqueFull_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniqueFull_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniqueFull_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniqueFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniqueFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniqueFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniqueFull_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniqueFull_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniqueFull_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniquefull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanShared transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniquePtl_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniquePtl_CleanShared transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniquePtl_CleanShared transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO response flits of WriteUniquePtl_CleanShared transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated data flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanSharedPersistSep transaction. <br>
   * The cache state in the associated Write data flits of a WriteUniquePtl_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is I.
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - cache state indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is other than I.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the Write data flits associated to WriteUniquePtl_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later.
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteUniquePtl_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated reponse flits (Comp and CompCMO) of a WriteUniquePtl_CleanSharedPersistSep transaction must be set to zero. 
   * @end_check_description
   * 
   * @check_pass
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniquePtl_CleanSharedPersistSep transaction is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp field {cahe state and resp_pass_dirty} in the associated Comp/CompCMO/CompPersist response flits of WriteUniquePtl_CleanSharedPersistSep transaction is set to non-zero.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writeuniqueptl_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteBackFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO response flit of a WriteBackFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanShared transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanShared transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */ 
  svt_err_check_stats writebackfull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteBackFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO/CompPersist response flit of a WriteBackFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteBackFull_CleanSharedPersistSep transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteBackFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteBackFull_CleanSharedPersistSep transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteBackFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writebackfull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteBackFull_CleanInvalid transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO response flit of a WriteBackFull_CleanInvalid transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanInvalid transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanInvalid transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteBackFull_CleanInvalid transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteBackFull_CleanInvalid transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writebackfull_cleaninvalid_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteCleanFull_CleanShared transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO response flit of a WriteCleanFull_CleanShared transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteCleanFull_CleanShared transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteCleanFull_CleanShared transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO response of a WriteCleanFull_CleanShared transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO response associated to WriteCleanFull_CleanShared transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writecleanfull_cleanshared_associated_response_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated response flits has valid resp field {cahe state and resp_pass_dirty} value for a WriteCleanFull_CleanSharedPersistSep transaction. <br>
   * The cache state and resp_pass_dirty fields in the associated CompCMO/CompPersist response flit of a WriteCleanFull_CleanSharedPersistSep transaction should indicate a valid value when the RespErr field does not indicate NON_DATA_ERROR. 
   * @end_check_description
   * 
   * @check_pass
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteCleanFull_CleanSharedPersistSep transaction is set to UC, SC or I.
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteCleanFull_CleanSharedPersistSep transaction is set to 0.
   * .
   * @end_check_pass
   *
   * @check_fail
   * Scenario 1: 
   * - Final cache state in the associated CompCMO/CompPersist response of a WriteCleanFull_CleanSharedPersistSep transaction is set to UD, SD.
   * .
   * Scenario 2: 
   * - resp_pass_dirty indicated in resp field of the CompCMO/CompPersist response associated to WriteCleanFull_CleanSharedPersistSep transaction is set to 1.
   * .
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::cleansharedpersistsep_xact_enable is set to 1 and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   *
   */
  svt_err_check_stats writecleanfull_cleansharedpersistsep_associated_response_packets_legal_cache_state_check;

`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that there are no error responses in case of Barrier transactions . <br>
   * A Barrier transaction response must not include an error response. 
   * @end_check_description
   * 
   * @check_pass
   * RespErr field in the Comp response of a Barrier transaction is set to OK.
   * @end_check_pass
   *
   * @check_fail
   * RespErr field in the Comp response of a Barrier transaction is set to a value other than OK.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and Passive SN-I
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * Barrier support is enabled (svt_chi_node_configuration::barrier_enable == 1).
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_resp_err_status_for_barrier_xact_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the comp response has valid resp_err value for DVMop transaction. <br>
   * The associated Comp response should take one of the following resp_err values: 1)NORMAL_OKAY 2)NON_DATA_ERROR 3)in case of svt_chi_node_configuration::chi_spec_revision >= ISSUE_B,DATA_ERROR for DVMop transaction. 
   * @end_check_description
   * 
   * @check_pass
   * If svt_chi_node_configuration::chi_spec_revision>=ISSUE_B RespErr field in the Comp response of a DVMOp transaction is set to NORMAL_OKAY or NON_DATA_ERROR or DATA_ERROR. <br>
   * If svt_chi_node_configuration::chi_spec_revision==ISSUE_A RespErr field in the Comp response of a DVMOp transaction is set to NORMAL_OKAY or NON_DATA_ERROR.
   * @end_check_pass
   *
   * @check_fail
   * If svt_chi_node_configuration::chi_spec_revision>=ISSUE_B RespErr field in the Comp response of a DVMOp transaction is set to EXCLUSIVE_OKAY. <br>
   * If svt_chi_node_configuration::chi_spec_revision==ISSUE_A RespErr field in the Comp response of a DVMOp transaction is set to EXCLUSIVE_OKAY or DATA_ERROR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F and RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_resp_err_status_for_dvmop_xact_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpOnce transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpOnce transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpOnce transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpOnce transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpOnce transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpOnce transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponce_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpClean transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpClean transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpClean transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpClean transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpClean transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpClean transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpclean_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpShared transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpShared transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpShared transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpShared transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpshared_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpNotSharedDirty transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpNotSharedDirty transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpNotSharedDirty transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpNotSharedDirty transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpNotSharedDirty transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpNotSharedDirty transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirty_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData packet has valid resp_err value for SnpOnceFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packets should not take EXOK or NDERR resp_err value for SnpOnceFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpOnceFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpOnceFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponcefwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has valid resp_err value for SnpCleanFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpCleanFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpCleanFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpCleanFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanfwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData valid resp_err value for SnpSharedFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpSharedFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpSharedFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpSharedFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpsharedfwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid resp_err value for SnpUniqueFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpUniqueFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpUniqueFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpUniqueFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquefwd_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid resp_err value for SnpNotSharedDirtyFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpNotSharedDirtyFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpNotSharedDirtyFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpNotSharedDirtyFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirtyfwd_associated_response_data_packets_legal_resperr_check;
`endif

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpPreferUnique transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpPreferUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpPreferUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpPreferUnique transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpPreferUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpPreferUnique transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferunique_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid resp_err value for SnpPreferUniqueFwd transaction. <br>
   * The associated SnpResp or SnpRespFwded should not take EXOK or DERR whereas SnpRespData, SnpRespDataFwded or CompData packet should not take EXOK or NDERR resp_err value for SnpPreferUniqueFwd transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to OK or NDERR or RespErr field in SnpRespFwded is set to OK, DERR or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpPreferUniqueFwd transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp is set to EXOK or DERR or RespErr field in SnpRespFwded is set to EXOK. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData, SnpRespDataFwded or CompData of a SnpPreferUniqueFwd transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferuniquefwd_associated_response_data_packets_legal_resperr_check;
`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpUnique transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpUnique transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUnique transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUnique transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpUnique transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpUnique transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpunique_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpCleanShared transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpCleanShared transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanShared transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanShared transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanShared transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanShared transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanshared_associated_response_data_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp and SnpRespData packets has valid resp_err value for SnpCleanInvalid transaction. <br>
   * The associated SnpResp should not take EXOK or DERR whereas SnpRespData packet should not take EXOK or NDERR resp_err value for SnpCleanInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanInvalid transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanInvalid transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpCleanInvalid transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpCleanInvalid transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleaninvalid_associated_response_data_packets_legal_resperr_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpQuery transaction. <br>
   * The associated SnpResp should not take EXOK or DERR resp_err value for SnpQuery transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpQuery transaction is set to OK or NDERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpQuery transaction is set to EXOK or DERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpquery_associated_response_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp has valid cache state for SnpQuery transaction. <br>
   * The resp_pass_dirty attribute in the associated response of a SnpQuery transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * when the resp_pass_dirty in the response flit is set to zero.
   * @end_check_pass
   *
   * @check_fail
   * resp_pass_dirty in the response flit set to 1.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpquery_associated_response_packets_legal_cache_state_check;

`endif

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpMakeInvalid transaction. <br>
   * The associated SnpResp should not take EXOK or DERR resp_err value for SnpMakeInvalid transaction. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalid transaction is set to OK or NDERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpMakeInvalid transaction is set to OK or DERR. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1: <br>
   * RespErr field in SnpResp of a SnpMakeInvalid transaction is set to EXOK or DERR. <br>
   * SCENARIO 2: <br>
   * RespErr field in SnpRespData of a SnpMakeInvalid transaction is set to EXOK or NDERR. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalid_associated_response_packets_legal_resperr_check; 

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated SnpResp packet has valid resp_err value for SnpDVMop transaction. <br>
   * The associated SnpResp should not take EXOK or DERR resp_err value for SnpDVMop transaction. 
   * @end_check_description
   * 
   * @check_pass
   * RespErr field in SnpResp of a SnpDVMOp transaction is set to OK or NDERR.
   * @end_check_pass
   *
   * @check_fail
   * RespErr field in SnpResp of a SnpDVMOp transaction is set to EXOK or DERR.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F and Passive RN-D
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when DVM support is enabled in the passive RN-F/RN-D node (svt_chi_node_configuration::dvm_enable == 1).
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpdvmop_associated_response_packets_legal_resperr_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpOnce transaction. <br>
   * The cache state in the associated response of a SnpOnce transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpOnce transaction is set to UC, SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpOnce transaction is set to UC, SC, UD, SD or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the SnpResp of a SnpOnce transaction is set to UD or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponce_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpClean transaction. <br>
   * The cache state in the associated response of a SnpClean transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpClean transaction is set to SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpClean transaction is set to SD, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpClean transaction is set to UC, UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpClean transaction is set to UC or UD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpclean_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpShared transaction. <br>
   * The cache state in the associated response of a SnpShared transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpShared transaction is set to SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpShared transaction is set to SD, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpShared transaction is set to UC, UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpShared transaction is set to UC or UD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpshared_associated_response_data_packets_legal_cache_state_check;

`ifdef SVT_CHI_ISSUE_B_ENABLE
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpNotSharedDirty transaction. <br>
   * The cache state in the associated response of a SnpNotSharedDirty transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirty transaction is set to SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpNotSharedDirty transaction is set to SD, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirty transaction is set to UC, UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpNotSharedDirty transaction is set to UC or UD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirty_associated_response_data_packets_legal_cache_state_check;
  
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpOnceFwd transaction. <br>
   * The cache state in the associated response of a SnpOnceFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpOnceFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpOnceFwd transaction is set to UC, UD, SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpOnceFwd transaction is set to SC or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpOnceFwd transaction is set to I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpOnceFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpOnceFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpOnceFwd transaction is set to a value other than UC, UD, SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpOnceFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpOnceFwd transaction is set to a value other than SC and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the CompData of a SnpOnceFwd transaction is set to a value other than I. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpOnceFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snponcefwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpCleanFwd transaction. <br>
   * The cache state in the associated response of a SnpCleanFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpCleanFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpCleanFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpCleanFwd transaction is set to SC. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpCleanFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpCleanFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpCleanFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpCleanFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpCleanFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the CompData of a SnpCleanFwd transaction is set to a value other than SC. <br>
   * SCENARIO 7 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpCleanFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanfwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpSharedFwd transaction. <br>
   * The cache state in the associated response of a SnpSharedFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpSharedFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpSharedFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpSharedFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to SC or SD. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpSharedFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpSharedFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpSharedFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpSharedFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpSharedFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to a value other than SC and SD. <br>
   * SCENARIO 7 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpsharedfwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpNotSharedDirtyFwd transaction. <br>
   * The cache state in the associated response of a SnpNotSharedDirtyFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirtyFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpNotSharedDirtyFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpNotSharedDirtyFwd transaction is set to SC, SD or I. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the CompData of a SnpNotSharedDirtyFwd transaction is set to SC. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpNotSharedDirtyFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpNotSharedDirtyFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpNotSharedDirtyFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the SnpRespFwded of a SnpNotSharedDirtyFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpNotSharedDirtyFwd transaction is set to a value other than SC, SD and I. <br>
   * SCENARIO 5 : <br>
   * Final cache state in the SnpRespDataFwded of a SnpNotSharedDirtyFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   * SCENARIO 6 : <br>
   * Final cache state in the CompData of a SnpNotSharedDirtyFwd transaction is set to a value other than SC. <br>
   * SCENARIO 7 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpNotSharedDirtyFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpnotshareddirtyfwd_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpUniqueFwd transaction. <br>
   * The cache state in the associated response of a SnpUniqueFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueFwd transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpUniqueFwd transaction is set to I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to UC or UD. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUniqueFwd transaction is set to a value other than I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespFwded of a SnpUniqueFwd transaction is set to a value other than I. <br>
   * SCENARIO 3 : <br>
   * Final cache state in the CompData of a SnpSharedFwd transaction is set to a value other than UC or UD. <br>
   * SCENARIO 4 : <br>
   * Final cache state in the SnpRespDataPtl of a SnpSharedFwd transaction is set to a value other than I. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_B_ENABLE or SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_B or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpuniquefwd_associated_response_data_packets_legal_cache_state_check;

`endif

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpPreferUnique transaction. <br>
   * The cache state in the associated response of a SnpPreferUnique transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the SnpResp or SnpRespData is I, SC or SD
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the SnpResp or SnpRespData is UC or UD
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferunique_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp, SnpRespFwded, SnpRespData, SnpRespDataFwded or CompData has a valid cache state for SnpPreferUniqueFwd transaction. <br>
   * The cache state in the associated response of a SnpPreferUniqueFwd transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * A Snoopee that is not executing an exclusive sequence treats SnpPreferUniqueFwd as SnpUniqueFwd.
   * Snoopee that is in the process of executing an exclusive sequence treats SnpPreferUniqueFwd as SnpNotSharedDirtyFwd, with the exception that it must not invalidate its cached copy.
   * @end_check_description
   * 
   * @check_pass
   * If SnpPreferUniqueFwd is treated as SnpNotSharedDirtyFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to SC, SD or I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the SnpRespDataFwded of a SnpPreferUniqueFwd transaction is set to SC, SD or I. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to SC. <br>
   *   - SCENARIO 5 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   .
   * If SnpPreferUniqueFwd is treated as SnpUniqueFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to UC or UD. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to I. <br>
   *   .
   * @end_check_pass
   *
   * @check_fail
   *   - If SnpPreferUniqueFwd is treated as SnpNotSharedDirtyFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to a value other than SC, SD and I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the SnpRespDataFwded of a SnpPreferUniqueFwd transaction is set to a value other than SC, SD and I. <br>
   *   - SCENARIO 5 : <br>
   *   - Final cache state in the SnpRespDataFwded of a SnpPreferUniqueFwd transaction is set to SD when DoNotGoToSD is asserted in the snoop request. <br>
   *   - SCENARIO 6 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to a value other than SC. <br>
   *   - SCENARIO 7 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   .
   * If SnpPreferUniqueFwd is treated as SnpUniqueFwd:
   *   - SCENARIO 1 : <br>
   *   - Final cache state in the SnpResp of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   - SCENARIO 2 : <br>
   *   - Final cache state in the SnpRespFwded of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   - SCENARIO 3 : <br>
   *   - Final cache state in the CompData of a SnpPreferUniqueFwd transaction is set to a value other than UC or UD. <br>
   *   - SCENARIO 4 : <br>
   *   - Final cache state in the SnpRespDataPtl of a SnpPreferUniqueFwd transaction is set to a value other than I. <br>
   *   .
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later and DCT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snppreferuniquefwd_associated_response_data_packets_legal_cache_state_check;

`endif

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpUnique transaction. <br>
   * The cache state in the associated response of a SnpUnique transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUnique transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUnique transaction is set I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpUnique transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpUnique transaction is set UC, UD, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpunique_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpCleanShared transaction. <br>
   * The cache state in the associated response of a SnpCleanShared transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanShared transaction is set to UC, SC or I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanShared transaction is set UC, SC or I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanShared transaction is set to UD or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanShared transaction is set UD or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats snpcleanshared_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp or SnpRespData has a valid cache state for SnpCleanInvalid transaction. <br>
   * The cache state in the associated response of a SnpCleanInvalid transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanInvalid transaction is set to I. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanInvalid transaction is set I. <br>
   * @end_check_pass
   *
   * @check_fail
   * SCENARIO 1 : <br>
   * Final cache state in the SnpResp of a SnpCleanInvalid transaction is set to UC, UD, SC or SD. <br>
   * SCENARIO 2 : <br>
   * Final cache state in the SnpRespData of a SnpCleanInvalid transaction is set to UC, UD, SC or SD. <br>
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpcleaninvalid_associated_response_data_packets_legal_cache_state_check;

/**
   * @groupname chi_protocol_err_valid_cache_state_in_resp_check
   * @check_description
   * Check that the associated SnpResp has valid cache state for SnpMakeInvalid transaction. <br>
   * The cache state in the associated response of a SnpMakeInvalid transaction should indicate a valid value when the RespErr field does not indicate any error. 
   * @end_check_description
   * 
   * @check_pass
   * Final cache state in the SnpResp of a SnpMakeInvalid transaction is set to I.
   * @end_check_pass
   *
   * @check_fail
   * Final cache state in the SnpResp of a SnpMakeInvalid transaction is set to UC, UD, SC or SD.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats snpmakeinvalid_associated_response_packets_legal_cache_state_check; 

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that Comp Response flit is seen only in case of non-Snoop transactions. <br>
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * Comp response is received for a dataless, DVMOp, WriteEvictorEvict or a non-Copyback Write transaction.
   * @end_check_pass
   *
   * @check_fail
   * Comp response is received for a Read or a Copyback transaction(except WriteEvictorEvict).
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_comp_flit_type_for_xact_check;

`ifdef SVT_CHI_ISSUE_E_ENABLE
/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that CompCMO Response flit is seen only in case of Combined Write and (P)CMO transactions.
   * @end_check_description
   * 
   * @check_pass
   * CompCMO response is received for a Combined Write and (P)CMO type transaction.
   * @end_check_pass
   *
   * @check_fail
   * CompCMO response is received for a transaction which is not of Combined Write and (P)CMO type.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_E_ENABLE is defined and svt_chi_node_configuration::chi_spec_revision is set to ISSUE_E or later. <br>
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats valid_compcmo_flit_type_for_xact_check;
`endif

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * Check that DBID Response flit is seen only in case of non-Copyback Write transactions. <br>
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * DBIDResp is received for a WriteNoSnp or WriteUnique request.
   * @end_check_pass
   *
   * @check_fail
   * DBIDResp is received for a Copyback request.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_dbid_flit_type_for_xact_check;

 /**
   * @groupname chi_protocol_err_valid_sactive_check
   * @check_description
   * - TXSACTIVE must remain asserted until after the last flit relating to all pending transactions is sent or received.
   * - A transaction that is given a RetryAck response is considered to be in progress, so TXSACTIVE must remain asserted until the associated credit has been supplied, and it's used or returned.
   * - <b> Applicable when </b>: the agent is in PASSIVE mode (svt_chi_node_configuration::is_active = 0), and 
   *   svt_chi_system_configuration::top_layer is set to svt_chi_system_configuration::PROTOCOL, svt_chi_system_configuration::bottom_layer is set to svt_chi_system_configuration::LINK
   * - The check is performed under following conditions: while the link is active and there is no active reset --
   *   - Whenever there is a flit activity observed(TX*FLITV/RX*FLITV asserted), TXSACTIVE must be sampled as HIGH. Otherwise the check fails.
   *     - Following are the specific conditions under which this check is performed:
   *       - REQ flit is received by PASSIVE agent, then txsactive must be HIGH at:
   *         - at the same clock, in case of RN
   *         .
   *       - In case of RN: the same clock where CompAack RSP flit is observed, this must be high
   *       - In case of RN: The same clock where SNPRSP is observed, this must be high
   *       - In the same cycle the RSP flit is received/observed, this must be high
   *       - In the same cycle the Read Data flit is received/observed, this must be high
   *       - In the same cycle the Snp Data flit is received/observed, this must be high
   *       - In the same cycle the Write Data flit is received/observed, this must be high
   *       .
   *     .
   *   - Whenever the signal TXSACTIVE is sampled as LOW, the check passes when there is no pending protocol layer activity. Otherwise the check fails.
   *     - Following is the definition of 'pending protocol layer activity':
   *       - Any in progress transactions (Transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       - Any transactions with pending retries (Transactions that received retry response along with Credit grants; but neither the credits are returned nor used to retry the transactions)
   *       - Any in progress snoop transactions (Snoop transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       .
   *     .
   *   .
   * .
   * @end_check_description
   *
   * @check_pass
   * One of the FLITV signals is asserted and the conditions mentioned in the description are satisfied.
   * @end_check_pass
   *
   * @check_fail
   * One of the FLITV signals is asserted and any of the conditions mentioned in the description are violated.
   * @end_check_fail
   * 
   * @applicable_device_type
   * Passive RN and Passive SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * svt_chi_system_configuration::top_layer is set to svt_chi_system_configuration::PROTOCOL, svt_chi_system_configuration::bottom_layer is set to svt_chi_system_configuration::LINK.
   * This check will not be constructed when svt_chi_node_configuration::use_external_node_prot_monitor is set to 1.
   * @end_check_additional_information   
   */
  svt_err_check_stats valid_txsactive_signal_check;

 /**
   * @groupname chi_protocol_err_valid_sactive_check
   * @check_description
   * - RXSACTIVE must remain asserted until after the last flit relating to all pending transactions is sent or received at the link partner node.
   * - A transaction that is given a RetryAck response is considered to be in progress, so RXSACTIVE must remain asserted until the associated credit has been supplied, and it's used or returned.
   * - The check is performed under following conditions: while the link is active and there is no active reset --
   *   - Whenever there is a flit activity observed(TX*FLITV/RX*FLITV asserted), RXSACTIVE must be sampled as HIGH. Otherwise the check fails.
   *     - Following are the specific conditions under which this check is performed:
   *       - In case of SN: if REQ flit is received, then rxsactive must be HIGH at the same clock
   *       - In case of RN: The same clock where the CompAck RSP is observed, this must be high
   *       - In case of RN: The same clock where SNPRSP is sampled by all receiving/observing components, this must be high
   *       - In case of RN: The same clock where SNP flit is observed, this must be HIGH
   *       - In the same cycle the RSP flit is received/observed, this must be high
   *       - In the same cycle the Read Data flit is received/observed, this must be high
   *       - In the same cycle the Snp Data flit is received/observed, this must be high
   *       - In the same cycle the Write Data flit is received/observed, this must be high
   *       .
   *     .
   *   - Whenever the signal RXSACTIVE is sampled as LOW, the check passes when there is no pending protocol layer activity at the link partner node. Otherwise the check fails.
   *     - Following is the definition of 'pending protocol layer activity':
   *       - Any in progress transactions (Transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       - Any transactions with pending retries (Transactions that received retry response along with Credit grants; but neither the credits are returned nor used to retry the transactions)
   *       - Any in progress snoop transactions (Snoop transactions that are started, but not yet ended. eg: Waiting for response/data flits)
   *       .
   *     .
   *   .
   * .
   * @end_check_description
   *
   * @check_pass
   * One of the FLITV signals is asserted and the conditions mentioned in the description are satisfied.
   * @end_check_pass
   *
   * @check_fail
   * One of the FLITV signals is asserted and any of the conditions mentioned in the description are violated.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN and SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * svt_chi_system_configuration::top_layer is set to svt_chi_system_configuration::PROTOCOL, svt_chi_system_configuration::bottom_layer is set to svt_chi_system_configuration::LINK
   * This check will not be constructed when svt_chi_node_configuration::use_external_node_prot_monitor is set to 1.
   * @end_check_additional_information 
   * 
   */

  svt_err_check_stats valid_rxsactive_signal_check;

/**
   * @groupname chi_protocol_exclusive_access_check
   * @check_description
   * Check that an exclusive monitor should not have more than one exclusive transaction of the same lpid at any given time. <br>
   * Multiple exclusive transactions to Non-snoopable memory locations, either read or write, to the same or different addresses, from the same LP must not be outstanding at the same time.
   * @end_check_description
   * 
   * @check_pass
   * An Exclusive Read transaction is received while there are no outstanding Exclusive Reads with the same LPID.
   * @end_check_pass
   *
   * @check_fail
   * An Exclusive Read transaction is received but there already is an outstanding Exclusive Read with the same LPID.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters exclusive_access_enable (svt_chi_node_configuration::exclusive_access_enable) and exclusive_monitor_enable (svt_chi_node_configuration::exclusive_monitor_enable) are set to 1.
   * @end_check_additional_information 
   */
  svt_err_check_stats non_coherent_excl_read_multiple_entry_for_same_lpid_check;

  /**
   * @groupname chi_protocol_exclusive_access_check
   * @check_description
   * Check that the address of an exclusive access must be aligned to the total number of bytes in the transaction. <br>
   * @end_check_description
   * 
   * @check_pass
   * The address of an exclusive transaction is aligned to the Data size.
   * @end_check_pass
   *
   * @check_fail
   * The address of an exclusive transaction is not aligned to the Data size.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters exclusive_access_enable (svt_chi_node_configuration::exclusive_access_enable) and exclusive_monitor_enable (svt_chi_node_configuration::exclusive_monitor_enable) are set to 1.
   * @end_check_additional_information
   */
  
  svt_err_check_stats non_coherent_excl_access_aligned_total_bytes_transaction_check;

  /**
   * @groupname chi_protocol_exclusive_access_check
   * @check_description
   * Check that the number of bytes to be transferred in an exclusive access must be a legal data transfer size, that is, 1, 2,4, 8, 16, 32, or 64 bytes.<br>
   * @end_check_description
   * 
   * @check_pass
   * The Data size of an Exclusive transaction is one of the values specified in the description.
   * @end_check_pass
   *
   * @check_fail
   * The Data size of an Exclusive transaction is set to a value apart from the ones mentioned in the description.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters exclusive_access_enable (svt_chi_node_configuration::exclusive_access_enable) and exclusive_monitor_enable (svt_chi_node_configuration::exclusive_monitor_enable) are set to 1.
   * @end_check_additional_information    
   */

  svt_err_check_stats non_coherent_excl_access_legal_data_size_transfer_check;

  /**
   * @groupname chi_protocol_transaction_inactivity_check
   * @check_description
   * - Checks that a given transaction completes within the number of clock cycles specified by svt_chi_node_configuration::xact_inactivity_timeout.<br>
   * - Vip will continue to process the transaction even the transaction has timedout. The timeout of the transaction doesn't have any impact on the procesing or completion of the transaction.<br>
   * - The timer started for a transaction will continue to increment even there is a link deactivation when transaction is outstanidng.<br>
   * - This check is currently not designed to handle the cases when there is a dynamic reset.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The transaction ends within the programmed number of clock cycles.
   * @end_check_pass
   *
   * @check_fail
   * The transaction does not end within the programmed number of clock cycles.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN,SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters xact_inactivity_timeout (svt_chi_node_configuration::xact_inactivity_timeout) set to non zero values.
   * @end_check_additional_information    
   */
  svt_err_check_stats transaction_inactivity_timeout_check;

  /**
   * @groupname chi_protocol_transaction_inactivity_check
   * @check_description
   * - Checks that a given Snoop transaction completes within the number of clock cycles specified by svt_chi_node_configuration::snp_xact_inactivity_timeout.<br>
   * - Vip will continue to process the snoop transaction even the snoop transaction has timedout. The timeout of the snoop transaction doesn't have any impact on the procesing or completion of the snoop transaction.<br>
   * - The timer started for snoop transaction will continue to increment even there is a link deactivation when snoop transaction is outstanidng.<br>
   * - This check is currently not designed to handle the cases when there is a dynamic reset.
   * .
   * @end_check_description
   * 
   * @check_pass
   * The snoop transaction ends within the programmed number of clock cycles.
   * @end_check_pass
   *
   * @check_fail
   * The snoop transaction does not end within the programmed number of clock cycles.
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN-F, RN-D(when svt_chi_node_configuration::dvm_enable is set to 1)
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is constructed only when configuration parameters snp_xact_inactivity_timeout (svt_chi_node_configuration::snp_xact_inactivity_timeout) set to non zero values.
   * @end_check_additional_information    
   */
  svt_err_check_stats snp_transaction_inactivity_timeout_check;


//-------------------------------------------------------------
// START OF PERFORMANCE CHECKS
/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a write transaction is not greater than the
  * configured max value svt_chi_node_configuration::perf_max_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Write transaction is less than svt_chi_node_configuration::perf_max_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Write transaction is greater than svt_chi_node_configuration::perf_max_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a write transaction is not lesser than the
  * configured min value svt_chi_node_configuration::perf_min_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Write transaction is greater than svt_chi_node_configuration::perf_min_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Write transaction is less than svt_chi_node_configuration::perf_min_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of write transactions in a given interval
  * is not more than the configured max value svt_chi_node_configuration::perf_avg_max_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Write transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_max_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Write transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_max_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_max_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of write transactions in a given interval
  * is not less than the configured min value svt_chi_node_configuration::perf_avg_min_write_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Write transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_min_write_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Write transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_min_write_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_min_write_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a read transaction is not greater than the
  * configured max value svt_chi_node_configuration::perf_max_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Read transaction is less than than svt_chi_node_configuration::perf_max_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Read transaction is greater than than svt_chi_node_configuration::perf_max_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the latency of a read transaction is not lesser than the
  * configured min value svt_chi_node_configuration::perf_min_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The latency of a Read transaction is greater than svt_chi_node_configuration::perf_min_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The latency of a Read transaction is less than than svt_chi_node_configuration::perf_min_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of read transactions in a given interval
  * is not more than the configured max value svt_chi_node_configuration::perf_avg_max_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Read transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_max_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Read transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_max_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_max_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the average latency of read transactions in a given interval
  * is not less than the configured min value svt_chi_node_configuration::perf_avg_min_read_xact_latency
  * @end_check_description
  * 
  * @check_pass
  * The average latency of Read transactions in the specified interval is greater than svt_chi_node_configuration::perf_avg_min_read_xact_latency. 
  * @end_check_pass
  *
  * @check_fail
  * The average latency of Read transactions in the specified interval is less than svt_chi_node_configuration::perf_avg_min_read_xact_latency. 
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_avg_min_read_xact_latency_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of read transactions in a given interval is
  * not more that the configured max value svt_chi_node_configuration::perf_max_read_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of read transactions in the specified interval is less than svt_chi_node_configuration::perf_max_read_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of read transactions in the specified interval is greater than svt_chi_node_configuration::perf_max_read_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_read_throughput_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of read transactions in a given interval is
  * not less that the configured min value svt_chi_node_configuration::perf_min_read_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of read transactions in the specified interval is greater than svt_chi_node_configuration::perf_min_read_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of read transactions in the specified interval is less than svt_chi_node_configuration::perf_min_read_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_read_throughput_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of write transactions in a given interval is
  * not more that the configured max value svt_chi_node_configuration::perf_max_write_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of write transactions in the specified interval is less than svt_chi_node_configuration::perf_max_write_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of write transactions in the specified interval is greater than svt_chi_node_configuration::perf_max_write_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_max_write_throughput_check;

/**
  * @groupname chi_protocol_err_perf_cst_check
  * @check_description
  * Checks that the throughput of write transactions in a given interval is
  * not less that the configured min value svt_chi_node_configuration::perf_min_write_throughput
  * @end_check_description
  * 
  * @check_pass
  * The throughput of write transactions in the specified interval is greater than svt_chi_node_configuration::perf_min_write_throughput.
  * @end_check_pass
  *
  * @check_fail
  * The throughput of write transactions in the specified interval is less than svt_chi_node_configuration::perf_min_write_throughput.
  * @end_check_fail
  * 
  * @applicable_device_type
  * RN and SN
  * @end_applicable_device_type
  * 
  * @check_additional_information
  * Users can set the interval by programming svt_chi_node_configuration::perf_recording_interval. <br>
  * Alternately, users can set svt_chi_node_configuration::perf_recording_interval to -1 and
  * make use of svt_chi_node_perf_status::start_performance_monitoring() and svt_chi_node_perf_status::stop_performance_monitoring()
  * to specify the interval.
  * @end_check_additional_information 
  *   
  */
svt_err_check_stats perf_min_write_throughput_check;

`ifdef SVT_CHI_ISSUE_C_ENABLE
/**
   * @groupname chi_protocol_dmt_check
   * @check_description
   * DMT has to be used for ReadNoSnpSep
   * @end_check_description
   * 
   * @check_pass
   * DMT is used for ReadNoSnpSep
   * @end_check_pass
   *
   * @check_fail
   * DMT is not used for ReadNoSnpSep
   * @end_check_fail
   * 
   * @applicable_device_type
   * SN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later and DMT is enabled for atleast one of the HN-Fs.
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats dmt_validity_check_for_readnosnpsep;

/**
   * @groupname chi_protocol_err_valid_response_flit_check
   * @check_description
   * The Response flit type must correspond to one of the permitted values depending on the type of the transaction 
   * @end_check_description
   * 
   * @check_pass
   * RespSepData seen for read type transactions
   * @end_check_pass
   *
   * @check_fail
   * RespSepData seen for non read type transactions
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
   * and if any of the HNs uses RespSepData DataSepResp Flow 
   * @end_check_additional_information 
   *  
   */
  svt_err_check_stats valid_respsepdata_flit_type_for_xact_check;

/**
   * @groupname chi_protocol_err_valid_resperr_check
   * @check_description
   * Check that the associated RespSepData response packet has valid resp_err value.. <br>
   * The associated RespSepData response packet's resp_err field should not take EXOK or DERR value. 
   * @end_check_description
   * 
   * @check_pass
   * The associated RespSepData response packet's resp_err field does not take EXOK or DERR value. 
   * @end_check_pass
   *
   * @check_fail
   * The associated RespSepData response packet's resp_err field takes EXOK or DERR value. 
   * @end_check_fail
   * 
   * @applicable_device_type
   * RN
   * @end_applicable_device_type
   * 
   * @check_additional_information
   * This check is applicable only when the marco SVT_CHI_ISSUE_C_ENABLE is defined, svt_chi_node_configuration::chi_spec_revision is set to ISSUE_C or later
   * and if any of the HNs uses RespSepData DataSepResp Flow 
   * @end_check_additional_information 
   * 
   */
  svt_err_check_stats associated_respsepdata_response_legal_resperr_check;

`endif


// END OF PERFORMANCE CHECKS
//-------------------------------------------------------------

  /** @cond PRIVATE */
  // ****************************************************************************
  // Public Methods
  // ****************************************************************************

`ifndef SVT_VMM_TECHNOLOGY
  // ---------------------------------------------------------------------------
  /**
   * CONSTRUCTOR: Create a new svt_chi_protocol_err_check instance.
   * 
   * @param err_check_name A string that identifies this particular svt_err_check
   * instance.
   *
   * @param register_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * registered automatically.
   *
   * @param enable_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * enabled. This bit only has meaning if register_default_checks is set
   * to 1.
   * 
   * @param reporter Report object through which messages are routed
   */
  extern function new(svt_chi_node_configuration node_cfg,
                      bit enable_pc_cov = 1, 
                      string err_check_name = "",
                      bit register_default_chks = 1, 
                      bit enable_default_chks = 1,
                      `SVT_XVM(report_object) reporter = null);
`else
  // ---------------------------------------------------------------------------
  /**
   * CONSTRUCTOR: Create a new svt_chi_protocol_err_check instance.
   * 
   * @param err_check_name A string that identifies this particular svt_err_check
   * instance.
   *
   * @param register_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * registered automatically.
   *
   * @param enable_default_chks A bit that identifies whether or not the
   * default checks associated with this sampling/checking class should be
   * enabled. This bit only has meaning if register_default_checks is set
   * to 1.
   */
  extern function new(svt_chi_node_configuration node_cfg,
                      bit enable_pc_cov = 1, 
                      string err_check_name = "",
                      bit register_default_chks = 1, 
                      bit enable_default_chks = 1);
`endif
  // ---------------------------------------------------------------------------
  /**
   * This method is called by the constructor if the register_default_checks 
   * parameter is set to 1.
   *
   */  
  extern virtual function void register_default_checks();
  /** @endcond */
endclass

// =============================================================================

`protected
6:C2b5G<e4J=]Y#Q7\Ld7+gZ@V=aIc1PFW+;K3VGPSTA>AVVIQJR4))NfV]1^R_0
O/b2:#GL<F+4=JQQD?57AW<b2SPI^2f[fY+U;G._TZ;=@&gf,XU6^P5MMYVD&[TP
^R/5M=\1+g#Z_Qe8@;^Z#73]cZDOFcVBddVEg3AC6D8ZC:JDHc5fT+9;R/SW3;E;
>;(>O+<a/_Z=W>>/eT3Z,7-]BWB^]P8I-F(.5/fQ^X?<@;bXf.#01_^ZP8aYE[/d
ZM3bCR5\ee\9)4G/PA0IFX,E3Ce6)>I?YcX[6dc[XFZ^S9BW<0HeYc;IbAFJTR4O
Uf>\3bR:)3:-[]7G4bZM_g)S&H7b),;d7:W>Xf#A;d/,JO&-QcR]J70deb<N>14=
\?:T1BY^_/Q0<1B7MLEKGP8\;-A38O<.9I2W1>_]A,,W[4Y[@^,_6Od5^M3]]WX,
)GOX8#:2BEC)ZHKaXcW=-TD#YDPL6O3f,,aLC0CVf1=;:3<1,g6fb\U?#B0I8RV1
e-1[XC(89Y_]]+S&U\Wc,[D#\9Oe<0T2^7MJ<^+:=Mf;7)VI\H[H:DMcddS8CUO0
[<JG50ZQ#)e]MDf@TR_#E\C>[T+1YZ_]G]g<IZ+W>L-cLQ6g3524XGdXa)[cFD(B
@V,Ja3eE8+aASJ,HO]+VUD(2>&F=6.[+g<6^_32KNF#W<)YD4)ST?+IDJ&;B?UZG
5ZDZfYAPTX8H1(6+P2Z:OEA4)0(GU,NGOeO@0Q^MF660??J+_f+#H9[Kg/^DW#RW
GW[-JZ5QB:^d:)LYMWJZ\YLNL3+U1AE3)8,eF?cbG8SBOPXP#1TY<_EB8bU);a57
EN2OA2G)7^^&E5DfXT1NLII2UcK]U]d-FBU=5=Z<UQKYJKUXGE04N]gc2/Nea5Dc
f9<</K_Z<7^@BRV;SH4&\P\;^7G<16N&b=g^b]d2CLE.XBC&e<=YKc<=0^H^I#C[
WM5<b,AZ/YaP;cPfZ9;?,BC@3g,HM>F7f-#G&[;F>L([Y5ULLfI@:4>f@Hgb,^/g
Z;VaTWB7D)d.Oae/XV))R;)X1K&]#5QcJ9,F3?dD.#McI]0P,.3I0cJ)9cQab7dS
OI)e#eQQ8721RKMT^LMA,9J#YR,)9;+<GFaeI@OY?9>GPW7aAQ\LG_3E_\3a7W\#
3ZP^8MP=V@L@.);O\OYc528+A4#GceV9Yd;cR.fHTbM#VBb=\&N^=Z4LE#U,MRRU
Ic-[^M;_:I)ac@Wd3SYTDaE;J_VH,N@/,SP[DP<71P5_H8@b&V-H+)/WDIE2_B@H
\K4G2Ec)df[&+H5e+VceD-\MO=9?;^bK67g]SbAGBA-SWS[WCAI4_AK^QO3Q(@Qd
2b=2-#3.,3;6^KB)L=7B+#DE?E[GfbJUE[D+BXdZ+168M9/YFOC>fTI-0UZMa:d+
fT;C52#1UIOM>N&C;E07#/&>(8V4(c)XDLQ+3DO1J0M.f6TeO2XFSH\FZ5(_.(Ne
<YC?CMPbS8J.A-,C./26e.M\]#XB;3\4XNAK)L5a.U>LV/NEG9-;J:,^2FV:#ZP?
0:1W#>1T7bC?N:\(+Q-ADP:b]R)Ke?3.]L=UJ1CM/N/I,gSNUK\_(2SI)NOEQ[Ba
,TS?aZUO]TgA+[JOM+SFM6P]>g]AY(R>.g6[b\\D8a:g^Ob]9B0.Ae(UW[TW>MQT
a-+7M#I4:SU(=\D=RO;SWKE(=\8+9HL3RCI&T@&g[ZE87+5OJdWL.LGQH=.,fW-9
_WD7/fMcaVJJR<H_\S_ZY=Ag[J?J17T?PFZTGf@:/^bA?B1WF[^H7:+G>F6VU[H<
]Re9,#<+U,JSV=W)>-df@M3VL7^V:[MA+XKI-9L]dTcLOH26,MJ<W(2I=R<eEZ++
-HZLe/#0E4\c<Z?_+bD>1^U&D]C=9#<c3@1>IcK>?/WGBNR<(g<D4MIEEfJ(W=35
DW?^ZaA;I=DFPC@Zgb?IG^bOE&>H[,b]<61J0Q]<<RX&G+:IRFOCVA8P[8+7--CR
d;Rc.=f>)O3H&&DfED>Ye#YF,Y>?&9&+((g_.g2_F7:R(-A<WY^:UW=>9g6=/^F(
Dbb([Z)&QDN>52-O1,NGa\f.W]<f].&O]66L^aOCX\+W^0FG9CEeO8+YAgI@[.X+
/VOHYUMeWS0L[\QN4]Q6OT/E::]\ZU3;aVTPF4M]eWb)Z-6E]AOeG6?g[9XNC3dD
TS\WBd2X2aR=be]ZSA+L:?ZYZJC_&6#J.F^@bNFU?9\ZN\3Ug1Yb]cVU.N]:V/)U
)8TT(A>(#=6[2/0_[=G^e/C+-Q]N@dM_\8C-1fAFc6SPY5TYWM0QK1:V\;L2OB]E
VRQgE+E9e.>I,=aYg=U9cNZJcG:?VdQR&BfSJ#EISfYd9HcT<.+@5<NLES-N?EgV
VUaS+G5&-gM[86A0;0Y]=\<>8^EQZ.K5-bFE_I,6J_3X^?2,]-CGGP7F7D=4U/GU
c96;a<eMA_FL0gIRK=WRD\\TB3[@V[/<_9?FRYA;_-[->f,D9JNgYG;ER2ATN9#L
Y0>5R-e@JD3&[fSf?N)bH=WM?Fe^93=6_@8Na[MCESF1Ad>)JcBe_WM=7]P-#XE6
5\@EAQN5>U+I.4J0bP7&TXLMag#F(9I?ZSW\)UPT.KZ)aV>AVU2V_OK,.VEU&H#R
-;LD?cHad#3GG)9(2>H-LcEQF5N_-K[Z\VW2U.U9CR^gWObSd#.9/#THA\&JCc1-
_KV&LDFGXHDb];2e7UJJSTScI7D9@D5eGW7VMD5-c0^5.MbG/CXg.4ZZHYB8)32D
4(^/5W:-.1f0Ee(dAA6Udb1OS(]ZW?P()V0Rf([c(T(gJND??[E79^._,0aT><QW
\OB7a4U7Sb_\<(FF.f7M_1]ZTO5JJ^8OK[I9^O65=@K6Q(]:,K.^eSJ.3Z;#bQNS
.Sd.[0Q-EX.35OJUR=fW;DAPZ]FCL2M?MbYK7;B0SB;KP-]K)db6c^9EU7@UUG2>
7DYFCeRVAFOedZ57QbE4UQ=<O\P&WS;WH\LRPCD,;#G4ZZ;4FAb2->=bB^K><#f(
8Y&]4g[dTT&]Yg]W^#[P-bOE9,7b=]22eSGR35T:E6c8LD/Q:;=<#BY.fCbKC>=E
IU@MV9;L/9]8/7(_AZ@g\24E?TE8L@9JaHaKCGBNK4<cF@bS<>J<1F9aTdN:&\HU
TX8)9T/5S3f4W@f:<(4>=a=Wa2?S2M#Xc;Q]HFRTIVA#@(Tf@<<\FG88&18K(=SU
GQ=9eVNC1;B\NE8>0Rg4RNU5KJB/Xa5/c;fQY^#,_[B(QLQ&N<0,4YCb17Z/ed+J
#-8Xa#MA-255Id9Ha+)U\J9_d]#@1Zg]M-H9K0P&H97Z[RD?@BA&OZ3^MN>5VG6L
c9PSeW;:Jf:7N6;P5A7Y)]8gMJ>\E^/=(<f^+7+8P2OJ:#D]Ue3ZU;<RZ,W]>4+P
eL(7E4V\g<-cF?^43.X5.[9,E-^b)5DGUL;Tg6QP:d,1Gd8:<Da\,SI:(T^b)Q]_
RVHgL>fX(QY?2@B5L\IGXbP]+=c7\MbJZ2\NFFNgVM=1G$
`endprotected


//vcs_lic_vip_protect
  `protected
P<Aa-@a2[fQP&8C>>W-@35eagfU1LT[3F9I(_A3^ZI=7Vb>QOCL#6(/LIH_PT#&M
0Q,gB)@\f4]IW^[8#D.0U<\#6+=6MW7)IKALLF3?E,9cX7&BG./dY3DF)4H7.23A
NW@aA&RY(4Xe\Rc6D&Y0V+3[0d@LW?E-RSA,TC8YK8-;J46X.gc2>[(cbO(N(c/R
\]e?H[9KL>BQIT>>0#D0V<Pd>g2+N55^LN5>NaK<?Q><3KNAZg?,\GJJfeV>KXU,
(dY\GaSBXY4EIOL9RI54X3;/E4@V[,Q4Wc.KL1;A>>>KC6753MD&W/7(A01HIgbL
WcK9G\_\M]c-<+W_fL5G26Yg+,N#33XMC044#VJ12AbV<JfS#0/L8@VFGf#A>OHV
15B@Q8>M,=g2N+]S4bg,AgPVcVXc(fYF3G;PBGaf(+MfaI#]Od6\?\Y7+Eg@-D+_
IR>Q/f/KZ@@(KdNfPDR5;@B6KC^=PYESZ?:7+GeM[e->D)^d=BDST98afY&RdNb=
R46PTKYga2,\AY>\V>[OV03>QTg7/dRYWKPTb_6M6:>.5-#BLNE@fb3dd\KRAIbZ
L\JU.@K:),GFMD^#.60YIU81E_[A]gRO6R,IDXZ0<ZWaPZdJ]=]V^)3+Md8Ob<0<
_:HT]X2/8W4=_T2f@9a(O.aPL-#VM,+3ZE4)7cfRgPQT2__9K;&82bb5OaRLF<?V
8X,,L<R9]fbGSdZ.RBHIXRQ>5KHa?<6c&C#DM@XV2-S67DO.f<09-@8M)Sa^=Ce_
1&Z>[7<KO_&9.+U>8OFQ/D2;Z46.=@9PAIc/80JbE-5H;faGV,AMBI]SHYHO.^Kf
V-1QHgQP:7(?f4Q5&gZG(\C8eL2L1Z4R/B=Z0Wd?1UY/SFgCb(]-G].+F(U5:0HV
Y+\R2T@2^&_OC<F<=A>#B_^OLLYOT/C_#&>@-LZ\V(W_4@Ga^c/A@d/#3g1_@-E9
V_0V1:3a8)AJd;gRa4FSLXb-e2]>;IO<R6@^d).::>)RPF>CGQ,;8LKD0;VWf(@2
2b\>aWR)R#EW_dSDR/Dc,Od+d<[bLM[=1\Yg\+;8?aKEEZEE9LJPF<W_R_>W_T4C
2W==_QU3W5>/=/Z(O3\YL,;H29&8gBd]<BE.f@g/.2NS4eMdMXVRD,L+T4QcI:<5
>]J6e+Q5]_FVR,c2(?ZJ[]LU-M(/@11NV1F[[]#M@VA(]BE03+ad,R\-b2HX00+\
.0.JR62[fSKcgI6TK0S(:B?CR-Z&MaN2WXK,I0N@?Vc9I=K6=7NG2fS+\)]9fRW@
U<F>53a0AI@MW7K^)F;M;I<Mc1afBg]3TAJSA5f(3L,F\TMc=@D;NP&Z&HHObG7:
\38>76IHL1CPX2S#G_9XA=&/3dO++&aR1J^a6@1QAff3ZA+gRg>&?FK.<TLOJ^XM
]/P=.W&_M3#:<5A:HVVT[VMM1P-6OSJS]\MQ[Z0HCgTfVT__-;IQ5gL=L0.[.IK^
D+2Zb/Tc&U24Z>YbF3;&fHM:X[(Q7Ic/Q[0D.PRD,(NOb_bPTU97@XH-?5f7bOTW
Oc1dDN4.]XgV90UNgC9@c8@N<8#.=8M<Y^@7)AT+gg1>N(=9>4GH<H&L\9BV^?;>
;.O36ASQBX_7I>YEO<#<HGa.a;^gU^)^)>RZOB9X<XYW2/W2fQ;VTA\2KE0.A\.f
8c1F_26[NR3G=^=O/L,F.81Q5,>_.6XSHcC3PJ]&RE/bZWK)S9@=@,Y5b/:)C4g-
bSXaI;-g8]U.LLQ[T)\+C_)-ec5Z#VRSd+^N_cf;P)G7,5M@C,e@P)B5S3^1X.46
\4GBB^<-]R-a120UP2fJgUVNNaV]HQG4ZPS[bD89E-/2Mf>R5F2a+UdWIBG<V2W7
6b7])#f2<09Ca^POTF3J#eL]:1Y04,\FXNO,b?Kd\Sa;bK:&[G#LAD=RA]<HF,XL
(fBPe)K)KW?5e\RQ65PSPQ_2[fDB4aKdZOSYg_L[N=O6=7ZCaJ;,BRY3V6-I)ddg
dYXHc:5/85dAR(LMYZ(0^2;R6+ZZDbb4<&>X=([.W[:.1JHR3EdDIf=g,F&[;)QX
J]B[C6GIBb:;0_DOeJJ8B.?\V[B@T9dRDD6#2N0X1=DA]2X)AO?,FA]4N5UO\-A>
>.5R\A=4U&O#8E-BK?eQ<d_X.KPI2Q@a<QS)B689-)\S<eK>;)dd,f0K34=N^ZJP
a?.e(V&gd,C=)^>S]:a/[<I9DQ=4ad7BY[[HVaS@[?9=f567H4QH1D^a)a8,1SVI
NNC>;Q@E,N))LgCX?R.6E2Q]]-YR7MIMg:/_@,-[.HgLRfJT\V5QL2FV-XeF-Vcc
e@&A6CUUS]1#/V9XHD2DOAD@QTAA\_VDV=.7gfU49>TFH9b.=aH4W^SQg-VSWWWF
\e(8b0+#QbAC]DTK8^gZS)VL.KQ3[X^269Bg#F4b+X#D1T1d8@JVEbgZcUPRN=0&
5,OYfE;BLPK-?9JOSN)P\K+XUeR<7EdX@,M5Q@feAF,OdgSJ2dF8Z\@=+WS1)(3M
JE8HY(dGcMc(R#4N&-I@#9g@^YOP>H>92b[^DV1?4-dLKHAXf=3QH]YI0J@O1QcR
I62W6)Z2g=)NfT/QFC;H1W34N+O=[cfgNCTMd#X6>L^.I@C^5^gY18YIZ@3X#YSI
.QBac[-<D&JC@+E(H-Kg&dYaB9ND/Y1=MPF86L#S1:[.=-D;d3._VGQ.&N;KX145
5J;dW:MUEB[9?M,KCceH:Sa>;@G8>M9/9+&f?2HIeW)Q0V?Z/B55b)Q6GSQDYQQ5
fQe)AZDC;P&[Sc0TG1]3U_7A)_(5+7b=32P=^,6ONV6?RMP4Be^eU]adBN86S]0N
612I]3OJO:C;KgHK4PMNe7FQE_W.&XCQ?6N;Q:8bIgL-E^Gg];aDUQ:0UD3Fbb.2
)H)?gLg,e6IE02==2O+>ITg59>W3VFN-#560:ITV\F(012Rb(WPDK8@Y=<fYIe;Y
IW_3JL)@9SMZQTbL;4XO\DI3-4L81K()YLT6#UH\7OZ_(5:W6-\XPY=#?\=3ZOJB
PO4&_)KGK<?.53f0;OY)UV[Y2[Y>O+=JfPB06aU-Md0=3G3JbQ=]^>ITG8\B;WNR
c>[+7\^9cR<7+b.:?]GYD/:E&D8=[&,CO;&Q=)NPV5NccUIM=L&LJ[QNHVeTJ.F;
T,#-SYLDGD13>_>Rd;=40)fQ.gV@]/)a=<IfL6-P5XE4Qg-:_97]8bP&Oc7JEQIR
:0B67V\EOW2(]X5A10/VA[7X^1YN1dgYVZ<ZCD:BK0H7&W0A]9@QeHLfdbHUYXTC
F/K7UZ)W,QeEO>Y7.^Y/(000a(b37>HW&3>:CS[a,BI_+/ROAG>6>&NOPZa&5\^W
Od9Gcb+OV=GJ14dI056V(@GKeKTEQdYa8P:d<(]gX74VO)YT>597&;EW:9AF#A2N
&:X>C)#8)[.GLK_7,/&4;GABCS15dNW)0(,_^@<-<]1DXGOd+6?_+T.e[cW=X^B0
LX^F3X95W]O?Ye_[[SIaXc)B()\DF?CD[UIHc,NY)SIg8W5ZUcK;QZY5c5+M.4G:
fWgIHAZHbI25eT+>RcYZZWE8^?,TGb,BOIPC7L/EB/fY:<7S/>62?gM5A9YCD=&A
aST[)2B7:8\I--L:@]5FU]-eb5Ka,3G;_[,)LQ^CQ+IC]Tfa^ZX.VC<2\4ff;:/A
Z0B:A=[7Z>7^AbQ?0KFVDJNcdaM88R;K=(1TB7YNfBS0=a-YGXA_^G/]RV&g-XET
@;IEP)RM^[P7UI1Y2[)Z3(;?f0P@cV)+&?7S=SV1XY^]/LP01[gI2Q3d_4P.Ic#A
(7#a6BD9Wea@3K^)4@ZRVC>BT]IU->3B;\L1>36;cPSfYM+OUS:E)IU&Z0R1,e]L
bL\?Pd=0Zb99<NO30&3O516dIW-3[^cRA<EgcNL:U3.6:@BZ5d\I[3BdSSfD(#UL
KLF(4[VM#e#?9;&3__M4G@;13,=]+?O^3BHM;(D,5cIgTMG?6T7^6L]WadY9,TCB
:OCQ-YRK.N2K&OaC@YWJ\^_B=f=.fb\/]:M;?+AX-9)(E@DW_)RRR30COF?#HRXL
CWXKL>7Q-(),;-f>N2:1?YEC38=gQ-A0G/>3W3_fMJS&?B,+?@eYYe3-X7?--?QP
;]Y4b;0#1<V;=8^cJ1?C,#^6B-G9#]KS79:?cRL76&<NU6.<8U6/DT:<<KKU-SJ\
/5-8cd#edQ)DSbaTW^L,f.(8-]TH&PSD6EfCgA+OaT]e)HAU^KC1K;,P,ReF_NL&
=AZ?4ce7T./1-4H^FL>X]O>W+K=b>f;,PSPY,@71/M6MM?f&;:2bH>:8]CBfSLgg
)Y,2_<e2-MPb6,deO#]9HKg65)ITDNY&XE](]4fXKU>VRJ)/CU\[#Z,1CZ=d.&A\
\P9/=:QC\/?N0@]SGN]RL\<#AE6]PO+X/BD3[ZO)3_[eb(6K;g>&aCK_6>?Y@Hf+
X&+X^M8&6B2I&Xa9W<Qee[DI]9P[2Y6&P5-_6CZ+O?9Q.B>\/a10cH9BXc-UQHg(
L.:.2^.Q2]f^R<+0,>T,Ic#6KTR\N2:SQK^JE#BE\F)eR]^Uf>Jf(fM\_FQ=ZRN[
LZOM/[Yf9(J(YQWK+[fY:aP2;<UV)ZF6(G7J]K#3KFF6I]<D41UKC9gQG4FGfdb.
T7)d.I?E7K+BEMEPT.O^.>\VN2&=WOJ::.P#[>Cd^g7J=?AM-@ZY#g<T[UGJI6ZX
Y4L(^-c=4KEAZZY\ZLWcK1dgb2X__=[Ad:PT3S:aa><_3Md[B.U&E=_T3ESB5_]3
/;#+V.&/O@]+]O+ES483PO50.;R4WJ?X)Xb5.</W@XCN\OfF#U^FHf9-I65EVB.Z
a(;R7]_N;8[01Ac=<=BgB3ScETOKdY194AWR__T54;/(5H4YH)[ZXAbP9_1Z\_Na
3S]6/KNU<LTQW[-2@Y)RYcXK4cCZX,e5;^X[:)3-,EbX-9;^gY+TOd17?&3b&GUP
]:N2bM2KQ1f<7e+]-[5f0XVLLP=F>E1TdG)=Zb:2P?Y[/FeG#RJ;LJAWEVZ?M@,U
\^D+VD:(0NN1XK2-#\SM[O1)LI\53GJd4^<Vf=KQS;D^gM+5<5A3>UOU+V)0eF-.
RJXDgDA;:b09V?UEa+XFC#:4(-FI6DAY4GD8AT,<I<ZY\\/S+#WKK6;@AIXdVGbZ
I>?Qb/LU,.L-2NcJBP&g@B#HHG&DTKbZT=OE:OCGf4GEI?e8=Z)gI9=3-5]ECe8c
=#JDN-]#aJ4eRE3X]:RZ^-J1[X)/ad1JDa@WC+gdS1<&#:[aRIJHLKVC3Y_RK9+.
8+d:cdQ=SbLRG1JSg4]aMNU@FgfXZQPR0BKFC0L/LT+BI8^^763JC)CDQCHC.D/[
<MIW::Oe9#?W\]]^gCUHL_R31,W]Kc;2gF#AG9VQD<.g4YI6&PP]DE/1]?.aYK;f
=#E,b)g6EQ2LF1PMbb[N:..A@D5:@02(dGUZ<aF<(,W8.YeU8>;WRXHWS]/1HNAY
\YQXX[1Xc=Yf.8<3ZY#Q_+=ge4T[d6K,;+36#)FJA,C<?cKbZL5#&O[YUD3BQ-^A
..,J>][CZEX1)2IJD)VdeU4ZLTbXRC&-C#GZ1WNHO0)G5](BW-5(L&A62b#c#_Z3
Ege2?=<cA5b>/;.IFJVIH74?[<9AG(>FOdc.+cL)E1ZQ(RgT<RL\U9_e=O2F8dIE
,K=aJ2THFWTgc#+XQ>[fI:=S4&D4J6)#&JDNQ9\L_GBJ(T+_F4AeNI@Mb+W:6^>c
>CUAf;VSO]_YM8J\e&TJG<cdaD+-[DTbZ=I#RL5cW<HLVeLcfCYAD#Y@9884JN[W
K)bWNXRP:VQ)<CHeGD^OD^bBR\0Y83HN4ca<>-V,D@T+1HE_+IfLY/.d3Sf&64,8
1;;J>2&,c>bXNQUVgEBCfZ5?.SMa.8(QB6IWE_J=_/QDQ)&6F[eg^bCBP.::M:=e
>X>AJee2Y5W51E9@H<7&NfXSUX&<B/T([fHY.[D8:GbMT6Y>6,_<?0+NFg/H3^Y6
KHN^D?FZU<91=AD=\RaS_1(N9[e##cO\7S=SZadKA2K3:@:SDE:=5.PQ&aZ+CSgO
^X]]^Lg#Z-2aId/WBAI<d]NJ[@R?8YfD2aF8BI(bC^daAD+LVM,+\FK+U>:-DW5D
V/-+.6+ND6>/QYe_4L[.#P5R@XD1#&[+&^LZ_[b--=-2R5/+<<?-@:[WfT)Hb\17
5K,H>@?UA]B.,,KE)+dJ(1fS<(ML[XU+^0J2aW75A&&038<,aSMFC>E#f9g9L:#^
EXVf](QRMO/e67V:8E;)NQ?#dNQ-#9.JJWN\YWFI)/3(^#=UN_8_R(MYDg\@Wc+T
&GJ]J5+a@QZH.LO457XF4:MRcR\&\3;=D4A,8N7DA&L53/2TPW\Y.[]bd[Ke45(d
VVL5\HW^,)MBBO4[De<J)6&aP(BW0M(3_bWZ7=F@AFI+8.FDHR;Q(L<?@W81+8bb
E>c]8@#\K7(/?QA])BE[fJ6/ME2B/9Q75F(-O++a/C\@1/8Ic/XNAA=Y8c4RdU9>
&&W<PB-B+YDD=+\@-B+E\f5>=bG5>[GVXO,V[J:Q=G&]TgPd=784McE:QZRec0W5
M1(,XP/F0QSAfCgRM;O.]W\MD^9\c_92>9JPIO:2DW5A8=J45MIfG3NH[0K31)\d
PY2QOO\+e(&6QbD+P\9YQ[1G8ZT.A#)@M=ZFC&IHbOTe;bHEd@d(P:X[2IEYHT.;
HPS\SEL8^(-a>D[F4&#^8c?44CL5=Ze,KR#F?D2O<Sg6QNGV:C5?;3,O=->RDWI9
._W_JJ_FD+80@#VK^TB,.I<+TU/H5/S7)=AH&ZKQ_G0/][9OUf9F=5^<==LPL,-P
JO[78G]e].D<@@_M-&C?<QcX.OHR)+Fd_:-cOBbDV=a1fWG-Zfe-5PBJV;9;HV+2
_W1FERDRE@Q6,[0SBfC-+YAe@dA)74++e?3=J)ZM5&DLJ&_9gN24IfLLd;CQ1(cX
9M/8D[?eIL8]W6>D)@P/fZdM=&V3#F;T5IXe,R>(G2If/)GL)H>W4(]A-,W&[4Mb
NN[J^G:bW\caN1=;1.?Ec&e.;2Z2VQ.E-\[b7>7^R;0Z12>_RVB_WVOE:(REf5P\
?X37YP-BGW;VO/1NJ^^)PZ9HWb?JO)W1C6,]HU[Nc?V_D?/ab4E#7geb-:Ja)-&Z
PEa^;@Y6TD;8;g&@5G9(Y;N+/^Q/B29Z)cNdHcJ(;K\7,_7ALSb/FZR_;A&6JN3^
a<:)B,&>f_XQbc]a_/)6Y508OX/0WC66/(e3AHT8\I>B<OR^eG6D/K0>L6Kb1fb7
I35P[^BCYcE/P^K.@#<L(C&SDCT?J?0b(@#eN0@5]\5HBUa;IcVJX6AZLVKH\QB6
/-VOPRJ.B7+>ZeaO3-Bd?SQU@WMK@_F-Z/D\Wa)c140ZcN7,+R(KDJ>CC)DRc[#J
G?D)[,:C;_N0K)42fB114?a<J-LeYA>@C6:TZMZfafA#L_X]/DI&@NgLNHP@:P_X
Ddd(K0Z8c2QSPc5F5[b8,#7AeX-/^8O8?N7a4/a+<89Z.=Gb;</WRSOW<,N0]-ga
GWSDJY,PU#_GOE3?M()+gUIGESXF8/TLE==<-M9^)E&adMbR<VQ/K8R_RNRNP&:,
G0:Tb,RLa8SR_Q:a,R]4T^095ST5HNKDBCC4c>XLVRMa(C;]P+[NSC#N.C-2E2Ua
#VP>=:ce\AC46:>S&-c[@8(]EHd=@F/&1DT^Y7&YQOG/,SdD>DUOL;e5R7@:KQ57
K[A68@#bHHX0(+F]OWfEL1LTVJB=]G38PZ.3gCE1F3]#;SMa:K0#(DG+QfL,fC..
AS(RUf(2);^#,GcIOQ2T#S1]8J-(U5-9X7a.,+Z51GT/^W^IG,\44Gb,3/\7g47\
,CcQN)EHb#L&a[1=-L_@Bd7>DMfH;.dVZOKA;4DV-6ae[.-=P^:80W+<]B6)1Nff
-@E+D9G=:=\]ZO#feGPV\[#FcUJ0^-M]_B=f,9@4FPVVXge9b9\0/)\,^/YTLRTg
KVR5.K]Zb14JD:/MO3<KUP_&).]#?/,UeeS;e;E.C,L3d1-ea;]D#X-D?aJ^XGK2
VU-FG7CDD7CN[8K?YC;QXJd6]VM/-,TL<UT[/W,f-F^8L^R_WM0[fg7Y[:_0f_g:
MXOd479QdA7H2/f[ZLD&P8X[2,4]7E9P_/a-MZJ\Md\XGL.UR+4U)LgL.#BRV&-^
.8X]PW#CM_>bUc:?ER#(,V9KTCP=bBFJM=DR+Z?aW_18#9#+S1WE.S(NaIQ2SWC7
#HY)KQC.VNFY7F,.#-AC5B\YOeLb+W&0FbJg/C.8HDKdLAKa9WaAJWI)+6<6BZNE
T8Q,d)),:04b5V2\-#1SYT#HEBJVbd=:&ZPbKC<#KDg@E?d@OQb5e]IBD[d4.&SC
1R]_:;G?68;dKP5gS,EcS7+>Q=F8a.,KEEKc;[<eON?D1[N;F8#6\I:J=/,1?eO+
2)I,I_@6Ad/c8OU9I(E;S.?49g-EK_3G\,J,TM49PHBIH:Qg+H)2-O>&DTdI#fH5
]@4L)9:,V<d-648V^KKOaXQ@-_54CI7B4a)J0UbbLbM17NJ&L>)YX.f_@UP[LdfW
W/4f&)4;879:;4Hf:c@WWG(f.L]Lec+ON5L4&>XC1S+gNJ^2O;(O^FCa8EYY;U7T
-9XYWWS8+#[G(2F:J.TfR5:?R767:)<U<T-+A8Zg9(YPW^^,Ef<cQF61&g#eA(Y6
YgV[4)b(<afK/PVH;B^@()-JSFdg?V@9Og?S685a0Hb1f-7C-ARAg3NAC/6<@37.
1=@FCdCW92]TD=5FZ06H9aYO)Ta-f7a]YJRD(A:&XHX@0(MSSa.3b^aKV7=:,OK.
7/[Wd];ZQ:BgM9;93::.=M9BG+WgPe:5BLC[?<-#Q-UCWL\ODZNN@?d6KBR_/a02
VXC#3ER:OOQgQL=.cA1BB\K71f\E7:-;[MUSR<VU2PcN+;(>)//M7>Y[I..cFMXg
KO[)-K>I6[P:A;9,gD^+(7-ga:14e0]>MIW.(QDRE_]PP;Dcc4@\C@T/ReRgO^ad
.8;Mc7WZ^eFaE?R,9\E<75<gV_RYMB:IUfJa0793bSMFf,1EJ3c9Z9fBD0ePY#S&
BDG,?]>A+9VT(O^&e1_G/NcI?<?56A;c1HK_YQY+\B&\gRH7Lb)@Q/3X1Wc5O\J]
=Yc-D?Z,VLP?TI4-]fP@582./&S-LCF_67gPRZb9B#+DEe.T#>Z]#R5O_O4E+;e-
VJ7<X)8A>W^6BUHA=L(3cG6UaE],<D\/+):>=T<;cACX_@S.+1;FD0=C;0_G\e2,
gP</;W9?ZAMST39cOH?>4390>ILe1^c5R_<Y[R19)^Y]3U#D/@Q/+7BD;FP\&SOM
c@_.U.:.O,QTbH:5eKWf/eUZ-L&YK4[S;&F034ITa,]@5^/9V>V7Q^JJc(\2685?
(Q;U/3b/YT\TJEOJQ#QTE=eKY9=0g6Y>:RC8A[&+>O-a5S8?5,@V,FSbP1bB:;O&
d]FSSRRaU@ae)=?b:=+I2A6QB3SCK0^-QNH1E^NBe)K[:5VZUBI,NMO3Og3#e[DJ
?Z)NN+]X1BH6OIaW@Jb&e/MSM6\]G/O__Gd>@beEJQ6)JaO=?_A]?<62H353c7.E
A(^(P6f_=5-<N=MW01(E]KeM9efcA_XA]bZJOe,(]VRDaK?FcUVCGASR;(T)=;O#
Wf:5O+&Oa8=5Yde/7]I7b(DgYc[#N1)fV.IHKQ4X5AE40ITSVc2SV@GQa)8+;>B.
c@-3INT]8<,CM\@E]JY4\.,TS+@_FFF5XWBZJ3P7b>D+H(1I#dRO2:;V@D-Y,H/#
^ZM_1?Gc3gfDb8N0FN6T\.-CL2CU#+S[TgH6CH;K^?eY/V4#X4[#I]TDG:PW;SCJ
E9[7]0K1FKBCeJ8#/]>O@f/+Z:CNWLfeQCS2JV:G<)FHfC+7S[LN2)QZZ7J6,Y,K
aK-9#De;H=Q\2(dQSf]HG/(AEVa2]D2.U#^_[,.;Ef&AaY&F:<6SBAI8VDSUa>BE
C<(Ld7&5e_942/F_O(@e3ZOE0NDL<AM,D5LHg,[f]6)-4S69X0>?G#G]LY&DTDbB
]9&)9PXEIN[Kf]b[_=ENfB5+V_T5VG#:cD@bf14?ZHKaX@-GfWLKfKg3V0ETS^Q(
BR+YGGMDQQE9DS7HMd6#9He11BA/0-@dc<ZfIV6P&9)TOXf^V3E;42XK@+;>58=e
#dU630K.D/3H/^&:DI5<_DP#FK],+G7IJdg=d/72V=>e@0?7,<2Z\M1=ec^[?Ud0
Pf8b4g)5\/P#\2GOXM[d]T\?IgOTIC\.1&6)c,\C>?0IZ<<#8.>#>]R#OgFAZ.ba
-\HbFS-[O?:7M6953JXaI0OX6<2cfYYL)#90SNg/[RGSAgg?T<bMg8BP;+Pd>VA;
&IZ[0L=Y\f?SX[&0HU1;ERAASdM(UgK4@gUY#bR?DD2LJ()12^CPGX961-P]1Q+[
<F^?(MAbK;VQ82=<?cPAZ16Tbg+/KC5X((Q-7][IHB2LS0#;NA)5IKG]+JOfGX@&
bD,/U=K1(P\HA5:Ka1716b<S\B]Z1/Y1bXDE.ZdcQB42=(0dF7[E/L6b3RY9[=MZ
#cgdb=/f:3<-[XR3\1:e<f9aWJ[?;;<N??BQ3YD#[D.X-:5&I_8#d?be_(d:DJTC
F83[?_/Z_?-TZ/)W<FS3C;d9=@G?;603C#,BQQ+4#;a/9JU)<gX82L2N-(HW?DQ,
/A01.5U[G&9);AAP8E9[bL<)D+/2+F1BY2@QQf1dAO/^7P\_=]PSW9-OHZ^D8X+?
^H^C=H#;9^d]\_+)HdU>)K@WR]UGPW2JZ7]ON3g+;Ic0IeND@ZH?;b_c.#f?P_H4
(_D;#.9(ef/(P7W,.=_D5BU+V.;6Y>)S&[M\0F/?O-Q^eOF]O4b)0PN3P0\?NdC-
cH\fff.Z[9^OP>>R_)Xa8.(5)fJ6Q1EAb(I_EU&7CT/:5F<R<XRYU;6Sa;9G\ATQ
T:c:U9N=7MDM1dKGVRd<;AO0^:-P2/#f,M2:NL&RWVS;OS-S?c8W4(SgcXO3SZ/&
C>WM_R\58db]_eVRdgSBTSg+=@Jb7TX]0:X6T2/[Z.^Qd1a\+cZ(V;,E6d/SY=Z:
.,Ke[Ua@.-GNf[<T,c[5)0/cEJ7b;G[LSfeR?)G5.:-]+B^aJ&X&<)F[&0d[XC^U
:PC0EPQ\eUeX9]6WS5Yb5MIYD;GgTb#b>[<ZgeS/V=c/Ne_d&:D1-Z5VW)7Fc+gD
U.87M(9?(+\,<5FKV#,C[L;:9,(+a/HFS6,L=J/OY=\,V<e9/5V)^WgJf5)_Z>:6
_VIC7>f17=g[6QcQ_G5O(>S&YO/@g0Z.GaAN(9M0Fd[KOIX/#b_VQ;Eg/]UU;b6d
JUdeLHO6e0S-SZdgUPQN9N:;M<d]gI<C<(S72d.Sf8^A3^U8aK5K(RQGTM?QZH6&
GB3]83U0]d&aFOc3-\P,W1P89P24/@2,a5[,;GA+YV,0>2Bc^)@:N9P/d@15\&)W
cV?S#4J\?:HgM(]C)TG>]-9),DIN6WEQ5gG:\3ZF<XXT(3;1_@BE1\1A,5SRaPf7
HBV6cgTge#L>>O9352KR0;38/56YB#BDRUcQRa=@e0daD6YDbEQ7W+;+UH4,OU@A
.IYMO4)F6DcPE?JSABJE-+IDD0I8e/ZYb>IXKd4,)#,#[H[eK.V-@[UI:;f&+<CD
^P+46bZ0]de)3;D&4;&&8+:aH&d=-GD5Q@#<8Ddc^X_/]Z(P;.DWP059704)ZZ)M
AI\:3J_A)XKG5#;DW<-QYL\P7U9U],U>TOb:fC/T0OQfZE6KLbg[9.(<fgFC&(_U
.a9K?E1ZfFg[CL<g)[-a6MZ[@NA&65^@(LA4P=<KH)S:I^_EZ:#K9N2+X<e+.I8,
d:OBD9@B>FD<YaU.PN.XY#&f;WET6C;beBSS8)OGfZ;]DQ8YO4QX[aX]U;5C1F45
8+GKOcU5OOXD6N&TdbaP68BgKPYb:AFY<JgB(a-]<DcT&_8;<Q5FB(?)R(dW.7./
KACB(e>SN,Q\NM=.NT\P4dK0NG?Y]P6f19)L)f]?;<69V0B>=N1KN5,^&X@e_FMg
3[d:a6LHHS27TCC,MWH0RC032dHL8;46@QPMDU/V,0Wd2I72[),NaAPKMWcA#QX2
ASb(8E7gJPC?YZUXE+\HZH,Aa^SZ:F1>.6U&J)OHR2_<UfU39+Lg47.+eZ4g0b?<
b>J)UdT.\6KLE2>R:A8eS5?3Uf@46;Y1\a6Y6cbV^b64Ad:TK?CC8)#g+J-(eF0M
5SW[,0@:gU,)S)6Z,S@c/gJ3_RH>c&dWTJg.e(NeBDA^RKGU@[.[]A<9Lb3Z)U2I
\APXg33;9);/G4Dc<A4UFSScN+Z.c&?RAVg@@3(L^3O/.0gaKa&[.G)K<OeK[,KY
\+cQ-NDKCI]I7=Sg(.8R>F^?5IN2RXc&N<UIDHfYJ:.;95T\gf4&0CP59WYe;X]X
YH8EcL2#SM)+eU]REL&\;Y(K/;]&2I/D;d6,5C;T]@5_.YOM[f@4-^;4PR<55fgI
R3]3fG2F>PI;58X86^)O6A>(,dWLJ\S3Pb\XT/QNF>+V,,U46N:TRMg#+<_6/+W2
1LZV.aaNHQ9HB]cM1dJ070-1JKTB=F_7RFLf^,0g048c2@HR9bVB^_2DU=-.Ya..
B-&eMS^&-):6U=+P)LX0KY9FV)8[\FO7)^8#agP&>9-:^)Gd)SHR/&0/bNV@Ab4?
g0.C.;AYB-a/XW@[SYK\DA;4=UH3(5B_8[30c2&\J_69.<;0-1=(((]AL<;6:(]-
/4NVH[Y(2&>aP?)VB,<.If0@#f#/HS;&MU5;b&9SO3Og(Cb4;d]ES:dQRKVYTBS0
1d-DT61Of67,Y?2I;10UXQa4VRX)<7_<BfFF(+4L8MRR[/a=,##YAK2DLeXBePaa
23K]W3e68d?M_]KI<<&7DCgXb75cC#0?Q(aS??Y]XI5=]?ccG_ZR-3SbPP:.8LJQ
,SE-Ha,M4U1WA^>U:N1@dS]7C>N:QY/R29=VcB?6Z(^AHN;JWTY:[JW_S.-W/9VP
@<GKY\OVW@KK,QCN+_:\71]F,f[6gR=88.JW,2^.<.2e-\a;/GCU<8&6T6(QFcZ/
QU8[M>>B-WaVIU9[UW0NC@-aTCV?J)>)Y_QPJWgO>,UY=@aIA^I(VEW8JP;EYf)P
#-?4^3)..&0U8HdW(ebIBR9=WbYB^.NT\>Z9^?3,eC\?-4g24RJe#e]I1G&3IJ?D
Q^9cZ+8/Wb:>d<C_96RZJB;9DD8cU?8[O_;H>D\g2aR@a#K)/_M82&Q[WIM:RM&S
B\caIY-,22.58Q3#eC&OB(PePCF\=.\CSB-@gc29CYE[aRWUb=BP/Y[:3_XCYP</
:2NdB-N>K08>)aX5?X=0UR@P\f(>(_2cZGeSQ^GWV+79-X]BecZ9^4+(<Z51.Y^2
c41da)WQ;UfE-WV<9Id9,G+cQNU70NH=PNKH_1CBT77J(C.OQ^PBS<B=0][<V:7J
fbGZI3/;>a+W)1\25^O@-g2Yd4UPNX#g<GI0d(^]G&B\F1;+L2M5_;DVbcVbO8)R
\>.#KXCE.4Z)e.=BSc+TB9OWC.IWN9AH&VJU@P<_6#9I.(&2G:#cK)+aJ:_^,)B0
)-B_=MY8)CJ6;.9,Y^Ie:C]T-0=A^4_N0_^<@B^)7b6/M]>]M#@X+;3X&0gSJDTY
(E@NQ]95?.G>?^SGc;QZF]F/&70S@\cQ#?1(AN3C8B3d4LF<BcHa</_.K+6@1FUL
PJMU-QdffY3OBQQMSLdB\>QLSQJ;H_5;3AAe.d[KJA<VR)84GL=ZTL91._6CQ?Nd
:_XJLYY0NXRB+.2N0CRDd(A#bdgZI#0/);7cBeYLW7aI.V55X,gG@7HgCYC(25]V
Tb1_3gd\[(V=Z,IJZ)QYNdE,3^XW;WU>P9DgC9HKL.(g)_1J5)C./K(4<#[1APLD
7+g#:Y5<eV?<>V2.GJdR6[f<95K3@7/EHC5.42M6^SND1&IEJN66Qb&^=AI;:=MT
fJ/>LY5^IB/U:37Z+LLXd#B#AScCLSB0(JU7^Z4,P9?,^#KWGL=HD3Z\VS(I^Zg2
]F#EW-MRCde8^1U8[TGC=7.[B??6(H#F0)X+4U6&#X7?2)]3bOd-I9>]^U>II4e0
O+6.Ee&.FT-2GJ+;HEcLEL.UUCe/.86E9M1La4aKCQ12<Xd8KLZ<ACE2_+H-b]5D
@c_+U@U]>e_B/G]YLGeIWDMR=W3S[VgfHKU1.X\+=P4S3WQ\fV3[?K?:aH_QQ0_@
0OG?6?8,4ceSJc6S&@5>2Mg:+g_G,XXG24<e@02&99M+VK,.d?4HE+&56(f&.:)<
d9\2A:\RZ6Pe@g/#S2)B38+R_>22XUN[Q]ELcaN>RLM^7Y6/DQ\Lc_VW3=gCc\a=
Y6=P2\[6>+a50d:;@(-;S?[=XQ6bCWUA-9L4d-#a_IO1#3K^YOZS_+H-KadW^PYW
bL_[+94<.@6XEQTQ+#<ZTX78;=X/^1@-3/bE1[/A9:_LCG/+V=YO_6>:#TODUXLL
a7>PC&Z/KOKeJXH/UFK;TId&H[9L+YGE<fUfY.Y4EWC:d_dZS?ZS7RR.]aK-fI^5
V\c82-V5DUB^G]N>#OBCN0M7+^YfM;N:acKd(eL;L8N+36H,#&d1fZ^7=P&<2[,Q
>b0&P/2d@01HP-cESI.35(N9A1)BMC1HT#:FE&+NA=cBJH,/DNF;=/=[8bX-C)Q_
/1TfM(3#@+#WE=cL]gY4I>F1_#F3I+A/^fKO4B@-8[[9?Ta4S:(/aI&+b[+VR7CN
R=)GOe=E&43NKNef93PfY[a<1:[+bea>W:2Gf\&ETUS..W\>O7egeNU>J#(FS[70
P2O(eZOF7Tg&NQXI^@7MUBg1UPU=5?_Ff?AOC._O>OKa3[Hd#dbJ1M>FO0Z.#c5H
D4d1YRg53875MTd)_O>G/.D.4Te_?AKW>NJN4@AXf[I]b5;BQ-)@;+,adMFOX6,^
V=4XP(QR;#XGFgJEMR>2UgK([1,NSZ(gaE&T>aR&S@W_\<YbUXYMH/RD6-(;2fVL
-gDc:@/4>c##:4]a8O>VI3^]EANU-R8(P@=b,SR^].]8T3f9121/B57--[f-\)BA
Y->&;Gb^eNADN>ROD&@^_L=\f6d<;R9)J<&a<.YT_(.?RS:@)KNDJ+4EBOQP\4BB
M<[[65FJVIU^P-:;AC7ZLLD._4L6U&7Ea;EYCNP8g_B=GIHc9^E&\P.VM+JQQ1?7
;[I0&WL&T0=QcBMDK1cTO)+.,LC7-bXBL^MQSNTF3H48GUNUXP#d3[3R7QNaB)/c
5C^R1OF8X#C:V41DD[Q<VQ6T+Z0AD7I@La&ca>(MDP?L[P,geab-7(>2[+6FG<??
5gRV7FPOKUMT6]X;-f2YY>>Nb;U1_c))0;^,=P(K/X5bSW:(ERG&:?OZTM@B7@Zc
]8g>I4L7d:IMIK6G?LNNAU7g_aDR(W8XP&We\Y=RaPdNAN+4@F&57d2P)_+^.5<I
#>)e)J:SJ&(?,VfM<VgC2?//N)IMd+M:>)-L+QF-bY0=Q&Ja;D33d=Q,W3SF;)<?
(SJ/gE_649_Tb6/5:]UCV-]g#;@V=eNbb)6GNTL=+NR+=G2P=YdeDKY/O.35_+::
0G=MYMHJQcVB\4C?JVEPO,]b09C;0S>7Z7Z9__BgUZ0R.4)_/<5=XIP:BT+K+dCE
C=VcV<438BI(Eab?=U2\FHd<^5^5PB(E<M^Y\IP2fYRcJ(Be1CgSR&B(#(gCYSR\
+b(dGR224c9?\8XW:4<gK?W/U595,0[2f@Sg5=GGE9(G\-BX3b7XUSfdUfNCKHa+
Y([41EUXF.R+(U7_/_2+D:GG\QWH7U<CV7ea382V&D3_2KgXE1_7Y1RU@=VgDT)a
M,7I+>1F&K0cPXHCWLdb8,#+1Z[8CcG)eGA9)Z3V)MVI:CdFXG4\BP?Z->AD=Pa<
&1Z/^&1^=dM,AYH1-+3/b7K+EJT1WNHB#9WH\7<RX&;g[#D^Pg/QLfIGQaCW[G,Q
C0JBZ:,a<85.4,WNXZ6M4b0E/=&R22&1A4ECgI;Y6LRC8&?S(ZQ<7=1VK<LDf9\]
?<F=ag1QUU-P]TJJPKK/+:WE0_D+A=#XP,H(HC+K=,I=ARbdS.#YPM)dVCQO/a^Y
aFUfPBG\K9,FWa9[_,OBVLf-OD=d+FX\=SfE0(9,>Q?Q-V-S?abWKIf,E:45cL-;
d64&+GdVRD])7c[=#KPQYV20E\K\F77]F[;2V=WD/5&&P0,CNbJFb<^JIgV39edM
JBPUSfNB/5]T5&;L[V<FgX<34NC:#-H^(IT:)0YcA,c[Q<PG?Oadf9)g/df@aY.c
@)WY:fO>[AJ5(Z93d,f1\?Wf18K/+3+I,#T)XZcV:<=T_UG9;H>Sf.]7&J>T4OT)
Z;=BMIbU5\5E_/AMOQ]U7;,ZaHDCR-9SUW:GAfMY&NA7+HLXHXC(BKdNE[KT03TV
8bH-U78E#IFC(=Z-,_MW\&#TUT[.G-:##:_K8Ec2fWOZ0&05/=FY_.:^#@-_KJIU
eGe+EFB@c7H++Z6Hb36X&f5,JUUCS-7XA_#g:8<<@Y+V#K@+2E7@R>^-28EA)5_f
a\Cc/PDeZ/2XEC)P]g]V34^&+5M5+/@?a2#2,TWE>W+W7.^AE9@_Qa?;U)54(9cR
\O:L.9D0-9aY/+R9=f7E_Z\.G?>Lg&?,UKD6d:&T+P\QM-_]904Y@d2:g5_2TH9Y
J#E<>)&T4ebe-Y9gg6aTHDW8DM6;U.EG,.J]eRODGW=fSGFBKV4J]B]+S[)N,&dP
@6Ba;Ug@/UIZUSW\:fF;&CTg(9=]WCR,/QGAHZ6A^CK&8MMGH/28e-2;)W7?G.H.
1_,&>)\.Jf_I1bXP?N0S6T]gScfFHAP]64ebLXJK9B]8=C[cd;4]))EC@+R<EBJ,
HIBC:a@LMQC5AE_CHBa3/c]Bg>&TXdB(6>fB9)T/Je:>,g1RUAc-f-fL+9X5A&9+
<9b(J@]N&FB,2?95?MFJ-9I-/bR:3e[>>@^26LbM8PK-B]4SD^IaaF^2_U00^C>>
eRS^g:b0:73@YI,4fV.,?L;1W_Q<]ZIKI9KCN]LL-;1B3^3J1VJ@.C3;OB9@a)-O
1C?PX#Z@1dU_7RW8ZJB;D^X8]Rd+P<0R&XQD;4A09aJBEBBY,V/R^U9.PgSg@H]c
VZDM8J4MCSD@eT\59,(\AFYK3FKd25T81_)NBZ0BI2eU>TUNVO>:77&Y>]I7T,Z:
?/[WBIYX9V/T,G11_fcUQ/7&+MTPVV,[.d)\-9&\8A^P=1Fb6+-fEc=9_<,SVePa
?4Q(SFEceH[K#AOf&1,b[VTgI[-7@F1#EE:]_8>LON5FfK_O4RU&XQPS02J^abN#
BNMIQBI9L^^W;9JIKNDa[SW)K94Ug@ZXFQ2g-7f^TbL(2^f=BcUN6)I@H3_JK3K/
R9A#^c12KQPcE-7cC+1G[E-BDDGO4WLNVg=,R<c/XQ<Le:0I@8Z]E6BNcg//:WJY
,5L2\9/NDR^\#/4<;YdL<RJ_?C-.OQDL@d=.0;+Cd7e0M^6HJV??@IKfd[UFF.GT
W_63\EcFY3(CA[0/X>,ER/?ZIK+fEZ)W>WZV^\TOM9;R=Pd<Z6+;47=bfM@<@/AG
UXD?11;W72CM))34aD6>Y==3JG]XE>0>7[Rg30DJPGF?STFM5b.G[6fTI/R.TWTZ
^BQD2bJ(XTSVTgc]LH.b,&JBSC6QEg))?Hd-fMDWbcF\&O>^cEQX6MT)a[Q?OSJ_
-JU]+2eH29E=]-3+OR_g>0c]SU\9)2D(6PR4[5AWLfAeb66BQ7J?J=MNd3fa_)PI
FH[L\)4LH2GbYNaZM+_;SMJ#(,R\B@e@>K@],b_W3]Ke\I=#AJZME.S#D@WC86GU
(G7aZ,c&C.Yd=I70CB(N-4LP[CROK,D#F0J0>=gNbU\da?KBg:-SV27aV1.2W<S@
0OP7cVRY<+;a@<K&]5Te3TYR+IO#)O2[\FZ:.0^c;H/?WO]+CbL\L8)C/<acFDcL
;.T7YF(C,1B^I+aJbU/S.gR[L3V9SIPZEgf)NWa^>T\:6=0/R.b0LK91F:1[[+FJ
ZZ^1A?&_ee=OJO<5K&)<B:E[&>CYHcX#;Q^,K->F&IIfUS?KfN074F3R3PO_.c[#
ZLfFUb\_.)5)J\b:]aFEYbO3ECGNbcG\>,9MW(5ad+UU76>6WOQSM9BN[Z):S7?Z
f[=CM\7.RH5>97PSX=4(;aJ+_Hc^9ZO<P36Y0FTgdcaa1Q</L:AI=eT)&HF5JMQ@
^M:QRfV,J]C35bT6U[d)CIHRTad2/(Ee5#F2+\B2-J[I[,/]B52/I>>UIbSGD4.>
f3S\O@_d?V?]BRcR(RG+J1fV3&O4O]0XV#9:,VW6GgcO.60_V/F+4:;5K5EcdQfV
Z]F.Zd9<gPbF2M.\]JL]Y/c>cS)_YFO8b2g5K@WV49=CO7GeecPV@dS7,70@TE-_
:[Y2S[910L^XNMI?f+dE5L,?MM>NA4>3gOQ5Nf>06Q6O,P4E/FV3AY7#eaGgEb^>
\/.^Obf=#+@+36.4Je(?b@C00G[aY3b2a[#/ab5=[KX]Z-N7SC5d^5)QRWTb\\)f
6,C<IFaT7_X;B/RL2/8#f3b;Q>75<,UQ][6.@/9^B(4J1^8X?4T_?[29EeVDE3YN
b+NW:YTNJRUR7.g?aFG/9P-MN\T07ZbN[AbB3Cc#ZfdX#bGGQ,[D-SJ+8NPBb,TK
a_8CF+18Z(dSAMFJ;f\/.)Ab187Ba5Sa@Z2C@QZUSgO[.WPALY08=,+9DWVH+L0B
.^a:(=>C?C^14LZQLO\-V5[a9KE0=cTVL9^S)V;e@[JgYN^9XOHKG)]d./XQJ_=R
P(,aVK/F=)&bbU^,2QF1I&L>X.6))bX0a,VN7]4>E,\WB4[A]cDeU8CKC>ZPU:bC
U0+9e8VQeELFJR-FC+M_FVS-G0Gf8HH[[;YE\K:+IXN+IfJNIOGLX4A<2J#8=aVd
@7AV];9#eE^&MKYWBK+V-Y,PKb-/Cb#B2C[PWDX]G:_S_W=AR3a1MC[=A:]VaQ^_
AK?LHb?GY&(/DX\Qb>9I6b21\]PfJ=&)FLK##gDEVNaCVM[.J0I,#U2V]#Q228@;
TZ[;.,;H2OgODO@GT4UP=\MY0&>N+I]Sa6W#g5^E0e_?c1HMAS[ST3]#:=AZ)([f
7OM9TI9^T_b)(b<2F,?>^2Ibc92QC]Da1V>bd>O@/RH:B_9]75=Ia<+[QR#8I:7Y
MZ.:O(R4+W.POO]F]S?VU)aG5UJ6>VPJRb<XV5;Q(.>#VQaVYJCYW0>fE1+)/C_R
Q^@d/L>DC\)Y4Q/:6.CO5,NLWa_V4Xd8\9XBNCSCF9@:3:IDUHcM99-UBb<BdNVL
8f6N21^Z_)VRUNUM_/I.O/c)C9TX,X=>,QWcKWE:@6K_F;7/I]e\(FQ5=CTW@9JH
aXSbZce5[I9X)+6:OT:@QF@RIc9F7Na361TT]3-NcW3Q2(fP7PPb/0@1;UJW,<_F
T>DTe2eIc5c3:3]T^0E@O\TP.BP\E6U<X3eY.P?GTYG=/09H9?M_6I)AWKe/EcCR
?1K;Q?0Q0(4C4g7UbGV_VUNUTSSKaO4VH9UON9[=Z(-/8gTG[5(gF73gd6MD7gNd
:PN0D?ZfPRT7;GMf@d>a15KV#.YU^220eBOHG28QY+=#<ZL0G0N7g^N:_>S18,3=
YIcIP0A;V&44DQ3KW.&R8LEIFSZ:P5L6,-6d)Q+HPNHg>CSFX;b.OL6f4Aea,UfC
3eZ#(983)&HKK@fc\3?D+:M@#[)D=SUKPQ#MK1/K,+4,@@BdV=d_N9^KE(F(4Vf+
)IA[-AeGW#O1B5@A0V^=59ZgMb:.\-XBH##8WVe^#D4QbKIM/a)4f\D:<ePO.^XR
1ZeGBgRg/c&d26+g/0?ZH@&AB__/-.S<B7D]FL#Y-?/5>/C@R7.JbC9bYPF88@CS
M<?26:E4N>0CUK5#8C^GV==N6Rag>)Hg-fcf]PHaTVGTB;9b4L(U]8cP\Q@=\Z0O
d/UQ0+L?LfDbLde:fA:JIcF;DaTb1H05\SZ2(ZB/;TfTBB)6fAVD;GQ^]2V+B.+-
Z/PPY#6^\;CZ8,-K9T5GQbT.V)<OTf;8+[^+8/.RESNM6(7C8L]9P8:5YZ)FEZ<8
T)/KaU@[\&RCOM:ET3>40-MNYS7/KW7Kd?/[59^fd;Ja(5#5CgQMVSJ7D&J+U8R1
,/T\9:YTX_Q864EX+S+>Z]=d?;XdP)W:Q_0+Gg:]b61YWEb;&)&Z1+a0?9d4,+C[
c0[//_6I-3IY7bXQC,PI<I2+F)G.[A12=O^C7P4S8fNE2QgJ7F#1D#FZYXH?6?AO
a2E#/,d)VOfT1TX0_3K@V?M<ILF>=Z#^@]HNE[)TG]Y4<.0[-]ACI^4g5Iab-.e;
gX</;F[@,2^91CO5VBY9G>1T51?&,;@,6,>)[5M@^7geLTB/KMWWK,&CY&>9B.,O
:OIJ^HDG:?aZ@\LX5:BJ;aN4J3Bg8W@+@<PW:M,aSU-T&VOW\6/HIg#DC-LEMXgf
FLNB+W6bWH)]1FSMNM[X<M@e]Eg548.&Z)dUCc)R3]b_V@ILJDD;;0JK@KNUW@&V
[H(H&.(S)Fa7[A;,NBHU5;b=KQ[YgV<-]7_F7WS\a8f,RDFeTIVAbZ\6>b/=D=:8
:R^a=-,eKI7fD1=U&LGIMGbG-eB3T2,9E><U\F.QGT;E9PP3#bQWb0Wd4ISH_9X1
U\dW51XfOJC26:P6;3,+ee^TI\O)9,UeZWSHL3bGbI(^Qc&d>Ue<Vf50_4HI&g3J
GLWCR[F;EF;Q.CG57<N^,[J2ZB^7:BV.g]FKI3<[=ORG/:XD>J?GO?)4a@_F9UGN
+7#O&Fc:CI[\L.Sc@+@])2+K[4J4c5&^U;N>EC-]O@9XKDSJ=b?UB@8O(>\=)&PO
B+>NPYPeFAaB/^KYCa+Z@>74E\4I#_:bJ7X[/\+M6F]KSfM\07Y,D6[4Z_5(4Afg
W[[fQ#>G+\[NbU)XSF(\2#>8f=4HRLD1.XIG-K0@_U:&.?2ZX4A)4N_;.S5[G5AV
H@4/P\P7</e42R)23LTV8KcD8:>\/S)S1IA1,,B3?Lf[aQ5gT>9,@0KUcQ:fPP(4
:F#e=X=0#4]Y_5(XIXP221B5B=K:b=fH[W+QZa7D2DERY19ObeUADac&.)7HI,IV
A94M[_LUJ92e90_BW(65JGCKb_XTZR?8OV6+-S?M?)BQ@a>B2G.XNJ#VUH>)M+gN
JI-_/J62^SeD3ga-5O8+722-B-<Sa<XDV9GY[-#aF;[NSe;(]D@7,9/G\,Ngb35-
ZCW60#\;G8-RSYUEY8LffO,[(d5TW03>VgPg5L&FT\7a9T;8FPOE.#&M\:8S&IJ)
F0V0beC/d\QOe+?eg&aH4SaaMD,3[4_TaO9^/D8JE]7B(LM@>#P[5Bb3:T#HGNgK
?Q6TGf:JQ).@)8g]1aa(ZE<La2586G\,&_@;b8g(@>M6E0)\GD&e:.c+@MF[/\.I
.6;^/5UA1]caX8^O9P^6A5Lcd1X;LR#L\\)Q+BcfGc(SCJKXXF96@DMVI96Rg;U@
<gR85/eggZ^RVJ24MU)AFb?@)F28^;86Ef0)6SKAS9EH#P#/T9(LPbd]f5Z;25LZ
R7Z9-W\.[+/56e\])J^2JBHIPeK:A^1Od[>[)6gX]]&ZI0PRb9@8HJE_1IS;Y(#<
dR7O5K6YO0,aQ:G;-M+(A2L6OLFKb)eA@KCW\:Db@&0+\AcYe@(R8NJBa[9+e8Jd
-4<IR5=81LZE8.^?EN-[(O&dfTGNg0Ce\?O)+&V=/<@NA5ZG;;#3<58T3cEM[@+_
]TNLF;WCB8a8eQ43g1F\[#F4\RRL[X0^WY(#RCV?1F);\XO_;&F3J#E7>BV5<,e7
d/4bD81b/c#)@bKNDJX@BDV1H/P2L&fOVSg(bYS1^&:PUU,1+]>6#8JG+R[RO\V[
PX3.bV5OcL>F5N4\ce5gMHaO5IYF9&]IXM0P3E.&YXG^849210JIYW8c&V.CO53c
YJf+eaNHa0F2BETX^aVM/218-V:Tb4<L6-71a9VE+aNE/>,UX2OUK+9Ve1IE(+NU
cSMd?=D)bLQBSPOB[+Y]aDL_FNF81W\SG]<[8,.(+.ZW&Xc=A1^2(KV7VVAD],QF
a(MD11b29?8OfR/G_DIYVRXace2B]<0Q1F)K+?f^eRK2)JV5W3fc>@Lc7a8WNT_9
?D83>)W0TZcVBE<GD^D+LdHeRS#0OR;fg-:AO(]G+2]:G+V4/,\He0B]J+?D8Mc?
JD2M-RS:L(\O7CbfHA]K.1<BFLcUW=PS:OVO6JNYG/<gXY1c:55eWdaG0B:RT2Gc
T[3A8Fc0LR?Cb0YUQ?[V&eR9(C\?b(S(M11JB>d_FZ:J<E(bVS6?H-@<-&7_:Q0+
FL&VVIO&XS^cK]-V)8]#BFgfMCJAW4:L.RacMDbMI=;WO3eT=/8PSS,T5+R3(W,9
[feC20:LbO(CPNT20F-We^VG3e3Dd-(X1?<,XYKJfMPO0M;&7_4,90B:(.eMAa(Q
eI.0fC59ZJ(dX-5LP111KQcTDB.&[U,U=.g?YI5gOf5,ER)6[UW21[2JG1>(Bda-
#[@U@Q1fbE)]7d,@R0D.WQ\O91e+(cefR1DO\&)1^FT)LTd+NeZ0:fPE_R&&Fb,;
X3U-&_NG4RH(^Q]=EgDG\DI?<N?9Wgf#De[Zd=Aa9;8:,UIJZX1O=S6L1\gQ.gB[
:fH,GU\C;Y-b/)Z0>W9&PJV=KMI6XIAPP.B.BR.<@3\]XRNgPTIc6-YdCG5H7=?X
-Z<;TDHd/27>K1193cg)#KFC)NIgABJKNF(aT?acK&HYAaMB#Z?LI=N-C\,<a&,O
)IWeJc=e(eTC=bK7_BaP?]O8+7[N>?:S&J,:a<)C\g]W)W8+I(,g?^fTB1EBH&0E
H0SIZ,L(,@?eVB_81]H8?K6?YfG1+,cPX-EJ_d7aM5K^Z0MbHL(V477@_;Z>fN6:
FeLMZaIV4KM5KL.PR&GS6;>L[^&J(Ab7]?Wc:[K:GIZ#57f^O::T>SAT>W070BLW
\SQ5[UC_3IZY>)7ZJ(]^T\[]bC6\)ZL+_?]O>2E44/WLd=^<V7TNIC5QUg=NO92f
f4A\WI+KSZ#--ROM>3,P2&aEf[DfIU1HP7QFZ?BSU=0<U,4GeP.g^#NZ=#;GT1\M
7,[0/ZcP;OCU?]:.?2VQId57Z4/JC=84@2f&UG]#a1Xc\X3<<REH7aNe^/(MHMM4
=<I?EI9(JAbDbH(aZE0Xe])5LH#T?bW-f\.5#Q:+(PcS@I^dC)]Oe\5>.#KZZ=&5
HKL3eP=YYC_gR1G>O7@2SCfG80BD(-I_36A@D60KMH7[?PY3-HKZ]7?O<eVd/(_-
eBQ86AG5DA_6#_QY#<a,G>:YR)7T8PIV.1\T.WHE@c#2B9DcDQ9V/</c-V373I.U
ZL@R[K1&WKE>3XW<-91_G)(DaI,8&YZA_].H#+VEYd2dRWH58]=8G)EOIJcg^>EU
+40VdSJc<Ac+[a1CLgBY2-:_6:c>J;Dg94W.WOV<Z,/.UMO;>JD,;XSINW)&I7dM
YM++AVF+(c<([Q<<^<6:2NBfE?>:V:U<39/6+FFWC^(bP<;4,;P?I(X3/FfaSZK^
YN_BQ(Y]:e+M;:KG2]S5^a>NXC5\S,?5F+@[(#)aeZ6;VG;H0JA><2V[[ZHVO6A+
)\8e_J<7K(1L?)8@cYaSbZA#g)?.>.Z-?BOS?ZaWKU4@0/DWGM)^Kbf;=65e&A-(
SDI]N;&?eZddRPX7C1ISV5@<TIfOSS-[+@7eU\-ZA^65-KF(BDTga,T87I4&@ZUT
;Z>]<d[>.OJ2H0U)PdI17K/L#^NX5aW_XCc\ESRPeP(@.d^aT,TZ2T9SUdI?/,5H
^0ZVPK:WC=;gWLcVd]FQa4gaZQfH#Q.7UV#6Q4:aDKSHCT6\3<[B:]dZE^+^17=D
e7WMY9:b\-)\DCDd\0.6:6.](VT0bT61>aF^7YG@Y7L5Z;859A1:Ma#f2J=(PQ-)
PFDB/26TOgfEQ]2JUeH]#[NK0dd<97AB6SWT_S)Sg<B#[L3a5@SJSJ#W2>QJ9S22
K[8,==A\X_=^U;.G4RVA4D3<@bP[XJTV\_>[d2TV;.96);XN_;aY.WEP]9X6.e:2
bXb+6K@@[)18_EUYeJP@V)DKUcND=f07\SO/&>\.f^78YZCG28^A6C2dg/ID7A-G
G,KH,?79I+J9.Wb1#ba-UIFR#IVCNZV6BKJJSZ.>N(=BS^U&3&YN@TcPdDD&Q?1N
R&7,B[;)L_<d_B?^a:d8.:MCKE##aBGO21bD\\ZJ+JK;?9Q8>+DSXQe9D,B=cFB.
77H(G,>Bg6dNc\_[[A]3]=#ZQ^AROZ1).:Zf;fC#eHFWY,EF1TI/=^O)J_YdK?-b
H)dP,ZKb:608G=SeQ[,+=>a;5SKPKZ5HP\@B,T;>4XB=></c7P]E^C2MWCZP+]ZW
+cV/:4B7d719f6+A\Bc+d-0(BECEF]BGD9WLZ729^&fKKTe<M)e]Q:e653(M)3#P
X#V6Re2Ig_LC5=&5&HLFXf/9?C4H&ZWbA^dfZT,53@)/^_D2KdW2[QcT^7E6T=ZT
-)08H)_ZI4cD(4^&Dac2Ndf8PG^@;8IVUWY<F(,_W8T5,#GPMc?L2R#3D^S9538[
b5NPDVK>NN?baZS;^?(.),--(Rg.6?Z85D-N-=/#\&U3)XD91;Z#Y2d?_>dVI8.;
J)0dI/a;=9A>E?A-,)g(&fa?ET53e><d\Wc1S;Ba_S1ZI/ITgdPIE\OG&@)7dGC.
a_]A.3/L?;9=XER5@&8BLgZ=&V=@HH#2^+AX&-)K0DaFUR,)0/MV_)gI4P.D\6N1
@PLQ3DI7\581)2I_d:]<]]cI08\R:;eQK(Q=ed(0F=[WWW=bSb0a3?5+=,bV0Q2;
GfKg\EN4bUVRb@eF3-;;:YE&MFH?4K/1H#)TgUZ;G^b5N,>)<fRMM6<4#?Q.-2c9
>@A<?5V@a_)RAI)8_SXfI\NM7aK@\cNbFG]UR7712:W^-XP37XK<ANEIU@MA:,-B
bb23gS-Ag)+cEXUAGOa5&fe#C+FaGXSR.O:UMNC#L0#e^>E5/J@e_D0/#F0#I./O
M75MdY:b;+=0Tb+]=T>B(Y<HcX]Z=PP#\BQa_4.]V\E=L@BC6aN,.&D3G+R4TWIH
XDIKYOSQ?Vb21?E2#>,C95UJ&XJ#IR@6W2bI(G2(2Q\1T>)ZLTQ863F9LZB3MRbR
f]0+S:XfG3/YQ_b].=.HCZ=^A<<?MPB,NFCO.?.QH2JG[c&CWCPA@bd&=:]T#W+I
/&,T\K^;@d@=VJcL80H,R0:6.32.33Y#L=EMEZbT):f5Z4)4O)a0M:aI=Y>2Q]_d
WPPFKSF@Db1.WHdf-c\G;2ZPAgf/D2@TTd^dFZEG4Y&QeAS@6V[>ECT3QGO4;(8L
OJUcZ,<B;dS5V?N0M^J#VZ;LW_^K86b#77eNJ4:gY;bC2_aC8VF_+-aE)&3PXWI4
IVN598X,A;f+I<P-3UTCM\g0PR=T6DIdHbZHJ9a#VS=52-VOd(\66f4YW1TW76IL
<;XK<2.Y+()4;df:C:&Z\d33@75C4]W0?8.\0a<)/2eG2C@>#@O4F7DM163J[0E>
6OBTW45]7Z;TP/#LO^QEA-4:I?9YU9]G&CPP;SBd#5-B;GX>B]-,NK=f-E\0c)NJ
dH/#2UK=)]_fT:Wc](5]>7KZ?cB0-9<b&2.-DHcDJMdQGaZXU2U&FFK@T^f#V/;A
3H+Kc6(D8\FefeJg5YEQ5;BKF58D8UD71Q4e6H_5-_EW/P:6/D+e?.ON\\#Cc3,9
R##5[P-HHdQ<b#bY/[^feFf]ST/F1V,W,=KQ5H]])2f4.FNF66LN3dE3Z<,gO@Y\
6-]D2\K#6=SAg0R^&RYR-;V0TZ^LU0X_&&(,dB:/3PT#bde?0[9RB^dPWJ[#?B+E
\NA-]>R/X,;?L9Qg<b>A2I]<(JKBAR#gHG653PHeF#9P2b.1;P=^_0cSML&HTL:[
MZ2N+LAD)(fd))?EM#4).1C/^^NP)FB3;S7:ZGBFZ,?fAe0+Y@P4CZR+2203-;(W
;e3_9S</(/#O0.:L@NYbL&SYDZJ7RRW<9TYTK)0)TGRL5AGLG,Bf]dVG:L@FT,+9
^&PNLaKF-/#,_=4YHB<Y9.bUBL;^<=M0D99I<fI>9?L[L#U0:>)cSL;bIDO843Z[
P-S_=M<X;3\4N[b@+@[@#+2=W5@O^119QeG46&VNW,=,<K?cM<5M83.0O13D(AQ)
1eO#U7>fDKa/2G(]O^]cF.IDd2QNYc0gGP1?56BM\ff.Z<200&B4H--2F]8d[/Wc
E?/F)E8F]YO/3VYHRR/.c+LV7_35HWKC9JJCAYAVT)=^O-CR4g4FdA#eT2Eb@^[A
4A0F)df8KQ]6D3O1D-E.-.cea.LJB?c5-S5Qc=6Q=#ONG^Q9RS/\W2fTJTQI3]8.
RC[(=WPG,0c+Z#1V),@H+OYCY67/gbIN,80]A3gY3,<b5a99ScBZ.J5cR,b4d2<c
SK6Y0_)Dd8:5F(3#-K>Y50\_0La7;#JYDgB1ZUJOd@.LZ\fOE6E:61MeE/E[XOYE
3KE#3,W-1N[WdcYYK1:ae6(_G,=W2Z7+YFHZ)e)0@bc\2>T\<1^a1+(;:D6&82NT
1,NH1KJ,#?1T[R6K+^:;VgKCJ=]]4.TSJ6cX+T(aaOMFKYPG2ZI=[U77]7D8=-@U
MP,[M[<)[R3d#gb?:V1NFG+G9UHc^PV0OZ5:@2Q+JA0#:;MeJ^+62\&cW9YA0.4&
Hef+0Z^C>>>0K:PL7OR3PZVFLX;L6X+E3E?EL-RFDIb&VL,JH=[/M@6;geOB5M)=
>7P-N#Uf^.91eaF2(+(49-+SM,VI9KAVZ/8-[-0F^e\Y_^-]0^>GKZ+LU\&c@N4Z
R_&g@)PAMD^-C)Q8/?1HUA;RXQQ3F\ge&(GHfMP/^M#HLb62bEcfN[#5N>LX/:E[
#ONSPE-]I(RCHEAC2>;C67fA<&Ea1Q:^02Z#_f[KSZbYMfT3CGDa>CV5Kg))a5MK
(9I<>[eQY9)-N49=EgH\B2,ZT-0[TK>#F+G7eL)^.SAggfNZ2#ae=QZYKCBB7D_5
_,VXOT6O#6O.-bJa^K[KRP]5f=VNEQT,RT\^4K87\J/f(fAR<bG+:HB:?>70/04(
P\<9OX#(2c?TO^0:R=HCV8,TQX8O_AR9c8U&@-][4F4/^PWCTOA_W6=9fIU[OQSe
3O1HN:3;)g^:>J]e/?+L(_LPGKR,8HfgZ-V/d0#cYcRT[9R9a71&8JZWF/JWR>KK
.41E;;eSBbCH4VC)c&RX2BZa2>I9BX&Aa;0Z[0TBY^4(V[-@U=K4_T9=2V&ba_K(
D5+K;HFg43OeP;<e:LZ<&31Pa9&[=Y0I+;_@LS,1eHIZP-0VE(6;ZTK7<M0Z<FAF
VW,G=1-a?U/?A-Q3\cMCYfR(a;E:2)7NV]V^@,M7#^:IUd?.^;EdLKVA/QF>X7UP
M4][2LIY6fL-ZR.]d[R.NbRcHA-[C^7MU\K92(^CYY2b=YIL(Y6=O/7RH8]8QUMJ
c=HJN,Y:5[6#g&K6428OK83H\+=9LcN)Z2];RDP90#24P.Oc+JeZL+5/L>:fb8V5
9?<QdKZgbC@EaJKW46W/4?#6>G=g-IN&&f\J[d7W;Ig>O6KL;(CaCXX+PF/>eEM1
+J_CZ7Y:F.GL/HG?(Z]Jd0QM<d:;ZgKU.cQKK?@_VX)e\K,,b2Y>.EaZNG<aZ?\/
eeV#_bX80ZXfG41J^E84CR)FH2-P3SF;>8EX[/O7B4EdJOdVK#@;>.d;2(]g0+^U
cdcNYLIX<beb6#QE@b)?[VJRGN6F0JRc:__:\/_#<8@0g\RX5?:Zc<D?De4A.,^@
2..E8__+6E.ZW>UG[J-ICeaWZaYc]Y_UL7ZJH\2A(:[+5eYB;I?NGYLgOH1\?DLQ
-:I354,AW9G,,@PXc[/\=aZg3UY.gW4DIY@GJ:.)A0L\QOR>T0;)X8,U^bRNgeGF
<f_[FY9P?:;_;dN=&K1G3cc]=@e,e4VOPWaILSfXKYXEV>fQO2#g?4>5@1<=Z<9M
]SR=34?#?[+UFW?=S89,17F?^61f95FBV39N>(/\KNG/g#X^YL66RBZO7cbcF.]R
f1LOg<Y<ITE)[^<</2PFESK8)^B:P;RFS?.EScB_.fFdU#U925FMJ<e<Y2#CD9_E
3T0F[P0FaJ]\a__FbA8L0/ZONPWN9cDBQ,7P(AP_-#L2PXWP2cdUSX?NB<3b3ZUP
P:W8V,\548ZK?\2)WdX@R:S2C_?BGAbN4ENgM638A0b<849-&Q>Q;0<6eA79GHCI
I3bWb^BKP(\cWO:V=XS4aTbI5e4?R0O0\_J]ZR7OE+Q,5,QIVLKG7<//-gcDB->O
UWZFXFC6^)5CW^QbI5/41\[#7,f34d.IbGJ3PPSf0U,KVZHDF&,39Y,#E@a9b(7S
2ATE.[c7+-GLCTH^dV_g\Aa+d1H3ZKH/LeSf_FB2A(C=a,1W[3=@[>8=]BF^^E78
.0gaISP9bSaEUCf]&DA\ebT8^N.4#DafUGBg4\5SE61Z;5:O5JZN87>12+\(&AU:
?a]1J_[S7FCQT0?>3.YL:W<BXI3Db?HBP8\dBHCVWU81a9a#>N9Af/7M3^O8H94:
173RAE?V)C3]-#1L1N^(Q.gR1aHZ3M/J61A)-Y(BARf.U;74/FXK24T1ZUR8M_Ke
aJ:M\_M7,(U;0G(Jc42V6&/4A1LDaNP8YVT+(-H]_6[@Ua,45Z^VD;O,BS/E=)JZ
H+<OQP&.U+3aG>5fPYg)>Jb814B4]2:5d-4gNd,_PN0-S)<N&=VC=JfXZN=YV8E<
_e0G#&2b>E9=Uc,:ML5(#M<e7gDGLJ2UGZJB:gT],&+,(O16[T1-RP&c<,,&g:O[
Y:GSM92#D5B-L-Gf=GGR01:>0&B+HC\c4\_PU;Hc\aTY?\edQ0O:G/,fEV2=V:4/
RDP\9bLdQ,)_,GXQO]LCG@-<43P\Y@TeCeUG29bXOg.V+0\\TCfD2:AC_XQ^M5N4
;TDg5#c&63e>W+9V(LCG_C?-Q4R_N#WUggS.O4GRdC+KB;6NX./15fMd^78JR9S\
Za[\]Q5-ZfC>/+))F[6M5-NaN_8;7D\VVRX=&?@[KEM-QG-<GT5:+6,FT8Q7[ZV6
=Wgcg]N/8#OK?SW.UBTV0NG7UbD@=IL#L==OcIF&#EaE/99/FD<ZVa8GJ?#M?9If
15KgKKW4f1;OE]g^7Q+e;C3gSc:KM_#J?HW/FHbc]c[,c9J[EOOaERAPQ0eBaBQZ
,bSAS=)N6F(L_d:)=e^g)#O).Y)FKF_G8DHc51:=f7E-M^@e<\Wb(]f6/f8OZ:bV
N<egCQ_aDHcLKQF=\]^-UW(3-49\EJJYbSH;\8-3AM)W_N;5:MS(Q>F,MW?Z2WW;
>bLLS\/R]bdB]b;)Y2Cf6T]<S3U-8I4O)CZ46d:]6NQ+ZEQQSXL,];\fPDEVX?2G
Tb.a_FIReV=2Y=fVK2RBc?W8K&#JVGg&DH=/EW9&7N@fIcMf&E_YM+93:B^9/N>)
\[/CdBF#Na90#-@6g:[ROQ89ZF2FNZ[RcRV@RXWIVJU.^)F9)EL>M&6RB?#3YIHf
3SbeQ[(;2S@,UUJRIG5FcCebK<#VQT+(,RE5Ed/Y>a,C4_Z_1-R@U]X97(YARIYC
D)-,De&D&P[D-6Z0T720JZU_Xac=\NO(SaCaH&=>SF[cG<>dKK<)QJ__(V6Y^X7X
525@<\U3GB;46H>6<BeLRB=/SNBg)B/&(AMBKaeBN)MK]]D&/E3D_>Y#^-<82I5/
,I]PC(2JfPPE<9:A=SGb^9U@/Dfd2gKA<-9B-\B80aG&d15]&]gX-OH3U3E+C0J?
1beN@BZI:#5;FH+[;W<dZ>/]bWc&^@+8c.[>_??I3;ReLC7+#Q^C,/FQ7-YbO<FT
)d7@;Y06\7\EZPg:_^I=dN@KBbH54g4\^VK=5Pb3U)0(6.I4,IgOS4HEGCcGQ7<J
#GQ,#Dacg+7QT#^1:GMOLIXaZO-UcXK_IR(]B..-]f+b_F]J9\GH+#V3eU_W_IVg
+SL(9dV+4Rgg2#T;JNHVEa@:,LY<:B(5RF#g?6=_aMT;(RUf[..C6cFE5)<_a7FG
b/[]NSGeU=0c/=>.CSH&,4WM=6\UV@)-BE:HfIE<DIJD?c<b=PG3S7>WF,B4/XG8
.]+RG92)8QH@D@-^AT-YHcD=+@feV#GO225@0<::UA4E16S+3\Oe/WOgCBX2&I4A
eAE@H-5UYM4;1<IZG0X^JN0C<_/;H./20#E].HP2@17a,#g11_H?Z[AT&SEeN(MX
)@JB\26Lcf_[Y?gO4#+b0/.KJW[_IdLf+S+bBLK0\SUL,(G/5dbG=2I57I3L/C-1
R3E^YJ)ZSb(ZL)g98N_f=FA_TZg3USWCc+1SW-SWX:H8/2.UZY,9dQP1a]I].2cA
3#&Bd^g837H0FAUH+P^N:5fW5.6B5Z0UTad[=_?05]3Bb]Ig>5Y91-8g:G/XN,,9
M/#4<_(F32:[18<VTGW@^6a[F[U-RM<V4S]B0EX3VgD2K5A2ZKYgY_4Q=bDGY&a@
8DV?G:CaDG<db0V,e.eV&1IORNEE89d[6=?aB/QdL/4FHI2@-X(\\U>N4QVDVHB^
A;-.KI9?F/,H[G</V&+V7b+:Ed:7;-a0N);@P83=;DC]OS)SLe+UA3d-EGga1f,1
=Q=(_g=7MA&07:.gN(:3McL6.0bA[JcF9^,T5WRAQYJLDM>8?f,^JIYa;G_gg5VE
X(UD]GB.a04]9&T0TRN:a/PAf/_[ce^E6VX#)YacbM8@9-a?4VC&IL,,gG\LFJg5
YHYK.87Q.;9X5<PVa?-88N_d4_FFS_cT]9Yd_0UBXaULB\+M,]aQ^4)S<R+<X,R-
?0WP6YfOJ^/=SdC010HN^6JQI+2IA>fYZIgP/McfRSHS?W1-R#K#BTU)LB2Ld5?+
+(Q0O16cKAQ0QR?GBfK_gBMVB\^65):f^WJXA3/fU3A0A#Og:c0BSW,Z_Z[N#+V=
?Hf58U[>gCX2TLH,#T/\9AFFXSKE/=ZV>:g.HE(_0#HcF-.M-V02_&()<VbYI<JI
X;#@@;#KCDJd_U+/g-:g&O/[)?)Xaf/gE+SYGa)+GSMJI^;5T\+?=N9QccFTe^]:
22_fZ\3+TEe<1fNf69T?g7U^-_SH67V^E)bD&QGaTQgA4:9H(.\9R2@.B.I>Y<5?
RA:YUg0JX0B.bgH8g49DKK.^C+>6g0a.],YBe;]]^_1FK1?5a:1W=?Yfb7G5+-B<
-Y)WV=WN)(gX?Y\]@1?=[#X765&/UA82=,_CSa[ac6Q#-.D6)+6T)DX_#e)e7NM6
T_+/4bOGd]=_A)B9g8;bYcJe+V8HC01)[DKQEb^d=K)OY?BL:M&#?7]?5cFA80g4
O4[O.YT=LN5NIE1]eM320\Z2RWOJ@W1#O&eTNW34?BJPGd]<L[L@;RC&0f&+3;Ue
Pc89g>5@WN;&@#<U/5&:A^80:MQ:R8B6)E<0ROe@RFSe\TZ^LBJ_AO6(gK&(-MbO
?JXQ85A@/NH2\f0=<8d.fE6eaEO7^P^87d9]T&64(b;4S;RX16<=(=EOc(Y;J:H:
6\/BOPU9cMY?Y3I.fW->T?.9@H>G8?>BZF,-GQL9WM>R5L4SM3VR#D;3gJ:9bgXH
Q)(UFL:,(023H;ZdT9@4B<BX#OO&?9+1R,S7e90(dV1,52gAGg2cJ@9WB8]A+\.\
FYI\-eLLXQR:Q);\/4;DU=E)4E(cg#;,b.)),+g50SKWWP0623&SFVf5@)Y,Ud=f
6=Z8d)2\(TEN=YM9MV.C_S3#\UZ)6SJbSI3VXFL:+W7.E=IZT55Re_Q#XGN3Z;dP
G:HWUaTFK_=41#1S/LJH;(AD))F85b0Z0//,b:HZDS^Mg8831dU2L+-3?>bWIO#T
UVI3H>H^-d3(&fA.=]T??a#U3+[d&4PVO_Hf_QKR=/;GGVC[:#MV#gfPKRO:b/gS
dB.8)CQ^M8W>,_6OJ.6\R^QbU2UXBW:>Q@[f=4XPQLfCTa@M-eB>MQEg;6bT_#5+
[?\2E]@>^bNJ;ZYB4Vf&MF\LcDD+ca7KSX=8[7SHKLR6fgI]4C=IJD+S,fVMFd;H
5NGJ>.\QZIL6.>f55GQBWKNefJgB(<V^-bB[YC9A[7EeKZ8>&L.IBaP7.I1LRgW2
dGKS_<ge;gYL=AMF__D@4R7d2(SWJ3P;a<9KK8EXQ4DW)gFd.(56[d)BC(I)5O&e
442B7e4:)S8N=WSI47+GCEgVgQ?g@2UTQNSE^KU=YaEaYM8d_.7_PWG(]UIe##;N
@0U4/-_QJ[G2J;ZfbB(0b,V+65PHA&\J,5<9(I6b6Cb=Z3:V+eW7eff/X4#/N8M3
X#I(>_.AL^fe,aXW09T+V/[S6CCfPJE?(:aBA;D@1Jd;b\-&b<4]6JYEC8AVb81]
-VH+MM&\)N[77:I50>YICMcI_8A\AWQWOZAT3dO]Y9C_\<;CY-LUAA40EPJ27L\5
YEFVT9<f;JY9[e@1c7=L76]1K&.?2T=^<)&8[W?^ZK4F#@b/OJbE^H&+K68/<.CH
W0LSJ,EfODJ3#:Ld0R/JbQ</cQ/^VP5SQc3bAEG+SH+IVO@JZ.BCM(^,B]a^cQC8
NX]T3GEA,/DJM,@_0b^M\0E?>B=,\<AB<NBHa7FDK.,,O?0F?eC_b=Q;4DV53A.?
OKVH=WEC7&<71WdH=3)7]TP<?MadC[;a^MI],0&TL>afG/1H/5<g2W00)b2cW0X^
\#+L00R#^EI]9MJ).7?]JW[feN-FMQ+4g48.L@,,;C-AYPZS;&0<SQF(cFb@g/)J
[TCY@K]dY]X3IS<H0+dYB[T;E>3#g:26,EM[S4543=>\OOE>YEU0GPcc#/1/3CII
:=7#8.VQ-HRc,J4C8)[JbWN5b3ZN^P-6\E?7@\Y9I&DA>_<=[4Pd:BZ8,QKOGKN.
[0gX)BYRGMd@PG.I#7_ZA\g4P/Ecg,:&8e>5R^cXA=d4gW>SbDHR1e5f-DS\&GP5
MgVSWE:,LC0?<4.X]Z=99F&K?7X][?H62][>-V7>BG1Xaa3d?+L]8)Yf@[gN:V7Q
1=@\=/dF4,9)<+.f>[/X5O,1a]U2;-G(12RPB+(?E&=gADXG;ORQ=eP-?<[g-L6E
O9=A;-DT[MT1>CPL-cZ.X9]_\fP8L#:]_.Ac4](/E\(->I\854<MHRMBM.1>5dAD
AO,U,_42eL1O@229-[OPT_;LNa+_VO10)2KcI9LUCF1YLG2CDcT7c+dAG<72D:+3
;L=@KgGHJ9_LV3<-C6eVCd:N4Y[Y>f571ST<L./998>4JJID,e^.eJV\NfgXHFd?
T(X[VOKUF=@MX:OcA6:Ya)9NNKbJB&1d1\X1.3a6SC8W/4AS,_9WTHcOIQK,U.^;
E0@W#:>d@cMH=RI.W7E;EUSOA+Y8WS0<0><=8GJ8O4S.KG2d>G88KU5>XQ-6[P7,
.&[Pd]Seb-&^/)5OX8K:@M0G4DKA^DN7P;=?:OSdVYeb#fN)R:P#.1_f+O@Q0TDe
+\.U<ET;2_CE>7CG6dO56]ZR0d5##C-a3N7?VLEJ#0g&?M1DSg332;-@(&YG]BWE
B7b[SP,@ETP3;7Wb\LgVS@c_<\^dK/7OIa;-NfMP9CW\Y3=-E);7?YPJ=_3\H_QQ
I/0#dEe[#K[ALWUUZQ^?VgHOe8&[\;<AH5Y,]Ma]KE&/ODP6_a=6XV))4/_(TO>P
1Y:@E7:)R2QER+Zf3JE+\:K_TU)Q+L;bBJ)5BG4Vc3R+2L(VISM>cOTZ</5ZB1ZM
^)](3M)Y,F@,RVJ?^gI>C7O\<Ug45,bfYXF3QXa9M)SDRSYcb3[9#M((7.OA_5N1
QB\ZGN<)3M#2AGJL=gbG<DA(2H\YQ>USHMQJbH_Xf]]adMAL.7#LJOEV61ST;W)I
6UacUD)6=-Zg_593CeBK:L[@589(?(=G^:9/KW@aad8AP1?<(F)bGbKgf7ce@D@:
7-3He]]P093D4\8gMXKX5##OE:g>fQDCXIe\2d2f7ZJBU>AE6.1YYU;5U?9^=MJ9
_/a1#8<@gE)3FC9PNI=b]I7??,GXOHZ)?a-R43WJQdd]O>_4OFW--M=(MV+OObYJ
V<>8F9F[:9.dfaP=1VI9TR)1b(\[STZR?^bMdU2HM5.L)3D5,]7NVE@RI#e=>FC2
N-5G,K8VM6Dg1DW=CD@aMdBRNED9AaeS]\.Z_P\B2O,[^2#=L2;?=+;XN;GJ\-&^
P-dIa4d3NJS;[B)=2XWeI:ICXcNI_3(3AP@5#W/(d6NNSRDZRT=<HWccOU9#KdgX
/9M[5]d:FcJ/BEcS]@/d:AdDUGN>e]8U<P?H.fBb9+\>U(M?3bY<ZC@N:C@fIgM8
GLHH4=:M[@@V]C]C]Ce&eB)YN&G3EIbQ17dUYFdb.>JLM.KOP&S-G:^49+E,cKgd
ba[.^g\3fSb]a1K-(fBLZIC.8#&H#+>8_,K)4=V<X50.7K;-=E?]]K:L-baSGG@\
bK0N)RBCRZB4Y&VfDM.WOWKD,DeYU[>[M,/WD[(?S(XV6F\().g2FF+Y,5<F,T:\
C5)E?gC:WMeF+]_#:c:-CZ>46cBUG^(3)3MLb1gTEW#J;Ta5KAFIWM+511CDaJ1f
^\&:G?VIgF=aNfc9GM&O77#;_(-fW-Q&/Gg9&6(>W/O77\8E-,Y,-8>94H&1B[YR
_.LHG<IJTNOJ#,d<UM<M3G7H786Q-C]JMIc+G@F5(:dZG>&;b8W1,1N(MS=Z7(C<
0^P_G-3[+83@TEL,4A?0W>OF4LUW.;#g+bR0PT?0),/F.3+;+LbG0/a0d))XI#RF
]=I40.[D25Y4fJ;FF^LMEFB-<1++)H/^(;L;+\+6PM3G)>E0CN3Nf866fT#LEE^3
fS.+V1fW;:59,Ya7]^a=+[cB-^.>?3Y=:?.d0@#H[2Y/\(U3(^Z,AS4GU2^JcKU\
XF4#24IRIdPPR&73e-Z2QT-_^W_3_W^Gf0[FV[-7a&E>KV8I]MV=]:DPS>9/E3g@
5a=E=U)E<3G/U&AR:65GR>^=eCOK?@#5+[&V.^<9J0NM5LDMfBVBK<FWg\cPG&>,
/9fB]=e)H@@Y64WGVLO-M/(]9-7V.>/eOE0>b(N)X#&ZR/KQ=&ULg:?a4_8+:GYH
2MV+gI/DXVI<,H=d32HB-FELBB:(MeE+XR?13SWW7T6QcH5.K[]b>M8&^UY#fBcV
9X\-2XM>T09U51:6,3DTV_^D95eAg;2C3W<NRRb5#ZJ/Z\GHM;6HNP&Y+(9;D1Of
74[0G:SfX?9I)>AL#3[^R)?cYBY+4?>WMCdf4T5EcI9?&MJ=8.:62=F=WaG:eg<P
ENDAQ<U47+&M#g((b1Pfb1;R]DP8NF.U,SaXTD^4/E-X4Df]R])=(S&HTgVT^,BS
)WAP\I[9MAgbdHMOgGe_G2afa17&)b_Nc->BI,MJNMJ2(;J.UBBQVZ7)<N_GbR(b
ae;S+]bZbM<1?DQ3;<]?=&dPZE<:N1V+7:Y]2bU=8]bR:__)7<[:]?6FC/AIQ9M4
;VDL1A@EA9^T]6:BLg22.AG+DEX,>7;-W3M\3BR3TH&VF,IEW/B13_b.LB<J^DQ)
-U__\L8PK_Y8-C.:EaKe12)a,@@gG\9ZIeV<@<b>7e^)B+@fTOAYSRA9e/#Qb.5Y
Q5)K4V;H[KOPPG_G)5Ta,Z;A]#LYRb44J6T+F>?R0N&>VWZB374Ac7:HEV3S3;,c
:b;HM-b1PIc)e1O?3,/K^@8I-OY-JTQ=S_FEEMO7FB[\,QXCSKDW.(@PPcdE\1@6
&[Z(^DW\5D_eHYTW<g69^),E:;QJ3,g1+/?:2[>GXHUFJ6_.(WPDF<I&3?AH8228
W>ggHAdFVU#8LYM,3TUV/&:._=8^K0Rg)=_1C,YaG)67fO[cfV95;=aC<;=DL/S(
SH-PU.f?1@CE_?,&^L,P=U-4&^.+F6-BX:gC^-Q&4G/D)@fUI5]&2e5^5B/XXe[4
gNMRXJ3O[_<W\?\4a_3S,^ObH7Aa@3WUP.1+.&=AXgY?MC0&-;1/_OF.b\D8M+3E
&E-OVZg:A:-;6f#PXgT2C_AO8[??;;G?R.\g7b:=5+-=6+G=V,@L?I[^IGc;JCYJ
2;#5ABMZ:;K:Y;&;(=N48?]cJd;E0JIU8]\a73)AP2=-_f3>de].+LTaJe1KMe(\
>e7;O]5aHUI(6]Z@)IRZ^a((#2c7J@d>eK/)Z51QJ9V+T1U4&]^_^WING6YK,b;3
[W]_3g><H3ZXaN.0EIYQJB3:ESaLMgYO?Z\:Sc<.<7#;D>#da?B/T_-gSMVe)0V4
ceEV6^I1c(_VE2:CdL8CL9-MQ8:0=/L-0Jc8D(TJ)<E:8U;QT#,R\0OV]IW5)S@H
_HH(NHeJ;90ZaPWU-1A3ZL(\Hc;FF]OT?RWI/F(1@E;A,Q5:&23g?b\5KF1SMKH]
cM-WVe>]N4LfJbHKg83-W7Ge\Xg.(c<8JK3bAEa/9AIW:5R<ASR4?&3HXC#(G,Xa
#/85A+d>3<U6G/MU_RP9\X<Q5D:1#b-;LL<)bEEEAO\6S(>M@H-f/,N]ZW[f2/@N
a=Cg\09HKYQX9AR7XJ/N7#IM=eH3T9U2LcND<6VI1&#(f?>[=94>fKE:a\XNe7A)
_#/O@M:0B?0b\d.5.L#DdGBcV4A>Ue(1X>fU&NNe7bB&EW>:8Y<eP-=dP1IDJ#9W
fT9R]7=VM)I(XH3ST4)J3X/aBCdf^,.-.O)<,F6>OaYB@9S:O^PEO.+]0+LB6Z15
A_AX3<:4\],0TXUVX^Ta.WUC2[5fb\.#c27C/?T;Y.:5.9I(;_Cb<GT\+101/O9a
HAS1bPQ2F=/&XZKC8&S]W8FT[22]AKNV9ba@FCNJZL.M9X3bZ.,ZOE>;Y((L,IY4
(/\<DJL09ccWE&/TK/:daOI>e/bS;OPFA,^L.K@MZ/M..^9edTOX?@T0U<15YA==
bVfVWbe\#WeU:T2.Y[2(gF&(f15NU6E6K2T@d.\115GdI:3aEF5;4e:gS)NL.B=_
\W=b^<cBYbgEP@TW,GULf1:e76MH9+(JJ]R(P7?c:S>Z7]^e]+B+/&Y.P[EE<Ue(
5C8Y5WD4C]4@514R/_7\GU=8=H]dHH<7#c6ZE++KbKea)GgKHG\cOXWL=U4S@A/f
>X5I2BU<OL(c>3(Y\a&F379S5P+P.)8G;20V?_R(QK@WKO,](FBN,FTE7OT8I@L=
V_U3ZfD(0f)MRM)SgZ5g2[8A;;FA#,.\<;IHUO6B]PR:E]K^HX:X<[c>4bCe3+g<
]fNXYY18V#?ecWPLDB,&A#M)RQd=&+FY1<;RO/QKOc1J]da/cd&O_PaU5<A4^.KJ
Z2e8)&K=,HV1\d1RTe[#=&<1cRUM5GN_@Vf\JX-[UU)FXU]e(HGD<K^+H+4BQ7U+
b:@4T1KZYbba(@77S6B3;O6MR.A4XLZD76]0JA/F\bP=GK<&4SHJK]N4#Y-45A9g
JUAZC3]+7D&#C_(6ba<eKAOI9Ke/:,VC2gf^3#Jc.0FY@Z=5+XL@GIWJQKE3bI,7
\+V@1f_K3&FceJ:Bc=+@9GPf1UQ;&7J-M0gIf/6W760?O^-_be^dfGMd3N:IBeb+
#/9[@D60.]THN&_S1L#GHNOcK>Sa&E+eOaHW&=8;YLW#J(b[eJC-.ZO;2dHcS,_-
UFBfN04/2LX3F/8FU9G?M,QeL9HOa>SX99L&ZR;HS.7DY#.@56Y\>Y9Eg_6afXeB
\8(?1@?:_FCfGfMJ?JRL_72?2A0/a?L3+D]Hd=HW@/89XUH:JD4L)K^g<Yf2.O,7
F8B0JbZVb=eHXe6cbP15GA_TK.A6&KJ&_+UD7<0+UA,BZ7fJGP?c5)VT+AM/.(FM
N&;LfRQ7fLIJ)eAN&gSHe;b#37&V1W_1-=;3#AG598T^(U[?@67P/0TUU;B(L=[+
1OO[fg<5?);PdV[2QZAdR./U]gGPKMM(<&4c25<egI/2a.\OeS+S6e>:>F<bG);)
7J4=?g4NMR^N_9I<4<aZ<^=Lf:\3cBfUdWcH^:2dZYLK=3-<^cUgUT.ATKXZXHY@
Zg=QOGO9T#8F7NV5PA<f^?O8#^[H\Ra@@6=4\NC[DXZ<P0T<APR\^C;.^8-d?5\J
(Od@S[c23BXQ1bQ19_F5?VcP@fADECFTMV;L\bP6G:C3#Z9TMTXf:C2@[Yc,RW,U
:L_MR?-/<T&E^9.OEO_W^XC\fZ+LYYa(a@c0N6^;@S;a3[,T\^FXCfRMJK0a.c:7
?_/gC>:X&4W>BH=Cg&Uf;(QNMP2a2K000Q[1PaR[0OEAP-X<Q[DFC=3.SVIGX[@9
<A-.>5P0d5W))OQ&BLXVI^WN3SPBRU:CBacVLKXd<Ba1:PKA^bP9@NHLS;MU9<4L
)Ac&6GD&@(XE)cA;CV(UB4@EG3L5XG\Rg]5C^X)Z\WEN&U>gUa(H_[PLVK<K@9/J
4c6],,9TDK@;ZXN6H<C5^cWWa7Y(R:6S0T23W@F>a.JID5G<#?PH=d[C5eHc:.>4
dcS(SQ_)gMdTH_8O&27UQgHIL+KWS)X5I9NEU_AC-R7:IAg6QD2(/MC)))RK,8Q6
YK/3LbI;QE)I=L5WOI]27aab\0^Kbe/7gW#.]Y4?V+5@Ub#FLgJ9Bd?0H)4a)#:P
>g5]4>^CQKVcVXbd.c]8=M[Q7XVI+0/VTbMT(-QWfD5]>TDZZOQd]RP,363c9UP@
E/d63a6eC7Hb1@\;[;NSeDHQZ?HRW\=O[.H?LF\_)@BC4WX4Jd.8\:F:bHd14+6K
Te6Kf0B.(-]]S&b>X1;)M^aSdWP#CVW\@M#2#^OT.eLA<\F.Wb@4RH4?Nf_f\A/H
EV_I2[^:;]XT\5=T3@.[&7R.SgKTb=297J+GQ+GSJAE41/=#Q[,d&HeS#D&66V)J
a_=OK\VOIG2IS7>6e<&40?108QGJJ[A<fL2(]54c9R[-6g7U[MG6#WHaU__aICXY
2]2A2T3G7f\9<fVA9Ed(TJD)Y-I6DaAE/9B4[W(-H5_YT@9O8KK0:]B=OdO\MI[5
>+J8Zc?R)0-O@a4[(^.97#(=?HgPcA_10]&Oe=.:^O;2Q[<AG<34ZSfAKH8Vc7=P
5?:P:31V:7FC]b948-ODU/Eec:,T<.I3(+@RNMCfFd_B6bcCT=YHP5,NU,<;\fg:
;=A[-G0E#L/PcSC+.+IbX+XTX7+\JCLf;RPPL9=g[:c\fDY1\B(GM,\c0F[XeKe5
UR[IfWJ3,LPC5:2.1T@)HaU4WK824)fEGBA2D_:&IDB+:^+)TE3P[&STFRD8A9C=
J.-M5P(0<dQ=?U&.H6P4JD].LQ^DH:d/[7=d74ff;.[f(Ibf.E5GDDA>5E/F(G\3
UU\S1&3GC)HHL+SG:c(ZbG@KgWLXgfcV.1?,ab6J,XQTJ#@Q.Vc:/PfQ;[RSccA)
cY.D4/IO;)b.e>+B0(]g#HPBR#\,,@<.L]-B_Y^(^:@NB(OgP_acL]dEd,)6^U<,
H#<YgKWZU:<_<<UR5e.<MW.V#<;R+V[^CY\<JJT>,^\Y1QgM^a(EJ;(cD:fgcXfA
(GbOUK[&IZ-O7EbADTUD/8AP9cfY.:<XYW2?)ME>H)87(XD.FYUK0856<bFb1G/d
8+MBXOTd/;I[64RT+LL&MMNX)g.W5(G9,F,FAUELReV8\=G67;Gf39>a/MKSfDN]
EJ+N5gQWOA[1?G4L@5gERCd#(,FN,Nd54KQg<-L5(c>>,Q2ZbKSDS)F?#\Q[0e_S
cZH;?,S7dS?+P6a^cC[[ObI5=[<e-(8[HVF<[.6cX7MQ:[0PIdFg09)aOaC]5:9T
+ce\Q:a<CL0^^be_25Gd]^^CB&S=V+,?OBR0;aLOUFI\]M^+[+HfH_M0.I8]f0>J
KZ??@;0B7UYac1[Q;;f@B,R\4MJK;#Q_O<S1E=LESC;OGD^#=6I\LIF;b3\DOX9Z
+BY[CYF.D566F[T4WI^DZ=:J)55W7KT0+3(V6/6,&LM=E?;9G74\JA1(T?K093ON
5fWX;TL8e-\R4eG?cSEW;2_(X]IXK:5&-RDT13S,f<(.:ZIe0/8U+:5]T>@.F7a[
;]G,7M+4)ZB_.ZZ6@3S72.N&68SF_]MK#Q_^[R=dNaR@G5[_YRHV(_4CL6C<+UMF
Wf&1.W2-\W()+SC:-W8-JM6J=/17)/4HA29QK,@Rd])<O7f=IE.FE)G-<A7QNcM/
>.?@A]14#CRX<&_)_YAGM)_.baC?]K(QXQSW=2W:\)AVd62>9bSe1C3dTeNS_Z.)
fdeDW4))QTcF=9\W=(KfT(@G+NRYFc6F<F[g/]ZI67a^Q7L/UT)Y#/\UeS,Xeg>R
&))LZH1&4g:\g=4<.2-VH;.C_8M\]ZJbb_LXV,cKC&eK_ZI355VE&3?>Ige-KO\L
(21+V_MX;WSVM8_.I<5R28H3b65^Mf;\E&LV^8P^HU9EWc:\DE^Bd[>@b=Zb,N_N
S[)\&\H:ga:3O]V9Ze.g@M8XSIA:(K/=JK^@0@[KI8&M.:YCN499IMN&D@b&TRAZ
9:Y/AA#+]921Z:&4^OdHS>Q0_V-W/8T+SUY9_<3Zc-U7T+)VRS<GB=VW5DJbISQ;
;20>)_3V3:_^dA?CH9.bd(BVFK4eeCWQAbEZKUI]2eL0LdAGPgH6Q-^CWWMZ<SE>
N/4&#7c?:/1U=3S#?OJ=W6:<P?LgUJQK1RSPLD/U/^K5&0?LJN6^E+1WC7PB\,e@
f?9YP(.^/.Jg)_6Y)6LIaRQP.7ABb#NZXQZ&#20C5,S>P,ge\/N1SCHcfUU?:&2)
L(-3.XQ07F5SdcORSIM9SW&<9+<b7MW6C-9_(0K&_GaNR&9J;UbM1H#GQLe&QFa0
+@#(2d:d@9)gIA>CX^9fQGg#/JR[LIPA7_C(JC9WVSScN\aTf\MR#T;UHDEEWBT_
g6.2,(6.@QE73=U5AL#2QGZ@M6AAZR/H-XP<MRY_4e=&H:7]Z\4N3\V[LTc/Me^O
gJA+FTe,WUReMNS7=HUV,C>X>,\^3)^(IL^B:3#.c<]U@bO&:.]cY=ggXg[Af5)D
1??:-P&UK-:f\1cM\77TTD[M#<L1,5CZbYBDS/)KR55a_F>cHHCYZPK&@eUfge-_
_2J<RULR\IdfVPc+Be/GE5,]fc>c\e-@b:LKgcEN_.2UK-\N6/E;951UfM;A7BbP
=42<#&W;[d>TTcPb:7_I7>PLO[U7SOWeGeR1)QUN9:XAD8<XOb.R,E-P;TG>,H40
J-U+PNYOOV+cH4?8#1?9]JLYO+S2R3(RUMW2I>EJU7Y/?7@?N,B:Bb]3?M]-^3J9
N[3f5gaWT.HX99KL@POH=7cB_E;5PP0/fKC.:16#@PE?SaV[2?W<JfH?TQ[W7RJ2
&,#QabeAA@3Hb<OHY/eMT-8NC?bD\JT>Z)I7H>)8F6:WL(W+S=]U^8g66=0C6SYJ
]eccK]-^TR;Y2U:ZZeO1U]d\SMA9)=ccF:^fYCP:T.(#^REW#<7;\P5PO<[#FcEL
-GS^&2cEPCYgUJ+-@0]<3C@b)Rd_ee+JKUa_VBG3F7bKFH1V6/)JH)b7,QT4JI.N
MZW4\G5<#+KODC7[53?d;UbCYT_<^5M,_S7c?N(3/?Ra;L<N/SAO8MI:29A#[R)0
<Sg#cXMd8GM>D3\fS8+AZb^-<HII14=N1+P\D3F6043-3+c>.4,[B\Ffe6QE>Z;2
89Mf62aU@17JNXd9_./+>bF&d5.X7ACO#N4\UQO/HZK.S/;7OR(43MA6ZKbO_P2L
eC?M_)[/40J^GJ3Q]g8PHG=f#^J<TT-d>&;DC)F9WHDI(gagbD.B8OCNNfKeK#Zg
1=_f2,b_5b.gW_Gb0C6I;DY^0T>=\8NAA3QgdQZQA,<bRaNOQ-0Rg:a9/e>A8g57
L1._N:JBM:LOT7Y&W=@eOd32]XQS0?SVU5+DC>BZV+<]bgH>069=c(TVJN=@eM?H
Ob^SKdPM3Eg2,Y_30CQQ10b/&KAe<DEaEG&?GaIP[N7G3cA4\Dg4D.R9,?((g+QD
U<9R@B9(>7<E>+cK^DVT>7fg.aQ#65?.(UO1#)W0M30G-\@^XT5/08>P9_)gN34V
Ee[4,?19HPTC5[E,XL)OH^GI_IXU=LS:aN_=U(VNaUP@d.L4Nb,;B0PE;;A7c0KD
/+JWQQO4.S?E#1AZ-?\&g,BA[LW##3X^KDFQEP6]Cg5,X=Vb#=U0=B3H@Ha#dN>K
X@0=4f.INFBLW#<,b=93a&ZCW.\c>53Q_WE)L2;NRTG_J;)?S1eVCB5T\FFHgf8Z
a\g[D8F>f/,IeZ?S@1#g^5H4gA-G2@#HJV5WH059Y6Wd5XL;75g#91SVMHc_9H?e
&Wa4])09FD\Y(N>12CQ:>M4E?SOD?SaaJ;K24/F2-.?PN6KIa)6,+7RGHK)Z)D-:
(QO/T\GW3U6OMYDM\X[OMg6@SU4^L/C500SV1=<B/=SK4Z\2+PZRASJL4O6PB7ce
YLUE.T#=Se5-X]OM=cV\bc)Q=L4IE.XKHVK;JRQC?3WXe-3HLE30V49EYK:^0B?@
HB[W<U[-_dRTRe(IS#0Zdb27V9+U(K)4@OVb;ccUN_5.QC=YA_0\\S0&ZNY)2?T<
S259c4cV+&NJM17?A^V=BFOJ;I]U1C=f@/OWJJ&A^_R+2Q;\M+8RR8g#/F20HZM@
gZKZIf8J&H<aEBbcf-)VXXK/00:Tf/Uf)Y6R0:3)/#@(Ce:T;X6MPF+534<R:E\N
[G,E90JRH=cR4L<F[[_S_/_2GXRP&/LDO,F>C?_-N_G4K[?_ea63]3(/]E1M,^Xa
3=/IYSYZ)DDfKUdYZ<,[4:E^H2Q.Zda=S&&>SD5\;fgIHgJ,7R]7W/?HE]-35Jc1
HH@1G2#()88;=;Q-S,fHO=D_F<g?[8.>(Yd]4a40V+=KJ.I[IDf;QLd;7TJD-+&Q
LE3QI0J8\P9TL]J+VW18I?R+FEIb8W@TAM4DTTYfZ;7LS]fT+<L^O^?6GR]]bI</
RV2TLZ>\CJ/Wb40BR[Q.be]e88;FWfH,9W=;ZW@6IF:DeF8WcFT\[KYe#E7S&E,_
D1a7X5T1:5P<7B)S\Q1^_;2QcY2[UV(1CLOINFaQ/RZVS^UO\@1+_KLF?F+JQI;5
&R(F=Z5>AYI)L\KT,EGOfD]OJEZ5-H=CW+FY;D42^Q64G<3KcL>[XJAWZ@^Y0U5=
^[#AZ55S&/^CJ@/]Kb8U/DaZ;SNT43GE3BZPeF5PS8+G=Q1.=P156<cO[.-@Da5W
+&dERA;Mb>?6TD&B0Ub:GM3(&H36T0PNII34NQ@a82.>,MWNQUP?8@#XAbZ3d5/2
MDGKNcI];6TXOK?AZb7Y#_6G+b@Ga38Qf+/H-I.C],TBS6&PE05()9B#UVD_+:2_
ME7H)_^(0Z8S(5JEZ+<Z9\G#]=dZ3+2T>Vc+Jfd<>^.d<2IIKX,SL^,=DcTgL:b6
U_:dBY;M/ZUg66f(92DTeE]5]@4a(.HZ;@:8C-c_7?U28)#->IVU9(aC==^c/=M0
>KT=eT)\S)2((2&:#R_E9)CNb_ZEa+#5SbX(I04XJ,g+=-.6#9U84#_F;KU+dOR2
XV#>SC13TF9fIdN<49&WFX);T+VKVS#5X@O).VP6N;1)?FS>WbQUW&bb?Vc+Ob=A
1M1#XfPD]8gZ3H_0&5@X:Y\@<4gdT8:I@X_6[-[H;,K-(R50]Ag;9Qd5a@\ZE^_8
_cCADdOQB=1<SUM?ZcJ\N\C=Q+_X.G)22D7b)[\IL4]A0W#[NBRbJZ4Z^.dC=ZMB
IH3dfYcNCUPf)Q_Da1OGeR@083?IW7;.B,:<O-M:T6\NJDG9)AN\@PYLU(@8Cb28
:\3@;244C<9FXU-_9XR6\6]D]2cTeVIaTc3d<9?A=EN0B0),=R0]^?dDW\D.Q--1
5)&DEYI9;)Z(=EUHJLB1JB/O:7?<J21RFV9a6YSF3TXeZ(?M[4R+^<0CJIA+e<AU
ReI9#(K1&^O0gYB2H+CCZg:Q))e@J..Z2-ag[&4.>/37^/RX@6QE\K//O0(HJ+7g
V6XS[eU^b<V2aEY,#8gS;.-]\2@7KIGBEbONd?c6,T,<J7ATH8#8_4BX0II#.Sc9
:5._Z^B0LJSSdP=a84/Y]JV<:KWHD@E75#+EY39_&LY:>Db\JJO6HEM?(9I[_b:8
dd7CZ/>RJ6;/.BX#0O.ND3OTZZaQ>&Q^/<UNfZ]YNRS.3,e[_>dTKQ.-Ee)<W#7f
U;;^2;Z0Y0,+RR9>9QYI4LOdeBQAT-7OQgQ<.R0\C)R+?G(cV4QGF,6I7&8dHYb]
#X:ATAe/;&e)K44-a\.gGBLWFaQ/C+(0BM(#0CRAK;]=QXe81Y_g/K14Q+X7?f4/
bUYG96Z.Q/0QNTR=:0Y2)M+Xac=;=;/&VY-8YGJW-I7:SHNJ[5TUR4KY<MNA4X6d
Z9DO85d?8&TF#J4QKdTbZ0FHSY,.b\E+_QWTc=-Uf?R[MAc)>?079=W6#d-P.dER
89=[,GIadG+BaP8:]GH^#)0U9<2L<T@Z&YS(2D[:2VS/P0N:g&B9-OQ2e_dB#HQO
FGaK6(cFHZO9,E^X/Id0<@_9U1HEf(]PL_7A4QDFQFf?/QcD)B]I[-g(D#N?^?,_
^]HOPSQ:Y_<PW[.3IW6.-+MN;79.6M5SS5T^K+f(X,26b@U7?:&7,[ZUc(@A[?8;
3f@#E<XP+bWKE?0_<cMMX^BI460Ye1C+Td6G[LcD_AJU8)a0^K?W:MA3-9_@7>a0
10?dZWg62H-cb[KTK-VJ>7</N<SLgFZ0&L,/I5J;BaM)^2ed>H[HL0D3Kf:d&/W[
AQ;:-<Q.cY:+E8&+6f,78(WQ7B,1SOI)\gaZB-:FHXeBc(>Z:L9E>XP[GP3P?dL+
GVE:LBf&198FYe(W7>eTAS3S3U?,1g<S^I(<MNFJ84AVTef2GTdI01Sa,dHfY<9]
,e8S,-&MMb+5gD+6(If2NU8GYgcP6e1,XV0E\\2Vg:+CE_1\:IO<0-WeO8D);8]Y
C=.72gX5(DZ84822AdA;/)1bC/+.I,9<))c#Uf(+OE.2.@CG1;QSIW6FY=cA&-a?
@dLd?;TN9]Y-Re+-TIW@CC98@5.\KR,LaNKT-X.eG\&W#>-NFVF/A,;QBd9d[^^X
0HV.IZ6FF:G2)d;J_ZL^63:5/QHR0?-Uc,Y&]+J0Sg&.JaUL-P=+A5T@)CaGWOcR
9U/dR<A5=AH271AebW7NTcK-=@U8dI,C0g08M;<SK6Kc5B2CV_6d]G/YcRP9=?O_
O<a=aP;cb]TX5g=MM[@<9#6A&AQT#3,T7+60Q,gdE3PU5#&P+]^d466a31VZ:cUD
a,-33GV_ZeQ,MW1Gd9SWDg-13.RYVOZKSEId>DB\BSO?YC+DQg^@<Q5_=a,]]4]&
BYO082GGBH(>-A+6WdH;gN0@#SGg5/9KYDA_&.&MNNLG0EcX&EDR-WFBfTKa&,-P
J2[&+GdY><1&]9_-BR78F&V3;SHbg@QgQ3Gb@2Gf+,DC-1[:=I>7TC_1MQEZ#<BT
P[PF@V#3XTa(43ZT:>.ECT.g^J+U,6:1LGMX6:B+gN5YE.1GLcR+GT>V7fKH2IZO
a>;X7_HWF2,a/.b?GNJM.:Y[\bI.aQMa;N^@4\DU@eLZ4QHK/b0]]\\bG][/_AOG
I[D1WNM]bS2-UQ_6RL,b0<8RJ)^46(J#I8fWPB?4ERUU<4I@_aK1@:JGBCOU15>B
7MB_1JA#PN]c2]M#<_MRg8C@]<e>C;WH;1>UU^9W/T-B@_^_&@4)O\FHOb&]7MW:
Tf<(_(c9<_XFJ<L^QW_TI]=C80TM+:gf4L76@Y8OJ@c.>1:YKd5<3.+OAU(F,VR]
4T@R1Ia:A+GP;TMA:MYWe@S4.#F()MNc_Y-?3C3&RCS<?@_a)6d?2gQE96N<@IbY
0C;D?27=aBH/J0b]YVEd&M0BBKF^4g6Ef7g^O,.K@\&S[=PUBEH#)I,K;YCCHC&:
(F>fCC(^:/X^LGaE9gfRf=;b;>16?]L,WV9J?<6P):^]1-\:AHTd;2-eOV6D2E)(
g\>[?T#Q;/9=\L_1T;g^aI=^BA;Tg5Df\#ZbK,YLE:dDA@e9J8\>c_>W,.g>AgS?
HU-\c]G0+B<3==4+4FS)?4.]G9MF8;Z]/E(X]95,d>Y9aIJ-Ja6BYV;VBYf1/b&>
M?8T^1BYS112-\gO1)D4Q6LfP4]JeLdL:^>DMBc6X6RbCW(NSQTE[90.4K/+fVI3
#,/O,F]F+L6A6GY<C\@-fOIAYd2MNEFdD_R&F:&OZEe&^g>DD.E1&XD.+B2WN0^e
<SPd[Y?;SHJ\M=.JBX^SM=K#>RDGU^#K56:J<@9=:K#W.M>/JA=PAPJ1^5aO)0]O
5U6)/U@3aEOc5egP)fMZN^Oe_g(YH21G?IY#0,:aYFAD5FUR#,Z3)2X^?;.DU(Gb
aF72.eH(,Ae&_BJJS+Y?,&LWU1_^I:-P0A4&L8[[BK8[>(U)eL1M,Q#A.,;YSK7=
&@0.A]cA5\0H6W/E)[0+IQ(72_?BU=#B)#g#Gg:b;Pe-8XN]B_KfGfEAPPHNHWQA
T[T^V)0f[-A6VdC+c[(^N1_W00ZWfG^3WT0..@(b#FM:JFF,f80E/INa8T#P6+#f
F[E_.(6<^UX,[<HS6PJa7GGgKOW<.<QWVO@#M)F,CDaI._FX1OOQ&F^>#P6BB?Bb
)_d/,40(&?WPB3#L:UKBK?29#H&X3_\4UbZJ10GNXD<29?;OO60N,/5_N6IRKMTN
H,HJ<3M_Lf\9#2Yf@E]+#Y93/<K6MdM7^A?;OMSC5B@8-+FVdE=T-@c\dF.99/LI
BG?e[Tf?6MF^(f)YDR7cJ@\CG8B2bFT=.DD9fM9\3>eG]O?@C>T28_J0_G+C5.35
(GBXDDJV3J]#K8PA8Z\6\8UH8LOL=&].3>EACaA1M9d^XA^TIH62]7:fB-+F<_AU
&R87bN\J@?L+JZQ>(NXFJ1U4J2=,ObLcZ<[(YeEQ-R(JcYCJ:M&)P;9X2SK)MA=c
X,KS4EIfR]IUQ,S8S,cC8[]T,B:+C9<3U.2M6@2I\3M<?_FQ/WRT[TDFKHU7)Q4e
@0IFdLYNJ+2K53)@.8QDbB@&(-J2BZ6WF;GFadfECaI(9KB+-II:&\Nd?6+K9B]D
ZRRaO?b/(K2>2Y49P?VKe7]U3<@baYfg[R#GNdd=?HC23;J\4.34\^#<:Z=LC&f^
^0Ec4AbR#&8/ZDO1,Sf##;/MKD^a3L71cQT0FJ?O][WT]-O&T/5L5TSC507#E<Af
^+BUad-A#+B^-.4F&8#Ubd#>PXPJYf&bE7<0LdZ8<6cLc4(&)J^aEQ_OZG&_bA[R
@1b9g=;/?_^0J\Y+GGQ,\BebVgYgGRGYKQf_[e6IJJc9(RFc=3,Y?GGN9ZJEbK2:
8:BEMSO6VIK#RK^M_&HV]GK+\BV<,0LS6G6g/O\L,<#@H+=^+U;XW2?RD2U?e37V
,Ua0)gP2B(XT+N\H^:f]K8I=)FB>KII.B:::KH##;g(.N.7J:c+:Kgc3,a)a0ed]
1-&:651H++Q2[DEB.H?#CgW7MJ<JU#J5;S&;#MFE20M0N+,4LFB47D:O0W9HCd\a
D.;)8FR81>CI/JcJEK-cHdN?FegEG3NUL^Eb9>D+W>T:-cHO<DTKH(\OaLgQM^?]
9gC_[?I/gIbFe37,Ca\Z1H#X28L@98Y<I(1O<6C@OCSQHGQU_0C?XBW:CUYUK?-3
(P&b;U)[KHb53W3_dBJe7Zd,Z<R.6XENQNbBWNXG:AagNW42IXTCN0KBe8\H@76F
SBgB#5dT^\47T)e@C,\O]34^bfCc@YB]WUAa;)aUg1N?>1^9])DRZ/gX[g.^T0]:
@aO/f8[ZBI)3?LbX58,)_T.#]Q4,[P_A5ZO_T\-_b][J=JU^P#PM;#8#BBc9D<Ff
K98KP)gN8T6Rc7JHD:4CD[\PVV1XDIWW#bZ.0S#<Xc+#dgXS9+5+=,>_L,=O\]\S
F)Na4Ic2@^fGB[2C]P^NU0&[eH(M@_R\P+9cYI-=5G/8f>#7)KNQ#0Ne\c+RM[-/
Q-93P>9&b,S4(NY)@_)1G2C<EO5@0\JKdNb107gccgKLJ=g^KYe@;JC,PPH^_eW^
)<:X(^/HY94F>=[7ZaDFD/7S=1^EF,1JHabXUK^@[HF,CYGg232O\c1cX6,,3JYB
f-E@CJ(a@9499&1eJ(0(3Pf7gF;/O6K:/;6Zffab<\Yd5]_;#ZR4)_AR65X&I_g)
UJ0;M:X3X>?F2;^8B/aAbU5.<d[E;B1@,IPga[?:J3fcW_UBg8^//eLcT9f@V(-a
_b&^WG4G8GL#Oe[[5\G<9/c?M(I#Kf\;KDW+U6\g(/0L6<\9#0UCAPSB;+OJbXF4
/76;&^<WPb?)Cf23Ee:DRLP:Y>CE)\J4bN>1dcZH=EOc&Q@B8@>_2+Da),0RcT(d
J]dMF^_&4/=)e#-/D+NGe2;>2be1a+1X#(MTX-P[bMY3bLK#RY8I=d.;I3g9<[YB
V6.9<23M,eGXeNV?e_G0.40ZTPXSa1cgX-@?_>=/REZ@GG)U<?63OF;/NFO/Z8JC
_S5&Mc(a-HaP_>4e7PBQ>Z?D+;aS#W5]+X2QW]Pg\&SD7Q&-@Z&N8.I?We3N37V)
S2Z?C^CZIWHHbDdNZ[T[7,4dJR42_RE?<Q(A3,13TARTI55XH??-RM(TYJ\aH.>A
GT>4NF,Zd7(\2Ug?=8AD0\>/IfaQ\X>,U6&()8f.SU:A3fK,fX;]/CE.H5F8^)V7
4\UeR<N)CQ?Kcgc7[47)bN2J<5Df@M,WcaF^Z5U:R..3aRD]AXg,=P^S>MAII0W.
^JTJ]/OIWEcD.M3eJB-+6>.B#/>I&O#0H_,\GC(-&/7NUODG^81,bRRH@Y)(bXcQ
?Ef)<]J(1gDe&2RHg64Z8c7H&@79g^1^VXE\W^&?F\U[3/(R\[P;I\S#DVLAKS0,
)b_3\dA(?#DO(eX_@B4A];O/0dA2<<4Xe(ZO8K-]1SLAXT1/OUgg9W?.2Y?KGS0\
+13>+MLJ7g31V[9egA+fT/AGY@<0eI.WKR\]F8KA&dT1=_]\>&,L(^:UX\-O[C@P
=,^4&E7(W(INPUJf5WXa4/VD^M(.WM499Ida(9c)[(/_b8(U:;Cb4Q6^S#-H3&@S
VeKI6YR)90?f1HMZR9](Z7I4PYSU]1_W&(G],2Qf8J=MeFaJ(^L(d-LCD/;MA,87
3>6V>IXZ^63RVC&[WJ/WKPL-EOG<KAaEA2)KgXAF[58[N<,UIZBZ-eJPefEa[-aU
G;&HO&1NW2F_KV^]CI)8e9d21D<PCb#.aSeQ/;8]\#HH3,cQPf-/YRSZYaC6gaAg
V):.c9;+=F>=7gFUG^dag>db.<0>Xd8?BAOTc#f03_@FR_R&A0B/EYU:afYXDLeC
6a\c_&MBEZKCW_cMK=&LO^(P<EZ_XJ?42GL1b1;D>X>,(R7Q-X5OC<_0e\2I>/,^
M,#8TTS[BS7(PdNd4T7F?DgWY.fc;O//3?Z8CLM0@)&:\#-QZ11DEN]O@^4_;,^&
d3V)S\[@1LJV&;c:c/G1=QB\/7JWTW]PQZ^.2AFZ&&,AAL]1S3YUQd&2-f(Z/KYD
#?LNf_c\WHC_/cG)]0?#\NMY;G8RD<79Ubb5TPF_PZWNB4[O1b&_DL&S@[:c+-]E
RFePa;<V\V8ZQ[11.IE++6FA&M^:[I)cNa]<(e;661(A7I8N1EfZcD[>18dKgZ]Z
aBf,7E:M:C_?<X>4EU;aD8ZS13^DZ5?5Y-G4;T_:H(]^=YfUHEFLOU5DF[O2=&HA
V,T-47IL+@;f=GOVQH)dPMA3b88KBfO+ARQVD8X1aCUR2C0SI&VR#ZUA+#UWdPC3
E=:,9B;c(/2S^Kg#OK@Pg882cB4JXM>(VVbR>A5F0HF?TNB40dX&P2.&#_#V5PM@
VCFTBS5@C59G+MN_KILeMF(-Z??+JXTBR9@YNI>D:=Pa6,TgY<I5@\0L?-)+2BUA
b=W?FK;]1K76D[&aPM^2ZC##fL>./^f]?OW/[/I,;SQ)6N:3cg3W@Kg_g[(A#<7Q
NO#5O<?BR4N_7f#-bLEJ_41JdR<UT+D,^ZWYX0Y8.X_I8;cUfDG7HYdb)H33bBf0
/JPNW\Q6,)8cQ(Ce&U;J8<LEHdTUILMGFZ,QQR:F;e:d4bf]M_Z#,[8RKb\O/LHN
W1=;U6=M_-aD#;bBPa]b@cAPI@8/c.<H^/<&Q8NY:CS24d>+H5(S+2IGKLB43EGO
0>_Ed5?021DZIHZb\=V1/X&AAc5SLHVT;BP5eH#<8dX>V_UK5gf-;GF+3dc:^81L
Cb)2:bf7#014KDV:@K4V=F83(<4&b#X++L5>=_?29+9QV>(JW7&(:PIK1FE^O.U(
K5Mcca)?Tf=.]bKH=_.LVU8-/3dQ2;b<c_RJR8XE.YXH]\Y.[dJ(\G[dD5)T<YME
[4M,dS&P0.UP;1=,G;9dNAC=H8]Z+=<19?XKYQ9A/X^A+b4Yac#-3N>-N]B0]1H<
SM?dAc./8V#CRace0DGd.?_#?2>H[XOEGFgGC\cNeCa)c_eJA@7M/>]U.dY11(e.
@LQ=:6D8Z36LdYXgS-#5--N0RQ2:RA,;@=RF_DR\4P:,6dM\+RF^K--a1=)1<I;L
W#PR8)Y+L7Q\[]5NfBA0UZ[.(&PQZXDX4:AW.SFB^VT2GE_eE9K1JbeL\/e/ff)J
Z+bIdW/O1I&5DFeM@Y_5SRaRX:87KH=]FdBPYNRLBF?ZW/W.LVSdBQ1FbJ<8NUgA
NO&C?-e9?HJ.SP7BCa)YKaRVNQVPP?7CKYD6-3YGDTB56R_NCD:ZYXga55-.26F/
K&-^Y+I.AcXJV7K3Y,0,[O_Q=,7f-IY8#R\:c-[4=3ec6>A>3#=/(BD]Oc8+P0^X
(RJA8(eDeHc7=LA:1\.#JJS)SMXXSOb]Z-#N+H#&dEB)NI-K.=\.MZ-PXGaLY=2@
RcPDA.Ba0OY@f8bdAY_7U[+UUE]8UKG9,;T9)5E^T6TQQ/.I@FG0)MK47^8dYa^;
7W0>LEFUA1:B&SFZ<d16@@L6[>c<g4#g:58b+W1L7F0-993=bFT#G<>-^YQKaQd0
0SD[PW,F\_CFIE/J[I?eQ076[gCQR=1=U91#g/.2Q4L5@Y+dA>:++?Qc2-D#6/?[
<@2T4=LA8.A:8H9\V/PT,<NRgPB_3=,90@YT,])4#N?a2:[fYJ(Vc(fOFQJ@QXbB
3fB7)#dU)YHVDCY6B<U8^UY8=^-XNN):)>2-8N1O-(Q=Yd^.Y28SRT\,J^CY0.?U
3aW.?Me7@ZQQ0?M?(_\EL.@b6dN]eO0\<ca>OB@cETG8G1+@)_d^>+:KAf)@gfC^
QPV+7aL-g_[>Re..3_fWB,#A\@MK_]>I>:g2V.LKeaf+\<_B227=ZU8#Rb+U7J=J
__0H\RI?/cdQX(VVW[dC32E64,c#94UD&YC2M,Z@83N+ORM;8B9cP_](-=OFTV7P
]a7]YZ\f;^aI0Q5[/fI0JF?EIU.:FC^N29SM?6#3/0?/&>W=:5Xe)CAYZQV)b#bH
B(NCP;@.1;:Q)dMT]Q=M96F2^?]7+>gaR&2:=3[K;Da>K&I68QNU2FFYJ(c5fO,a
FCX)dK=;>6G6/b;__TA<3L:489(0;<5.e1LgX0c;FA0ZN]OXO-BD81T-,3;g+E)f
J=N_#4?B]FGc5gHO9.FKPPJ.TM7TB_<=gHGAI@H<6]82)e6Jg2L/Vb7Q]?/D6_5Q
T\M:a:;>RRd)UREQKA2^D^I7@eXALGF(G/eD.,9[F>KUYOb8YN\f_=J2ZAL,97d2
f_2@]EdV2DZZ@M3AU1.a?d;3-7g4AU[YFBAD9;Z<;?@J;.PgYE5U=bS+aGFF:V)T
<W#NF0)W+2I_0C#B1DWU/,b;-J79[X=77?-U=gG,/b<W.)8b(\BS5A#>5^4=JY_f
FZD1>J7gF[2eD?=W_+6_N@[AUGR-G7FZTEAgf2cdA^55IAa4=XT6KfY3HQ\U>6gS
B+@c+X^IVS,Q;QFJ8UO7P[DgE#7T35U>:;:F6JPFU5ZF<]A=JQ16)3N]QI#W_PQa
NJ)P8?LZ??6>[:a\<f^g[=@1&;aS)KPK7<6CW#SZ[NJW^a83/?],6IS19.b-<d<X
KK^dUV=)W6@Pc<^O##=]G^f1WM:DOIH_DC&ECC_U(e@158S=BF#_N6\;d,B5;ae,
KS;<53KS3QZZO)^WD&Z7;5:TaVE:ObdCOC&XSbU2I+G=LVS#E22b#D&^4#4V_<:5
d-2b=-]c57.B]]KYCL,A;1IP(?M/9_8)a41_<ZRRe4^^0W@W^0bc-LN9HgTa;cB(
+3>a&^^Pd3(g/e4@;6?@[K=LfG]DCY++]?2.BYa4c>U)Pfa@R/FLbO-S]G8MVZDZ
8[^?F02\fN(76G^Y2b3X8,KYF36L@[Sb:Fa_,5B,4SODUfKJ\NT<G6JEAgbV(W8.
/V^.dU(JRd&e4;X))f8dZ>9Za/]\ZB&++S4X6F.;W\,PDQQ^fcD<P)cSX_7#\I@@
KYKU[X),#ONBBNHGNV+#BR?f\+X6QMHH;>Z=7aL8CJ:DNEXM-;=D=SA4[_7&2NY+
C&LV+,S/bPR:IUbI#;63e=PF3\RR5T<U\9_#+[_)dYZQ8(cY-aPT#^32+E:[_CNL
:S<KYf>P;gAT_FZM+c(]H,Y2D@-QXCRF9427(KCeNM?M,:S^W57\9?4d.-C91@M[
8-8XcCF,:P\7d3eM4JL^FONaUPc_4]M#Pg(U_DcKW79MbfB2(>]0W(^QUg2XFJG#
H</^4PJ7ML+0QVZYE^LgeRZ\Y71bQ1Pb-fO;8@[aJCT=6DD^BJH3\NM/\G+ZRD/W
LTA8R,.,/0P/WFWb303;3gfB=0=;Fd#X_N:STcA(:NUbMZ5)MbPELAOE8Sa^D09F
2]F?_Ed0Z39dN,L#]D^VS@:]Wa=:=I47/XXdT&K)Z6b2EYK?1@84=]d:[B3U)75R
[_I_06LN.FbfWQRBT0:9)+F/\I<K>D6(;G.T-1OE#LR\>Xd#,gS2--7#2.+IF#KX
7C&0-Y,-29fIEE@CQ3_#LE0)aMd]_^3XY#fU?YQK&9/;(^9Da-U=Y;/^X&N;JJ+Y
9#,#,]\R.)J:N<TKV,.GSZ9Fg2d1ZSSd0T<;SW(&eO&3SJ0D+,.T7CC_?eUd-XOg
Ze9W3J.YY^#FW#E<YMTN^,3M273RI@\<(:X7J>KEd:]^]W>+K4J5U(.2g(>#-A9G
<;7?]RfS:PfDQFUA5a<0NZPO>A7-\-_7CK<aMe0DCea7bLPB4UdbEeCH6(7<aP/U
W0@0;NY?V2^ULW>&Kd[MXXK[]Hf/L:Q\U,:.P\PV3IZ7:U@YT,g+XYEV2FB04agZ
73G5G.e9AS_C8=fA_Q>>CJ3-16cXS^@@R.ffT)b=\Q[]^fYQNS,[4@.\K9,TM=^U
)[Q36@L)6JfPZTIU+6VRXR3U>-R#bBCY8WD1SDP?,O5F<F6,_UE0cW6;fVWZc+#e
dIDPYNU+569H&(9B6DQEFGYU>,#XfE^JL7EW.=g[B2:@HT<QZZfD_-FS-]LX/E21
2W=U6[Y^=U?KMS4V/B0B).C4([LTKXI6:)cH)FNgH84V7d6AFMfb/&GOK650.4Tc
ID<cbE8bdG=C-:<R@39JFRJYPRN8f7JKO(fW3A?,6c^SP4M]=[KWf)=6S(.f^08<
4fA=8\&RWL>[b);Q;N@15)Q2F[_P(D4/\0RF-+I/D>T,cg^EP:XCM]Yd5a@K1adT
Fb;2]f^6WCUc;e[a./5^PC\>;,NKJ&+8(0;Q-2:]F&WXJ0Y(D0(.ZMB[YC@C)N&@
=8Vf<6KGINg]\HY@I-W\J:HDM@Q<>K3:6eM]D3/e_JH=?,?_AAB8]^KcTU5Z,?3,
GK\OGaYYG/1<25&2D<?)JA2KDQFA429^dfQE(e+==L4SENYI2=/PMNTOC=:bJJ\9
b<-]bH]))NDHc^KO:>>?L0>9;:E)<?E]>N]bYH9N\HXEf2H1G6YUT+cX8TX/X\:,
_^c,UV4\bS^(U_A8Q;B8PF711SbT=;a3],/8+aFF;5eWYH:>Qg4C^8-)+Y5,g:_,
X&1f&&]2>5&FaPLA[79#6(e=,Tf9)]?B<1B86]ARJMC=MOWHE(g)OXQgN6IbI#9<
dM:<6/(6b&DE=J?R^YPF,dS8>JFAJQ\0X/PEKa/G,YQ5)T1=EHUMUS67Uf_[-2_N
c-;&45Q2b<a3S9[&940fJ8Mf6ZQK6DL.3YN878\P8L^DacU)HB9AV.g.^W1,5.)Z
X/QOED)[#4O[cT76JE_b-BNL-3T0Q4=(?&K[abJ:1CPZ3f_:0Y3I46LGbY_].aP.
ce<cS^Z#MQ8cELcW72EI5KC#[5J,@DF9@(e[\;E;+AX[.,7#a>INGF6NbJ?C-0TV
J_\_dIR)TK>0PBUC25^dB.2Z0[b?,BRR,YQ&L;ZJARXAb-LBPVSK9UaR>b]+LZ;)
,Q5;1=PR?A\.:]R/bJD.4V76JL?e;aO1ag<T;A5J05GHc67,@7d6Z8AeY1]Ugg<e
4)bHU#b7JY07QXE]S&1LFLf1\OX+KA<MDCg1)@2Ke47KAIJ,M]9eQdCLV:@&=KFH
+4&@[I+L/4#S:</NTGgC^a#P&#RNc;L@-cA:0Y1-.:EEA5Pe,#U]K:A88AEG38;4
=aWE=[PTH-I;+&O>LA4<LG3Ja^PXY<&=+15MV>5/Z/4+-AV:7I/+5O+Q<+8&JbR>
R8gR6H_66O6U/AY>89d1?f?NX=LQ9C,I(N=<K,0=<)+0]1,0(1.T+.N])O?&(\<F
CBKNMFM>@8f5S3(d_a07XHU+CGV8]F?,+cCMbQ4N(9YC/dGeRfNF\:Z.Q^Be/Ha4
9YW\<OY1d_N5^c3M8gg:I(IbcF)(.(M\8;@)TF<1C[L@VcH.Q)?8XW:PCR@Z#+.I
YU?^O@f9T39CPMM2HSc3GN&3f^^:7N#/3.gD\O,P:Of<\\.A)X5KU_eEUS8@=,L3
934<;]1\6e[bYYB)c9;T4<5>;9JV^\6G#<(G0F+\f8H<JP3E+/Sf#.;C#PZRUVM4
JS6TND/27Ig&];,dU\\N9.ZCbaD67d3#6QQ#A97/G0=,E\O3W<\=gD3JZ)-.ZB:3
[VN,fXQJUcbN3[#U[\aa7/H@VJXU\],FLKD7/@\L)KFD:E(6V+E>f2-,U-(RfE8M
]B+[H#JMJQLN[E/e]dR/&4bG4\E[_bcDN_3EBTG37K^G)\de1b2+E)fZ67d==SF?
]Z_a:UWd3aE74:4UA87+DC,cZSb29C4Yg?Ud\.WQL-TXVM4W<T6Tb:0>Z:4;Oa.C
N;T;97.,c8\VL]QB>Z1cT6Z;^e4)/F:bRdCD<BafL<BG8K#7_bN1I;3.=C8(V9M1
T+e0bYaI,RYCHCaFfWb^<aJ9+[dNB7dC9<@P;>R_MW8/K1#5>6F_4IHGdQaa3P^,
dfNT8bCA&dcbZX3:C;TXHUUJ#?T#)/[g59g?R+FJT]+bNFCIB)YKSR6ALN/X(c.F
L.@ffZZ)D^;<I5e:(3UVB=Q+SM^].X5fbZ]<YMg@1AY_;2>CC/e7UXJ2]J+bLdCg
ebDP[f69P.NG>/YaCWS->SL/#(QaQ7[Z>OJe_)J(3&FF)#XC2fT/6=2-/>#LIU,@
dK0^\>1C.Pa6HRNWa8A\WI9YdNa&aUB;bH^:PGD;U)g89P5U\=TfUKYD^Qb#O4J,
ReY&V^8#],R,^HYbD->R@QQW2:((UcXV9U0[XC)(J-#L8/32=&d\.P<8,Z1]HP^C
CDJL&8(/:dGIU-:KEF=c:HWQ75E?X<.^1++)?0\M0#6(GGeK5ED2P0UgIUQ]37SA
V5bY/^W;MI?>IZEG,/-QASeSASG^D+b#3NS73+;^8Lf#:bLFKb,&;/PG^f4ZDI-^
UD6LIR:\196<U]M>MdA)@-9YZC:^/:TOD&_8[LEQdB<&Fa@0Kg3<Q.B^N#523)T#
E^Yf-d[Y5+C9aM=N&#9QW1(IY<;Z2dD<LM<VY1K<,H>be)AC3V/JXZ7Y7E/[)f<O
B4+9a[+_0gGL/HX9.G]OG2V[3N4:\?DR3WR0b<[9<)dBYQY[7Ua;@UDaD&aAY>(a
Td7MZ/H5L(K1@DS/ed;P3S?6[>L?P_c+#9X[G8<4YVDJX-#fd=O1AZE8@HTe[#[B
HQ=13.?A<POceI1.(/]dG1(#9=58GXP4\PO,Uaa@FSSeNH?QM5F7bNbI(M3<_+.F
Q0O2_2bdcM>>G)ND)T:H<GXI/=&;[+-<3<=8YBACQE:JM8&HNfc@VaRa=E11c^+N
5\X)Q]<e&ZH4V&/=<4M/Q[eFL::9;ZaRX3R<Ua<_Cbd-)EID4\8?J[K.)I9<&eUW
XY]H4Qg4Y(G7&Q;755BA&=Ra@SM7<1d<M_C7)QZYC1V4.Db6;4+]FG][Xf^UaQ&=
L)@PFL&9W3EJ>+)NRSJ7^g(M/9].OZIdc^V^bSaIad3://UX5WA]=e(TP9V8^f#B
K_/HRcKAG6X)D0\FP0g#)3[ee>KMI;&U646_[K5b,acVL5VeU5?^J?\\0f/.eN__
M4S.G#8e_+c\GZ-T;=#dG0c=[//#5b6=9eEM7KRQ7R;W463?>KJD7MX;7(E7b#Ta
K)&-9X-4BB4KcB8:SZY.#_g9++V/YRbaZ\Q_>A9V)XRD3Xe)VdLeO[]0/K/E6Wg8
\+=(Q?E/f&)H?.fE6[L55gXD:#0.W0E,@(eO7d:J2QV1/C^a0g&FDK5=W_5)d+L:
]JGIU/]#UZ6FV1#X34>)Z^AbGB?5DPdB]YKQXPNN)29>?T?YB4#c++)g(4^1D]/<
8&Yf=<E9+N>-[E>/]NHCK^5B8>gLY:0>Ce4YR(.&7JNd\1=.+LeB[dCC3+1>1Sd0
;>a=PXaHD6cGf=E)EG./AGR-I#VT#:6HQR-C>9CIP2IO9Q+;WIHM,GcG9c>f\]1N
IJPY@E:XOF_NF5W[I_I41J:[1N]IC7a&?2,6-71Q24QeCBQ+2-<YQB^Qd0Nc^1][
K[DJW1J/+I3McOD4DPO(5>.;Db/QM-O3NdCN_/[/Z=DK?K8e/YaX0JWVde9cY27V
.PFg@5X-;(CfOEC5,O/\(K=7],T1,<4]BRU3cfQ];A4Z616SHe-[)VI&9/dBG[9U
2(BDRfUO9BC#0V]<ZggNZ?)7)FI(\NS^Ye6\Z17?1C]8#PLH@3g5]?+T&/7<G(7_
5VeDJG7HAcQ=EOf=I0P-N@.K?7,4G-)1ECbF]0IZ5Q8L/])^F[f<W;cU;[G?\,W4
O6\,1G^([@A[M<W+KH)3NHS)EQ.I-b2b41Pc8[;Q9eY5&KX>.A1TCIHbVI/^9@)8
0:9DA8aT_&\P42P7E9]>d5:c.2:G]5:bW8gPZ@4]->O\;fdB3D1QG,S+Ge[^bM<;
@737WEQ6cEb2d?Oce@R/?5J>O&LPGKBeJ02H=B4cME6_]e@IN\[F+TTKRVf51aX\
#/2Ng.P9=OZ(5Wa2&[.8G(17g9c[FI>]DUC3N2=9R6Ta<Hg7HFYKC>ID6)?&?a37
f4(db__>M9DKea[KbEL<0Hb/=Nebe:[N4<JT&GT5YdaF;e_@fPeCMEZ)KQg-XZ:4
91]]JP&BaGR@H]LC#>A.QS7P[\JI.:eVQUD46)-^D#;H5&>e-E197NBWE2RT91NC
b7WM88E6eMG,bR7=1Se.4HKTa_=,gAP3HSg6CV<H7OY32U5fM6S\aD;J+dM04@:]
&1NQDF?>&=2dNX+\>I[)3N)L[)K)H0+<J3);gVEeW@7D;2?bK27\#?W_EF^c:8PB
7,#/6(W/F+)9.0]T.5JIg@bBX_#07/LJ_e(6G?eH(I4S3g90AOc7[^,WY>#50XTF
F<;YW@M]J_Te=g@L=U+4EF2A)f1;?)]cQ6WQXA=(.)dFT7FHUL2ZQ&VYH:[TDZ/Q
ST)+C?9DVQH:H38H1b,6\FcB=72\cM\CLLHQSEcK&R+;>1H#G1,5S/+AaVQaQ#d,
:0K&cK>-Y[EC?L;9Q3Q6gZ9]+1?H3;3Of&YV848O4K^.,E3\:;MBJ0Md0/N)/L7,
@]PB.\,H0#8,&V@N@]9aFA>L8-WSaDfg/FZBe@JS<KW=d:/J,6]M5_a\KaQ?bRIQ
L7d]1WB5+1VCXb?f6fSWQO:Sd@I0CYT3dO:HJY^KX.SJ>W:N&UY9f[MW:)[d]f>.
>FRC;4L;b;[E@6M[#aJE;/4HD(Qd]@GBN8^B-D2bVe3VPYBbN,:GGFR368?WL^8I
M/g\>Z2Za[N&O.X)[\V7(U7cB>eFNH((HL.5/#<+cMa^?[Q#H0@4/-]66C(>a+_E
3^C]D7?XEfcCJGK#4G>H-MFLeNaU0fM5GWM:93F)1;RJD6:aOa7fSc/0&0A+db@f
J#gT+_^>a^bGGf&7VJY3gf[JLaFR;F#4N4QC73e7CZW9@85[9P7/KN#5E#Tf)^;W
f>+6]D;UIX<[E:UU<,+PcR09,b)25P=(7b+A+=&?YVeO>\42FOM:0-CD#,+a?O@?
87JSE5G7UfC\=Z_.X<6M:Pb/fYWa.dWD]D_LaQ?J[7KEaOY1<fg/DQU)9LAP)CRD
P431_4B&_U&/Gb)CY81M2U=,SVO^=15c#\:\((?MCAO)HH1>NFWX.b<F9/Q0VgYD
bB=CANW7?0NH1dALX9eOY^+F@6@=WIF]/A&&QU2.J^GY\:09<Wg:S7=04FD8XX1_
=^=SMWU4Jd2Z\4P45RXTXV3T+5CNd#\^8/eMe.?C-7b9d1,@VKW0L3B-6AMS8a5N
/^R[79SN?IM2GK&aXGA/f__Y/3+-E)<6&b997S;:B[LKHN=QcZ8#=VSGRX0Qe-Rc
,CZ0[T7:4IOO,8<_)d_/\4&.8?SP86]](?9-+eL^gK@NKLY,T<3>Vd1WMBe<NSfe
e2f,Y7OCb1U3IbSRZN(0bdV\J^_LQ>BA0XB>cETcSE7(&KA6d1PeF97FHXXET@G\
FQ03L+.YEGeLZ8g7,82&1Y4;UZ6fVVDDedaELM:;2f&Z@-D;W:#>(OX8<S?ZY]Pa
3+C82:6>dYBX1?4;0\PL)M<G2<0\Y?GYLGPLZd,U.1NRZNH;-<10,2D66.C<_geb
S>5NS3d.9?G+HF#@.]XV--_:/R&5CU?.CA^+La=JJWfNP^@a,UD9^g7>T1-OMO/a
EW:0L_@F.ebQY>X<Te0]gVO3R+.@^]77(.L84=3R@WL.HRVL&)1UM<Vd^@>Z4G(<
<-D6f;0Jaa[e&H33N[0UQJMF:E8_84f->@;EcJfd-G+[c1B#[4#d-gOfe#46IB:&
:0RdT^RBbKU-b9]UL:]\6^PcC[a.:^#QRP?QSb(L9e5K#&S(_R\e;UC[@SJA\R_H
QZYJREbU1W#.TFRA.XH#.;5&5IU7,5S,\6YFKg;E12E<BZ_RJF:HY8#FUcLHZWP;
G(VI,a+O:H]2?XCB3f^aI<#4U^SY^6,9[4@E6;f:A653.TQHDPX,T7+S;E,?F/Qg
Z8)2>+Re^>(X#]/MaF527EI>^/Q^@K9L\:Kbb&P4Fg4EQ6F@Q6cS@=ZBO)Lb]2f[
)1RR3R[T2:E/8-F9X-0EI73NO;gbgb:aG@)+Kg.?P/bU0D=abEDW4:>)^3a7@3X-
PPMA_0LEgLcbA-:=J/dK])G7R1)P3\K[9S1MBBQ>]aB6Q3V<eV):/0F<K<cdZEQ;
[MfV[Z1:g7<NN82Yg7S]aa&85SV(WCfe_Z_]Ba<?VEB3()_^d^^[7cQ9OWW<Td0J
?&F?.daTg/1EQD+8f,<KB/JE46J(]U-;TQ_2[4,A;@)M[LfCC#O,U_&O<UOH1Gd;
/Pf^KN2&1N6e6EFF_79Q]fcQ842B#Vc>@Pb-#fBWgCa+a-]UeDYP12-4J<A1e=OL
,f@ER;AAY;I&@K/Y:[BN/^cL,<8[PEb[71#59_3&gY6d=W,Fa0[M-5N/3F7OY<Y<
&E8R>=5P(]DNE[1(&XT_>;_S9(0]?:bP-^AJbKAf.DOVJS^/I6c:A=&,e);,3KV>
?NcTMVOga#9caTCO/PT(Ze84aBL<Y^KX/M,ZY;)/0>:U8B[7DY(\,(Z[b6c/54Mf
5[9cN]a_=1\#J>;MPF=>5d&cd=JbE=W/dOReHf:9/d4>d_8#A8JbcO7eD>K#-BMN
/b3EGXYeHD(HNIaFFA;b)FHH:<AALV2]XVVQA+cPI3LI]e\e-Vf=K:1\DFP@:\HT
0ePDf.K.(#A<a0J14R-+76F^bU1C035dL@H=VMe&X37A.F-a:,AV1Q8[Yb<d-PLA
ZDUP45?8J7(&I>#V-=9a)(YF5U8HN0@dNG[aMVafF12NZ?=F-S4-,D=ETZ)e:LW/
LUKXWgVV/g?9GMbH[LMYK4#6(YeY.U)O>9GGBR/e<7VI;Q&WT/?-O6CT:^L+acG)
NbR@aH\RGTGK]_&7K3c^?&edS8?8;]?8][-ZQ2^AKB?g,d]H?S_W]]YJS^\V0<bY
P3X&YF5EdPMaf)Sf3VG\TWGc-H>L9T+]7aJ?&TcH7-/FO3,[_54CJ=D.:15U=IeL
22LX=54#.=710Me#D2,OJA;GPPWV,@DC&MZ26^KG3_-LWHJa(L(d#Y(&Pbf:.&\X
D6]A(H<P7YLP4PA/1(a4W(6\]?Q+C?]gQH\c4,7A^E.D+@_a8W.W[^c)+[fabT.5
+SQDOb3M.M#b>Rd[/\Y+O1SO;G>D=S8f0D;_D2/IMSDggW^ZH[T&U7e,JN2+8R]N
,-\_Z33EaFO1^2U7YMC6ObYAC5;3+@@N0CMUf>(e9:IA/GO92V,+cM8-I&bN;39>
(gZ>:)E_cD&ZNe53M<&6de??67ZZV@XJ?._(<Ka12BNKKfRg&T5-PGf(5);Pg^\c
5)7H(I<<G^2OAfb#\AEYbZ:XW63T#\=b;MV6dB4QCd)3=DA>ISbf;#5f=OYF^(e3
b3/e^d5c#g7DF,62(D;f4fc>.COaPPZ+EKM?6cU5T+)K8CXJ=.:Ed=)0KO>\,AOJ
+;QC=>UT.c^a4<e?dP<gVP4A_2IXSbL;^](5b=2-QC56<V?[9PHM,2f]#e,\(J?G
1(&ZFV2]b<#:Tb4f,I&I2VT)Y6Q,f>6ENW09^LHQf;I07&T8GMO_-RX549a:5X_0
@@^K\(ZA)O7GPVg.R&.&>2@1aZ7+gGO.W#V/:-?#6B6;B]6SD=XYH6@_:aV?AOVb
[57A7WaY:BbBHJc@#YRWa1gBZO/B.+aV=2V2IY-J;^Sec[8E\,-cO/;,Z?8L3<<^
^YI:##JKE4(2X[.,@)B&M)a)B:6b72^DCW:GcO7]NL.O8,^;MW@TNH+_IW;/)/:@
H66TX._b=QSHN8);B>+J8E.F]WUP5<]E[a(g:757(F_W=CA_O9?&Y&cR#9JG@-;#
[60O:A//RS]_P@B=:-(H@])fKAF]ZF7&P1f];1=dX?9B+7dOcU8VBXcJ\UU<d:^b
HgJVPU)5,]E?JA/P0N5aa-\KL/X9W5XWbHHF:R52ICdGU[)/D6MFV[H6^C11.QbB
<X[Z-UBO/]H2B=FP#a:A,@7_)Y:2R.^WG&@G6//<<754^INad]XZJF5[cA0GX:-<
LIc]OKDC@aN,Wb_2Cb.U_WO2^>dcJBbUe7]f742a=L4.T6?Ab@M9YA_Z5N<TP45M
,WXBQZ>g+K-O-3=>CHXBKIJ+<8+Fd>7)/@>Y5c?-46&.MKJE/>dS_Adc8FWeFLR8
\#JcJ3;YCB4#XR^I#[^S8YDM0\#=cO]LTM-EbHd:b-AIb_<OFUPE2>QMGG8K82g?
T;-eJS<FdIW+>B/J[>5]Yc(>;f8eO61>Q#0Z2;WLHEgT?(=UB,PQ[c]A)(Z(?8P<
eR?(^dT;G_9/D6+cQO3B0N#5&^NA\a6?d\(DZPS4E#5GMP;AQY1@OC++^FH4<bC,
fJ?DGOcd/g2?L\2GJS5aYMT-C^d@U;VgP>6Tc+<O4-g^YO/=G5.:&V/K7T#_R/[S
QZ5W(6c7T971M<D-@JWde_5Y;)N60OU9#b#C1:7I8:ESU,N+MEdZf]+W9CJICHdS
b)fL[R:ZWNe7U8&ggZU\H9I,ITWS]6b,G9S2AU>9b3QVH<WN+gGWHLJ8#R0?8<S#
73S+<CN\>QL1dK_5d;Mdd9\@)-O8UW5YE2/1H1-(4S8H(;;T/7L;;7Q#bgFV@IEM
E3RVD>f]>eWPTRJ,>VWC7OL5WOSTCOTV\UAeM_0;^4LU_\M1UC(fF>-:M:g,Y;Y9
DfXH:;GQU?@JH<&H3/L)E.dQ7fgC<0,O97:V-fLU9?I/6NA1YO(5g;[#M6HSJJ7.
#LP,:C<[_@MX4A<F)e+<>@#3_Y\KKAH:@eGG:_gB):\HGZdAeFS?Q-&T-(TH?N&V
8Zc&H3V&PJ57_R-TBMbB^[Q;;E2YO;U>Bf0<#E)FA)K-W8@=CSQ\U/BU0[I\c>G1
.#FPP_3S&bM5&-(@<f5535E+B)?Y#LfBV.TaW2F[Zd4Qc<^3TK+JCFGPNS[c@?)-
.MCKQ=M?\G[0a[4bH&1]:JRc=L1eOYQ=0Nb#,;D5(_g.:T3&WGFX-J0g/=^CeRGJ
Vgd_/(U6bZ&X+L0/E_2#XSPS&1dK[?+a&H?5TA5#53?X;KLTE)>>RYF+8;#CO]29
-TK2>fCIVH32EA]0;4I>P_d9]D)0Ee3AT3ZR.E(#&@+e95#=J:4a-6XBQb(F#(Id
beEfg?>RB-SGN7L^NFPUU-HS.92FLXRF6GA#(J->Zge7=72X[Dg1:RRgEdNRG<Xb
Y.3AS-NIf,QTXFdfESZJ^XIZ<H=82.dAPeJ@DC-KM,3PI\_M<T3_ETOXBZ,^G?eL
[GT:gXM:MS7U#7.NLg)M1E-Q[W>W9_FL/)BR]/5V\BDg8AEZ;ADa5QWfcC]4UQP1
c?/EX/S;d;Z<4E7ZDED/O?@O7EY/#AO<:-B/-[4gg7IEB4@:[R)^/MR_6@6L;[ZH
5c3^V\035_=?0YH?1=>WXAU?:gXLJKW2MRC:Jc8?PAebMHeYf,])]\RB;0Tc50JQ
H\B/-HLI(QEb[HWJ@;;CGQ)&ef0N6Ie;;;J,(.a(=P2NW/YZKfZ[K.VNYfM?76Fa
.BZIfa_(KBT3U<A?OKQVOA8-Q^6/82F?J?aXN7XGVP)WGUYYE?AQcHc7f;eBF)fX
+47B5EBMQPC\7B[5:;R@OFCX&R(9NT-LJRWO.;]5IQOHIUSLU9Q]_>Y^(L3&CRGT
YWNI)X0MbfF6Xb(RT,f5^GK#H3=,-:K@>CSYe[KL^-Q26Z/g.#:SaVN/HCc1[UB3
CM/b\CY:fA_9c7JH:&<C)RPNA37g+QUH1@/;[YV?^;e#aD)+DKOd2a8aSaTHVD;]
e_N>@\VAFP;f<?[Ef,LAT]-6,F/IDO7[#ZYL.Td+RB5@:S^U+_]d#ZDTYSPW4UA]
(C7Sc?WAeNQRDGKg5fPOOWIYPJXL]9=,Jc+M(0?_8d-)b0B@K[UcT@#9WHMgE-Q7
0ZB)Zf8Xf2R1VT=Z,T,QKX69\;GA:eXQ<1QE^NYRU,,MQ#ZZ-0V^ARC@YKa09#-:
/1<cMQX/(8B5<K:9U?9??E:4C82;J61MY&;:<<eeQJBdUNI/d\DFQ/JVGS/Q1-=\
6Z2Z<3,YOCKgg.1dHEF2O;7I.G?[-+dU.:cb\HU2ZGSaR\HFcXN?O6ZPW5E2&eMP
Y\7G8+&9.X4^9=C;L<GF3PfdIX(JOEeYLX^TR.YXbDJ0eN)D/MFC.,d@6P]LHH:[
#EOI/T2g,#@(S6-d^M.LY]Je<,cN:8?Eb?]V,D&;c.S#?MPM&9Rg[7Ce^Tg^GFY:
c[._P4PPb8O10+JJ@86A@.1>AMK696BeEVA.X<;/MZQ.)4e?^G,5g?OC#]_KE.b1
/.+Z6T;4ccW]TPUX_5=2,68WGB^1/YD3_>NSN_EL\PAHA:)^P;dFeU5ZSe^>2@W1
]8^,8OATYMagV1Q9J>R_C=]a7/LA7\&]M2U5f:1=-)J5b2:60ATb_YXI8c;[BQJH
e\N>TDOeS>N:K-NN./:8EWfSZI;_^9/c@@J7M\P&GQYE+?[gVYJe:L(ZE\c)B0Zb
/N:e\5(fL7.]0(.F4A6F-MCP4>E=WCJab-],C#^+I\WXPfF&A.Q:8c=20e:ZHW[4
VNCM7.IU0X9@DD+Q9S]0XfBX_B32ER4=CSA\C:_?c6c4+DG_:ZI\e60b(C.6K1&[
1\5V#7,M6-],cG3=CZ=(,a@.&0WT=@e=_-7@(H8dCg?SaB;1)A-[#^Q>L9Y[=DW,
eG)Y\\>9#GLV-<#,(W_>5N9)^@Y+>d9/A(#E@ZD:^63;Ga_[PFFHA3:,UMDd>HH;
g+b;45N,WfK,N91M4Se0:I3Y9_A?FRcW4-4M(eJO@=<MGAaE8\TeQ_]Y]VFJY<59
U;3->5;ZE3EQe]\N/GHCU]3APDFL&VHC^/a9DY@\]IPaI)78g9S+E;0)6Gd/\2:>
\ge^Q7YHf--AYa<S(8I\PY-VG103(ZJSdaeC3&a&C(^?9@/G1>WP)@W+K+5<RZ=_
dc2-,HMdP=;dNfU5gZ?[+CIA>YTc5JI6@+X/R5XZ16LbJS+\]Q4Z@KS6)^E.>-9c
0D+A<UBHd,PP^OOAN6UJ[/T8[(I68W);?N]6g+4EE82Cc143,U,cF^c&[+#AOE8H
F^]LG9FJEI0.dTS5\bV4A59#17+(66H&]J<X.?g\Z030,J\KLgLRBeeHKA5f(NDO
,D51c>C\86\,gHYP_^XGf-Y-P;,K8^Ec]8C[6gD-)c<,9dOQceCd,RL65ZN-c1-0
G+KKRCUAXPH[gJIb(S^#+8W\9]R)S_aHC+F^fg<;S_NDK=eEO=T//64-HWW8&IQ.
bV2=MfL1e:YcGHWBU:FIIP1<8)0PBX[/VMKIgE/A8(c>(#PA(TLeA:OR4&8,P&4a
D/IU6EABNXJ>,TY?LOUbNE[Mb<?g)NRP9R#bJ4S]?8&>ZPH:BS3F)K0WYO-cB?SW
QOC[^IMKBJ7:GBOHWE737eY-[8GMfG82O&Ge.8)_b?);Mc-PMCcJ_#8^XZ&8R=@7
,_>^0XTF6/JTV--X:#09.+daBN]D+6ECeHaQXW135UOWacCIcJG];e1^GWOP.Oc3
c=389A,EHX<?8?_/<K:4H0J\NDCPA:3K&+<L2EV\;4e2(-b)I\#]2c4&?AL:4->4
Xd_a\42/C8b.3=6Y4Oa98QX5<UHc\V/+FS:2W[TLN>_#66K8VI,@\Z\5V1J)5TbG
>C.F-Rg2gR55EJX8cODbAIF3[dXAP(@(/>UcUB_(IFO5[=R/H1@E:179.P3K,L]_
OXG42c>B=3T9afB703>U#>\)gZ3E-&Dc?A]0ODD;>I(@gSX9]Tg:gB:]D&OA11&8
8+0//;f5U>G.RL5_871[e,A0;VZL;ScR#2MUH5JJCMBec9ZK&\Y@F])(<N75;KT6
?Z\UQQ[6=aPEcW)8<)SBJ1MKBV/LUa0Ha^fIUCZO9e-fUA;?f\DI&QRR<8FM<1^O
\)U@B9J6dUB]NCFc]C57Y0#-9#AX4&4<6:^.NB4ZRSK;LEPgda_FTa^MV,VY(WIZ
^R9/^c2TNfH9[Z_BWg6/_5UH1YJcdb;WeWAB-3/TUGbgge5YbE]V97=>(\cFAN&N
:Ie5aP3TO->4+7>Q];9PTK#BefK<Q:B\82:QJC>Db3:^8_WYTTQ:I:,[IBZ0X&R/
GR9TN-X;Kd(aW51R:4-HKWZDZF0(:[/Y^/2bB32.D?-Oe7aF+8#9I:O3?Y1T:Z0V
T7V9+IfM+>JP^d^\Q,MGQ>ZT2Bg408)DJ>a]O?6_EgR^6MEU.?>>>3&AU;&S(CIV
18SLW/^XG-9\a)C(?C/E#9)T3fVM&XZ9T;,5Vbd+>LaQO3[@GeJR:9?G6/#a<Ag4
[.P0E<g#3^>5aU/\eHf9\H/._E^A7TJW)b3W5S);a@H=KO(5<c&5X69)&Qe/eQdd
J^VfYR8KSXd2;e(A<;Ug\L\=+UNH,9OWcE_/(64+[@3Qff,MU[d176M;bD<>?;R5
1F,GK^H^8MGK.J)Pb/6\-A(HfDg^JL\Y\Md^3]75ZRH14Z4Ia+3bP&;#B)[fgQ7U
de[E,Y)d[#ZSI\O#=#N0HAQZA;).^OIM5-U^W_)<@TP4]G:JO0PP99gY7;L69Pf^
<=bC\[d,A&NL9S7^8/S\/CK:bYS)WK]-,ZV.Gb#IQ)I0=Me6D?W0B:DCeL&QXOW9
(2Q<4M<0Bg9MJfD3;#_@_?dCgO+&gf:0A+6@KDL)gFIRW-^dfd;1+T<Y8FK9:Y3_
:+:-0&B\427eZe\1YY[RKBIJK18)e_?E+Y=):R^A3EU8.a&916cbR0IbI\6KR\F/
@]ZY]9G2IWMMgB/EO:>\18N(X[<JbgeW;[>UX2O/c5HNX.\)e9W-fPQM&/3S>PbB
Jd+b7[1Q7L[QH:1JJIV<=7CQ=@dSTcSa-G&G)PPTBa/>P]Q,D8PYHcRaEJ=<dI?@
4OU8JRG\OPO?:ZYB@f24)5a]Z1]^#]d<>cW_/DKIeH2,g\.SR1MJ]M)R_VS^&?G.
d>?OKgb]H?_W])YN.(48_Wd4=X&?@LaE&4R2AG8[Fd5_eNILfgODCYB/P5JMH.;T
E-\Q&8/(d2XAgC/-#:DSV6e/>7Z7MQ_(/PQ;9<fN,&b&;1Y(KFTS5LDGe_]Xc^6?
0M@3:49AV9BVOFL8.,ObPZL+]<\Re+21c2B:PEa0(-Q(SA^2;fZA<IOYMUE:[W./
G\2<>>>7KgLfd^CPd]3&I(-ZY9V&S?2e3S?RR8E]830D=F>&3KEf8=^RdbISWJBL
4\@Ab/-8.e9+Y6Y>K4H:7_RS8N>Zb[PAeARN\bEcZ\[Fg>&F.6G0[B.e4;e\f.Q1
:6]=eCeId6AJQPH(Xb:GLRVL=Cf>CWN_&4d+,GHOOFI=@,6GOP(@R^I+V3QaSQZ\
;e:IQb1<AFIJ>\H6>T#b:B<]V0+7K5Q-W=Kc;LL2K\XIf<AIWHSOOHCPP9O&8b8P
/]fU[f2?2PLS8ZJa_30C][64(I^Z>-#<X<g+JE@[WNK>aW)c)7,Z_<4_QAA-&U6/
6:QOOcUK,4/a/[dVBbZ?1.HJV\V<BSFgYUee)K)J8MGP/D1VZS?>OJIJL_UefN]c
1#b,0MXaOaS]2PQ5+0f:WdO\PTY\VFf(&=eIV)6FbQ#dA(16\2MSMWfB)EN:IK;(
+&\\;(X5+.c_A+bPE_K^@G;^gZaQ,5(&UAAT&85OGVPAPV/b6H#WTI0=T_^2c>0e
[3QMNQc-;[-#T69-ecaG@9U_@8W^M=e/[<;F8B25YHCd(YM-/g=f)P3fIVDWBGT5
IM=XRfTe9T/V\f+&EKQ60X@5N8&>#EJ()Y9aA.R8^.>&1:4VG=5((X0&O=Hd<0/H
Z6NeRM?H[-3<I/+,f:cG,T.,Pd_\\.OT9W[9@#_LSKJNCNFH=\)PPbC78KC<DOe9
JGE3PVD(1&fc37-HFV:9O.OI+&ZgI>L<P#@,e<Db[dW&gV]B[1(geIN5eD\f19E@
6Sc)bK73+QgJ5:W1Zg3XBJXEWU)^e;MYeBJ7a+[)3B8Xd)@&LVEGF\P+V.&,W4_0
_8#XN4a3#=Cg>CPH/)gc59^6Q=W^]6Td-(FT=?]DK<cPS,5VO?,Jg>K/eUI@EK]H
V>B\S)86R\6\_#2I&dX3O3E^?WT:Rb<AALAS7>/)+II)I[PKKH]SR_V3P#&:9,Sd
]c#]T5Q2-PL/@2C/XaN_Ug)20#7^aGQg]/;Y)4/33JBXLL_Af3R5I\YLRLN>E]]O
R)0S;PN6IZbK+8CH7O3W>DadQ(#1H)8,7PNHY+0\CabMNeRD\Rbea4b>;><dBcQ0
YM_O4bIO>;.S\d<fc]3aR&C0[;S/Z\L)F2X[)W[[1\fYaWAR2OF_6X(ZBA=<)V2#
5gTDd[3W)bK2C/#P\.Q<<5-ZdYS#P>2-JMX3H2FY2,eV65N&6624J0(5(:-_GQ(G
]RDD9MBQ_9C0;3SJ=S:5S8<GB2,@&[+3-2+.K_aHY6D=[5\YYQQ,,Q3Y3YaQR@S)
MSNRY;I&f/a+3E_R8+35:/-+R:/408J&dGHE<+2E3f[5Q3[c92La/+a0M;dW8[V0
G[()3VQS>UcP\BBT(7e._+0WS>/G&AAA3_Z4L@?#>]:]4Q=fb-H2Y@]^ce0MWF2M
eRE+5^&T&4eR0CMI\)JN=Q2?0QSN:f7/Pb6;(EY-PUg\NRO=If(]5-H8aS9C2^c0
g&OV1=-JLXa--DSZ&fc>PV?/Z(?W5-QB)0cN&cIfBfb??;.(XCHU)R4.CEJN117W
>J=.YKSJ41SZK6AbEU+AXJaF?3,5QUc7eZFTG;4WcAg[#=5#]YVU7MNAHWc_eLMV
YT.1(GZ(/8Z)020c@Hacb3/U5FbPCa^N20FL,QB=2&/NKY[\4T2Q0HTLB2U3L<M<
,0;9WHU+Q;-4QeA,)eggc)TP+d6@6:B=4aM_c##DNdc6#.R#K>HE&;)L,4O#c&V4
;_4X[L7feA=D1/(3G\2)NHK#P:W+7,:e;59c)Y+8OcNa(]@O><Xc2EPLJe^+#aa;
f.,MJ6_UNYRO>XR/0_RK^?a:A0#eCZ>0]B@Y90R;COYD<8cE=?^c^?XLB<gcP:e+
YBYf;THH>#Ub4(;N9>eOF#Ob)cZ9F&[LXKMgFC:57\@#HaaR_b43ZP2NeD8Zf\4(
40I^E;N?^->M^L\Ab_WHX8LM1/8KgC6IA1]^F_SLfWOM7c(J^7XMa9M-&3,PPZQ&
_ZaW@b8F,7SA?SC0PK<3Fd-D((L==:A<46_=8#(R;Y2D\Y@TEDU@9f&/X1QG6)17
a27QTZ7[NA1?>PD\^\5^0F)6_SFf53,?EaO;1?08gD&+)Df.A.NdRa[cQ;O-?HU>
5PaL_(;7Xd/>PGR7e?25dXPJ3cVX:_:5g5GU2&T0YX2.0^gD.5D;4=196ES@:S6c
[3V^A/MaL;If9+VQ&aYP3dN?&.=O=(VP?G,YPaPOMOG@D?PNU1f+?dYCLd7,fCR^
TXI9C/Q[[_7)Pe#BA<[IBcCJBc)d(g/@eC+X<60<XL0A?]6KaIY8+?SWH1@b1KL<
I8(M61;U3Z-\UNMdCEM2J2:dT\cCY/NcXI4B5g,99R<6;9UP((MMVVQPN5N/QW;J
WG]@ZU\AHG1BN=f.1<JWcW:_JLaC,S&#=Y0:a7FDNVJ@<2Agd0Y+]O8]-SHB-P7=
]DN;]M&J[[/Q<7LeDNI3_KaF684QXA=.J-H?C<CV;)Y/Q^XO?2UY)]1_:E5ZRMK>
X3,67eSE\8M#KMFeXNJJP/=I#JMOdb0#)9Mg@AI\Z84EBZLeae;]6&0AQa8ELVVc
G+2>SfaaBXCW3cH#)OS(<#TF0HXR;\F0&RIFfQZg.8?dc?RFYPUB)^SGAGN<N9TL
f(AY=a_QTIE7NO41W>9bV)<NO-]Sa[;>7d0N.C^5cWPD)>7^#bZQg##5eDX49b/S
Q@4E,N8H2>_T:&e2YPLgP82J0^D_>^c/aD;67EbI\f]O]0Sa1Mf+57+EUM.2(Q61
Y;]=N\:^\H0SPK,Y;a)8MZLE8KWHcQa;ALK6)J_gPdWG0F9LAF&3g>,W\D9[d,-9
EF,NN0;SOTLU/0)D+F([2/A1E3-UcCS<IZ21CM<M7U\C((=PRSX5K_>2HB@2JUZQ
6a4c)&+b<K;9I2-/73VGXF^;P.^2Vag:P[<5H)YGeI(J=:13SS_#0W18\1K.ES_;
S/1b,1L#Ug;&:P_CP<TAF5)cfSK+eZUKGPFOD(V=GV^:9X(eCeFd-ePd0)f)HJXX
277A2f##[/LVd>f]UNE6\],Ag3\?\(8A5g96R1]8UP#3?X4AEAg3@&[-KX;K[EY:
5L]dJWU0X(>XXI1CFUaM4F.+5gD:M)gbGI?3FLVCAcC3^:<5-,5[-dMggOdc@>G)
)^C;[DKVgHbf0Hag16GE5+4:AWQ(eC)T:K^]_H&R<&;/5PTLBfS-0Ya3]M[e7-LD
gRc4K#Z@#AM]EWe[S+454b/;VA;4@<2ObVE4VM0He5A&D?>SXE_W.e7@7.=ACPII
LA9Ke5-^-a\MJL+C_Q&eZ5QGR-7?Uda]9-)^;5/9L/K(FK@S4O(XD17PL..?]764
U>GP)<ARY[daMRJ-V;W0H>dE4EDM,GU(R3YcCO4L+[WA?>N-V/:>L.PV9^gP@5S>
.V#T[?d\=;V(e2cIWA,WAKX[_8R?&S9(Z4.IBEgeQ[L&97?\a7]YHe?9LNc-X=c5
WXdJ^9::Q:>CHaT())1V3V<9(AWM=X1=KTbZ+[<EO4.f9<ZbfJ7JZK3J2@T(bR0@
@V7.0;^4;a:D1,43Ud>+Lc4Ra=>>Q(SZMd.K+T>Y-f2=[]fZS@c^ceBDN<eCF?]9
RB>Q-NU4HeRf4R2,eS9Q7L;9LbY73A\(M,EN/,@>a2N<7:T0Fa3>U<7T>)-@R6DT
R\#OXET&K6/-LSL(#Z:#UMOM82YG]#E13=2MeI<[PAOX3VULLTD(6_M/4(O-d/-6
LF[F08ed=?K#f;G?NS868&MgUB^I)+<ZZDf2DddD8SLG=UG2C.E6&6XGB;NTXUX5
I?^U8Y3Y30d+/F&,]/Rg+)&^D2+D+WIQ55Y(512]Z6MV1:.Ja8N-=Y7Z-aM+Z6_6
4V9;SM[J^_:Ua=1__PX)11.J;JEWZ#+P5g?@6fY_a,.[Z_>f);S<NQ.D;;\@\YI]
Z>b=NN(/3RbYUN+bG7O,0;\gN&a5]0@8)?W3]Y7aL&&Pa20P/A/E?Fc&:5E(DR2X
XDR&V2-Qf(]13C\/eJ4cS:>W/BcL[E^g/e\A\-><Z08EU\LLN,LCMcadW#1?Mb9M
(P;e1?OHH_QD<]D4D6]eMN/YCT\7GCc,UDE,UB1;FL[Z9<PV&;8XO:<B?b.X,&FL
[L4E1NG/e=V>8d0a7bO8<KW<]W1B[bWCW)(IZA(L6IW3B(D[R59/0H>8f@Z,9dL2
SOY5M@S75(+<)eA@XM9AOMa)g?ZK+Y7&190e/&@UfMF6e,2YC:[KLVYD:YY:V?;(
#0\1HRP5XC[S7gdBXWN+\O;GT:Y^-VR8fI1N4ELO^EU/:WW,VA1\U;5RSMC:[N,R
]J_N@O4@R(04][YGZEK].)6(?RDPJ7:1/:b=eTfC9GY4-NBIc3J(PCODTO[7Ze<a
aT47O>])@>X2]1827M6M_TU8IJ3#_O&V[LN\dU^D]76WeKc\6>,aFOScD__<X2TQ
a+MbYfP\@H(P9>Z7^L[L6&,N\:H(?bgGcCb+/L:+3PN]3d-<\ZC.DW\LX/ILLH[)
;aGK=^JX26W[]T3VM31LfNg9;SH@_R(aa^(63dSAdMLUJFG1J&.eW;Z1A4C88ITH
+Rdf>U6e?XFMGXS^(CKD\71D>4[I;K8:U2M>+J+4=452?,[5@UU<?M1^>7020eT;
OT=KF7PULU=_2(=G<;.H83;FaE2\L\A#ZJ[E7KGJc\6Ub:IN;Z3bIdH]e[543)\B
)4PX]e4GC+>T6N^M\SI9<G@#J=P#D.+C@+(dLO459^H-?1@[XJ?/7gRK[J&V3IK)
R]=]-K=/)QGNJYRUGA;N,Q5Q878#=e,=WEKMSJ2[U^#daG3\P]aAX\geg6;g;EF:
32-BJBX5)S9^SXI_;F<G=O&e#\<eZ(L]XVUPNYffOUHfY</7_)F@5&ebXe-DP8K?
,7_IZ<\KX?Jf02KCNMMUP54(&T2A9R167#gTS3:=..GS-3RH=;3G?c;;NZ-X>0/g
=LVY<TG\B\3MGN==aCeY<gEAg;J@IOQJ^QY_JFaFVXebR09D=)N3ILUZ;2Z+UG1+
Uc9gQFH09#\7NPH]J,#:H[?dGDRGCd.C(2L:<+A/Q:IeQ+.&@@U4cZ=6Z3.],+N)
+1WO=:#Q50IXSXA.:^U7JF.9WLd_#-_F5F+[#XVWD-ge4X-(#A.ADK7B6f[_>8eO
:JU0B8@PYT[,UL^L]WJPI4b8Y#_?0V32?]f>JF_9;gAPJ9Y?a:Z_VLP49=N]ZGCQ
dQ&&d?f/BERBIUDHTN3LGXT<;fROBPDgZBI@7TA5+W-]PNe/G+LP&^eeB0&XUOKE
?]X\,4\X>W1:C-P<f0]#2_fPfUEK)6<F:Xg0eE?/KX8+e7T=f@NBbWI@C9-QR[c=
V@>V+gLg3.bb)3.IEML[1MC]KP;5Y)0b<I65V/c?e;<OD9ZXaT#:J/c@bDBXV>O[
F>JW[0^;+8,OO^W_MSJT-a>;BE,bI2fQZC@6C:7FOH8M+E>5H:A;D^<cFBK^T\?;
H[W0/P)OML(26g7;;_PW)-OW7B-R<F25GJA7cHN2b8Yg\bT=-;3@]7RNaV8&D/_[
N_9M-Y5?U>4.9_HE>4;>I&Z)Q9HMET/^;;,\9WY.6C(02VKJBC<5[:?DgOR6T:2I
[R09b&?9+fLfU5+[UE_8.;;^;)^@0L\)>Zc-9>WEP,^]e=CNKVHIKW=_cKRDbAY1
AX[Re?9RNN2,>2D^>];#J)1E[S[\6N/\D,E(SZbRL)Xg2/Yb?G,&I9VQJ<.dQVI6
@IBF,;bS4dYQDF3T;66bR#=7YBWV^W-1<DA.aSAXZTQ)gN1:f.D2E;LO4UcOC3:=
@b7HLeU?V@PU60GB_1cG[@T/bJQWZ-PYN+fX#9BdbM):9.F]]GO_PcBWZ09=.P?J
Te;VHdP?Ff9PA:;8GKJ^]f6MP_V=I7DF(,Ja1g08PFW(TTWRBeQHEIS7,;>NO_9K
1)SgcL73WV5#fO#F+RS,EY9@1]S.4U:2-R7g+Be?b=JG[\)3[I+HKDf8f]HebNMF
-4bb_>)?](UAeAN1@9aX.LPTcCCXgN8DE-KC6cVJF<-&/8aYd9#4GUCH(#Ybfb6D
d/:d=:HP=F,7LX_,EVG</.acDg)SZSG_Z)^8VWCW&<60[\-8PIcEF#^JcZB1TL)W
(fg^E2OEe]W.QUf]SaE(g>bR,Pba-#4-\T?E#+HPOFMD:T-Y5gdGDP(CUOfGO@7P
#&<E-ZK9T3A3SX>MDCULXfb9T)8f7N=2/>U;@1&-.M2ET3;?,R;JYK&#53IP.,e^
5U6:1),8)M)E3C70+#EL9HGcDY>_]/FN5]+N;6X??-&[J.F_)PU?Vg73RdeL9UZD
LMCfO>)/0Y.=XYYTd]6T\O;-WPM[4fNc=gUL8JPb^\;B\gf)/NT>QV=fLa=@I5gZ
bW[KDf)F^8[>#4,(V,,0R=ga\gD=;EP4>^(1Z2K#I8c?UK]-C+1:V:EgK6+MWVe\
@Qa\Y-2WFF9:30TI\00Ke,PNUDK^.&R^Te=5f6YR?eAR+L/;<W[=Ta:_B.QPABe(
_-)a(g[=XO#]4I:KG&<C9TKGQ4;Q^E&)W+X<B-@OD=ODH<I08/=/RQWO+]_EWDNH
IV\<RP]DcL1G#>T?BSC5OV4-G:cLB65ZBD)ZME616gCfF2R^.#E4YJR9Q_>NY6[e
TfPAJ6+.a]9[59-7V4#:&(@b9;:9OS?F(63#)?GPC;bXK2\-EQXO(O>,6H\A-Nc?
VMN(..7Oe?;;J+[+]TT9BHUa2B+NK&#RReV9+2)/X8.#J4aeac#UfIZ[?3=M.4+:
0>#+RC#2XbKF@.EP8Gaeb)OOL&&G)KN,Dfbb^F2Q.V[0LI_,Yc(a\fb+J7KF(JUf
CRWQ8K5/R<@RM\1V3,1E;<5DMX0EbG:Y5,2>JR&#23HASW+2,Y.7)gd_f4@Z/#\D
c9NU#3UK<Z12/U2c^bcdW&?W<_J(6)Kd3YO9=L;90EL_,gR;:RJV9DMSMQ;7(;GC
>P1FS<_T9(FKN25f1D5A#>])?GVSJN/@KaNJg;T<VWR6]PKE+B5[,gJbG@&d\ba6
4PK-:YV_LT?\?a](OLU_>RHNC9OUY>UEJ0W@d#:1c86+5-D47da0+I..cG1R)(^\
4K#+F;CP/TZA-<AVWU+)9(^,+&1Y@;E+-M^Z6-G\(2OC5EQRaGIH25e@Z?5.LH6=
Ca.g3/4b@@gF4=M#Od+P_,JIO+W-Q7KS0W]FEZgbWV+GWBE@&Z,Sc(>^29BZ.R#J
>N)L6EC6NJE)3S@&X-X-&D\EQBE(##.6)4FGE?)R_^1DEJCB)(OG,>?EDXD7a]+Q
O<bRef-^SV+8/HT#>2<4HeXSG_SSRJ@LRY:K0@d2ddc43-@U=FWR7;UWX.:G1f[<
ETI5e/>c8eE^:;V;:)(a][f#Y/IJYf(^L]S8^=;Q<V3Sg1IC5=,EVOI.L;gJV4Q>
B2,@<#^?Z/UYfE.=/NSAaJgL5Jaf18P-e&3LRUZWKU+BE:1a]?VYfNM#>G,Q:c-_
U0L9&STXY>0[BM<,BHMHJPL/+a\PD9,HW0+Yf2L^,_6E::Z8IZc(=#9]@C<5(\1T
\&-FZ9,PgTe2?g+e[&#@_K]PYc3>4H.UU]\W,3Q#V>eHbQ-cad.#\>)R7T5J+1MZ
4d4B@a/>cB5MXZ10FLU(WA_LBEUY(TICgI30[JLCIN_41<?A(90:ZESOGa1KfAGN
PgZN^B>@I)Q\TdCR+5\&,6=/&.^-MLR.Ed[0Q8?P?9>W5Z4NL7.PZ^49QBO\.b14
K0O+6VHM,D0S2:G]D=.b.&[TbOLYaIcS71M=;#1ZX1Of;&&A/J3G1bUc)T2[W7M-
4B;7NQG.D#./GDOO9V/,4,84C7C-KA1:F/W-4_)\.DMIMS/7Z:Z9WABWFA/LLXQ?
=2_<eYJ2eTf?eMa@/2LTRJd:<B6_]794.+88+;40^D,<&E4SKaE\+&KG^bY<-5ND
caU#Z]VJ(J=;,RIfD8b??ZT,KH.>a4ASJLQN?&:FB0DF#f76W==65(@V6c#96Q,:
2BMBNX)4JG;(V+HYS.a3BfT3e,GP[2VJ8RgLCM5QAIP2<4N4(8gT\0665++N-:7P
LFa]HaEgaT[:aYZQL1M)GMZZ4d_QE24cF5Y-:f&^_P):02.]FU=f866=[>;CNJ8F
WWD_X=T7PDg;X<4EZbAA3PNX]R/L>bTH)Y?d;3/<_-/&7@LU8E@PFRe+J4.e-MH:
g?1\@0]d-@KI&f20DG9>60H423J>bL;+Se&EF/NZWGMAS058F[,O:ZbL18?\D?B2
8V8<E/@eE;9=W#L(8?.411),T4:P,dE9?]_J_O)IARQ27JK3^Z42b<fVR^+H[6bJ
DSP,=b[NfbGF4J:)CdMba@eFCZ_QHF(<7(<DN(?&\?+cZND8ZR.M+026\:&7db3a
QdddGe/T[N+AB9[R+O]:e(9\<f)+c#YM>PC3W;=/MBZN;T<@D3dM96I8]A).a/TP
aZ7cP>+b20R#TE>QK/aT[^AFFRQLN^7BP+D[FHg_@GfAT,6L[?d=^UX5C>gB>8Y.
7c<+15LBYGAN[]=,GO_.eFfPDB1E-f]ARR;M>61ZF>K//PMD]MZ<X@@WB?92_-U>
L4.P^=@4g\R?,=WB&dG6NV)KFS9EOC;+KU+?OdTINTFB[D_:8-bLd6:K2SC=<FQX
XN+Kg6VG6>).5(82#,+eY6>;4<Q\eB?0D2>)Q:6c90T@e]A,4N#:<f0eZ4aC)(]&
GaNY2,WPLeT@66\b>\Wf<b2fZb7^eKT\K,VQc-ECJJ1>=C#?,;PbaNCW.Cad]4A8
E(<DBI3OE/G#TA),?>F:P4YVJ>QY\:JH9fA8YbAEb(K(_[0)Y)?N@,Y@f0EXYG9+
]68_DU2d,SE0ae>@BP&/VU1@Ld)A;4g&<a:Ea7DUf5;#S@\(4B&b7S6I^@ZWWcbd
9IY=D#S#K17ag39F==4E=TUKb1.YZUAgC\6&2_fT4,7NHEG(9SN@6BRX)3JDTR#>
c3YPI;aFKDXOI98KL&AH5]U@AG,4&4K<KYDLWccK4bZ9WBMXR5aPV+L1.NP0R,aF
/F4;KI/c-5G#V6I8PZ=e5NH+;=O@6AJTcP=7W3>#R_c]75<GX)>@7[TY4BCAHRO/
c5=a.[)abMc#:Y5J\D[BXeLaS[Q#C#4+4.dECdc(aYf/<G:a8V^0dO_@Z<;077dd
3]KW17R+&\-H<?&:).3aZUDd]N3Hg92;68X6\;-M8J\aME>6eJ>4\a_.MRK2.]L1
/NH8;#)NX\^<cdT&O=V\6K?BJ?JcHAAV[f=g_\#G<fAQ)@ROWA3-DS:P80GROfAS
a#TY5cQ@/BSe\^9J)d3bG<W5E3S:XQ:M&a./2,[B<@54cJ@Ng;1P(Uf.>HZa:UYS
_[bR_M/7ELY1;@C-=5VcQa0e>G3G0^,CP-WHCd3OR.PX;D6^aDQC3^g&:b=0<b?W
#c.#:c@SGbb?@L6S?2OVcb<UH&BcF;_MY]b&NN@EKR=O8O\VRFA,.8P@Ng00d&6g
-\W[?H6R<-//S+gXW[4U;1<J5e3W<b;dJ(,:;+_N8@5Q994GC_c,JACab8c=;dg9
G9-D6P;(LJO=,\3W4)^4&K+e-X.&5D./KSg?9Z0_+R_Q7,8AUT2GaBDNLI=g@Z[K
D>@U9\fcO-e+0>O5E;d=MDdBe]B)/Gc@Y?\\e_A@TLB_[bbL()g0BF4C[Q/S2UI[
<g5=&O(TIBF6^//TV4@P2U^=21)1,U=\d:G,[49+a(&FE95ON7BUJ@BK2E,Q)Teb
W#YX:I#6JHX=IGS-RVa<bG+97ISFgIV.6W34eMZF/aMC1IGFNO?:4GL>Y>C)\3)Q
DL,XCSA5S-L/U:gSgdKOK\46HfFcP3MgE=a-:?<N/;g6T-55/U7M[YVeOK4AW>;7
.O4Xb/PgOVe-+1b/_ZQDBM>QTZ44G3bg#C2-[a0CS)PgN-2ScW^)^cS1_#W+K]H^
,?6S9edJfcY9&_TO//3OgGX\;g1T>0Xd7YJ6=EA3UQg9VI?H/KLIKc3WUb_/[1,/
2;JGO0A+=.4=</:+La_9<><7@OPH1W]02:#;C&_/M>F7R994b,b+I(LUb-PcS,<P
]ISdUO9Dc<-69Q/C3R+8@)<M[<eYfLH6ZNA.U&:L_V(#856dCRN2U0&KYe/af_WC
@M+3e]M^LDbdJ:d[L&0aF.7BT0ae]S_A=SL9SBU&4#N?S:8,;cBLA1F419<0]M3Q
\c,OB<d0UGLX\Xg[42QAKDJb0R=54.0d<SIeDJEPDL3#/94R>K=T9.C]T[TJ?7E2
1c[TQN9336CI_IB,fY-]aSUdDN7R9@N=&7;:6<8Bc[T32F^[G3&AAC>9GX=VdP+P
0<#(7=_Td<CO(>gYCJ8ZEWXZJ=ZRLEB<g^BRHSb=9&8B8?YY=WV9L6R5-04\6=Sf
QTAcE8PWCV:5APB/_C]GL^6[f[F260cHP3KHH&O-HEDN3;2fO&4,Oc;3Ha=EUR<:
)f+8eV><0Y^G7+;HDaH=Tf(IA0=X.&4>&BS2D4RS8:W?FM3)E,I^g2]P6HZ2bN-9
SBag9g;EBf55PY@bES3PZ__KPDQ14E[0Z<gd5L+&[-/_<4(Y?=ODLe]&4B^f/515
D2W=5C>(<IK;H:[N]CXZE[Pb(]91<N8bVC((H\ET[Ga+[1L&VJNgcTPUIZe69E:T
c#A[)7YZNU6Ub+2U@C6f4))cESKMT<V345M1b2@U)A-,?PP+M(Y0c=+NA4GQI856
V8M-[/<6N&a/YWN2@IN83PLEfKGN,.?^\=^Z=&?S9EU]#UWKW2AcMAU[K5;WJa>7
R5KJ&Rd#;IXaRI(#GZM^fWF9?41.Nc^V.SFWd.8eQNQ>.8;KgT<=B4=UW9UJ#UUf
)RgO)<L6Zb348&X:G2J.2E<E82+5&^S)f?(=DAbMMb77^b#W7b&BH1O&>6>dVEK[
O8,OWNV4&_3e7<AfbCC5&AJK@0#0HO5PAJXMBOf.aU-_a/S9aICU^eM;\MQH75fL
QDaY@1)NP<T.,&H.>OGS:+cJ[8=2PeTeKfEYKSg#>J+@Yf,gX+?Yd]b9gS[-]R(a
DePQP+FX+c;0IE;+RKYFA2O5eY)_J5GRC+;JVc@<_J@668?O(W/b.+DUHgK7W[KA
d>Z):G4_/1(Q;QZI8_>B<8ZVK0+GK1#PU#BB][T.-UIFD;9.6L&A6Xa-NI(79]Tb
E,HJH8#HLe8K\3A>;>JJ6MD3\21_>OCedR=9dS1?\06IN4)-..c&MRa?Z:^2D;;V
(MJ4_c,Pg(5@eVAE)YW,.IE10OL2((d<5;\&X<J\(:ZI0O-Cd8I3eGTDH:7=E(d@
^QdbN1IC4LM\0JA]^2#OG\:QIY,Rafe&MC5Oe]2S]LO+AE7C8392]=)FIL1;+]XV
]M_DL^e86^[fT@/f(EH@OI&:eCOR,-8P?Q8bcTF0YA2CN:E.4^4_NQ2\)LCd1aU?
KRPBN;4]60BGd9NW,9(H:^#9_Fc)VSOc/K/X_L.fKK/1:69-BY=aBd.#=-;aR1\5
-F61d9/IeWbFS/6d.eF))e&@9LAa,9:R#gN>+@K:TafAH&(@>C]FA&O_N8,OCOXA
4g[+S+LPZ@UD_KK_6LOY;N:LX[[7,DYS/3/K4E6<<NI:2B]=8RO:\((b+#2:XN51
DZ24G)MKO4c,\=^EfX2(&g.,#9-NRH7YHg]a5S6f0L&P-ND/f_3A,&-82\#?#gZ9
C\?D5/4I+LEG3A<J8c\f<X9A-O:4U.e>B9U5YQQKF;]V/>MVTB,(ZZ??dV#T_I3Q
cbE/>@_H0:WBCD/8AM(NO?,+=<BY]#H@=F#[630FdR,_2^eSKCg]INI3RBNMJeI;
a^GcFEJ:5\+V9KDF#SR3[?/3FK?9(f+_UW<W-4#^6^:U47SXKREM6E:B]ad,H/2C
(UdCXG-Q1Y@fOa7=AA/eQbRfAa)F0Le^5M8>1EODA?O40c,SHVP.>Y8gF4OHdA]L
e]-:=)7eD&3_e+g3g=G3^BA8U#bCI_UeR1PG_UULTXGFWO06:WM;LPT;K&VgZdD8
Sfe\MP,+H,U7WWBP1?eK7]E(]ST&@Z^2RN_MIIU;69ZI-TK]aLP&=cPZF-]1&2(M
5)T,ZX\QSa:VE;^M0Z7CM4=ULfR&,,/A?VMZ(;XIX(-9_f(V3N-LA5K:g:[d8142
7#?Z;\dPOBG&E1<](=0Y<ISfc(HNS[LBP<2O6@3)&a&#Ie1K@>M_[dBQ#9/_H3^Z
MY^>2#99#c<LKL;cCKTV.Bf.f/a+((_.g+fT(aJCG6A_G[)CG]V]d<64S.J863H1
RgB\6??&(f&>KJ_0U8G&aPB>C;/.Q[^&YW,+P+<<VPU-3<=L,(>ABS+2a5P6+7YA
_@Y19G>P)J+]eJF2H,H@FXW]gH>>N]?620:YU;67GX2HQYT?;[6B.T9L1))^^L8:
EF-NJQ,>=RbW&CUHE\Z5aBUD7aARc8:1AD[CJ+<>&;PQEFED5BT)4?eUH1eAH;f6
A]]YA@M/f^<T8L.\B(=US;c8#eKB0gCaWE0=RKA(N+S+Y^CV1@b-:I,/G9RF[]3.
):T:VSJ7d=\Lf1^DIGYHU@@Q=OJ^ZPcegQ3IKW/8MX=gCfIEbDX2K>ADI<,1/<YQ
KU,O1aG)6MU0=85.\Xc8F=beV:aEdZNcM.MX/KeECEIS0/6c((?IVV.X6)GL\=D(
Q87\1YGcIS=A+BX=Ga/R)3A[UX7(F=M&g+f\EGdU)M[6P3G]5O-c--T?G4ND;&T_
UIF])[V1H8:3[]DTLg9:Bda#74S<O9EL=Y@=cAAbI?K8TB44V+3IL(V=5O^cF(BF
MR6K=b0E#K-8d<A??:?,b<7],(>^B6c6W&.6ZU+MgY</:Y[I?c=Y4SO24UP95/;O
7(;BKMc:XMIQddS0_@>B=EKEX>c8MR56d:CL0^e(af/<//\ANQIE2X[af&_A].W@
2EGK8-:HNPN2H;aXT(+4;:U[/KGC#=,X](AG3dS]Q7LT&SL]DQ-g?VC;?Y2>SS)]
:[;Ia)2=4Sc(24UPc/W<O,d3a)VM@6NKPMF=B<1EeLf^:SaUZ6^&#?->6SN9@aWA
B,&c;KeHC;4.]eWFE@-NQ@LbK41cbY4A;U4U\4\O:]EN57FM1U5He<GCfQ4MeXS_
\c0^7)?:]LSX^NEFAD-3&N;K1L&4#/HY]#_B0/ObAQ03)L#G0XZ]1,;Y?.>0g^/Z
S1BHR1fc3(_168AfD7B;W=HORU[KEb-33Ze1W;)UeRB)G<:.#-(EPV2>&JQ6OcXV
d&NSPNJZ\B&f3NFg8cW.T3WK#[+MJCJQI5JD&:3H:LD#A/\K#=CEc)]JP9:3?>SS
38MdBLeLD<T#BT@<&9)NAU,gVdA]DP<.MM&8AI1a-B6NRQ[H2,WP44D&=Sa42+9<
Q\42^&@F?77:/^BCB?:Q933gPP6+0aFXgOA5,&>1SBcbPS(f>IS;,JRb5,a21H@4
)H5a:@Q5/9.T7Ud\1B^NJ,1aGaJ^b4UW6[?T^@XUGY4:).82gO=cHc=11JLSgR/^
@7J.U-5N]IP1PEHeL9@]RVd>d;/I;JS?IPYSb3XF-gge1M:@-/2fLAQgC8Z/;S4#
ER)f?X+&#43VR.Y^21W<ASZT)KD5IP@A?O6d_A^_1b-?e,KAaWW_=@UYbE:bM<K?
V?W.G3aJU8>QZe#aA.dS.-1ZKOA\L3eO-g)U9V1IJG@</>_EXdcQ-N7F4:LXLNId
f+<GO;/G:\S2C;P0:eRPD8>fK4GN&53H6MODC;K6H)#7H7LbC\LKTL19K66)adZQ
4_:geS>N&GM_db./W[S5T>+3A8/&eH\XCTK1GAKY7@-Z(L,GL65Q;.S&(:1H8(G^
,PU8RRHF,.LT;.D02-e.)SaP:\K6WUef<78W\.N#339E9<eN,+a<RBZSLRN7\X5#
6J5MCJYAg[CdP3-W1])=:I9Z(K)/0#PReL4L=--0@)UeG8H/M^f^3@d)44B[H(-7
[2?U#gVW>+=H;]e55KUJ&K6YXT[&K1S/9KP>B3,T#<4e.U<#7_ZL+2Rd0JX;+e,\
<^cBfRYb]]A^Q_D+\aFB4JR1X1=)MSQV/(Mc]WE@HX8EH&)0G=,VCFA<K#(f]FXW
L^4XRUH856:L(L)<Ng],Y:EAb;fC4A)@043;)9gQATO19U:H6d,0=^Xc8,(2UE/K
G2S9/6Sd2SY/=J^N,L;^XcdOSI:g]Lg,+F+eHZ3-[V26VBE1d72cHAe7@dC\-Q6,
0Eb>.39@1P\dgAO/(X;+d@1-+>gbEXeI/_Pb@ITLO/MZSLQS-T&^d5=^W):3=eI]
;b<\TgW^P2AC4bMfWUVALZ>RH-M#QXMfaL+6+8B.,_U[Z@+LOP[ObM8cQ(RRQ6SP
d#R1)C5S,(fAd?T2/[W_J8)3[B:8P\5f\KJ<?&P<Oc^\X#0eOT4K26K<HfU-4fTC
5P]H=U1TaJ4<SVK1038C[V[C4F^]^=Q:9,0LP9]I#&A2gSIA74B5\#,4bJJ]UC82
53gL5Q._-JJ@NOdfaV.6S#=fUgCP-S2.ZZJYVbR=IYO4c_^9848D=&.#5X^H3<=V
G:UMee@>E9K?,MCPaSL=X2SM0Z_S;Ta&,1N)\S^11]B2;[5g[3#.#VKOfL4B@bCc
]D1,]YfF?^Y9?FI_>cg_Z5Ae2?a=)Uc9:\XIXa>257W>4S.aKSggII42JcYBWPDV
^7f3dOIgNd.AC5A;NP]E(1f@LeBZK6TNZKaD\\d.27+C09R<EHJ,>;a.BO]FL(TH
VfTB;OPe>\N(aO(V[dFQSTI-H4@CR<4-[.@Oa1YWRDDdWYO2HMG@V1+R6feU2TXa
ceWS3)X.A,aa5V,Z6PJ,[EN+^DCT>dWdVDK<a==:I(\I7HF23XZf.PLPD60XLY:W
/:^BGGSfB+eO.@<RCW@F4.N:0V1FPZE,/DCZ_d:,-CbUc?\#J+\^Z9:aE@34f5I\
bOPc1/HX;?&UWT#A>@bG#eM<6/2g>Pae9eV0b<0IM9d&.g.++4XR(Sc6TM3_#W-<
O\CS<C;K64;FX[8\1f=3)]HG\1aF&+9(62X]CcOeD^aP7O@bO.<[/D[eP)<3M9]7
(:,07bV:^<I:--)a#I#4CO;>#Zf&G/SMVO3Q=T/[G8_YI(R7:Q8+A(W^AURDcbUB
[(/(+ORPD.dS?U4S3=];I\=RGRJE(>CM?4\DbVL1V]8CSKHM6@1TSB_E]N<CgAgR
WH6aaZR?&-WXSO;7]g]UG]9H?d/V8XOW6S6eN0b^,BL../Z)IaL.>X)@f4=DG.@9
F:Gb>fH0TV4(c-OdSH9JK@b,ADZc0WL?MDcWR;JI=NVI3Bg&0J#K4MM,O?TN-Fd3
M&3R;3B=OOL@#&7KbUGBW29[B@O=97NWa\AISQFbMe)Yg5a7+:I4^,7R\;gHacG_
]]W(Fg41(6f;ES3(5N\-]_X3CR-Bc6I>f[:4Q32#:L2HQ,KZ^-#\c_)K:M1Z\36I
H&WaP-5SC-e>VJ(W&S?U<-5Db9P1KM2X0-?B;fU/SAeWU/>>^HJd3:]dM5bT&PTI
:3]bf>DLb_Q,&NDQ0We4X>HW#0&?ga;[B=@ED_\\9cA4d1Z=SR.^:G_RWOa6)Z1J
W@A4MZ3B;2KX>]9.])7\ZC,D1&Q(Cff03^gIb=Jb7MM.0EPe7Qf@J^G\@H=<B8PG
6,95FK;X2MGN7&8@]^6f7=M1Y.W0E]&1_+.1-&bE44YK5D.^TOFP.2e@EaSTQ8J1
Td\V-X.<<I)7J(DAC#(\90N,b2XQQ=N([+U7^1F)VcJ-6=2X^Oe[5)&EaR]2Y^9C
e8g)S62;)=>c+aTRfYIKVYV8dQc#fEL/b_-Y(Z+7#a@fCX3V5:X^cUN>@[Z5#6cI
&9.L.9#E4?2?F6(<T188R1H=F1-N5=T?ZZT:EIfd)RPH.O_4e8WY#fK:8G^P7bMH
Z4EeQ]A9>XSG--#7gHN.?94fTH]T65_J7_d]5a,.Q,ETUO?4[d:)J5<)?C@KUP/8
R6I=333;AXb.(7HHG.+fQ89L^;Y?Y^N#H/Ba<SC@\ZK]7bPW=VW06Fa=S+)-Yd&Y
g5gX-IYbL3V6OT0K9ONJb#IT(e6/[J_9bCM<;S/[./0dfVQG:7Z;0<b>Z@GM8.HK
XIR=(Ed(XTA2.?SOEc6CScABCO7\G&3g4^8F0QJcbYX_J46TGT(ac\_):[:3DRHJ
Ad7.<2NLLWAOFZ35PYT<;6VZD_64(SPS6\G)D5^WR]/+.]VCUHZ5(_b0&]/;;=1b
5DY?1CO#/>AC)D3XF5A[QS11Y27;TCZ3I;gG_N+WeYQ<2O7FBZ#WG@8eVEK?HSXa
31Y[><U3J_O>\&U-fT^&3JDZ@LU3a]&P)bB#\d[=;:(;2E)gdGE.LJ=1S,HSN4_S
KWS5a8_>S2=6F_,(FZ_=J+cFL(SA-LaW)U6[/8SWRbKU9X0[#Z&V;J8OD//(?@1B
1#9##M0_e\);SJ_9;)d]0c_;\G=_aTbb8)bPSPf<03K9cOS:CQ.DF+L--TE4K7RR
]/OI-R?GJ<8.Q88^?D]fJ#U-[7UR#3,(C;&T5#E6+-c]1DIe)dNO,V0/I76LDPHB
S>d1D-1ebe7EEYL8=N)cF=3TL21U5U/&W5?>RD?6K[aGd.^#E>C6Q=L>PLAgR/\A
TdGaSTK)PR]S5W-6@76C3DK9J+UL9YS0+=P7C49CcYVaFBRX(>YGA5fHP578YXD&
5fK&L8U622-)?6&.X@I]A_-V-9^QU(5GICKCa;B).-W+Z/EIW7@K^^6I><LR6gFQ
59d,XfHgP+DMf>fV(3a8cS\LX30:)#?3N\E-KFF?MDCS_53RbXP\EBOZB?DTAV\:
Sc;,NMRZ?b5=\;E>e17=,D;C/.TI3:ScE:->F<3+:F3H1IL&EI0e?F-d^^A;Q8LP
)-7d?(=[<[b_;#GMW4ZW-),K]S.O--H8)41>HA8<bD\gSH)^B\#&]Le<WAV.5e+;
dfL_7/_A7Xe^cXF,9)[_gH^4+]QQT,3b2c>:81(TP;e+04[AIDO28WH>51[4<(>R
^7-\L^@[:8WHE6+8=RO=1,<L0U0X@L7N;\PG;gYNb9\L;.X=V-3a;XQE2d7)VQN2
;T,eH:A?]I=S6L/RXZbODV[d^PL]7?I](?I5RUOWffeP]YHg&LYeXOa9]L?Wd)0[
&A9#f^N31TG0E2@eTX.?BeHB.H+6,e==BICcfWSMO5TE/T7Z3A&6J>b\];f8a5#-
SaTd16LV(1^M#aY]bL+C40eY.E_dJIU]N1ZI1OD_O?W_2B8=QHQ<aK?RE31NeV^P
DM;HX/c7VF+]2)0[<&D]89/Z?^C]3?^>ZV1C1a,Wa+WC#E^F;E^ScO8(XIJUPbDJ
f:.:Hf=RO=.]d:DJc<e97V:SJYK&14QT8048__NAT0+fB54Y&FE,X>@eZbIGgC]g
#->e(:]f6\<9(H]]LI]+M)a1bC@<3g#;DAZN_<QGM>;<LOIcAKBC(=Y0P+MPC:32
ReF[1FH\#N8@+&.I,?Fc[bU+Gd1J1GX20dA\E?536HI6P9D/9RIT/_T<5B7Jb:DL
LO5(U>)7I[-VGL<aWI_76^Q-E<cbc?L#<f[D++Q1da+)7c4Pd+NW;8aaWCV8G+Q8
]E^Fd-_0]Fc2>BMS@.@7fY07K79#\/W=6H<@S/bI2=a2=QWXUX][RaA_W,@Ze[Ua
@H8B>_S1<Y[Y79WC7W9-V0_RLP\>3NXbS)]^2;@@,2R=S[-J5GE)\K+^PLIU+[.P
8N]b0L8C.R->X-)WV41DYM(CfUgD2=]M]=V,O9H\CL8TUT>6)SH]WWD9)[PDE>3^
RF&GedQ^ZHE<-?4Ng@PVR#Udd\MW7B4T:ZP],deS^/^A6eE]?&W<\=cZZ_=-f]0D
<[Ob<.EG]@Q4fc>MMGb)gV&?-;RS&FOHccMY+cY3?E5@Y;;00__bdUMVBXV7+ZH>
Q?5Z/@87K?]2,Q?GH;[WWAaHeJK_E]SEUgd->A^agA@GWHFHd^0WC,:-Ga5c/-LT
-?#7B2=TRW]e#T5<IF8WFaW:_b_M\gEG?Z]5ac&(T[Q<0[1PXc,Bb/CUYga7#FTX
=+V<:,CQ1LZOH;PDEG;@RFI.X?J[1GW1:L?.6K.IB.?.2e5)J3]-4J&b&1.<KR]?
L^.SCS-e.L=dQZ5;=Oa>CMb1Y)XI0fMEQQ^>=C3<PFd@E5HB;.XT+@==<T>I)EU@
\-\I4K=^X@^15,MI-#EU@f3?-RaG<4T:P\TAaA:/Gf^5NXP8:V,1VQf&I:@1g+H=
>PG0--/)3P=YD/43K5DP5V4U(BCH0/W_AE:MSe<d4_?f#9eG3=7NP-RCJd>4T1O,
)f5:9(R#XU(A^RVQ\bdY5391O#aIP5bO(AZ&<.?>)0eZ7+6:Y77U,?GF4&CLe]S_
BS_MQS,E(gc=VIbY3a[7@^)EN:M+]S#b@&QA/X+6Bf-97fD9>\EEBdA>CD330>cc
VGKF6:DE^28KgAALOdeXfTA3AeOR._.FZH(-3L\#?NQ<3Sg>/A??<^7Z2(&KZE.N
J>BLgV4e1H;_<cMD>g/_15Fd9OH7)\J..AFe62#e;Wf^K[Ka_IE=a,&>ZG8V86,3
/#?H]9P[9Qa[[DC+Qfg1[/DHL\(YDUOe88BdfK<F00Q))B.J-?Z8/A3D:S3#QNS^
DVJ(T29:K(CSUFcOF2gV&+7LHB5\3A09g<=AcL2Z/S5,/X03fLDL1L[^4,/M7)Ve
+BE>8<Ed/84[_[N;6XX]A-2<g;ZK?E=/U7#W(7.;2LZ5Y15M^OdT,H\]-)]&>f:M
f/6_<0LH?9VeMHTLM7A^2Z=<5L<_/8eUW3NMZ.1WKF\?Gf2N6c+A94?XWT@H5SNM
4g+)S1EJccU(IBJ6.b<G0L6IMMQQJ9Z_4AR;ACO3&P@bXY=_VeR/&/X-S?NgCHYF
89@SSc2QRC3C:?Z4NBJ=Ac4168;fKXgDZOD,1@G8E\1,K:H3#OcTSAA32:W0=-J\
X^=PSaU_L+=BaYINNU^.f(?9g@,MKSVX<)RbcS7PMHOK/8WZRC)C;^JBbfWH#3cZ
A,2ZSL)]L=DbJ1gMcE)3OZ1[\+CZDK4NPeS7)/:N5cHQbcaV/PJ#I0;SZ^8Y1NB[
@+GJQQO-5;c\9?>@UI=N/AH^R^d#J85F]CRP_QY[7E;a9W,V#W4EH(c+KOL5GAA-
a^K++-RR#T;M92<;-0\EF.?Z>>5URRNG3U(g<AKV54aV=UUWHJB<8EB(YBQ[Z;/8
9^;T#?EfLLXVA[Y1H>@0eXU=g.Z^[,:I6KZUg=L1dbQA)HTd?Pg\D186MRd;5[0G
<3?UU[daN9OaK5=dAXRFd2JLEPFY(?@-2L@\d_@(:4<aSa[O]c+TB0^W-a+ZN-5N
C:,D4,3W6=Zc6T>5N&F7H#)H]1ec0.D]>SHZC+KSWKc@MV(QIe=/W_IVXNHV/_:5
f-JLLU0Y@<_2c:5+XM#>WBc3J^-=F0.aV5@)c(2P09KfQ5AW:@,3Y7d-BJ&7<7\F
)bbJ8/EaMY&W\#]BE8e&VQ@#KYFS]&TadKT9>d]&W04)U4P\?O;PTb7f@J>=[=4c
94^U0ZbT:S-d-5d/_<@-3QM@ZPU4]>(?EX.]65V5B10_RcSY;?@XECIb;c3ASTgU
54.8UC=8JY._e]MPSU=9)/IfPFKH?Y]2XU#Q[_X3IB>QBABVZ/V#>d47?DJZO_FW
R<_VN?6LZ^.+])Y/4KFN9JdbA\c9N6V+&Tc26;_BeB(];V^\EQ38WMBeEB)_\9d\
.2J\7_O@1EDc)F)RM7+^Qa0LOJ\-&P\+P,)b0MQX/F:W-:K.5#94/:#BQFHL--NG
#cbELC+/>J=IUc4_@HP@3_J@)GObU.5EGMX<E69=/BL5Fb8S24gb;Uf-c_P<:KV+
gNO&]+8>GM>C)0B\-=d_6)1BJ[_PdR8f?M\6)5M/CVRI_5P_4KA4aR:+3#^.)I(\
&\^aW:e8]bLAD-_bEH(LH7#4/Ag@54Z>NcW5<W-MLLEHb^.8SU-0AD2HS,FNf:6;
#eK/gLZ+XL55^8Y3-45/9A],1T8;+H\#NH4UY=Z[Y(5Q)KUG7?P?W:SEDeRW)KWJ
b8[1PSR;LWQCS+>2c@+8?d&fJcLPF&K2N6/Y#N-@X_9UDJ:WIW+/.U5=QS+I,bIA
&G55GJO>0X))D^SEfI24J<#29T9CX/fV.(B;^]UA,_-,,c7)&&W^_d@g?NA.^Dd)
8+O4Q1_<0IA0S1Q-90[Xc<AA.S:06cV7O1CP=>,Me:HKPaV,fR064]f[-#84bcN0
)K>b3+bZGePeM\KBfI0=C]OfXV+7/_DMSLEAS=[DJ-&_(9Y.K@aU->QUF-7Z6AXQ
,NAg-7QGL)5R<+B>;/Cd?[e-4#Bf46.HN\Z2X6R4]>KY)8-3:T3E-e>2<;,&[VdU
F;JWe2[g[4SZ/-B]ND:__HVEL>&ZGD3ENAG-BTF;)+E=c-SH(gE]AX[WI_2A+J[O
f\+)L^G>fAG+AIZ.8H??6Q#2eW&[3M_A_9+R#G9:7f]PT5(I68ce_.<H/a]S:@6S
2WMN5U3eL;YMS8+fec)+2_[HHbV(+GW1g]#5ZMC#Le-51beC#A?040VEIO19>:OF
29XLP[8L<K=Z5,e;R2GNSFZ\W,1/WaV8,[f7F\)/T3EZQDA34I9=ccN47/e[f+D;
Qc]A0EY80P304>J&b&6F<M\:e_&WL;cLH^<H;_O(&FfRH^/3R3+TQ347fP]Q]U1g
-7JK&=NaL&)<I;XK5=<bEOK+a.,b\7F)a/E,6[<7F._;G:PXacH)2TQ7&^@7[CL(
FAU(YMY@9N-FL<9TV2c#)8R?>#WWS/[A9)CX;+GD(=E?UabW3F\:]33,-/0e5]<C
UHV/?GN)7cCRUa(3,d3YWM<;:FQ[1[6^LZK3-R@?]]#>U1J+SSRNH1bB3g5&?M45
:/P6[]<M9_a+)I:H+>+L;-+NN[#CQfL>5U+G^eZIBf7GE&TA+,NW/:)K)HX<8c&Z
65V-^V&c=f^ec.35.V:2>^RVT^WbC]W5M0CcX;Lcb.^>LTB=OR:a1]S84\0b0][a
=JI2IZd,^R.APg?.FadfL=f6JP+Cg(^WUbc&>(AFC@SaKQNc4LUPR:WHW.7(:^\8
0Z,W(.-c)2)E)fK#IXF6S;V.M.6>dWB4efP2,_L8=(eI[eCfZeLUV0=K_+\Y(8C:
P&3?BPT-.K)Vd2f#;ef8EgKKaF0He?#FQ8S-#DKL7;E]#fg]fU(:N8b\]eJacD:R
b<^-#]f97W>K7Kf5VgfcBU#D=9U4QXA72Q:/GeV/7?7KeJP>C2Z.8X@WaVXd(ER<
I^<,B;Z--e_(RX[f>U:)>88BAMS-<KS94KNPJUPRI@0RTHBLfWXEZ-W0Q4SZ#R<C
KcgU,,0V:-_\.VQ3d9FOe1PK>KP^SFg=[Z6YNge[GYI)U1QBS#Oa&A_6SOMY7BC\
2F(+f#T8QP)0eSWI_YRFd<0?,(^f:9Y@bKM6N0G2eN.6eXAD]_MXaW1LaCZ.&^Ud
Pf9KI;H^W&\ZL-P.><e3Pe<c8?f?^]Wd[ARUd\)E7LM[Q#H]:0aLQ3Z<3YGfg;(;
Pe&N=F=O3f2g03gbGEDge(6\([N?,,PG@IL97N&9N5LNVeR3SD:6V^/^K7Y8bV83
cY<Y\?g-:ZLJOR>=,6a9T:g6a<3cb:5Ub80CWJ/JC+fJ/V&Y[.ESXJBa02J6cB/Y
/f5/&a@H@&U2]\(O9P0DF7MPKV=_,HgI->K[3Tf>CSfL[9F>ZWA\)I#&4ca?4Z&=
L>eGEFT-P9&G7,;IN^W)B;=<EJI(Va0VZFP7B^V/KGYLX=JSDI;=AaLcR8VE/Xed
UY=g@[X(6/<8TfFcYO.#+RYQU5AfIEKCTL,4^@-W+F7f#g_SF[cc6CPMFF#ZLCI<
#UDA=W_cZFLVbg&6&-KRH/QgZ;XQGBb3Z\F-C?06YCFZIWYRIZG:K(M>f0bTdg?5
8+8,EB&?b1ZO7?+/)-T42)7+U@=TXU(bBHMK+B/N0<)XRD49-0-[+;D-5:;.YSAQ
cV]]=;H9\4Z@24]V,ITS8gUTS[T<V?O:TDTXR02Ge_S-VD)&f7SIXVDE?FP-4;QL
W),9^QXCd.[_\G)V?:;?FDA\>/#:65DM)e5F[Z7,UJ@_Q\d0V6eeS+HVBHV.8e=6
]eQ13MQQ:E7D9d>6@F,5+@M@YQ/.OA>b^LP4IBN<659MNN;NXLEbJ>-&(Z\G]e_C
6I43[<0-6?-6:>C.A,?50V8(a=?M9G._))^5TgWb:X4B+e6OU2>#H4U#AQ7@Ndbb
9==JC;_[A7;89C2C=X.]@Z4U)RG5(Q[+<IU.#cG@/3?)_fJ6Pb0M4W=15KLBA\;F
Y<(#/)D:;:I,YF2K7cWc;7A[]XV0HFZ+RG^b&L(<1)Y?Id7[/#gae:3(X324Q5f9
;8,T_+NND:,Z-HI3EPcA&cY^CVCA)?WDI<gUA)R>3N01X^,,/_&e1#/4Dd(LLDP=
IZPEabP>YHIG+6f^2Ye7N\@RUJ;c6d_aJCdA/D:KJ8T\PD0BHXbIA..__4NN#:\?
<FbAf-]=I;DQB7fXHHE>7->:JTcbJV0B2#-((:Y@[fC;2/2eHM:UID6dQP;@GPO(
J:^VOPA^[T=)_]5/L(;#Y#PE^U#&g?,Pg2f-9.NF?a?<U+0ff?PO/GRbUc.abD2<
AR^GX.4(A5]B/>b30.FGF2I17?QfY?]5/S1S/36HQ^740_8aEPfF&TW+K?aB.Y>M
C1QT2I5DM=6^BO1WCEF6b4P]OB3YHIE&e=5WR>c6>P=dc62V6Z^6J#cT/eK+7\GQ
BKL6.(,(EgSTf57a[H4HVfY?Z=dYIaN-&]e5G:@=7L[KbY?_gR:RAVT))I;:^Y94
VOJ==;MYM.-X@PS_J9d_4Z9CC(G<@:K9QJYU@+&YPVC>K[T.#@3#&PGSC.?g\g_5
7TJ-AO+c/N9e]NV/B>BXK)1SCKg_e0E^7214:Z4QT,244-7)KG4L,e.MWf9\S=8K
]L)Y\WHTFZ&PX8a]23b#Y_7Zdfc,OG1&=U()AeYNKY>#>:aE3,_5SF7-?_.<O?>Q
P_e>^ZcXURB/SfdSg5&c\K&(RJH?3GFeL#KK?0F]Ib/4EZ]2K>TO,:@GP,a19(VP
_a/3gf/8_9M?H<KT@6,ffV@,8DS94I-HaQY7H&+/+d+dO/[+OKPM_,1,8@f/E<#U
=D6:DX;^aGC=B>8#/-CMSUTCE,7:;d/=P>OF+M_J6>&H:^QDPO;)ACK9D(a:1LPd
^O151-dAO97W;=[MR^#<IW::gCDQW^N[W1Tc-^[a5/b)44AK)7S1LFg042#_4ebC
0VE0Z=[M#Z.Q[.:X2P<BT_0QBW>&YR\,&<:W42?DX?Q^QH^Yb75:=R3#./f^>W/_
KH52.?\=]PGe1-O9<ZO;6).TLT4Kd8C4+0JYDK+44PI>SFA2X7[6]5WB?/A8[20A
7I:HU.+D-L[&ZZbb3,M^T-f&^2+6F\H@Y\0LXce6ZW1M2ZHBX&W725,f^YO)A/U8
7X.d,N7[SCa<OBLM67dH=;.-&BK]M[_QO./=;EcS#X59f1\HDB1^7ce;4NO?EXZ&
0d5BSJNgQO.AKA^:ZJ-4U+O1<(DWMAe0_2J3^f/4Z>9YD8e)fC;b/b\(J&A>La5,
UKJY]M9W^-EI]XB>).^F;:ASO&T6.WOCG<T1gQ1abPME20I/5[R@Z5YS)[cXX0Tg
g8]&FMY,eKKT22;O-;.L/0,Jg3T29Y[(/?>aOXW&\C-FO+X=09L14@G<R_\8Q]XV
a62>QEC\=FNV-Sgf10S_?^d3V)LFL2XKH510HZ[Y>S>TJ1Z4f6E;41N;g8G.Wf6F
.K.SBe0EX)PQVR7C63M&e-D@T/Q>&S4Ua.S>B2aZf]ZV+E@&-HD9P5BN(-U/7Xb.
54^J+Ef.PgA@P32D6JZZ0+BI..NJ^1W5O:CX3^247QR8Y>QUSWOQ]a].2f4?MBX=
VKPT1N]:IN6TC>50&S7J=;eaF>VKFH]9##/6+T?G+?[dSM#RUUZ6_[[QAgKFJ.]&
FD8ONG@EK1NW]YFBZS7&<6Ke5EQG#Feb__:57)95O6P].?6]G[;Q1V7^&4f@6)Lg
_(,8<.]Ig3O3-bSbU)>)4\Y#Ag&+D0HLf@,8SE2A@Ob)W8&=]>/@9A]2\:Sc8aCG
e_#727=)+=QFNC1[.(<C>2dO\5YgUb4c/F-186fHOP&BdTLU8EB6G8;:E[gff5NG
0H+T_USUOdf22HcRQI/IU7aV2FK@51+DR-0F5OOTB4R>R=fF@2_b8,GU0,ZCdF62
1c+HH(f>\ZHDMXU7.@:IZ&67/0JKOXA.1<J(YCgX18f^WXfcH7RB3334H^7UXaL0
;e35;W-/HK((^^EG2BT9_?ebLE^a9:<,0HeBF2:W)<4/N0_)B_AD))c3UKH\YN9a
L=L<WNYU,8K@]_)IEO/d7Z1C#(<375/M:(=E(PFA?E&P/^>&R]@&4efD[I2ETKI6
Q70.bW>D5gd2K8ZZ)+a0g-]6.a/ILXMX2,&1a[Rc#7X^Ke#0AUGY>BJ1H[e^BQ:+
3gBXY]<e=ZQ&J,&1V#K#?0]]I>g3e1Ee?FZLIB3/@6e;^C0Z;4=fW.:Ba.g-A16:
4S[(,K)Z?U)d>5Of;I?T[T921-S59F,57fG2&SZdEDSE&[IZ3T>RcHe6=?:@fKg)
Uf&e53Z711Wg68ZHGLIYZ<,=de>0YAK#Z&^I><4?fKE@R8L3)-b&HRf;NSaCBdG@
+G&(/G&:C:;g/O&f#Yc.Ld-HP4\/e<8>b\2R[YU?\=XafZE,@KWg:3eOYYX)Z&]Q
.[)H4RLF83H;+gQ/,D.F(O4IW,Pb1P&bSNJROVgf#R2Z,]<G#V7ES^gbaG^VH)Rb
1IMLC^aPd^?00KaQZ]L7[=W]R+fSS\1NG)6dE>f\^ZLLC<Q91SPgA;>?[-L?_X#0
d;K1YA(\SA^RJ2[<T=L?Vgf,:bNE&e8&YfZD</I9==XM^C,:V\&QgJA.:E=I8I3?
4CP#2R.,)F2[(/bZ68J\E2PH:&1a#.=I]UOe#5ecC=4D)5;L\2gLJT-bb;+>&GXT
d4_<\M:I,Q0_G=cD4-Z+1L4IPe4,cQP9d;G8,e-&AgC<),LTS07>EL\[X]7J;92/
/(\D,2[TN\-IZBA=NP1;G5_JU4DIKfQL4Ida#)03MNX@I,3\]eT&a@]D27KR]Z7E
0O-<Q>f1?aCZ;AYLXddfZe&<&C<Jg@VK(XDX3bH_HB<,AY6a<^D3(+Zd0O_)5gAZ
]4&DMB/,E7M+CW)]36-D&5IXHg==QE4e\5,0X5NOT.-ZQ?86D67g98d\&^&a->C:
SAWaOe\H\H.)B,PbR&HBR&e<Z3)Xe4QEK&JG;HDM@3fUKPJ6VO:,Kc6eHT>.,HGC
:cWO)+S,P6?-:UUCB.\e-5>cM];LV0E(/&<93<)^dSd4fXVH3GA71e\YK-Y,)5GE
E+DBE<C\1YEdfGaL;fD-ZO+-@UH5M[gXfU^K-.,Z)deAg5Y#HUG\1PAT<3_V)<dR
@b#?QTMRg/C7^\f5a),U[89H=09@SFF7(;/I2DP<H+Od1bOVC7@O&KRH<,;:0B#K
?aDH2Z/T?5d^5=&26BAR^N]:9=_3P00@YN=P^=B&aOb77YU<W,+b(UOJ2P58N[SC
<P9O0:Sg-IEFWY.6VRDEbGB9]b[M;@X_-#F#MN>/)G7DF-N<8[H.g1DaQUNVaa</
)-?\C<=gXbeJg\9YQ^EW?7K7^+F;:U1(;ge04(TG:7U]F\X(DZ-9:gcEQ2K3BY30
bc4e#-K>=-[\@<M#[:D0\(6G\ZfEIDJZcT8DYd&)<FVRWFDMS1>NM\>b0L84OF2M
:#<_c#1-5Jgb7N9^\]XA0e[eZJ_^)AGW3E=JYPK+N8+U<bF,YS(@@76:Pf[NQbgX
\CeA0VFL(K#OSI/-2<1WgefI]3eLIAfZ8\P:K:WfIFdQ@E4YG\d;.8-W31e=-(ON
[HVOEC>a/(PD=<FY]cB;=C^O^[4JT23,Q;(/LeH50;Jfc/Y./7dP^BD,gN<1fK=X
290f/YTDEd+A:]BB9c(TB[?O@TWPE=Fgbf^89c[O#@QdEe9VB^@QQ.U72:a+R[[6
g>F\_eR&OFeM>01&-7gC;VVL7J_9Zf3V\-G(,+)-@KEO7/-5Yb/ePW_9\F]Z2(]9
I_Sf#FQ4LL6G3ReFU+LQeW(2<a#;Mb/;-/Qc)538U51+-3U57EN?<1I^R2>X_fVe
bGT5?H.61@C5#NgdYa\gU(JVFWeN1&#5dX\QM@EVCDDOg\\7Z_+8]2V3HR<;Q]IO
c#_.(bg/[1N2C8J6-Z?Te#+D=-G&#+bVdVa5_T,:WDa8EV,Tg=)]Ge<SFBCf.COG
NbJbZTQ?E3-D>,>PAJ5ZZ>aB3X;>#>VA-OWe;.\.^G8&X]3Z2?97VF4>P.&NL->6
Rd-SgK,QbN]IU)0ST&SE8<\<0H5WWd]GFY>S9PP4JQ9#KQ^.?aa9/\GgZ&Hgg7>8
P)4=V6Z43IDLNY&T14L9fT;fU54:E?CVV/9P6<TH-\EK<8HCO8UEZcWT>a9KCTK-
J2=Vg;#[b/8LIGF)dP4=#U[77gfA:YNKGcN\M#PO^>6+M^I8b;17S#/?PLde0._P
P>Q:bQd>e0:2fB[T(L;:b3^3W<,Y0#HBT.bJD]^5>2cNW2EYC>T2QC#Y+J9Le?S]
&(1,bF>]b62?K^KPJ)?V,>&3UXI0IU\6N.9\CKPb6_P.T1/Wb+)3O(OgM+^N\F=<
+VCcL-F4#IaPU#:M&3fR;-G]N<32I:T6b.T/;C&T(7IG53GO4D7F^X.V^eF0SWB9
-e1U+_E)M^P06:2I<RPFMFJ5<2]Ddce&D+8I466[.>=0B9EO8ESCU5fbJ11J\6(P
]I,8_L3FWKL-GQY+NZR[@8;^-6&P8J2f,)OFAUK0N87f2[V_0U7cL(D:AML,CAMK
\0JGa\ecIN[,_>RBX7Q@eB;6TYHZ9[<[BZ>[==732?+CLJ-\?]PRQ.PORB\ZDZ@=
5H:,=d&AcE-->(DS6ZDFgS2M?.IB>RN07+OK3.11K<E69?Q@:G^7\VL0(d]V#gY9
U0I^793YEG3Y4G^[GZJ-Y4H/_PYV8X&+@<-AMIO[eRcc\0B5&b:bd3e]P@R7YL=8
fDe]M0=T+H<T.#L9JSU6)_F>^g8SV)IVH[\18\8eKMOV3G)e(VT</Ta9GR2g31Y3
/b#Q7P)I0)@PQA?ERJENYT&7^.HWJ<.)IP9^_@7\JJa:7+?CKFB2G]aK.48[OCOb
PSV5;S02cPKI.);D>d+/_Xfd_Y#C9P</65(4K]e1=<S53:Eb_-G8EfKcZDPcfg?=
LfIM+427\\GF6;(RXc&K+U7@dVSSNZ>VeB<)T_aS]O_/KM[R>M67]5YBI3dEO^E4
ZJ>&>#,ATUYf\6@B)?e6.J]Q@+?:HI9RQ\Yg8)-@RRUc04JIXUK@1B(YOPJ#U=]b
<U:>fa^Ye=>74bK(1e-G2MP.)25B3=5:/Ec,,Qg=,e],UGHe@g;-?f]493<?F\-&
2-,UT+2I0c>5c1T>5XH_:2dKf]B?-MU=30^R.gE:KeBf3I+]W<.T6[>P?bTd^<cK
FSIV.Wa;OY157(J.I.(7/P]U2NX=_2f9SGU8g.-,<-\JHOCJ/+8G=I=XVC6/+0CJ
@^U?[NA.=-K_V5S]99>IgQ?eWGZ+_,H8C0CO>ba8PB1,8=STN/IYE7JYM,D@=1<S
CeFW1YXW\>:>>-g9)@BA,G6X4Agc4]+=_]4AZ,GOCAJ+8GN29<TFR#dV[R\@].5?
L0DV,;W3==X91c\,aV&UP)/AF38](Mc?DcE6;WBPMd5,3_M\S7de8VP-6]U7;AMe
N?Q,dW,SO[?SXUS4=JDG3Bg&D6YCVTL]^;O)Y^=B-FCKE)=15N4eOFJ\<XYI3edP
E)gD.:>=EV_T:9.ga9D:P-AeEP1<)BQ1SLU9YUcfbOW_K]3(Mf\<dS63MdZ<_KVb
2#YHC>0_HKA>Pc_KLCQ?b8+8.[VC6N^KKPNIgKAM,T@Z1P-?CY&5g)5QJV5QA)[;
J7OKeC[b86IWENV3fg26V>F8R<L8Z5JIU)a0._]3[PK77b3EWK#0H2?dH-^VfF08
N0[:>NB40,==TK=K3Y?UJ)=b&796>eXdU_>9/;,W[S#F>ZG@1KE7/]BODa-<a\M0
SE[,V\<,06AH@/B2bKVXS8Hb3F80\KY&[)8--BT>+AVS[W\gSU&?c>Md4@JWdZUS
_+ZC^e;3b[D>g+<UHL\)R7V;9dD^;;X[gC8(:@]_dRVAHV3cQW\_3G1+D+&7>V>K
54W0D2?J9^cBF,4\K><?#-Af.7.VGR@=aaUI0+DE)cb2&5Q5:JDU1WgY<Y5<:;U3
)9(W,<ZOg_;I?Q6+B5@Y39]@L0A<HeEXJ;,E./;.ZL<SPA7)_Wc:R9TE-e/VMLF+
K@fA@V3_9?)G6Ve>&dcU:SK.,Y5,)KdSV,1:\5LQ\TJ6S:b_+39\7WU2>1+ONWA1
f#3/[ON<4<S)Fa,g@B<:DMg[Xf(CZY(OgYDBF1++dM,,8GTbe-(^0-M2H.,8T2B7
QcHTc(d04&E<&.;:SI[@LH5a,(^;c<L_L0CPUBaPQE=1-LZ2+:QL^8PWM<Ccc-eX
-bUNGFW\I7<8+XTW4fd,#^E3D^Gd/,[.0,CE(EcaC):+9DQ\0\G>X5@2HKIbFKP8
PVGCM/CB0NI7N5a,E_:ZSb?e<G5X_:&),5:a(C9KLQZIV(P+2L9:3(M\EM>,Q\VK
@7MNJQ[8GZb0])BPX>\,De2)/G<>J1ML#,..01d>=M,a5;.gf\F2.8KP)61Cd3CO
PM700761KUbL;0>FHVT6L]IO_bBR]d_@O8fDa9#,H7UKR-Q?=OUVKQD(aUOS>TTf
-06c?V2.,Y08gDFbaIKRcX<TYJ\JVWbL-=-24DbBWW=f(<V5g>SPS(N.Kb;aZRDG
5V1)J55c>TZ4)_<=]6W_9P]S1gg5JJ-KZ@Q)d68C9S-+Nb+YZ]7Ug\3+Q?\MX[;O
0E^cXNB6,MUCNc1=WW(S2Q-:b1^L&dU8H3>IUgZ0N0;Oa]C4LET>@#O/-9YE^\Vb
8WOR/3FO-&fa\PVS1+6UeZC?WY09FW>#:VWUKS\A1CB65+AZZ;HKT0b=2U#IR.3+
OG^R=:W.@&cKJa4:#37;L=4TU=J(40.WggQ^(J/+V1)UHI@:1,&8age)M@W7/4GW
0ad,KF4\6JAL2T:E2/ZFJ\3DHa85#>^dJLW@aA;,E[Id8D0A,<^<][\,5W_GPd^2
DA]&SgAfU1L_P4WeKQ;FUcX9bDEP,6WV1<NJX;U:0(DP^&ZCU>1<L]c6]V1f[9(C
b+;=C3;f[?1dR?)F8Vg#NAFG7e:.T7^HD&>fD#.XZBB<>LgN)EFC:G4<_BdKDdZ#
1bdWe3cMP[3KE8YP/[35LU;\2GCI&-:-8cK([^-_LZ[M.)W#7TP<N[bV0CM+C&A+
.<^1L+c/OfCBH;?_;5\5b)^L/SB?/XZ4<\W9UIXeF;HKePK/J;7a;gG0W7Z<B6XV
C_0g4ZX21(76FZ\2_VG8BNcQ-:_>0,O-,f/4ZVW_]OW?K6XVeKG_A82YB?HUb6eX
8UI5:DWGaRN24SZ2H;3>G<&N3&7g39F#K<1XB1#:4OF:D>+IQ]Z^IH]H:1a5M>,?
4H9N5S^gQ0a=16W..?b-G5Z?cLLaULbfc;Y(f6aI-e[/UdNbB._-1.I?&bOFg6C9
dZ#5:&D+Ac&C\#f^.V1bT0L^T0VDf#O<0K3N_Qa>&@R^_7?G2#g,_fUPGN4M=-OC
9B-@80>+3a\Y,E/f[b_a7^/:?GD+f8)T-<(#W?]a/BMdbPV;UeKa2@(79QVfY/F+
NCg^91)84d7>N41PB7>5=&H&(?0EU\P-)K]3+IRUHKN]-(_>@G<N(57-96,CL5U.
7GKbWSZ:Y3FaS0X)Ca4c)\5NYgY[7+(;^Ba^U8>Y_37IDYPOJ;;4B/L(UX811T]E
ge-IQ5C0\(HAP&#H)/Gg>ZUbBcHUO].I/7ESM59O;.g2C,SG-(^I-NE-C6XcE.QY
F-5g;bKZ_D\P?X&bVgC27<;;#H(TJGcdGbfNcIS47GK5QBGdQGL@O[6/170VTIQ>
J):WaX1O)A580]F<S]-O]eV4\V_dL0]Y;_f0E4.Ig->,fO9;T+<F(E7)P;OR8N><
I1_0B3^#a0eIFZ-fOA@##[KU(<6:N+I@&((=9H]L1@AOH[WH#4+eL/H[16f,ge&.
<?FH79;VH(8F].)d8_Edc(71.0+<NX@SfN5+aQdM#DaN(a0a\[b:3P/.,:T?&.7[
I)L].6R(aDL3RWX\_0_2,gb)690b@^L8#ARQH9<]W8gT4;SQUOUd-c?4\dW=BM89
=UgMa9TZX@WY=\=;-H#CY?>.@&?9,7+.A^I0T)gOK]bP8P9@<@@3^O-WYg_FZQ6@
Z7L0M-,>bJ[R70T>+B,@<K>9_P>8=>AECZdJ>_85_0>#La/-(K,@)]?3T4MJO&>b
(0M_Q6S8(-/Z7P@S/eG&gPScdK8ZI<YP7VEMa#JH_S\8c[fX&Q^X0fC/8XWT:bH2
]?3:CQY<^b8A;[;Y/E53V0XF#CW]QH6/KKaZU7MbAaY>3Bd90<7_,SE69Se,1;)V
F^#+\;9M0:1C=^:C=^^GSgdO6Z;gNdBI4N@ab=N@1f&)[[J(YQ8#4^NJdT<V+U2-
NJ&M]WW]:2O@e11QY>QXHdS2a9Z(9</fe/1120SJfZg,ER+8\-2A.FKU;^YF[LPP
J1S1fNeV&QJ/7U/eH>K?7L(,794dXfXQ-]N#2Q,#-9OGW_WFWK39;^-61+4WHX:c
BNO+W)K.QI4M#6;Qa5?XEJ&6aBRDOD3E72,-e[eeg[HB]LFT-533^F5e)WK[B]7I
#10@3-N\Od)bJKUJAGfQ6\M#f+_GgXQBDDGYE5\HEEQ3]R\a]_U_EBU:;Q=Gf9Z\
:Y8fRNMRO]&5E^9Z18P1+32?)Q8E6,2D3[TUV/QX4EQ69bIEc(#A@71+&:8<8KX<
+gC6=M8<(-@TI0\(?H^g(2B..\[-SMPOa=.e/P,Rd/&@6gPRNGS/44IZWUTU8V32
1B2;GP,N+@f18+\7W.7dB_5[367HQCcP.?BB#P\D/OFEMEg05?0LW)<MRH9QJ2K4
M_NP#+:@.<c;ADPR/[c)1=^4eXJYTeHZ9.5H<<c/-&a>H_^E.JW//&NWSeL)AGfC
=aVU_H=I58(>.bgQCHYU#ST193J,(20886+C,^#OC)H3[bGcXKF+LE)5>2?(Je80
RM-FV=XQVI@:VeII16gI9.3#/FF\2G4JK9gW=^BXc-OgIH.DU)\<Q)g7<00YH,7\
7]dZ8V(+=1.J)OW)TT:U36-38CQ7,AL-GG4+U\BQ@VGV.L)A)fd2b,N>g9gDIG7>
\7,ZQ&8SSYH<JLELJQe/]9ZHQ.c_PeHSOE5C4\MTfIITL@K+MJLK:I./W?FRcK8a
FKL3F[_SZU8TA:SI,IGdaC43&@(E6b\PR/F?>a7JAgCFdL->[UdTTR5#5G\/<R;7
F]1[S=A;1\W1eDX2gBCA@L6HN=.a4Ed+X?Y]\(LXR?G#dH1FOL<M1Q,N5E3GJVJB
9E_#R-G,-4)N.XXYEKGCOE4GU&X\5QHCU6(RM]Ibe94c;<)M33-Z#R1g0Z^N]BAA
VBK^g,WHeV>1Q4Ue6SFY>/.aY@>f2?b+9J[LZJ#:7A565FP.ZOXGI-22TV;(dQY/
[V:GHfTBCP]YQ,U/XJaX)Fd:]NW_/fP<XEL+FBWJbWSgR_,]6^7<:,S)BN3H5EY[
^&8Z-)Q6I64&D4aY9a:JU2:D@OaQGEN4DfDDQVb#0&dTA]:#8X>dGa[DfX??0V>#
2#H<N(NCM_eB#U+4)UE(G7)Va,a(ZEec\2D?XeP@FcMC3?/7d72&4RfNB3<a#B@b
3H9SBS>Y)#WU^4fG)e))dg6aJ2J>@Q[4VgEZ93\DSSLBa45?@_+=ZPC)AWb2C>-B
?29;,Mb=(WcQ9ag>MEC._#0PO-Q^8bQI3VTJ_e8HO=&ggU19Y5;4SAX^06L:N2/9
0)=E5X=[:>(,\IaPg8f0;N[7OD>]c/Na/d4,241)B>(3UNadC[YO^(e4H&2(K_S&
5[X;KC=[?SA5[?N=A94XN?U:d6O[-K(HY?#H@MAN#-&MW[VTa9GQWX)R)F2]X&E3
S2>Ze9?TY<:HRaX2W1#SQC5[H660BQIY3[D;8IgTV4;/9e4e/bVe0L2E4J7X,#++
O,_EM9;cZcW,38Z,.R)PfCDQ02E)S]FbO7T0\8Wc8_1HP.XV8dB&E1]D-;=[Dd<W
>L/V.Q&Y^JTSRCMMCH+E)R.0bGdea&)De^8PRWV>WX6U9aE>de=?K&4#O56<6,U>
=,BGJUITW[IO=g+42_3.0?5DF+RJD8@a:YT=LJSeZ(5:)[D^eJ(D@T;P>Z^QKbAE
?N]6,.)6>>U.6RBL1K6dK17A&I7G6d(0)DE?I:MPQbAI7@65DE\@bZAd9D6RcT,]
1Q:7^31/N@K:Z<BaZM;H+J9(2T<&AB:#a=c)/PW]995D7E4/>=e);>]+>5AUADdM
+>g(O6ScFD2F4.[]:__QB@FH4<MOB3+W(Nb5\34gS,L@d,.<5g=&&.-D,2:ePLN1
K]MM-HC0F[9[DXQ].VDXXc;\C&BLM\K43RgW:a:1/#6M(NSQDP&-Q(TIM7P&A8AU
gG3^(.G?<ANaD&NP96B@aARCN\G8Ve#QVCcHU@Xg]Ob>S[0URC0[^)0.0^0VcAU7
S9gB02&6Z.^/IJ^fPHJD#CQ[+M;4YP,A(X>^PFWZ-2>87SM-c]Z8^PbP]aS\AQU+
\ZOR#&Gd(SK\0RQX/FXd1K8TBg/53#<c4ID82W2=9LJ9A\@.7Tgb#cBV=+]F]Z.O
CB1C:JP44Z]?:O3WF(;RQNf-E+-G](Pfbb,4;0UTL))a&KXU-LN</X4FdHF/_&Sc
+7d/=WZDT&3IWR46[C^H.OBX[ae[P2:W3KIe71Nd?cceR8L8,C9b?b8g,]Of5PdR
4Oc/-ZgMTf;bIH/MeD=B/f(<5+D7NGed>CRbZN-PK7CDH62.Q(A1Pd>g9QaK1X,f
O=^bHM2dU3\FB,#\\\>gR9(HGMKd(Q>7,.@cfZP6\?-U3C.#.-&6g=>YTEC><4=7
(AV))K=PD[DWc9QL-;NWNERB5(\fN5af,CQf8<+U#2Y)R<EAV1>H/]VPB_1/.C1b
WYQ:^984VM4S#>(/J<C(R<M4,X1JfVPH4W&H?S=[Y>FZQCB7=\2NA\d,dO(M4#QC
:G:&:M[=<bgb>/eBJWHW-g#Z-=f9]H7AW_eCY5]bYbf1J1.?DBFP4Cf?M@UF7A-V
?@V6:e+AKS(.]>bd/LSWD:@SWAgVA8EX\\X9YEUJT,a[@O(,XKV&PP9g_&6>3SB(
df+T,Y=\LE(6-GQZO=<DT6b0G6FFLC\f6D_bb\^XP;T?<N+^>AU=-FBI0f0E-W?K
/M5EM-BSSDC82/K<6,Nc[#TR>(#OGa-@YS62;1QZK).V\?)VHJSWBW#(LK;Q4J,4
C+_&9M@71CL^R4YKE#BD.6T/@H=?CF+#8\a]I]8GaI&W;8XOfU</_Bg+LK4E\J7]
#DPSNVU1@)<TP8:<+-/,6N;gde2bHfU8:JP/O;[[4?TKN7)=+]I6Z_5WXdRU,a0e
XgQ)-a6BeA6]T(VbMc^c_Q/g\A]L#)F2O,aRK]NBX1cH_^R.#EWAQ4VNZ/Ua6B,#
8Q.WgI-2/<J?Y^]MX[I[W5fF-;-a/C0fX^U0GY?KM#\fb(?]]&DR<CTSE7Og[+8V
]d\E8^0Z<@2YAGGV+77WQB4YV^D6eYWK;=EUbJB5Afdg]H[X:4bXLJ,]JL>PZeFY
XcX.28P&IZ,YI2G/-9&=SRd6Fg&8#)PC>:;ZfI?faQI@9),)1VKP:,]abfeEEVXW
RdL#I298Wf:L(27RTZ;RY/f3+VP/7OX)V])UWYRR\J?H]K+0Qb>^-&19O4]<K@/V
HPPSKH6LE=&/JPBU^cJMaJ96O,-<b((5+-cW@_]B_YZRJ/1?S^Q/15^BdZ]=URPC
W_b#N0fSQIe(9[>AV5feL#<f4Xde3R&GK.J]>6dd[T>g;)bZ)e27aOCC5/WNPZ6G
UC#5GbDf4,TR1NLRXTNKZ;de[f;[/\&fS&&IAG[/(OW;E>,>J^I:4JL^D1:AF1M#
QK^Z#8B6E3O31Q.W2RN&]c-TQTWXGg;5ZWXCFV87cMfY8dB4JCS/)d=U+)^JRE2R
9TECg5<6D[MB@NE8.5#\\[+(>.UW(FLG:dSD<:8N2Q7?CHTA4XUYRD[:,1/:IL14
7NXId/e:e4UA:?TS9e6)MWR3(7NF;_-NF8ZB@(eU0G-G?fN+e98/Ra.WW42:K&T^
N;=XW:0&F[A)]&7DEaEGSPPCWC2W_\@JCfAI&[ULfD=HD+=\5/N<NFA4H+:R9Q>C
BX#_S.-=>ge(+Q+Gc@6X>QFc@MZWC]AX-e:?_UY(PdgUdH)?/FNO^Y(=#B:=CHIR
13W1_CPOBO)R=XJLP_TgKPU)M-2)6cBZ6U]]]H+DW#Rf+?WW8&=CIQZ^\?-^N3\N
5b(G0Y&@.>IT?4g\<;?f[:g<3LUK2aXGQ4>.<Ge7^A4LH@X\-gfV3?@H99S7gS\M
J<&V/8RY]\BG]D^UP7NWC_:F/10f<dH)4Q+7VJ;)H#.F]@bR27b-4e0bVF25\A)2
KH/?e.3bX[)9HaS:[+Jf0g=C((,VePU8F=Ja>^f_FR<e32Sb9^OG@,4JZ7SXJf?_
EgEcGVYcFU4>2TR.6e<S-H9Q9ITN;-)bOPZ).Q6N)YV,@3<#NRF0IS(NU1/R^a,<
P8Q4M2:#e27[U0EJC/4Ug6K2]]OF-[.&I,5Me/D5)NADR+#dF0LQdeP[\9K4(&M?
d4>(BGd^1,]-L:6IgY:,ec-RNL/.g-AB0X]I,><WTgLR5JdGNXYJ.X4+Q5KVZQCT
^0IeaXX>@,/LPbU\H?TB1&ZI?edR:c?8:SZD@C_48]]&@7Rf8L@,Z(9<BK\5EX+7
7SI3RMg#6acA7OZK\&4YX/Q?<?]]O:1Y55,O_Y2;J5BQIN1;5/BAH3g>H\#4Zc2+
^b9L_I7\430Z#)?(@bQD>UINYL@P2e^LJZXX^GI3R5&PRM#2DXGH0#\Z2L?_C_XV
UAc0W9CY5=GOH?\g#b?5=ZY];>L)1H,N9>)(^K?4B>]RD7^2-D=>W4Td#.0[L_])
Qb4P_;A&IMB<bHUYX-5Q3IQ3G08(]?E0eLNHYQe(>][S&]7_<28dPT>?<1GK_,S5
bX\:AQ=1IS_>\(JbPM8Z4.UI[_HQRJXE_AJM):c<fL5aNI</4VGNZcDK75?ET\VD
S)-FeOM1T;L/AB=^[O/1NHD-N,1QfeOMBMJ@_a2G\0ggMNbX#C<C5>B9]5B]@OX[
_P98cHCf<^Q?Z4R^]:4M+b_Y46Kgd)(W0[20BRKN?<&UYX?D^Sg#EgC[:b[dd4YF
?H(fA/W8fdZ33I21M=6@1+#WK9=^OA1MS,e=T1P5dWg9T=;1VB>3XZKV^-cd=9IV
f4:Iafg2&gB5_b#:M9]MJ[@@?W?0#(\G5d#S3LA\e/VAQ<Eab2]3#L>\?\1bV)cG
F4V[_dFH81?.GW3Y@/S\bDQ?JHKdf1^R46De(bCQ-JT1^4]RE?dSS4QA[c]KV\G)
<d/=QZ5YbJ7-YB#;KdRMO[(@V@-80Uc>?M.N.dbXRYPJ&VN(NP=XP/aeM[&3g+Y0
L=9OINQ<><V_03(?52EEWdQ-6+N[CTUe9ADN6FPPL/YIf3-]AR&b:dZ#8@Aa+P@8
&E3_NQNMXd+e^EQXE<V&Q=OX=MWU[XLT]:Y[>]&J;Z+]eEK&5(_>?.<)V;3PNK(O
GD8/C96\#cH^>1,V:BYU^Cf>I[8R(VQ(58c7CN)_OHLS0AZ79MK<QH)KHdJ2J368
B9WO[J0EP.PJBeZJI#E/X.:9e^B.&e/O>QQA9B01&#,87(35\8B0CP[E1HaaR/36
0G5V6I3FIKG_[WO?Tb(N2;3\0GIS,H3U;_Q<.Cb/MJGX(BOM6<A-2_/I/4?,?&^_
=f-bTa[4F)A)D,:gDW=8.KR7d9fU5U;:f&RL;KcaRZgbJD\=;#HE8bGO2e@WO96Z
Y,CfdaO9SW2&I:#:c;4^>)-F4aeX;beYYAZ6V4@e6eY.;.I8Jb;g_)Cge3Q#>3)V
M4&18MbRJP0[ZW#YVQ3A\;<6Na/be>PO)7CcAdX2AbUM6b3U+H,ZHA]a_6&7](=&
IC=>>:_.<]<MKX#UFZ\5BGX>&.ERB8):A^XJ>Cf_-W]be;U)_UNMXO3^5c)2<)G1
IH@&C+[<D(^/[^T-9P,)+0+GZ9XD(]+DR36dI\KK=^Edg\R=eXQa8O(&T+K?)@>0
gX6[E=c+@@1,8PgV]/]>=c<+OA#6:0&bdPR)]e+LLL+W;bcBWE6:R:).c9Q1=H(E
8N\]cLWLWI[\/V]#RD&X[+93>6#865TGO9G-EaF0X3f9.301Z=dcV4.B;@a5UBW1
RH:B8gNRd3,2Wg>V.?.\Y2R&g,[9_C\59?A?8N?D10;++If\B4UYG+(Sde-0f+55
Q,AB#a88Ea^7Y[#OL@#f6IEJQGYf&#aO1Q_IKAY5g3WU3Gg_.@:F((I)1?_5<8L^
VEEbQK90/\[(T+B7MJeB&;P4Y#IN@H-/S#O?1G6B)Ya9<0IVfN3)#)]<ONPH0OZT
(Rge4A<@JJ[LCV5GNW&eZE@bbb@F?/K>LJ:.:9Xe@925d0F)c0gWAK[;]Q=U1bc1
^cYc)C:=Qd[#.CFU4gc7EAUG,J2K:H1D=_2IH(.114VVOCcQO2)4/&4]F?1b2&aK
Z2I1N2ES@?9TS]WaQCH&FG#UHg2Ed?>74=)P#H>+MW(23A?NQVdcFFa\0.OHgeIU
Z/M2LE@1&_,A]bEEV+Gb4#->,?2KVU&2)0D]V,=SDQ0+8I_F_Fc1\ag#PICH3JYe
D4I[.T(E<6cX.#fT3f)<F0/\T;Ig)5QB8W(=;P/RRB^b<FJ-2_9MV]cfQRcL@-Ab
?D9#,9J_-CKG0?X@K>g:61(\\Q97LbY?#RU)EK7)<dgR?4dcd_3[NFSWVELCBG7.
5c(@,54A8_\=gI5H4:/V+>@547I[FZJ;R+F<9P<.@76SXQL1[0:MaK_c)@FJLYDH
JYHU2W4;AKOaWA<c(9432fbTP+fAQ_a&XMA54CGc/0W(fg?d\_R^0).YMQ6?LQM^
V@-CADX[+_KF_)5>Q<V=?YQ47^WR<c[^SWg2P(-+Ca11Cd9[cR72AS(\6XBYP&Y,
,V@C&-b+c+O)GQ,Z]b/WAf.#b1,\WRKQC6dEJETgL_5JbEE>]bN[WV7[Se/MPRR)
=G^Pf2EC^XG/S;?L#;.aWZ@3QO3fcDQ-E-D;cf_@T^&>/6\Q@K@=>J#Y7TMd_g.6
<+-f1U\35b<F-BJJGT=?SR2.USIT.;WO1TCSOB-KdF+G,fFV4BBG@I4edfV]>Sf\
&=NK@D,\0b+@LI49WE&EXcL]LD?b&?e5/^HYK;G6-7&QS249(D3-:IINcYK(1F#J
Q#+^8.#/#+DX,c;+M.1@0T^<XA,^#/XbcAHKf4ETC3,BW(+YPE.ZK8\R92H^1HO)
_+U][^XH#P7Y.KN#YF6.3<EC]a>Re/#>FXAGe8Tea=S.DYf,6]2(/=6HV#O=>;//
&15P[7VJG>fX@deAJR)OfTXEB@RXJJ7KVB70P-XQ(^6e??LHU,?&[H,Y5#F/58:>
W4eV4T,<8IFc?(>P:)6,A>/H)gAS4(DK,cE>&_N?3e,Z<7(N1/]]Z0UfJdQ.RF+f
&8-&8f<)^CIT84V=HgL.-Q@U:5)d_\@e&QTW9B1F\PP7U98;>fS&cIYHF(Z8@]+Z
(D=8^M[IV8WIf?3D)-]];0AfD/FSbgK<FE]XT[30)aK9^MK:3YIdIOKVJD/8)?-)
:aGFRWg[A]RU<b+G,W8XJ<e.R<&T0/<7g\>+AT?IPeM)N9?53L];GB5V@bJUGW]3
8I3^[R4,BQRG]&[fe,b2GR\.AgU[f.\8.2/J_0a<Ib>b5]:SN9UPYG0Va>d2Y5EG
9Kf8_U.#5-31)2c34=bg)gU[J._0aPVCY1U<#LQUV_X=fIS\WB:YdGUY(Y=GFRgO
F73O@;P>M4EB)5D,S=9/K,GNEI/<E1aS(/8;aeVF<1KTY?cNd<WZ,B,O5+(2>,=S
8TQL8W46^7DWWT9E8+gR@>gRCBO]881&SS.U\aRd4(/0M::6g.NbJ;)aD]D\(-]P
8Kd>0+W]N?58-EBDSIMU]LV7+N]#K.QX>Y3bVWQND.]P:bRba(I8Q:VR6;OGM&<9
BA2QEA(/64c.J1-\5>N_dWb8A74).VHQS;>JBNTVY.g#,/FIE7(Q:Wd6;6bdV.fZ
7(JC,a#+/eT2:ZEZ8cNM:g7@D;&LF1QEU_6K-PZKKC3?XK^[PY0[N;&N27&?g]W3
=/[0,4/:^JJD//_H)O2LS?SgY,:G[QU4[NO8&d2\Q?E:+=,M9F(QK.gc#-+RGI.e
J)>(4cE)?.f_)\1b((A1dXQ@?9db-J^:C):[=ET#YaV&UO-9KT&6X^7[N[g,ef.7
I;RV;cPAfG]-OZO=FI>/&(J/LV&SbfZ^.e<7Jf]];O.8K+;7Q@F:PFcT&VGJ)S1,
MFWH8ZI2#KI7AU<+,@:]S_:AG/#8EWQC]_+(N6]<;QLM_eTfb>4UFa[[=Sf8#.CU
/ZGe/0#=b(0X?-KP).Y_aH9D5AgYHW2TfZ>e500CLYFTD69gPNQ99@BdEd.TG4TE
G?.9N>3&(39NKc].O9W/YgHfG=a/;VAQ&d/,&CC/W)J8Le#A]Ja#RB#_7[ZLL6V@
G(97:A3ND3XW[#Pae/GAeb_SU\\>D5+<6X@N?O2M_1W,9#KW\Nd7dPGMb8USbCf,
Sd82JL5O6<bU=C^;0Mg5(#fZ^1+T^L,HU/3(V9.gKBQf3aE9F<-G_^)D+I(-eE[C
76(2aV@7/IC7RK86YXFEH<Q5CV0[c9A<<.V9(F:70#g&bKVf_K(&M-#[/SY<\P;S
bc.2b^F/19?Ef91@TOX]D_3-0NN60]IMC>ZD=(Y+D23Q0_+=1cHZaQGb/b?I_1Y/
OZFHaID3<SbR/d:/U:03@F+THJDBPV@A>[49\daRRTe@-K52#Z=X89/QUBKd,4?Q
@QEQa&KITKZLD\52/-=)B;0BPbNWRe#[8OZSP.V5]M<DW[9d\I9bQdL&AHQIQUU6
fK)gZK;acRQ3N\78+)YY-g/N(/YKT)UQdG+B<J.(UJZ9BP5e\g.RVPGR597</UA-
XYeIT@C=aBV5SZ19/0LWeR1g(PM6MW40_U84_e679H(I>+2+26KS56H(HLJa7ZY@
5K0GJ49eCDbKHAE3Ee(/^WA6HH4e(^3=&L1;HL2@W=\77WH-R):[Ff?2(=;>BK@0
EA?0JE2NO36>F?2AS6a]I\L#4-M2@44M(fCg,&Vg6;5?-.Vg[;[;I/6g29HAN7DY
>]=4LYVT?Df;AD4./ffBH?CCJ,aP<J^/VNOfAO[61SFRfQH9-.C]\)@3PPB)\]H=
EG5KLXUSN<@\.QA-F7SA/IK#+>B3eb75+?B:/9)JbA+eEL/W(PI>(<f)5)GCM6#F
VHPe_7I7CTZ?&+#X5\a:gbHODdZ.P3JaGU7.=L;Yc1N,XR&QET]CI=PT<gZK6KcL
Q=30/^&PK0@^9;OV+/JXQ_K039,Ra4#b:5f;Z,9>OO,CXVAPagT5=JPLSgYWYJ,F
IJC>5gRg64O.4NC9>0:#R7fPS8c?D&d\fXfd/B(4HMDI\RVRbG/-TfVCMF8H&#Q6
[#Z1?6)0HNeZ14J:d.Q?EBGJ<558a^J0Gag)Ga027f4C]TOU6QP7AT;V.RSW8;(;
E5:L:+L/dLfFdBE3N.92=1_.&(1[g1aGN/1bZ;5&H03=^H9,\&SZU27:FQ?60TRd
TF]]HH6TGd1Lf_O.e04OT/6H-M;9E,KMS,M-=_=QVR=D2eW\b4L9;d_Q>;&d8I(V
d,@I9OQ)FFNZdd9)N:Sf6MQ&Xg/@X:e)AH.^.8_T2a)\D3<J/P)A^LC.NS^)U&T#
KU>fV[<6.G&UG?I.#KG9#:ANZ:D_QT9Yb+5ZV;IN)[WT8844Ja6,AUL^=Nfg7]<R
dGZQF0-dB?PE:c+<)T(/2Z+&QG1H]#B7ES.fgL1-B4)&GA\Z@2OeIfD&0f1ITLbd
I+3+T\\g<N_CaDU_;bCd6O3dI[DdZG-\fggU;8A95L\KeF+6a8UP>8&.#+IOLf//
PVT,a6&,>N;ReTRMc?63LYG4\de86NFE730I6?ISYT98C)O,FP_5=9_Mf219@Q.;
P8Q-S;NK@<L/5JJCBc+AJ+fb=L_/10HQIcACSD4d?X(b(E1\2G.R]Z(CY1+4]ZQ-
gY)feWGJ@;U=6G=CQb9e-QLV6,1dfX4NM/\T/3JX-UB-D^V-b1I8((M9_-(R_Z5B
bGV+]N8N8>KcEeNY8X-OI+MfOG&c+E9,gU^\e\F:2:ZHEc#O6@-fV&QZMaBTfL/;
S8@dJV?9NKLG4a\[4feVaM^U1VFaTLa=>4#c:^ACE&/WU[0KD1\R&Gd<Pf+gAWa1
]I<M=fMXCd2:\6\7ZNIcV\EW(;NZGQPY8JHW^_)^E8dgfVUMP_RBPI#G8=TZ.bBS
Nd8P),^,/Y6QcO#-@Y&4P2Y:)7T]?XI@KYd-[//S:WN+A_@-J^F?(T#0BcYb.M9c
@LTR?N&4>QaP?_(X@3F#A]].CMc8&OU8Ze5VdVW)&A\>FZBGSV05+B[MTY2AIdM1
0eQG5d:HC.F99XP-(Q+Nc;H]S,+[HLcE.M;3Jb<D5?GV;080,Z4KJ<(KQLCJVDSM
f><>6PR5Q1@YP5[><#(Q326Gf59KPB@VKbMC.36S-M_LJGJbR1C26&WL:#:\EY@^
:,Sa2LGQ_GJEL^XeH/fK]f)c_]4,bINePbK)a7FgU?g/d)L>Ofg2\d7aH]:=&)ZI
M4#f74)@M[I@Nf.9_@d^2#E,GfdL5N-@5]A_+23cN1U(R/H08N214D@?@FJ2M<ZW
M>.bb.)^F)f[2Y_@,IN@N\,:.#2^MI61V>M<-XdVG.92AE:1AaZ>.UK&+_A<?KHB
)(6>KeEIL>M0;,W^Q+(6EOWd6bTd/E:R5FXQO#PT0_@Y(RL?##S)<#>]RWPT\)76
#dW-&M;53CW3#W9c-WLK5<S4:b6<I6a/:QW6e[,8aX=e[E<HVcOY=e;#][R;-LM_
9eQgW=@OV4cF?d\dFAVdT/30<:/JF57(NGD_@CaGD_<B1ad-3Z278:?QF6D.[7XX
GV95_CXPY+2NCE;6)^L&RDQ8A[)W_J\.D8.J?R@[\BZ^MEA89B6T93B4,X/:;):U
]]U-38:[0]UR5f-D,;W>E]^eL1=:\c&R[CSM2TJff;XRTT/T9WJR6eM[d@#-d/7^
JYMV2IC;@&b67RML?^+^6(Tg4SW>H,-Y^c-\N#a[(P&X7-Tc=]IX/^c8#2RQF5MG
89G4NKB07S4]3TbP@f#g</Deaba2,/+Y9D4.=U[.-]@)V#^LO@8/98+03;3/I&<Q
#bA(D)9&([2cf8]IJT,fTaPG\]KWF]TeTDU=\^L:VI(dR^a7/,>8d4U?TC0@UX48
)8RBL=SWFW]QD4Ve@L:^a(g/]>N>7G4><+X:.P&;dX)QfY;7YPaLb]U<#/00-<_b
FQC=#VW@7+0K,,&0U=\UU2IO372F,8B69G5dJgg\KG]97DH<g78@:S^1dAM,_#e]
;Y;3eH#;a(E&^UZ=/+S&-=f^TEQ4HX#Y?XU9c2;]0c=,Z.:.81D<N80.LdQSR(]N
P(D6KG:T[3G)7fO)).&E_P6C0QaK\g(J>STAH=3R;X\G:e]O8L.#XUT[639]^Hc\
/WT-K;6d?3244S/<#6UYIY2^30ZDQ#0F)8Y;d0-f0F?^&^AMC&NCDfc]TPKY.YM]
9NY#7\=;VI\]Ca;&e[M(_?MUO5EEBA&\,63BVOa(QGXO.+b[OE6F77YGD(ML&W_O
,CFDC@)^R)Dc]4,aA/APN.?T?1M49,6<=g8A@_Q<DfZ\gA[&dDaUXIJ)4e6VDIf#
.JA19_V#1PZ^]DVCb321__-77CO/]eMf\2/aRb2Qa#N6e2baL0g6=&,:S\,@.9HW
:Q\VTN5K7<HB&d3I4FXT9DeDEK[VHdO^:1bd^M>\O[>B)H5,cJ7B(;I7L16V6G:U
ZJIROJUeJI(5DIbc/>\5+E@dX>QNBDV=WYDf1BU5>)ecLPC/?edGa>aTPM.L0JHW
#W&a]U#7C:05&AVR3USG+P^d\L#(1G?FH[GRM(+41R+fV1Zg6J8D+V>c7d?3,D)C
,Dg>2J07Z:/V0GLTg8G[EJS)C_L(DQ/V12Y;JW[_]@>91__10_D0N>A67_4Y9>#b
Q(+^:WJ;+A,eUNNGRgR&(g+;UKT@CbQ_R#9=8bO009YI_79XcE)#PT\HR4eL(ZeR
c@1-S.W-NCK]59)VHeM@ZS=4ZUF4<2RTG8c(?OR#3[JO2W&\N)V#5>@U&;V6;;77
Wbg.&3.A3LAZ<SH[Y-?T_+E2>d7:Oef(+)J..P9,;:e4a_@.AVLCF^_\YFKB[X8.
HN-R(@+5.Q7fcC(IGH(9TU,IHXT;8-Q;B0GS7(eS+FUgX?c__P\Oa4-K0U=C._NI
I_/T,;F_IM][89NI@>=H:0U^g9]\^.WM;=E#a0BZJe;bR#EF[E)dIA2V_-fMW?b\
_4Nc:+T&,P1&V5FV_BU4@S&-Y8,&;)N\g#@]PJ_EaVfKVR]M3)94;11>7A^KcD]4
^X]HGf03<R1GMaUS7X]8>CI\]PDc8)gS#aa(;P\OQ0L8VU=U3KG]3JBZc+I6eIEW
e8O=Vd=V1VO><1PH6bN?T&+Q_eNC7/-Y6(0RH?QWF=Lg?KY3N/3LCXQ]4W5:,3YN
;#)]O7H+IDPHL#Ecf83=G1SJKg#BbLR\ZH#\IME&b1;MXVRE56V4E,b+KM9Kg\9R
Bce4<./)TT/J6@8&=+g+b.,>;_cS[QO.ETDSX5>XL:&;4>N=/BaE\V&ZS)Z#ZE7^
#MF11G71FDfU-;MOd=T+8b+ASS&F9-4,P.XSf_,RM^.bG]P&a-_>Z==ZGDJDc73X
7DTgK+E0^Y^,DRFMR^X1g;J)]=gNVV3bgG\A;cI3g8^I#M:2b\dW<P>7@.+gcd^K
.L\/\Q:)H(1YZ04(;3QbcOR\N&\T]S0Kf1S9AI.L(4S3M=T,0SL+2(&c_#6@aXE[
MC6<S=PB>_,U>B#0=Wb5A]N3#[>NR-(QF+5W<Q),&TM))005Qf\g:UWKFI?2Q24D
TSW.(R@V65c/d5WYRT,0+B)gb0g:<_=8,];1ee<4D5\_[&cT=dNC0aU)Y8491P(E
1^A+bKZPTa&5D-<0YAD-EF;OHH])T=eVPDc.00\XPLAW6E?==Fe89.Y1U-LEEI__
L>_OJ?05>[RdO)=9H6@gHZH_T(Q77+GOgAOV1<B.[J_E;R[BR_I]+Eg]8Z_aOPS+
0A>)K/;_Z[^P#5e??H/>DC-a?W9S1^L9\XF-1JC\9<LPQ/eR]^Hfd(PH+I]QXeU(
XRXG?/DB.6bMFFS)>H&&E^CD9@(CdTg6Y\[[&JA^;;F_)IU/E89D\6MW:GU84EBR
\0;IE&(Mc=3QGJEdBPWe(8g--,D?M-1CB?JIO,+DR/dN&B35#(\>IL0eE@Q4QgPa
^@4e\QR_gg2=X69_DUQ0E&R2BA6&ZQ+c9K-K+)U6dDWBd1XIH>0);;1&_PIA2]?N
/1H7?MM:XLSg)A?eV;8aPW-FXKM..Tc9(;aNTW648&(=8C:TX)_=G9g069DZ5GU3
ea.1)RR;65N;YdB_A.9<]YC,47L4I@AQdO+c)e(K>Wcb-CfWLWYPM9dD=)X]WdM6
g_Q,S_R@,^2[>A^-2ZP9H_M83PW3&9Mf3##H/X,CMD[IDFH=XA96(T.]L-&;-SUF
FCHO#P#W9;7P<FM-F\V4)5eA\?:-^R@Y[#7>\.eW_+Xa.1SfB+@I3,.QQA<L3^PL
b_7&D.@+b);KGNLRdW\_.+LR^g1eR[F^1Je,W8+a\?=^_;)134OJJf-K84IR#4YM
T3b=3-CdXJ3KB;=>,S\J-&c:eKV>(8JFB/4:HKffNKa+2U2.7-WD;d<^A;KIQWFN
g:,J&K0#F[;M^1\JB-NM,<F(#eUBD?EC2X8RVD(1;NSG;?V)eGD8JcWJJ6e]8P6-
J.]+&@:WEW;Y^b_>/GUf3HVb6a;0.(TAcKee@A#U(@]]F>g6M@2CbIMSV#_S\_(&
7G#Q<R=+9aSI+#WPAL@T)I;O^DTbdA0dd5_/[8)FM0B:R@P=WHVR<cJ.aU(:G)UY
S0ELY9KB0_9fWE3+;S6T-WBGZ=(,4a-D.2K?&?:BE2?J9e()>^KW;S79bW.=?6G+
:YA(I8G2eaN@CO#_X=G(EdBga@AY)c?QC<0d=BAYS/PZ^,5D]SO4fIQQN)Ba_0P:
f\Qg8)@N:A[(>>9T\A2,V<@3#cT[9./_V>XR]64b,&?#,\:KYT/V(4.d1T=AF8UK
@7W4GSCFUEQ(\HOe4U\CKA^:8,DT(6<,,1-(GYJH:F7ES8&S:)C@-a(NC29F<A#)
D6e3YG)L[<SL?J6YL(Bd,4KVHN\B)[O_^2@FP)6+gb5_Og_3bW.a+0UR:L_U=:?3
+gD;K/IMEL6TB10bI5TW@:/V_329^^e1.eCU@9R7HY:OfJ9da1f2>/R;6^[E\ga8
15ABI;1DG\U#24?93JOMC76dS?dK>@:W_M_,TZ,A1628S\QQ#fI);;.C19.gK7F&
7?gW.04I@O)_e8&6SHg3H3SVRe#AWf)LcY:DW4;ZfE-6QKbO,;NA,eRIY<XKJHPA
7T[\eMM3SKPI=)ae0X+E[B83D;F8a5?<J\dB6]b(T6.;[5/e[69;E[8M4fef&eMB
9PZ?;,RXHM11[gK&\V/&5d;C[FFI+36?TbaY44C@X4\:2+Wd7Nd6:WD=OC8X<TES
30Y#Z=_015QB<P8KN84X[d[2ZM]1.cW:S&:@/#Og=eZTX:g^FKVOPP6QBAA^U)G=
=a0\AC=<:+Q\?)Na)<:_D6&(4&9KdDBI#@ge>a/&efad=c9dS@fM,@\f0b&^GA\F
\U<<KAF7\51+ZP]4D3DHb8<+Aa.9BH90QF1&CE]1#[F<eV1[&DYf<=OCg^6eUa<I
d?J2H#cCU5R+]U(5<-?MfBC;9_>RU/e4\^:Ua868HdW=;=aS\IKV?LC4)Q=fU1DN
L6bZ1YZ?d;OC)W8]ZL>M1F&^?+WfJ+@PaKL7.?G]\LC2Y=Z[dV,.WGbGAK@IeZ\?
PML?._eISb#agI#_W\P2E-gAAS:R4H1]I#JNfLC1LS2RJX^1O=b)f0YK^AH/#dZB
2N?+ZVG=+O\0Y_fF=fNVJ>Q\Eb;AD_)/8bU78::46/(B\HG2-7YT#>+U1g:WaJNd
0a/5cC/<cCBb-@=g:G/^52cEdS&ee,C?8S/<5Yb(=.<O@Y/IWI?-aY:,66+&B3.g
OWA^X<#;6fKg9b5[6]<12O;3CaI<4TZNMU>FgV+YH:FGQBEV-,XLDQfZN&]?e9E8
d^]]:Y:A7H\=g1Cf3B>UGQ=L:T8L;0QQ3^RQNS.;\CR8WAK(0O@8Rf8X)KS134O4
Z3WER#:V8J=KVR&T-@bA>YA8FQBT@33UK9,/gH/Z8NFRAdX),N;f3E)5M5_f(P6D
,<((9N6.L\FGf1(>36M6A6;VR##B+dY&R^:;S^3@T8QVFHLa<.O,Zd6S9D#3LQ0?
,3X&B,cSOKH#3=DPU0,8XX5Jf6SR;DSS;b\3E_T=b&.+3Rbe9<.9c).[X\EA9QC>
6LDX^3\L(aAeEe?USK]AVWKFbS<11-@CgGS98KCKaCD&[IZH.eHD.1W628?ZH(^_
J-G8+1QIb[V+IJSVZ:PMcecV(^_TeL0e<N5YL@VI(P]&V.TTOefD^AZdd-fW)#(Z
^AX+GW)Ke(:NS;D;Rd_97XCROF2@+#ASK=[_/(fA&]L2,dS#^I=MRcg^6C-W(Z5T
569P;#,Q3L;?DY]&5,X-KLOL]2?EF;5beDe<eaR-_4Yc,+/FV>RWSVO,Q_31VUHC
>C1&9]RBE@+PL7CP^_gTO/=/URD09UTc0FKTcG;df:.+Y2@C[D-]2RZ\PCVK;=4I
a7]Q(:<HKE7RD^#Z=S_6-ELgL:G.H8F/135WLe==+,,I:,TYJSKX=9gU_E8>+b-8
&.3.b59]I[/BBV;6MIT_M#W;3.N4;OGPO),Q[A<,WW:H#56QTdMMSFdOgT4dEQB\
S>,G[6LOEaFKJ9.Y,CR0N>HgIB?X3bL/7bAT5[IS0+>JEbHadff:#<-]K-/bA7?9
QT[SQK--ZG6P@_M-Y&5TF\VHEF#KLYHV:Lc_G8a1\HW7U)7aWdBJ:&He]K;gL]f@
5GCLeb,HHaBV;aW:JQVF7_V:H43HU1XFEX^8Cd1W_MHdAF/,B^TW3W/dca<K194&
b1-#P>c7UUc=UJeQEe6G:eC]V].44[+-(\X>=M.TM04af#53HL,QX,_P:@BWJG@L
Qe&d+NS_C-0OL<EP-]3g=/#=9C@Y.+.Q4C89IS@dICXV#:&<62S].(5(LF4b2bee
?dH_72aeGb5^JbNNGcU\XKVH7P#(f1UdVK^8FYHb9Yd81YAGM)V4(PXI<1D8?S\;
B.FXFN3NDcA-fX<CEP/-6U/<9;WXC5b:b=CMK2^3VG+9,6aZ6cDXTe7NPU,P_L.K
;JG/U_K\7)ga0Y18S\A5U>L[ZE0(TPR_5BGe0XEE70XK8MTNd.PDKT=gONHQ5K#^
B\IG_ZA^7]NR;&XEPg[3<O@B/];(D-3OG&8:XJZXY,)Q;T(WH&N@g8OI\ee,SB1>
EZ3N5/:UB9dVeB+ICRH)JM9gV?FO&-HG),6/877YO)9W8O]]7A_T6T/TZb]LGAC@
6\eO6Q+#6f9\\[KH0gTRGO\PJZGd\F-gFEDEDBfY;8ER79c;+fS&XM;4XPGaVH^\
D_0d34X/\GN=a8R/7gP7-8@EQ_PM+F[8JC6MPcEW&>5=Tab6=P;:?F]12J:[)6OJ
4A..Y?aLaFO9IX)WAf=cL90\;2a-G);#bcCSN#U>gX&?G=U77+84]f;7#ELW4BM2
WL3)41F^X0#dX7?.9AVK(45P1UM0eEc3J6LO58>TO5F13[a>@fdA82-H>MLTE\+B
2>J.LS.8e+K==c02RG:7=SD&I=fT0RD)0^7SPWQbL62N=@L<@E,-CHf>[d(>0]&(
gB6--NK;NYc?O97T2)fMN&0[;Z?8;C4dYIb=&U;1\Q)8/cB)&E@81f=,d[U/,-]g
2KH[^OB0ISX9KZ_D@cC5[dcD[8aYI&[JKaCK+03c-<W]XaP]@:.-7=UV.]1>[WX1
8[,Zf])eJ,T4+FeO/CZ4U/]5BOEIK-JLDZO7/00IQR-AKU3SK.&&A-Obc;e+<c]W
HZePO.^f6.[L:W-O=MdFLLH=faZ4CH<\:cUge@+>]L9:FbI;a^[c0J<Q/:B,-cad
8V1:)C[/OVK_g9/T+L+?]?WX3>5:PA.X./?0L3/c.a#2?TC:cbag-]6aC7g6RSU(
eQC_Lf(R=P?&#G(c98_4CJI7J4UY(9C46Zf[-\8_)UW?^\\d2c\cM7X3Ebb;eB&F
@&YB=8X/,R,?0(eU&4)&fY?,R<;J;>IV@B[H6=8=?:[WbE7R7XH-dg+\B^X)@>Od
UXO2T^1K[;N&M+A5JQK<#SHAC/LQb2^PC>ZEYEJ9VaXSba+UM0?eO<Z4.(L;S2;2
J_F&.A?-<KMJAPSbcN</e#FOA&[fcX;A(+[/a4/(KaV#K\Z_J8@?=FO82UI]LS#T
dKAb:>,bN):4]0#+a\)>g-<&9SdeA4\B>W^(MCWF1VWgDNX@&;XCeY0fGYGfU-D#
9MAQ&5g_7XYAX/B4<;HIQ741Bc9WSS2BPI<XPYD7(W]-JP5_T#18GeE9B<,;-CVU
TO(LaWb=/-2__MNG0;A\b?QG_&N&2ZE/5I2S>F+S=JMXd]BC[X_Q=#WDLCDc)cU?
E0808N2_97#):/-C:#,-(2TfbDa,[9QL_P;FEB6@:gPJFeLG]2Q#&cNNF6G6)/-(
)/(I5>Z:0#;0EE(/QL1b=K:e@D5<SMeOKf/VVF&AZ,KT=2Ea)d,8?NbDD42]=_O1
B<8X>@=:H>[,2P-<eU(7ZD:,EYBcZQ5(?CAe@G,U[JKX;E.NU>M]^(e1+0aY:U@<
UHKcc[>9Gg2.faUf7[/>HSc[eed#3-PUGH5U)DKFHORS09WRYeQ19YIKb&<=0D3Y
?1@edF[7QeM3>SKNgL-ga/^b3J9>-dC+==FRD?gWCMC#/F4Ye<Q205P8VE59ab5B
XN5:F:WLV,dIL(+>]8gK84G1BSF4aPB:,]g5:R?&IRQF>A72<G9B&I5\#BeJ/>;_
67/3HXeB17d(&H,,CYOSd6#?f0NU@X<UId3^8T>EYGAgTTVS]05X<N\?KcEDG#Fd
HBQ7JRM5ZSa1[3GCQSaAa#fTK.C;]0HYaZI>@-Z=US#.<)MP)2M+EW>c_5LSbbB&
7_O.5KUdE<_#+f^(HggTS>VZ\][W>W&,09EM+/,&PYZ0^.X2#+O]KKZ;[NJ>+#]0
W9R\a>1S(f0+9O#UAL-U9,g+QI=S#>&_b9ZH&93&#O@#Q]HM#B7AA<H]YQ7[WRef
/-88e<^.F93Ud<#G^I3NHPS1VS:MffV;Y9BZ.3<8H&QcS[@U>W=3F7f1>I0]Y?L8
A@&[.(X[2#V,&(09Oc(JSK3PTJC,f,(&]gJ1d42FT4-Ybg^_(,9EJ0+Uf_BL=QR)
I3WYGBf>,Qd;RH/J064eS;)a0+fd)9?b<PZc5S<JCF&_>[(_Q,];VY)gM]g&VE0.
Gdf[9A)XCS/)c/8.<<.7eg>cA\KI04/6;-#8E+>>AAD/.0+H1CR]CRXZ;d5;Y87V
><e03bR\7-3aK=0N_;O//A;FG&69F\#^\@)LF=CGM;[N3(Y.]dcU2V:.,<K95I^>
@YP+-0B[1TPT,:H80H^,TK#X_X+69@=b>fHa2XRL=&,JWC<6L_K^+bFB7(YUA\5Z
Z7P<,??dPOOd\6/\KZ@MbQB38<U4:9<JOcaN]ZJR0I>0BP=,@f7.MFGU[T<;>.L^
1IH+PO&a41Q5bJBV<DQFfPMV[#DF1SaY1^9+R8B/;@<L1KL/49ZKDE\XG4<1(A;;
MMDE&1/A>_8]1E)B\M.M]-^)dO+T4bbSgHZWIdP3#?IgO3@WTa-a+OgaK.5aNMe-
Y[<:[W#f8406ACFKaMcYg<N[G->?9760EMFLHLFLKV<-Q0DPI<IV>J[)Q;e(\U=K
=F1_M8-[fTaE_JI22A_/^=9@LXV-bOJ)2^AA5Y[AGY/c<?=eKY]YFK4ZSMJO\6T?
TA3RHUWWD1>HG8OB4B:>IL7,c_/>0G,db>-LE-EO7=d.g2:LCSCO/a(.,-Q(9@Bb
H/G,E5dH&)KJ(L_;fK,TdJe^5&E_]XTc8&Y)]]+FG^,1/UG)]0(9;1(+_PPB-_g]
/H_)8@-L2Y6CIFZQ?g,8[7A>>Z<[^O1J+@e)QWJ9&F1dIb/JZ]JG9:I##^LaJ7NE
#IgR&[&b@d[GC+=WOBZ1J[A35]^TWJ?PBO&8@0O#+?0(WFZ_D+(aR0ab5AUZDdRP
G&C4CA3:&VedV27E8\839dCF]b>G62<I^+;DB3LC.HWPYND?G&^.(JHJW)/@)S-&
^KV)8PV3P/K]7EGHEa1;=(C>Ke/+N]3N_7_#+Y<YG+gI/a^&fX0U8#&bcT[\P7eY
#1^XU&Y;3(c;#=e#PHLd7_9:>KY[LJUU+(;bIH\P_8NeME#<KUSPE115I2^-\3;[
+&N_15bHMT&?8]OSD/#;FVB-8;AbF,-eG8UU32N;DA68X(GG<8-FB0R,eQW:7d(8
WWS\B4NMJ-Y2N<c/MQfb#dI,D@71^3_Q]g=[44K4beWN>0+]9-Q1&0&+eT_?fV2R
4T@?^90#<)ZWe<BHN#?,bVL@:7<Ag3,E@YT5T_);6N7a.)6CL[T_)(=fKDE_N/H<
_)b#YG=Z&\>M4KCXV[P-+M7##AGE;Xe>4X8@DTUf<Fea7/=ZdQO57[FFN2@.UOQA
6bD?0V&7QR@Q=Eag9)(#KU1a;?,1\ACHNW]S6S_2:ZHO3bVb3G-[&2GAUf:FANJ?
]_\W9(CIZ;S:E20M7H[8>\WJ8fN,6_#05J39Z8<<K&W6:A?eSb1JJS^SM7)OC:d6
V5>-fR2B#E>0\T#1\:X7A;FYHcJ./:gWS5XEE49Q&ag8G7G>KLKd&]6Ld?::g,[W
2+BTCA/>BXfA,-aUD/&S(I;AeXM,9&A-LR_XQ@,20VW[MQB;DE_E@&FL]aOfJ8YG
1(K+W8cA7D?)FEd3gDZ2SAg7=&N2^ERIKaJ-\fZ7.BUS:B7J&5#XB>10_ZM67aS&
Q[EI1+^MFCPT.]1Ig?SW)#@(#OFbT>TV/N1B]7(COAYKLA^O?cb\1e7J=2X_@II8
)e=6aF#69PXU5_?Kcb1:N+3[0.@GabWUT3f#1/:e<L1YY-W\#5Q[eW,[Ea5\M6>S
8Yb@[C2IR[P39?VcUU5\\YU2#O,O+,E#BM_FA9\VNYU/Bc0^M_9Z)(BO9[B6cHJ&
]KD/(4@JJ^&1&9J&H]J_FFBAf>C^TR&c()b-C@0Daf[R2fgOB&gW(1NVLT3-5_6d
6Z]KE\W(&MbDgb=-+.;X#cQ=NC<P)CV(6#36DdYc6Z6Dd:.\&7J(+R)&8&4af^3V
(bP5.FY@3eNSTf?JK2M4PXFS4U[MK48</V[PGP2A>P+Z[IU7Ed@d=cd:-.X,<AFQ
O7\a:(1+&#Z>C>YB,G>?Vc2K883D;DD>J7g+fgEH+9FdEZ0:=Q>KNQWX]1]bFSEd
Z35(;.g)3CX(D,Qg8X])KUTE5SDPTOP5VVTIXU@)(JGZ@f+AOF1KND\:Zc)K\L-0
f.5(f;.,[J&@]]1\6GcLFU]DPNX:X5/C9(fE2UBO.DN+G(B&,T,@a&dYH9f?c;d>
EGL7;<UKCF]K7@X:PCQU#>WJJBeT/6_;+-+3,T[=gW;,#^Q;@^IF8dO9GNF<:\4g
\X_UY]4Q.W)K#Cb0@Cf#JLWe[)FdAHe>4Qe3-Da0f/g=VOB(0NK^YG7&dWgT#C\:
Z\^;5[BKW3gL8,c[4a#35LBe&R4__)d74EARg,M@N#.2#+K#R,C<b=M(SWLBC9#e
JI0HJELK]a.c,=gZS^NI5P9Ua1@(@ZASaYcCFbM/f8RP68,/J@2&_GBMfT.^f-H&
d#E56K?;J76bG[/1XVRXb1+15Q<eHE15egU4]CDfJZbT];AfK#60]DTDHJZL3(0[
W-2?a-[&a_R9d)b2I);XT9&Ze,Q0D=[P5EX8BQH(2JCHXIVII.8(CTJH;(A=UbR=
FM5(I3cA?.N070Z=g_]8K#CGS8XGN0baENJBY<&M]>f/LMg@>eCM\@bFJJVgfHa<
,g<E(B0Z5L1D46-C,d/F#gUX2Xfa9C-BW#Y.)NQFZB>E>\A+VA;a+4XF^D&YH)ZZ
f=ZR@6@R4,c,2<C0_F)M>ObC<b&E;SI)V5,cGV>IZD7COHYfT87TM-07C?=82W25
FXQCU[/WB\S>^JVTf9W8V>RI0ALCa8fcR(K#0BHFeXU50S1G4[JQ0K9N6gKU>+Jf
J,\@/+/-KT2:c^;;F8_7fF8AH>(3(MeHC6(Q0ZRM]LI3+S>_;b&eW3H=5Z9Q/Z,2
.>KN?Q?&0bS-^)Qa=,:If1.Y4^>g6/(Tb3dNLZUHV+[f1dE2Mdca_DY8A@CJ2OUT
Z&>/:e^-^(RW+;g<BPWcI:BC--/LED\6SS>Y#YO_\#+V16cgQNMT\^)P5LILU4UZ
53CD;]HSE(4=N]V@=YBLO&^fSCbYH_b_;)4P9/-4Y@]Q.G\6MTO,a_)Q:-2<HG@E
P^<Ya#TYT2,:L\d-\VH-IY9eV2D33TMKI2W<TSKVC<GD&F(LV8GQDG?fE;.Y>2e>
1cE@]SHebB5?c<(dL4a(.#A=>R4[4g/ad]+24V^R^f:9Y82P6UAP4-BLO3P2e-@K
9XBa86>A0TH]0^=#7f?aR@OK^0_J6YD_:(62ZgXJ@;8V3>2MeEBZVOgZQPeBV;I4
9G(AMYIDN3>7(RT12)>NLZD3YJ<?R8K\fcKT2#;e-3?NZ\RXK_S@6QQYfO>=D3J2
BPD-bLJ9U=/[)O3Qd&7.VP]+5MW,;4F9gNXO=GSXMG@FZ^]50_:HgTG6I\#([><&
+#X[]O2R\7:eAAOH?G7+eQS2B5Dg+)Zd3[OS6Y_A1HI/ff>F@(37S,e,--Y_59US
:=.F_E(>I+ZR#SJE_@OG1(CFTK>I7RYN[01R_;^D?e&G8)N,UeVC&E6,dSR#H]f_
LR@BP5UGVWPF:^I<V8(EA.S2VWVUR(/bCCgdH@SI.b[_6>3XS#J.7>gB45?E@KD?
P-d13;U(L4AY1G/&>8Z#)\1Q)9/Zc<UgU5VNSQ=VX;\gGbe1KaBNOO=?9SCUcNXA
T61c:Fd<?ZX:M]bQNE:d<4GIU3A,4Z(7fV52(?0+YR.GAXfXR>@[=Z)-IeJFLWAC
:6E@SfJVH+W-A-6-eG9>PY-5>9[/HD_X4VD2]2I[)T3G[-AU\d(DdEc&1P1+@CI&
YDMDdJW/EZYRY==IE)gKO>:+C<.I&A[ab0WZPF[C<.T4V6;(&3,Cc;3UM#_)[SO+
_#JBQV_O.[42I#C/fTC)NGO&<Y03.:;;BXNM2eRNLJ@P/\]2175FRU=HKZgfK>:)
9\SEZ_.75-?aTd//YC,]LbLe=0Q>7).C>RDSe.8G5C>++_>][JY9KFMNc[VC&P44
B(EV41O?HIT\Ag7bGeN_IF)E(a<4BW2eZ@8ZSbM,)(R[fY3QRSIBI429W6[EM9SI
MeB_<@(RZAFRRSg=(:0A?W.MRH-P(X[AFR-7SBU9gc(\b-SN8gba2T5^-T)95[/b
(^4?aJYZN#;?J#Y62DL>AYNLW+;eAgM?ONb8K5&/:4,a[C</baLf5N,.^TOIMC--
Zf&,fZ>XRH4BX:0^MSYN754@](:>g)&5Y0]aJe&&,/L3><_.-]A4.b+Y0S,.NAcg
M_4._2bX6T#OM#INZN=M15(Z0UOFb]3,7IJMV2C\XdGJ?CXf2fW:,DZ+57cA9JFc
E?Z0(XF<6=II_b_Z+;)OaU3Z]+@<3^_7Yd;_\c?62XLe6c/f=-D?aIZWK[eCZN6L
&S:;&HQVKfTGfMHAM[<)ba[&Q6-Cbf+B>&[aB\KFS1.+1a+1Y:De>V(JUB34U[7S
5EFS6]D]?2;1c?#,X>E&GF6E?(6/V0/Z>O#Ag/W+<[0I+V(bB>L[3&QK\>R5G)DI
M1)f7/<J\,IgH4TF,S9OfP6>H]]?LDOL4=OU[6Z;F9SO7+\(J1YD)E.H/,GZ==c>
_#.2Z<Da6EU\H5,>ZS..I//;US[4J=f5^5TaNNV63O)5FLI9;_3/4=X<#2V9^3?C
(,feI,I<)GN@:0=;8fg?/0G6[3R]39.M_EA=O7H/=KgdV&N?T+7KeK0FVTd;>=Q_
2X\R;fE=J)(/8,/B)5;Z=?_8bES7UC+C.7b5C9N0:.[OR3NZVGT?VP>K7#b:XUX(
g8F07-)NI#MDH9)a.be5WI_Q5)JW0H(N(@cKJ:SVSGb=CeH#+aU\OJ2S&6cG0/C^
[;ZVUc6(&H@0GMW/U@<Y78KKE6OP17)UL#fdUC-)Le(-PCS1ID<4Q6)(]T[(:0<D
bOST(5\>Z1e&;E9G7ZZGTD=[,eTYJN]L/[0GU,,09>5F/bbX-KPZ]_^DTX.I_73a
Z#&PW1,\>)5E#MbP2VETT/@eH>3Ya?H,5;20J:c83e,X#[0::aa^SUfO()Y/fDCZ
M\H,^2U6KT4,>cI)@XSgbX>J7SNf9.1L2EXJ&HKebIBB\RVd@(I03@@f7)X3A^3?
#0;RKIZ9E6Q3ad2^a/1J.bJ+>S-[f->XcQ:U)2/?JDW?&7N7,6(_a:A0Rb5RS[L9
8f0)H_NU/TcgKEd0Jf.)e4JFEf>Q+N(E&+-2b>FHFE:Z\/:.GD&Yd;F4=?NVDN[d
UdS^[(Q7a:6WJ@TGVM-1&5T3RNfAOTKG_)gBDGCc@P=/H/6,KI1X:;<0U]T-eK86
(\OdML&@05#?NN]4SYGdb@M0Y,PS_(X.a\KQ:2CY&/e1<F^3:ZGS)=N[T:#AeP9=
-R3VgB^.b]<&^/23HL2=.H79aV,3(gYDG8<\LTGVSL5YF?+W#NI8A&UAgQ+2T-9[
]8L&FF44=fQ=_3E>eJ6I]D0O=d]LYHF)]cR9(JRdEJ584^K<K\^:7?B(WcJ;Fe?3
#3J\\(\g&84//CM[J;5?aTRfQTJ0^gc<?WGOP#Xa8&Ub>)L@7QbHTY<:&HS@VHLE
&;I2=U[[YbUXc/S-[8eFEK3Sf&1<(P>BUMB/CbHYDHgeID&4?>B-?1FMWb(?^<>[
T_UDV8cOGD.eB==VB:3<5.(ZH?[^RMeTTT)Q07T(aN?:^EL=?SUN1DQ?T22(WR.f
X+E]8ZEIfV=-)Z-GQJV/I]0:W[Q&BJWD>5.VV.HAE_cVBeVbc_J)OBI=V1OSb,S;
A4F]<b)(>#@,Hbc_?[C[C4(Q?P#U>LT3LRQ53V&>(D2T#?1_;HaUaL2\5Q4[></O
^ZB]-P7\_f8:f_PL7<]b;G@AE/f^Z[YDFMTX_g^fHUFHW)LLd[\5L6)MV_[AOb:#
STe:6O:GOG4.IL,I8D^KWQ<5MM+.7TVBG6,/ff[CM?:D;D\f_NJ17I-ARB#YY;2:
PNN/S:E-f9:g)U1?f#4FXB12.N?gY+.Q\<\[K6+?S^&5JZ7MEQ,7(^:F>@XNC>M,
].[6R>H2=FLP#d)V3E^?#76&.,gOf=C)>EJR^HL77N;B.f:cWXPQ\.IUAZUEPMga
_bUX:B,+?.N[>TL=4US0eTU,BDH##N#0=NG(ODN4ScN,&]S^c^F)MJW^=B;PG0TN
@b^3XS^2e8f(^_7ERHcddFG.7[(0a?(LWV]e]Dfga)a61B,_b^S#>B1B\#WDZ)(+
,VH<A1)B-&Y_=e@;9QCYd@K9bIKU?UQS9-9H.#)7OG[=BeceF1K>d_TH_BGAS^b\
=ZW,4B;=_O\.fHQI#PBUOY2f5Hf(=48/CY,?]NFeYfcN#K\a3\3MD/:@bIg>D@E>
fOYSDce>X]eTba1eA6d@#ZdSXU\D^RcS6@BZ7^Xd_<gKBBL2B9Rf[M;.E8]\If\5
8T9XVJP5W+&6Lc7TN,86M,B-VT:;G-U^M.1T>=#YG+2^1Y?WC=c;B](K]&Sg&:TT
EK[L5<G<Y1PDX92W2@JacEbVXBeG7K1\EJ[D:e/,3IX3:6]YP-X.85H:;4JM?Q&4
>4@870>ENX#_CVT?L6b_dZD+Bb9WKAf<?WI0M_;[;GgWeA0Mea_N/@9ZZ8:F_6fe
MC4+_I6B@A#SO].gF^OfAAcOe4<8e.V?#LN5W364f@OOBgSDJMZV>\aZYOSXRO&<
\;?>&2Gd2M,d8\/>W<OOT4a3#5VGW7)S0,W,]X]&JE7BJ)WCWaLP+Q&ET&d9.@^+
,3CW17d<\RE_TR6ILDOI@P=L8_WUQLC_/LH@WKO[KX(dWB-,b69b.c].(+BLB)7(
?cb_)/a(D&?g6Y9BP(2_\ISJ:a/)L8C=53AZ1NQcKCU-CUDH^fSC//&Q00WD/5\,
:S[G42;PJ9>5XWa&P=EV.3J0\X(bK_X?R-e(@\V[?VWeSJ@(?A+,^<(+W/?/eX>O
+Q75;DG^.eB.RB)[W\(/F#ac3B1//7_3HTBEZfNR.XT]QE7[3:e+1f;Xf52EK98C
4:S2CHCP69W[3.:__W86ZB0U0,Lf(Fe2dOZZ:24X[L)HE(.-.-[S].AG-9XIC>S+
Df\OLRf-[O958K;2&Z.FL-:<K/FXMT.QZ]EgIg?/VE1Q/G@TG.].M=[cX8CZO9U)
XZWLG4MJL&X34#?4==.\\G7#GPMb),J]1^(0+Wf+:c+cc-?d8V]=_A]eC>B0\[HJ
S3]KWB3V9gD8_OXJeWB6Sg1=NVVCAb)>Y6+2Z2_+1LZd);[QVLTW_;(DXX8<Rd\,
GM<2X;W<_eQ>RKdCL1]f?1B#.QG:=#\+PN,++VV2c#\aE7O(X#KHR-V_1:?=Ia(,
DXTd<CHMHT@-BTK[1_ALcR\Y[7M9-RGE&/#<1QCE7GPc?gg1fgP\/BLOXK9dCG:^
:;dQFYT=OG\A38O5#4C#aB[/ZSRS25>RCfRU3@45>Mb#9V<g-I/UOSMB:<RPXI/.
U>LV7OL8R<-5YV698KH\O-=L;b<HXQY+#DSB7T,P+]RC//REM4,G7YUW=^@[CT&R
NCeT^L?MK2[J^YYPB9c=T@KfdKDI;N./LAU:W5JTE:d9.KE1(8].6FM0@fITe0YQ
HWE+GZ6E[[(YXJS;U=A0=M0+R1E5@6H&VG0]09;W>9H726,dX(U&]6&F4T7)--8+
K-:&_ATZJWD:/+T-^B&A8:\7Q+4]P</L)OB6+@@^JDA@&VTJE3\bU(]-D6)O^BL]
=1OWDKBI84E-7N+OdHH4,\KRa#55?Y\EfNY-U(?S.eZaB5^+,4#UBU0Cb)LDAQMV
DfK,Yf;>;ALPb4(2,4b+2/PeEd3-13dVf\MUCK.W_93,@KL).U9YVD6\gN4dA[;-
N;NO/eOM@_0L?CWL>;MVDb5IIKPB4L(O-]_/3UF1MN=6Ka9CMOCGADb(RcFJZeI6
B-OFfV;@+LA\Z7&MQWLO^RQaH=KO3&cF7@-52D?[K:@.7KOOA5^MX),(aGb7G?a_
:T3)Kg[OMS3+D+OD<E:Y(F#,=MOC8X<(@=DG,WM3XJd4PEcLI:-@Q[2LF7gF+)G=
Ec/N?KZP1)A;\CLRI7#0OWD67C/O-OXUcCd^+\C;8,?L=Q/4#8X&2\VH[2e&aDKe
3=FK.<-S]g93PIP+OVHGcL/PdOXGWBI;0A3AAP?3)&4K:>gIC<aKQ2,,#XB&XGF/
a&fAG;VM2e?gDQR3=DSG2(d84]BG45QE(AM(SaUH0=:>LL/5XQ&8ZA3VRg5CLd#/
HNNL3g21.ZF2U]Q\2cWeZJ4;(&ATdfTaSH2[20A(e[Fe37-:Q:c?:9M:#VHaB[)G
#MD4=TW(?8A63&-cE),3fB6S>8]>3a([EP^-+W=>H^WbQZYN^\?3EUSFVe5M+/F\
4QI5f>OPC#?fS80^_P4G&2Ua>AALKX7B5=,O;\E,0X>_f.@6ZKeDJgS:C>=gCM;\
,6,U#Y>.(G?f?<R-+?K_dGc2\P]#dg;K#FZZgCI:2\&\c(\_Hf;^H10cCSRJLM^\
OZSHdXU>^NF\>CW\I]9^/,X:HG>a,ITITA?H1fEUXI22F1Vg>Ncd\)=_LPMCO/Dc
HTC.FX5]KX9a9deeA+JVI^U[,RWVIL>=#FY6bL1dE6O.PTg;[GCO):TGY@=_be@4
,0Xa8Q_JQ\01^C@4X:Wc/4AV]YJGR7V@YG6)Z\0=QI\U<@1KO[b[97DBF\7-P]ZL
g.6VXb@22/(9EP4JQWg\fI5)2?<1^TJ#X]/RBE342)+A;330X2g>:e6/IGf)P5If
MY<>5)(O)G30TXf5L.R+5\+b1RZ4+dH=B^WD/_P#.=R1YA0O>,#MG8I2>-_R31P(
)QH+,.>fK@I;4FE-B\6NC;0ZGfUd9X=<EH^UNWQ:HZFLG>&#H2aFB2>D2eLI&IKb
-3JIM/Z]bQaCU,gJ>c8<6HZ0:a#V=7EM.5]O\R3Cbe35R00H&7(JTM/3#/R\W0+.
]4^_:#10I#C59LdK-6XAZS]_\51&<:D^J>&@DXfK>LM_)<bGNa?S[R@\&Z+XJ0]D
ZLA17&FZ>G-M5[(e\XPT[\BMa2D+;),FFX<9edUY@--5^#+O1F=T_F^@+-L7K183
<[b80TH#PgR+^,_f[b_OU>WEC@6VC4eP?g)dI:/bSL79dXJ@6]bHW+FSAbf&&+F@
;e#f/CI=>9U^(YY/FRBL@?>3AL?:0A7]d&Z)J_W,#6\9&[\Tf.MTS)+2C#H,)QL&
FS-bD>+(B_W2W-a+\Db8d_MY=\]OLY+?^80JF[.e5HMP(:5FWANDfX^70\]U<e:H
?=?.>WC;5Q:2#/_/)QRX:TRQYFO,OPbge&C27<OR14:Z8Lg?+Z8?92KSMS)R)PRD
fMN@bP&_ec1JC-46\aW,E37.3;-B96VML(2#&.:>C.2TL-)=](.9#NTdYZ:OU#^&
/9+g.E+a?;<,Ic[[MCD:Se[CKDV>TF=]E/KG,?/5JY/,J6g4G[=9S/?d2+4^c=O:
84[8X=E&+&@@c=Q)RBR8SQGAP)CG(<EFRPLRAZ3XXC]gX9??FFSV^<OeT\P[4&C?
]dNJ8a:,@?A6fP:HX\_HRXG3D/>W6LFN.1]OOH\[/LE7dW@:&[#1W0H=1)GAC0&A
JX1+YX@H</L1g#A5J1_SdHT+7N1\4U:PKHTA,5K;/S]7ET@F5)Ub>&ALIBW2AEZ]
O^M2XGON,J2+Z;dY<^cb=Wf:,A?N):IAQLWI]1b9Q/<8_e#HD76RU,Bg6A;^/<SW
-RE_H5gdSfA6JBMdcX&S1XE9/4T.U[gZE-/g3N#H\4[,67NM0J=bC&c^[ZBU09(I
b;#g()a]dL:8S?a7?_QR)-72cbLA.&eBRK+6dRdRQ]PeSb:H[KOX<MRT]a+F8XRH
.DJLUSW^9O=6CU5)1&:ZULg9KKOf7IJ^cc3R1d&C9-5#=1U?/->Z)G#dBP@dUZ^<
XDGDHPOTd3TFNY.;SS[?G;b?8c#I0e@9/:@S>)JFDQZH0_RU9@>-WV44+T7\R#D<
)]T@.)Z1HTfReK0KC:SP1M)Oabc.Le7(ETM2_L=R\A9d2^VaEW0/9g3)e+bR(\CD
B)bdK&]aV5IPB][6N;VL?9P/0EaE,g+C3K;7;O4WM/:C&O2e:<0deMPI.XLdV=Bf
f^<;<^f:(C&g/+QJ@OAbTag@;[T]Ke2F9&a\.R41,eOGG>^)5?2P5-KFSWe1>C_T
O-6e0.ZL^:UZ_=E@KKO28d#AIT/(<Pc;8\N=BC>d;cVd.&<]LPa9F8af>4-.9fX[
2MW_[7@<]G.cf+]<H,&R18FGH[a_P7?EK;@bUgH5HOB.JG)ee/Xe:dN-M;XBN2P5
N)35,CP7UZJU>IdJdM+If?9[9N/ab)B=EO/&4N0A=\8NI;.8]3/QKK5)M,^,[e]T
D;<8f^-R;U5TL9]&@9W.G9cU:8,O:QP&TK+,2:Y,gdI_2L/,M9C-;,+0O9UZ4(T?
g/c\FP(gTUb8IM[/\+cWF3eeLY#3J77@5M<(IG;K9QP47<,>ZTBFH;,0(.P=G,&V
bK2Z2>:+>.MR8S+d&2@gFEcJgKb\JUf0eWd023-1(_2a1Ug)+?A+\.?0g=YGKHKI
)aK/(._-IS=/53)VT>M0E4DKe+,bTb;96/,O=UbK1bSfJ/<<Y(^-^+6NY3bcW#_K
LS.#\@W,&T]VP:.\=)J0P,\/SF&(4W,fCJ4>T9VC.0TCO#J0g=0OB[JQaE.fcCW+
e8[)>8-C&DY]23G89A7dg<G191SZB\RTHfVZ^]2A(ZOLC(PbX&IW;gV4c2,b92N+
/SNg73[a>PfX9OY^.e.5=g;bXf\9#H?WP[DL^.g5U=<-VCSAR(?TNWG:g=9TKI=I
..4?XbO:79<4I\71<#-9-,Dbe0:Bb87?c08+0gEOVBeKT0WM=581UO?M\N2>5T1Q
NYSQ+GG0;:VZN1#[bFe=,8[X1Xa(]:gO#IVAJ]ZXc:/;B0(bULW#7JL&N3X2EI@/
SJd\>J4J#()HDA/3;aJ(])#MF,M_gYR6C5cHSX1bA@GLGbE>A(FF&@c[7FY1.F1\
2HLH(C98TA)J#HS633LU@MC@K9Vd6Z0MM.:CZ@6Lf-=VDHM2^0ES_7_86KVY\BF>
Z4Z(bg_QYPS\YL5,d2QN?gRNP.Y=A8<CQZ\0G>RS[+W_9<dIS(2&#L0NPZ-Uc,@(
AM2XV[UK;;gQR)VOOT+QJQ_6082c8@X8b8TV=-0#M1UTc]G:^4GeJB?dQ-OMUATI
J&NNK1AeZLHKW3OCf,P9Wf)/]]f-S/7bY[f[[>^.^FMT,HI,1e7bL5RWWIg.5@0>
N7Q6MbYZ,D5cT;:2+7&SgVgaK=QfDQ@agQ\&4MB4GU<.K(f>+FS==AHU+=D0[SYO
<++)RTRXPg-e#eQ9\QU[7.15<5NP-7#5;0fMbU=fWO-Cc/)\EQcVGcTUWXBO_2#X
9:]J:fT73X3H;b?-<(PeV^^g@,M^c\VXXP&#gURf3ICKfJ:KYB:\G,EUF/9BFgQ&
F:eXA]<?fST-4OQ(?_N;Fb0W\IcM3gg)C=<>cJ1[NAV)<@]\TVL<g64H1ccJ82bf
c4P+=3#e3Z]a.WYLM5GR)fMWM./bA=LKS^\WA^RXHaPVR1;R]b)IXd&g)Nc-2JQ0
F6M/3XfB(b]OGCS5#OH<R@R7fW,0#)91KT>,_SERWU5N)ZZH#V>Z+#?HWbYPNFaQ
V>^5VX=7R>.+/@_VY8_1K&G_J?\.FZ]g6V8CM0(YTbJ3Wd<BeG/XHf96#7L]MA<3
R(.S8&APC&6bgDQ2WF^:LTVFMKUISE0&B)c706^=g(DPQB&.&CT_3bfJ,)ccO@L8
#Ug>#F\MB,3K&R)JS2<W^76+,B+0<#T;?K8)N\I@P1NVC4PQ_ZGZ-F,DN+M.aF2T
7YKHSJ&T1HXL]F])RXaEW85I:e3CBACUaP\-d@WbLgc10c+]&c3#,L5^NNgW<P7#
1K_QfcEF&YcX5[I.)_;b9..OcCQcgODGL2Y:7Of,(\J[K;e(D=R0+J-.[K>/e;bL
:M[P=^e^A,aHUe1_O&\3Q,2e#\=DY#[c3GGD]8<VGUQ+Z3Z@A#<AD8NH:O/gBX:S
8Ig<[@\.ODM0=9W;4D(/.3;1),JUU3>ZgA;C,\V>5?0F##;6(1Y[YWC+:=7Ya^:/
>X(]9WXeaFIFGQaR#eTUHN:,D_)T&WK8B]-6,?4^M3-/4P6A=01cOf^H3^a;V0,c
0cTc?IGBcQ0,;7eRS=]7J-@OZN]))@IBL\X1TJ;2TCYI@DHbec(V2R>T9YBP.eg)
N2U/12dJ49PJ-36WC]4PJWWZ\Yc;-[C(^0)e\[(gDZ24cM0b;-./BY#3g#H2.60e
QO_PNfS2E43cR^M>\FY--]^68(:921d4,Q^T=B]3F/@RHd@&IC.Ae0M8dENe-+)U
A=g5\<66,=J,8727gCW-/RDZ^^4:Q?N\T733dLL2)5;N&G+((g,X:UY9D(689S-[
89JLSFFb1PKWK;bQIdbNaQY5=^3M[0G13\fFH669a/.f9(0f)4A/Ya;a]8:P#HV[
;D6Y7f<YbMg1)G10[UCe\\0795#cf(=+(CK)HWb#I<d28UBaD-]@Ae-\:9C())2(
-H7Y\?E55O/9UXUX6BJBS<)FWPHD.J?=BcH<IA>?B(c,^WLb>g@0MK9=B:YXMec<
)G_5QU.<Ba&Ha-^27&#Dae(70N-+V/(bFK/2RR:UMRKJJ7e#8&Ac3O?b201\\W,7
FT[-f/>\FV2CME_6,N<Z]Mcb#C7.c<#c+,-LMK;[?bfMPTQT-3[/C?.UL^Q<f+Q2
RT>Q]<e#V>JIK,bP:d0(Sc\bS:NXd[T3B+FeQ:+M_/R_>c@#B&O]I^];]f:Z].Z\
VVOT16UCQKC,L(]cTC/BH5_QNRQ\JD65ZDY(4L1NU>2@VeA24PA8C.[U0E</GccT
<eDb_=;^XWM)4<:L-O0AgFT__f@2@B_Fg6;G_-GX_If5W<^#7@WB;4ZcKMX[:H25
4Je>f0b5cBJ5J6_Y#Q[[TA1O&aQRTGBdc>a:dM7#D2eJ[f@faI2.F1YgZ1;:)X(G
^GQ>-Z1_@W[#1ENB?W^TJ=S0>43ZHcA^JCVNM5GT#cGR/9#cZD^[@?6]2R>V#3N:
d-MMJdb>G>P;]SO#W-A+&NdE-JfUMD:,#IWZ6<e./)ZJ/U^94.KN4\)0IL+WB&e?
6S>V>T>Y+.HW7dMBU4)(CB91&.8YO74.QeJ&MJN-LG[ObHGcBU]Q<T[00SO+3]Be
A\6a?E9;ZB&3=J:ZYK2VCDcUeLQT\_V,#(-1W?gb?0V)I(E.OX/eH5.:IQIZSQ&E
cRKTJV&83)SE/-XU#FebaEBe06eW2e:,<]+?&3[MYD@PQLPg#@2^?SWW3N0ggdDG
B\eO^3bDEPGX]TZPRS1UE_83#1XQG34<4-G/X^GcT?Sb1NC-4B,.>JN(T-43:TBe
3WdGYaW73K+-GNG.=g^\P2K5LGP7?TOHZLNIg,B?=O,\-,]G+,[^O+<7?B+UAV+I
A\+3#[=/D=M/b>g4>3cJ2:G;^f)^,/cdG&>Y7d33_3#:=Z,6fXC1N&CX6M_A#YPS
We_[<Z4X\7^Y4]ZK?8VPL\RAB1RO=X#;6fU_,1?_cQc)>8_,XYN;:SRB):8H]3<A
c9]1_XSY:P\0Z>,_@3-H[&7L2f[OL#1fH3A#QI0dON/_YR4K=DPK4TH?]3bcc8d7
M&+f8);g#[9geHOg5F(W/(6,MVEZb>3?H)&E[QN@AK]8^K2,L3.N0cHSbH_1N9bc
g,,6WNH():4P;O1RV,&9WEd;33R^bgW=A;0-_8XKQ[5L10N=B<7d2b#JMZT=G\1U
HI^[AGT(+>[[d3E+UV@B+DeW@_Q&ZM10(N(fE>ZU^dLM1RdfH#\M_d;HNWC9?bX>
B;/_32SMaOa\J;2_PBI:-1d8XcG9cCSPdd?:(eb7?0TFHf<KGg8BX4Y#Za[PgXZP
.@B/-63D]T1Hgb:e)]_THU9(7H]S9K)F4/2]V.]LHL<J+3M(3b]JHYGNdSKYC#]>
_Ag#F9WfZ@-=K>+<,e#XA_WB/+8WH_c<RZ52F(H:HH6CGdE]&KMIU-OOUFC&89U-
AM0e+\I/VBBe>#XH]>4#A:#SW)bXTGa=HH0KYMB=PcLNWI>J<a:ad4OYdGPf,Jd\
\(^1e<H/_+/V]([&V6,6XY61-<I7aaZ32:R@=cJ?__A.V/8-&AZA8\#?07<-@,J6
.?&C_])ME;f<UTeVDV<WgZUW+/CQTTJ?C#N_6>TYT7+f@17/>DUDQ]dI.>@]?OAG
^1P]0?2:<JFM#2c/JReK/;M..)fbI^FgbL3QbM,_JbP_2-=8Lc7.(T/(a+]HV=DQ
@OVG_-]9J[E=.>2=TXY3+]]8FGEOZ2;VP&KFAHd7.cX:DW4(0:)@&=C](2Z5ECCb
]P+C7Id@Qg3VcA=CB:;9]1L55WS_c9R8c7LRK+IV,ZY-^@J_6+B?:a_61LZRC^E&
UaV5e],TSMGfKEP^cD-7^[HZE(:1>0Z-X7RE<9M54FQ,e^0/Cb@7+2-0C0RTQIPZ
<Ud;+;abO=&IC_@4I^9)aZSR5AJ@>91-Ba#P:NL4b;FVN2,<W7I:W,1Q:9C;&aWg
TECa;eGb;Gg/@UR;_QZGV:3ZGW]-Z/R1,;A_:73HZPFWb&>/dQ#B0<:W5f]Z(e5?
U]ELR[PcI(LD5=T-&QNP@aYTg+4A4g0I],24PM,N6_62;PUF5;ZYHgf06IgPY1fa
/#/A_>D.[0eX.6[X^VMbHba@=,::D2&U&bXV6e,Y>V(Mc>d_MJfNWE3L9F&@.IH;
-:?<e?6Z5C1O6Qc0(\=-1WRfJ7641J_D]&&cS1X:304Ja=;)9OBC\LYB]N>QV/eK
)?a4RR?5:d,9XXMe]UK17-K+N1JGge#7L:G^EB<YGTgc5,QLO\..T^1&(HL.HJ;S
aKde^&AX6E@Y2c68,SCgT@EXJO:/9V?]5cVB)@GU#S:9AgB3W=bMYV^cA2GC7Q9=
BUFT9R;L^V2Cf.cNR/L7(R;XTgG\U@2RJGe,]OP)O^>>ADg6OJO;5]9(6@BAGHSM
IX5d]S(ffJTX/+dQC<]I?]\0G?)UD8;>fF?aM;5MYc_M@8&EOX;@R=GZ)ZB,0_Ba
UfgLEN>B6)W1dJ;gU/-#BVSATUHbW:S4e683U>6/Bb)S-I,fB->K/d;(dM&;BF+_
6)X-8b\59Z/U?G\/K-:4_I&3>;^G:bca?A6[3Bdg_<QeUWHFC6WLMd>6?9PC^Vdd
Q702P#^?KM1;@1PA,)M2MV/(2#YC,gGH(TBQ>CS[(MZ7]Z.>Q\QPZCeU/G\NT/7I
^SL&\S2D54VVGV8X>gQE;N-85&a^<1@)@&<aLDK@MaM(3/P5#FW2D:RCV15PeS3Q
D/IYFCaB(2UO6.=N=EXYI.efAT-aZ_[Q]a3B&FEDCG>M(>@Y4)#JKQO5D+7U87dM
L[FOCUA,Dc>I?:H>Df8\1)O\)[SHP+fO2ePfTA:BcaI+DW^/-B2CHEfa,<6_(DeN
.EaAB0\9A</e9>8a&PYJA_aB(ZAOC=^L-(S^9>L7.#;I,Z,[SSB/N3X,G#@R?6&Q
\V/&^_E4Q>DfCXZ@<:FG9D=MF]_9Ka&>X\;ggWKOb3;(\CC9[]FPM#FZ<c]<BQ5V
W#?RZF&=Z?IFaE8.8V&d7=9dSJa>eJJ79g+3R/1gbCK5(cf>8YG<dHPXD=Idg)S\
b4ce##]G[>YYa/NFA+?gLGC0gOE,9<4>D:=/Q]1M==O\X?M2eYI\4>#A&>,[U,:2
F45aYeg-NfEC+VHeV3>O7W(7YO(I64FFS?dOV46NNaIe1E=0&,GEda1FH.G<e;1T
/AV,I;#\@O>S\PJbC[Z\<,M_6>Q(=NN&dD7@fEP,Y/X;DKIZJ6^84HcWI@Ba)^6f
Ieb];dM;KXVBDQ4?0U9#;eXeR8W<VPS3Q^VEV??(3M?O>,Q;T9^^N4Z#b);N3/4L
8:2HJ>2=X#fSC[Z&e8_7>;AS;4LS1;dbQ_P.34cZ-OJRSfc/W=Z.HUP1]:B@Bb2N
Q/LSOU1cB7K]@Fc>A^RaB&&QWOCI9>7,B9,#YIAJe5b5QRM=BQ1aI5OJ_?bgTJV9
TEEWD>C2PDDB+ZKadJbLF_NN<<];#6[.Bf4EMGgbeg:Y;CEg\cW[#YDM>7MD8X@g
Z:UQ390VX+KG.#BT=Kdg8FBF1STb<87c#&a0QT-A#eeX=@>CN#\_\YZD84H>TQbD
)I4:fbTA?bG#&be;ccL:MFRW7]VB[4B\^=CC(JALYVD1@F+FZ6\8BYad6SE7<8-g
RPH89B2)-c-9G,WTC&5BGM5_(]2EgKZQJ;Ed]YZaY_<OW+=\LNfY-UXOeTPNZ0YO
C#9&.S9+E-H0g1Ce9\c:0>dXe,/.6K.S3<C[>?YFbEO^T3Q\Q:LeN[.g?[J3H+Y<
b#G+?8GJHO]Z?_(R)6_DQ(<R4;b9H3(QP<;b<8S92)g,CM=W(;-/G;c-aJU\f?HP
U221LObd[A\M4;:A7S31NY-aJH7VQ4HR-W8<g8>P-L(HLH<14C[.#QYFH+\>6JW5
3SU)V\Y?B4ABPXYCJ;K@fgf&&B[>EOL)G#+U5g4.&dZ8^@Y8eY[C&=9d]Q\egUEL
ZT4Z6,VQ6_>dYeRN<N#ZX25EBbQYKeX\7L#_GH9;:.+KAce=-S(4GAK;d11+//U9
fEB7.<:E.8-2:Y&#aNS:9>;R0_;HYN:ASPdTA)OKH[-#.FgHM67MXQ.2.C9eB.eN
[Y/>5=LcLH::5Q<GF/Yb9^8MaEe.K2c>TbK=O^=(LE/f14@C<L)b5U[8S8NCW;D@
=e&5COeB=2-0+5JEC>J]e=6(7FY5a9:Y[/Xeb9\#Q,3/>&W^S\(.+G4OefISCYMM
7dMd]BU/_UE@Q#F6FO7L#UX4K-T<ZA5gYF,dg3YI)e4?C,-+AWN@[MPMM#FceRXZ
,,OBX;-W4c+S=9ZaFUaS2ZN_aR9^NbWQ.ccK_f0\RfXV9MIPdW^I(ST9ZI]C2@F&
M#7,C_E#\9ga,d/8fKIOC<VT^003.5fB..IW54F5[K\Uef#?.1;PO+8P?75ZY&);
&A]FCXI9CH73N?S[)WH;O(>A(U22dS:8#090^XbRaT<aF^P:8[:e.R\V5bRC]8[O
.gDcLc4XX3e>>D(f-E_I.=E9^A^PK#4NJg@3#9TC(6ZW8@E_<(I]<9?(QL\YEE>M
;P(]eLMc<&9c#[V.C#B^MKJefe<FO:c+.T51TB_9DF^N74_AXP4CgM?eT?ZUc8#0
\14/1Z&+d\U^S^6>QM7]59LOWQ[ZDD@DI6(CMCF/SF1Q9PTD5^Q5QWFH:R0(#:;=
9_f4HO6#_ccf&Y;;3T[O:g)R2PfKDY\(/-^:X7fVW5:6DB76#M2]AbU7a:5QQ<PQ
-G(-B;#K:Y0-aVd@K#.3A2JE5WOX4]-<230WZYU+A6(.UD^-UF@+\\/b0X^(N<a-
3abReEU_/A;?EgAKY7P4d#>NP_7g+5(\aRe7ARD2?Z:AK<UEFgL1@XS_=A,@9FdW
,-EMc.b;9De@BL;,STE\BUeP?L(20dS@\WT/cPBf^9.I4:X#gcCFVJ4cZ[ULYReP
a:K97Z[BY;WACVR&K1-(\^bD?KP<07&4b3@?LQc4#/_5Q:b?8\4edS]JYVE>#V^c
e?R#@K[R)]YH6JNc0c^dPNX]\HEe,4R:L^aB/9b=b6B7VE2PDBN=DOB7OFAfII6P
;Q]0<eC\HGN\BN<R)[^f9HR_(0XcQ2U22T[<A3^KA4TPF//J@9=WD^=;:.K?1Nf,
8LQ=eK/3BOV<7KN0=&_0R<?09,96&G_=b[;2bNAXg[R)/\UC,?0b?;00X,@@(GZ]
Qe[&UH>>g^a<SPY^f(3&1CSR[L/P\P=f7GN))bR5&MY1[@:EY<EY>=R3V8GDK>FH
7:<.dQ3G4Pgd;6,Z/[4NE-G(3)7HP7BcK^14FQFJG\B>aLUW]L:=(7K?eML.cJT,
1ZI]IP7XEb5_<U7XDJSdT8);=;?WZc-6dNcgcMb4^WSR;[KLFY3fBa2B<-4^[<E,
#b0a_5LOJaLU=M-I&+&7V+ggI?9UYEL_J;.(KC5>9YN-8Jd58R/JC-)/bTeb3/#[
?aE@@JgP[JD42Nb+_DV1<Od@VFFT1F2&e2BM)=?M4FJ:6b[4Y88F7=:95HY4,QWD
+VP^c2H+M?96Y5T9W=8_/bQg7+J2e:&QU3MB:QCGSRBN6WdbN2(_JSAG;#,IOeZe
G.L=I_3C#f9@K2(EXB?/S;gaJQA&@->VF?8][:HTa_76d&ccS399cfd2<Y&DZ2^g
1[B8,Ega_]/=N9?7CdC;<Lf4.C3:C&0T6M-Id^J5X.E5f5egYW?;abbP[f3:_Rg?
:MBTCb9YGH3A8]WU]D40+D186\IMZJTF5T4>I^)Ig)U-6=@2]R2dc6TJBH:2S)T8
<Z,GF+WTf_PINED@e7Q+AHA6JT86<L2H9,7f,/)E/@6be(b>1T=d-g=gTIWIg9C9
<6?I:>SDNI:bb824077HTa04gaUc0=9UcgULA4&,/P.+bMD<AYRWDH/YP?+I#Z:.
MFTfM=Q6CQ0=;S);)15LX]e1/#aLG>W#5QT+A67cS_4&B2YX>HJ739:B,4_IPFC5
Y,,PE/ECfR[[\0,>3L@cN+d?38U+.OKAB(MR.8fV+Z8E7)5HDfJ&#N)??]\7G3F7
;FZeEO(.>X/5PJ9-^V_=WU,3+0c7^B&),4DLCL[UY?8[VHJ3-D>;9dfU9RJS)YLV
Ec/O?[Ue_a-QJSL:I@D7H(#A-8^ZN\<gC.@&>?4-(7B^2G-5U\.-..NX4<A.(->_
N^W=b#K&/eEH:/23DX:<G1:PPI+8[9SFK.WA/#>#B1T^WZFf#U4426]W1e^Jg,XM
D@R3G:FV?CTfd#IVIX+V<b(?dEb3Y_@@d1(VI#A<;M[]FX&Yb7f<)B-_0A0/D,<N
B15I&bgH]W20a[1b?DF/U6.Q7-9:gJNNOE(cJ/_aEKd8=TbefB3)6ATE^0.=,?6Z
K#BG4LET2UdBN[>3+eRf3[6f3Md=#VBYPU=8:cUEg-J<TSA&7TUDO:(\0,U(acQ#
;gNKWg<\8)(GgBLeG(HVRZ#c,(9(a:IH8BUE.KS&DR>5K+((,S^RA-+ADc+8]-,\
FH5WCD&@U2I>aRSB9=@\VddGdE>8d\Zf3[=F2J2>(4<fRSSI49ee]_agN^#JEZ/1
+[;W8dZGa:If\eT0dD^V62aY,eOJ>9A3d_W;989\O@[_X@L-7S=f;M@>9A&=:P\,
bMEK<XFX;ODbL3XX;80_@?=QP,^c.9a2PfEJ\;TB3a/-F#7\TK0:dffBbHC@8#=/
I8CGg4\3A2-PXb7ZFREY@+#@c3T4UC6O\.#QD(-O[Q6[.9<\2WMFQB&GP_:5);G^
TC)T@[\C,G7/DRa^>=&D<OX2G9]G5>>:/OMEU_0[dQ<UD9.&R7#-WO3R(;,.T#ZO
H:Ig7[<,?5;cD2+9g1LW=)86OC2^>ZWb35-6Y2_\0CM77OJZS+;5A/5DI&2_]c-J
AQNBVKX[KR_H+a)S4-L@CX+1]fA;NGC;Ze_@Z+SC<=;]#X\>/S@KA<=;]dA#Ue9]
CW/ETEW<(=W9f+J9,6^:#[:0X)0U6aBKVFZedA,EXKWNZ)JP=:e:bWd;ZX8)2^X4
gSdX9:KLI)]&F?c6\4VN+d/b>@Y,_W>UW[9b5(&Z<9/OMQ\f,LG-C5(/M\_8cN6d
2,Zfa:<L?O^eFf/.XRI3<^W6be^f[QC@=Adb/JfN0EJK)IS?EO]-AWgOaME\+(-e
<70,=O9VQ\.Ggc8^\E+77H3V28L8)ZRV-TU8196X:Eb0b(EVDI/aeeY])M<Y9YYb
dZ+L,@QLf->^==<VT.=<5>6B(cC+#YB+?QOA8#Y7dB)-UAa[#2DWG#3\4USbFf<:
C.eI;.A@^)\U>/HA5VK>6/)NOHNCF[+aY3:5:]I>g]YF9/R81AKW5V=-7@TfO4H7
b1JF;D-gJI:RgADIG.ESPI0;dC>9+3KR4/0SHd19)HV0:FK)X9U\H);1.^_I&\<R
A:bY2P/_)NfeF;4HCE8N:Bd/.WG/W^KKEIMC5,Oa:EdZbg?SXIZ:^U(CZXgGV7/B
=E.>gO5KY3^T6XZR\W^&1W?-@I0G75DaaOYP&CMb,B&L2F;O6UA@Ub7c?/:6(1aU
@D<3F3A[[F-9<.IZ.DNa1/-9CON\;9Jd5C:W-d_&bD<d?eU5,Qe+a#785577>LV0
TZ@E>aV0&U)Hb@/P^\1K6LJa>?b#Eec)&Pc_C1]T-HR9a4AJ/;SOOKLaS[2H;c,S
I:_X&6=[5#I/)VU1cTP#A?L1LfC6K?&P+)RdbSbLb#;J)_=D2_>I&K]BD47LFF@M
:;#3b^CAV3d^B./a8^I32H)Q@L8WT\)\GQ1JKe;OPe56T?CNVL#b8gaMbeP[bSWB
MINU[9JU9Z>Q+S9L<U]g8MM?TJ-I4<MA]\Z#&7Wb51UM]<+MQ1+2PAAG1LW0:2S.
LGJ#(2b/=Hg4S()QG]de&^dFNaQa#C9I?JZ0TCW+42<fQ&_EJL#+ST9RJBB,^&D-
>:(==9=UI21P)N?g16&UQQ5fe)GAIZNJ@UZe4U\<<5)7c\P;g,3U^R3XC&J]@W3J
)Z,[?SMPFU/1b6#37)Q2<QDfADPFWgE5[ZA-<a1=&XBG+aZ=\YSf_,I/1D(?ZX1&
N&NB[G52(71,g.]+X3RG.DX97ZR0SCVW\#XLU4eOg<R/);(58.dCIE?e>&Q,?#fT
-M283NY2D\OaTa9CD2P>.8.+V3T@9A<2>7/dQSde@#CF7.P98DW05#e;[51]VOId
B>:a/f6D_RP;+:QTG4_=/,+(,9DXB1+a-.R\]R[5S(f\XDB(JT,?Z[bFBaO3TT]^
,.[T]f7K&JdAeLE89JPBO?QQ8QOdS,)G9NRR7=8AfC#@O#bTZT<(]6O#W@_<QAK+
d>W@@SEOPH#0]HJOLc\KA7Y](U#&=COf@A\1V(ZK--RW6Y9<1Afc:E/+Ib^e_PY/
(.]fLYS.E;]HC/+SGHb5B+(BZM2RTC\VLU-fgR:bJ)BYI/4C#,D.:]IT7Q85,d<b
X>2[GU7D1SVOJZ&=/A-LdUKeKA9]FYQOf@S;X=[MUBe/aN(V@2e#G6d;&4JdZADJ
-7fdBH,9FIXS=gWbAR2gM9&7=C-?JQP+=M5\T[Ve\AE:@f>]&c:(YUZ;>)6JGCSV
,aWM@AL1dC1b8OL(5VVB>&W3G@e>4##M/fZ[1&5NK>c7B/R6AMgXFg01[+^H_@C>
HFVeP:X/)>cV_TA1R);&XMW:TJH?/)-<SJb)HG,&AL2>e1MH](N@@b<MX?#<W?<L
H7(Z@=\Y4=Y0b;a>K[Q?S3AR>^0KCO5WeV]I.^Db\_gaM\0I+[_\c;3A3P(/D1ZA
=6;VJ@&?cH[dFU4\/F=(>(A@7A]H-NY&(NBb9>W;@b&#(Q+Q?W.;GW3)7.-/U0+I
5CFXab(KH]I0JTG]LJ8?+6bG6EK\UO_(QES&QV7:4OM&F:LZZ=BTdK][_4>Z+1Y1
R@JH>9@[C\57TQ6)RWQON//=MY<L1:28THB/H]5^TK<aON?bIGgPWR6aIE2:P:#I
;,@/f[c6[W\HT77B:^d9V/?I]eZYG-9ee2eW>G3Ldc[@b&5U^5O^]J;S0,BO40Re
Z\]==,+HM/E:MFQFOMC3\Z&R#G/V(GYHCGTT?3E[\8-C<b_&FPaX;JK=dS)R?<DO
Q5X@HI(LO4A6.J]SSCS5Hc2[<g6HF9@EEU+6:>6D:&dG2<6TJ@YK<ISf/B5<-K5=
0Y+4,gW:E.S0ca]\<[1V=1&L75HR,fVXGKLIRD_C?=,g]1:O^P80g=YS[9KAQKAD
;95W+Eg)_QNI\TTgNX0MN)06/3I^-;4JDY#g7YCX;U\TO</FN,;ED)?_Q_Jd=24@
F@^&8e<UeZZb)Ue)YDdC[ID#.U_90RKOR-He;D-9F.I&M0Yc1b)C40SSa,)6JH-a
28:g4e)[<L=R?HQ-YWF(_U@d(F?PPf8CN3H<cMOMc5B5bdEW[-:BFMY/e(<bSPH1
aLbH75E7UE:?Q]L/_LF7,QfY=gXYS,DQ<T+38a(@2e;@B]\;;cb#C,@RVH5([1<-
0\SYBS[Y4e],;5G?EOMVaW:1:NK@SZV[_9+FP@S\c;,gMF<OJW@=8TTH#;NCNHJ(
@1N-1P;Q#>/LNCgP)+TV-::3:LUY0BU0?9M75T(TN<F(<M],VX1gOeY_H(0[Ue;J
^DAD/SYO^)Vg+5<C<@TUHA=?RXLB?BO08(^]:3QfH@4)MT?\?HR?S#57H6-]:O68
@W6SO8Y/^JYR?79@7^?fcY6aXd7NA7bIFOJE343H;]43<.J)dBgN<:EJ96_a75/(
_^5^@:3UQLAe</+f,J5a2EUEV^Q\5BBGYL_QIaPb?[EJU,?N_bV3c/SPMg+G<_#4
&1&c/eYAdObbgQ75WRf=P,CRW3G#NLHN#dRSU=aP6.S^d?;8O&]+01c&2M,6f03)
?-C.66DW]KWb/BVf+NaYL#(Q;@^56,Qb0T:1T22e__7?,H6NO4J^(5S#PE]JC<Zb
T5CdOYL&/+L7V=,=V1YEWBR_(b(e3=YbSf?98CWDJ3d1G65URCXKG8&fL#cb(^F0
E@E+c6S;&2;)K&YLP<FF2M/PcPJf6W.OfNGUg/BLVRVV,FA8S9=2/JBJIPH7Y2Qe
;a3I]@1Mag\-F.&74U2J\B5bb=6D1DAb:[=[43#]YJOc^.2=bD(QG<Y@g5f::5aJ
,;NKI&F5TZ3E9PXd0)[HB\9>X/([d;JO3E)C\^48gK\#(8NQ(0]7gT4;Nc/J1a2M
c<CA4YQ(O+Q[_bgZTQ=J4DYYP?dJPKOG7S5+#4GC@5gB//KJ1LQV-1U(QQ.A9OG1
2](,56V/g]&6X]-SFM^RUU)@N,T6)1@[Z4g:NAS2KAE8Q<dIG_:\6;WeGdW\;2+a
:?(2V&^3;ca/<\2P(OFPH:E^Y:ICE>T2V(e#/_&e)/;1UTXT]e?VC+NDB&1?UE?V
+7D-H4a-Z44d9_QF>/FK@7ZDU8Q@D>OMga1R1IQUT07b(8^ZK:UHM];1OQH3A,)5
@;E^.O/C9g,(+@J=74]6STb=FI-PGd\EQOagFbHZJISLTR<<PM/G)>FO3e,6TGWf
7.WZe:g+S<T-:H9;GLGSLB@;;M?:ea-9[X:[>ETW^dD1)?^7c2+TJA8#aQ[a.M>,
KL9@)J5-;7TbOc&8c/JPE)R7G\eB]H[\PIMV&.V+;6BFJ4Yd@W:>MQIJU.KSXc<]
B\(=9.Pgg2O^V1/7V<CYf@IDO6]ASF_GWY6OM4+:d\>\aeOQ2FecW>^SH>J/K.NM
P18IMOPJ7=TXF_069TC5R/f-Ug./=4#/+&F0C(Z&Pd,aA+.a.[RFeHa+N=+Ia08g
g58O]b>&8[3D#5QV^d>D^CYD34Q15C.AIQb,D)dT7T-28HZ&@+FR(8W,eH8=B2FM
L^BgR5B3dVeJ=7GX=UU-/6=RO33Q3ZA/::_+fTA@P-L1QTdY-4#.ZI47MM_V:a_Z
=X[M@.0,KAWD/4QcCH)DO81Ng:GMY+73aGB.^B5&cTCdS/-@eYLTX^=DNY0Yb-b(
1LfdMI3S=E/=CE8AI]M)?c9[C&g:NL)KY&NE#K=O77F,PeNg8P8B+CgMD<(,@GT5
U0@+X43BLQROPJTJ#:dWPS(O6/93#0S8Z,DJA(&NDWCC<Wf62CH;1ASBS5fC/R2e
ZOf^RNM.daYbM#+N(G9D[.IIg[4JA?XU1-b50,1<MEO_K:^@&\3K##5@F,L88^#O
E;F/ZCZ/d>O^;/(:&@MXVS[dX,K1-28UIJX=d\4WE#\4AN)E,[N5P=4,a]E]W=f_
b55Q-F3#=O3]G;LC7dXU.MD?HQSf4(Y289EI5e>W7ULaeNU2=[de,EH)+;1E=3Bb
MU;Jg1b]D2E8-EZfHYPNZdFQ2KU3O#MC()5X?<4;UPI+A.7Z6([b?.S(ZUPM&^.C
G32S&b13OFOU/YV27LbGZ:c,L>2S-?BbIA<V_D>KL5YLQ:_UdVX9VN-(SGK;Z[TS
D225M;QOX387f99<#6J^3J<A,a&<b(#X^<Z1^:H-?5NH3(WWBXEgcAE4Y?O^(/Ig
dbO=X2,^JO+OD^005)dCURWN[-\NY#eaDdO[\I]EK\#;Jg9E]K1b:;:6?eHDS7a+
3],d=[3X\@.<PG/DB=<K,W[B:UZD[Q#dR6G#G816MOL3@LFX:@_.&TA>NG#;Y2/Y
FG41I(L3<&L-D5++9[H30K/MY2,HWFCO^4(gBCONY8-<Nee>b]3N]OK\M?#KN9d.
gOLe&+&?cKR[dZFf_JBOHDY/N@fG;^f-aPG5[A_54?DEg.ecDIbO?4#^24aS4I(a
[?/U\03H]g&=.Sd]YV-<gY^D<Y+d:=2a;H)C@C6J\aM2^B#\)J1/\Q5S6&IU>+_Q
S@RF^GT)3F&0NEC^9+VTCGBac>\@4C2HC^STY:>aF<Z&.P^:fP:dQN&g\CM7g/^U
;-ARR^W/AM7361#a1(9U6F-C90R(adBcT5;8XN[6@^4[[QBV^A\Ke0e].CcN9CHS
9=;a?H2::fcYec)cO\D4\C<Ac/S3U@11E<N3A]@b28Qg-@H=SK8?Y?R2Q7g&1]=]
L>G8-\=bM.?+[9V&:d?ESH9@X_cb_?HOOOUC:KIG4H#PQg0(FX&LLOW=3PeT3BBW
F7;g0b5c3C0_B2810/fLa:Y>M,+9b#-]TUbS)_BS]QXQ&Wf]ccCS5/]4^cL2T:_8
C]c_R@>-FFFY5Aa[RW(=5SDBYJ8MfB[/=G>U:)?O8()2d:I;aVcB0V<(CPIJ(b0Y
SOTR4)bV^^.F\ff-PEL>aQMceY5)]UUO+JVb;M<_^2+]8KOI^PbIdAB)DKe5)<@5
^E=34VY89e2+eTaNcB40;;2Ka<)V(F83B)Z+<8ULdST:9H(=>(<feHUdAY&?^c1T
B-Q+OX0,/R6<d;HFV/;UXA?X.:#ZGNTD0:X_gZ7+^d4@X4,5V^Eb/R<#2D12PI)7
0-bFZc84[EIPZ8[9FSE;&0.9>>FWLP?C^4SH=M?+F?X?&Q??(0J9KA7-faW^=+FM
2<2^e<<6A;e.VZ9Y)(c.)R4,bJd@I/#LLY:].WcQIM<_.dT2P=)1,c8XS?fI<H^A
QXdE2.?:O6Y9Q7bA<Y3=\ZWD;bQC.=;<7#EcKNQW-,Y,fZ6E&?;\.>,S<;2D5dK+
;Wa^[R)FISSJ>>GT^7BAeLcg___Ua]3RFZ(TGP(3LTHfA_Q[;3^d#(7D]Tg.bX8>
;-_:7^A&H?DUaDD+VA-6E81Qb6,C9Oe^_5WgPDR=H.^,V63-Md,NeRM0=[304B6\
8SP>HN[?I?b.8J;O10Ma6&c39ZO@Qf3\_0GOH:^U4[C-,NIBg.5&7;O;8K.CRSLJ
X^GEf7fDMKW--@#+/O_(H^/4+F]a(NP>XV6N#)6X[gXX?Vf7bd27OR;CeSHeD3fV
dQ<3(03)OCK^KG>4^(E_)8Z]V3AIf4-N@63^b@U7,f?RFK\TRRO[LS9>a2=)d<RV
+)[(EET7)YMO9gFfE@\9b&(D.\NI(3b3&PA&(KQL?S.Xc#^OKV2;/A2L5=1PTU@C
F<_>4_>(@)WCC_Ga[:&9,,:=^cGg#DK-MecI6C[>O\cG&_S0gQA(#bY2>NMZ>;G>
#?TJ2ZY?W#W[=R=VeWT/g)]MEJAH@J<dR\^;V&6,bH+\TcTXVZe2#0>,DO]@B@#0
/<^T]NdW5Q3T,V<I-8>N<TG<4C-VL)<[abSfA-1]MYdUS2&C=CcJ&e?ZYV1Q\=Q/
4dG+;8;gZU:_(UQS[PAP.O1.+M4F9aI8BE18\E4Hd,LJC2/;bW11b>P-#=P)=:GY
E-[6K@E1d9;22_UZCM6RZ-8C#T3\\-:GPX;=)T@AMLNO+<DH#UBHe>L6)cf:U4&+
@5XAU#Pc-M+0I6I]47WVa:G/CK9POFV6@85,FSJTL/7,Med1/4;&aZAGCZD2M;AR
=LZXQg:&DdL3#?\&Mf1&_>SPRXdfS^6YIWA&^YFg<&PPNL-YOAOBHXNaEFB5=_B:
2]@A9We@<AC?T\]M#efC)#1:4,9)#N5]@eSNZ@D-+19T_A\HKc:=dP@G&&&Y00CI
8]3U584+>>7.HWeTMUJ].f+9JVJWE.eScDFYP6>RH:-g\d^fbM<\>VbVK@1V8^Y5
V0=baR4U(g7:HZV4-E2BB>350:8AFeB9@)[O6bO_/UcaLYHL@SS:DV/GW61;1dH;
CN02-0#U]+56+d<2ZX^gg\DTDA70[dc7T\@(g\,X7)F1Yf8<NcdA.dX-O_1X.MEW
A#P0,CIa(AM;b(&aNe[7Q<Kd7HGbY/20A_V3,<a/acW_[2.&]KG6LVST5.HI6Ebc
P]BS\,[).S&dROU/]cL[.(f=SLW:aV-FE)gU[)d&C2f_FPf_Lcg@_YJ&E-D\OA(S
TL9R@aJ=[^6ATY;:3\5;WQT.#9TY?:]]b4UZc@e06&<[^cc6HTY>OCZ/Y[V(PdP(
^=6DK;JD__<XbDT#G)E-&f)]Q\V1:FE[\9#)Z.cI#6?f9/8R)N0WK[e(/1&N@d?7
F]PYBgQRH-T8C1E,GBa3aK,6F=C#@H6.BHdJ4)cDO_3X<:<Q)4([X8,Mg@^MX8EW
^:+gF<^KbCWW4#A:S&VJ,0.8aLPW.#@L?d:,E:W;+57YT^U@50HO]@)>d.32PV5+
c];;c+YZ7KOEZV9C_CR[P/<YPbNaYCWQ&7bL_XB66<^)]XNNX.35-U2egZ5644<c
AWA8_<=QcP9-N2,D3)4aIaM\EC\IBEc]0eD(P8e[^.&W60d@>0bM:IWXB6.HN\H]
07Q,Mea6<)RXT302R12[O+66a1T3H^>-ZV_(A;=R7M>60S<WD6R_f#F4/=V)LAJ1
;Y=>U-.[c:VeI+P^(TX#.J#SOPb4<ZcC7_HF/:)EcAbg<W/8FJ@,XBK6E[C+dS&]
8Q<Gb6/MN_F.7+c?0b:D=9:8C\dZDF4IT,/8+YE2#26GVaTD+=D:A@cSW1eF[..@
=6_L])\D(6]<Q^#@Y]1<dO:?T+;T\2(aeUaBZOe:?Yd:]JAbg,^?27/-F52\J\8A
9>(T.IK4&BJNUPVO2e6JeZa@D8/JRNRfGWbBg;]Q<:e[7MC1Z0P2;6EQD;[b-F?M
fC4FL>G+7G+:Y/;<VR7_?>c(b+B@>#g\J_d5<]HHF\>7aU1;#PP43fU+.]SV/D:]
W4I8[d\SFMFDKc8ME&11,#1SC&(OJL0UHC;NW;5O+\ZdIHL]G0eFU,:&XT&<2I2=
@JcfE?.LfgJA=0g.JCMf7DTXg/P5G84_bgX;PC^3I/T@)Q]8>Y#N,Me]RRNX8RbK
JI(BK#d6P0_-?(f[8NT.)Z(L4ESCHZ5;6JLFH[G)RK6=dKb#JAe;09,MfYD4\a,6
B>dZG-b0MNPX\f0W-bWffI0MS.Qg^\cH#G]&W_G1RSNU3U^07b7MLE_ICCA0G8]b
2@2QMIYB_Z<]U]0>WP#egC)6\B(3-9P4.7)ZFVGR82W/7f>eK^NF(M_6VG(HCQ\8
5d_)(^fA8@=MNHEM_?FL2V8#bRa)6#YcdO)[.)bNYN95;9+OZdADY4gJ+1(gFH]6
SXAPYHBTL2(5?,&^+]#Oa,F8I>BQ-a[7B\^[S^EWJX-Be1X)Q+5^dHLNZW:2;:e=
>NRZgSeIX<[4Q](CQNBHHMEB@\g,QJ@He34b.=DGYFHFUZ&bLRaRDI/7IS>.^SX8
fVW#>I?0fUE7O#HK0Bc+CQY\6aeJ9L_TQ;\f3DGSf<#UI=>PXa^;?g\FTTKbY:W7
&Y(S2;WXX]_Fe)ZAb[b84bJKa2MdeRX00+1Vg6c_A-HHVM@-U<<7RH=+DeRRCYM=
[NJN;d?c;0DJ^@[YW]aS,[2<IVBF9(;,90a>TefAdgM@3QEQQdB;W_&ZVJQ/3;U3
IBgcRU_RKAQP12dSfUQNNCJCG(e:0a0#V?2dWfGA+Og^LEFaA(d=c(-CE4IGf]L.
DZHFQa+)NE25WJgTb?EgU6Q40b8UI1:>U2]NCT4b9I6DXM0T//47K&R#D/(:Y-EL
)D;A?\L293C;3^:RR7dP7@KUNAMJ.1Z8f5ZXM4+JIQ],PQF5RW#(BR/><bCS/bNT
f0Z]F>Se+FRY^G3:/2^JGg:d5P(9cT6Z#@Q>2R13P=CfT[aY^7/C1IMLZ^Q(R5<P
UgF9?)a_W3Y<7Y@:^4P<C6ae6=E+YFQG+^7H-ZSeJYK]35C_YeE)J0IF&bF(65PH
.g5F\Eab:MP4\cZDcX&)3H^@Z_WII-PS8<2[I=:1FHG6b.:&gZR?D=0V<\RP7I3M
+?8^1Jf29R=W_a40F1M/K/HI[&.?LaW/g+\7N#38QYI=[B-RUW#\K8Qg:N9./KP(
Ec860-DggG0Og)eF7eU,NP>B^bd02M43.aA(.A143H.A-6_4,U4Z:9D7Cc&FYR@R
>9S69GP3#JCCNK;QHOM(SeSZ7K:VV:BS0BATR+U>>)U;F^-9b9/]P(W#?]P@7XL/
8S_8OXd<G-NK8ZZ.bX9b)KOB)dN,62B/^ND0e@E</YZa>J&c0Y^T0U_>4fB.g:LW
[=8Oa<Q@N7LN+Fc#+Y+3@.ZP.AC->O0<DY#WV12]>af+c+VR,<8Icc;UX?&TPQPV
0))IWd1Ra+7(EGFORKB[L50](W;EDHTH_0X#MN[Wf[R_@<IJ]YP7/\.I/1:W,FZg
=&-A#A/5KAIX2P4Ya3EbVV8J><U+/^X6HKYKN-4FP>>S8X,8Xb[L5/QXN:9OGePO
-V:)E:UM6E]HO@bG66F?ddbD\_=SA@0=OK-8:RW(Q:Pa9c#CM]:PWI<90f#4\>V-
@dC<_6ebDE5JTGbLa,b7Gf.U/1VG#4B>KMPT/d2(Q3OM=g=TCDR4B047@_2fg4U6
9VDJSbZPf-;&<c2gfKD<R:.8A9b(gYf)X9HbU64)\N=1CfdeJPeI&c_5ADgWeIHY
59OD\,E85ZW023)[;@.UH-D;)]PVbMKa-3[H;>BX9KU-MeU-H/3D6Qc]d:1ZYA&\
DWdK([5FWE)b->;+eCSXK:/LH?M;=R6MCYe))HAcRb2NY6+MKK/:\;(_<4NPI1^X
Ne@G:E36\V+2+8Rb,;K+6A4\_LHW>P3XKG_^_/_He?/0f[5eN/c69R#Y_\8.B,OT
V-f_Qf7MH<78FX1Z4S729/>H+QD2/6S(,#QY4WQ)SLKDTTBBGQ\;5NX-D?;_DWB?
,TR;C.)IN#H#EUQ/0ffSa,BS<B11&0D7bV,-L>#XD-VLR(K\e?fAO_W])S9P7T(S
2L<Ac&XA_B_6]d(PDLO7>)T:/_dRAG)aA=RX=feJV:FMb.JBg3UO6;TRCPN42FZ,
:RO?,/MFGcS(M]bXgZf_I52U(2JLcOM_^,7CO/5Hc@QA3R4/IGB8A9PgB9NXG59K
2Z)2ZQcI9_W,O2JW2:1#b,&)L<CLRKUAZcO]Ub:\DM05AP.F_U;FD9>;L=8(TCe/
A29-\<XZ,IdZe-eCdFG,0c=837Q1S_5V4M\cFR^DRZ,?.>2IBTEX2MJYbB>d[A#Z
HR&H.RW^.)UQTJT2EIK<DUe(.2)_#8g8c(A4M4@AX2QFTd&cDA79HH@0e,AZZS8U
LFaO(e8(O=bC(EQ>\Wd_aQ,&:0cN,I^-\/>@ZP_Cf+g.QT.G?HM.\TG_aHVN.T@E
CEYUbTIJ4)DV:C5E-:]VOPD7&gI++WH0>dJFDIZ/+DcI\@->&B<IE5U2-6Ma[F2&
0SB[a;3B9fE-RZWZFV5KOZIPUV=AA,)O(A?OGYUT5<-)HAYaY^[^IJ@N:A_,gO@:
/IOdgNKSDe[1Y],YTUXb.V,9Of8:N513f]aD3B#SV8V@=2Ab0SQGID=MC8+@6C+W
NYHAUGMddLTSZ]Hb<I>]HEH>b22E(USM0J20SXQ)XPZa_1Gf>UcgK[Q3ID+5#3Td
f2/&4Rd#NgY&16/WVggZ:9X+..XSI>RII=B2g3D29T1EHV(8#f.6K8-?J]Uc_&R\
3B+@ZNUE]RQ4gR;a2g-g8fWY5MdQI_]gM21&#2EB#6_bMW]O5dNK)U@W_-<eW18g
-J])AfP8I0/OY2HDf[Z6V<)abI@2bRNP]G1c/@23)KV9/Z)d0\g3M_8@FBQMTN/E
?M\=E8^2QW4F-SS,KFe+/2e,.<P_.)U@NQg.g(F27SDgd24G_U0)K-D.Z8AN,#M:
UR#BSL:bGVHA)J5AMXPI3A0JObZ9[(+S#G=;7HQP\72QJ:KD10#FCBCH0f,aCAK\
F#Q90F]M(^e\#2/Q>F_d8d2_,R3fI<+C++3=[:R^2:EHM1+\0a>2X0<5LVZG]-;W
VFd;EGZ=]8,/4--HKaRF=fZ-L__G>E#g9L218CN9<J#cG,F2BFZ(;(J@;dE)g/UL
1=UE6d.SMEH4L&L3>EMVE]+,P1/CRDSJ#Y-=:YC+\[ZY&1EQ&S\3/.(DT&7e,Q=,
C71=.VYN28PPG\[b&g(1Q1.90c#>JFFA)\E,^)F9(0[VFd[[V\6YbG,D;^AgfCJJ
Ma2J<&,)^?MD<S&CKNHH::A_(Q4(&BZAI350ZBc:^-V;;gGSD0I/J<XdX]&aIFXg
eUf7Mf<\1F->VQZ]CWR^6)gAN:_T1^EE2.>S<(+/DKW7f8R_b9]3D&afQPNGM=f7
RAI4N#NAD6eI-[J/bN,NPZ08-A[CI,B4<B;X2([=WLLNefa8@[)2F.NHc5F;f]K1
V(IO^ZfCYNT.CKb/FPKUYV)^c>@#CDaP/F]A[a<RU#:0I9(5(:V8>U2[#W+G]ILY
WQI-MP=7)T<,gSAY->F+BF:bbO-^<,#;<4Q?>I-1@UFRG)Q-K5=YL?f8>PRG-&4I
dIDY7_,89C02[^D0a.WHO,:@SG&@_b=OCFCXaE9]6C\5PJH:FJ.,&O#(B&\5BMY;
QP#,;=D433g-8G/YYU5B?B#9O9<AN.&96EON5B)#Zf,9/^a]DE4VM1ECV29P(N/]
KDNSBCHM,4OO688G^[N=_0A5RUaJ/a@/.8[B5GZH.[SB240\5/\):9M7U@2;9>Z<
(K\+-#VMe&;UV1dGWUPX<LG:MGg7.K,<_C@?-K=#J@V]P2,WgW;Y,RR.4MAc9[\D
_1F(/N>4d:e&=J2c<S,5#fda#BNYN;1C68?\e4&C3.Y#[f2/D2F5LM.f+eV@E/:W
?YP,Zb+3?af\_2@I#VOP@:=4OOKb3_>aG.1F5ZHcWW/Jc#BXF=<\\@&[),886KFW
I[Nb\-PO]A[R#eP44MfF>U2@?585E]6RO5(IU5&,2<--9/.8YJ2FJH6@(3B[2bPe
L?aUG8Y7;A_,[8g+Y-/N5d#<6?^\Z10=E:\20.NE-TAX?Pga??;a.B7W1NZU9>MF
O4FUIc,7F4VT(Y\2-LFP,We\]a:g<?d/U>aX:K)Q4=(_A?RPK;fN7&e?c.4E\HS2
TISXYL[-VK._d4/8/aQKf80EZTB6a0+A)bITO@fU5(D<=&E7S,;W.ZD_[aeG,BTI
K,_N]ScNe,U,+B.9N3.1&(#\@<[6dM[#Lb.N(_+1@2@a(B1)DF8W2&-O&_]VT7#T
cU]K,.=80FD[&76]YTI&cbI0E#&L:F7?32DDe6+THc/IU978I04D9WcM-K+=<>[\
MRW8DN,-=UN>Z-KM-U=70R<()XP/LX5Q=6e9=@S9L6<N?/27ICK\]UVLU_T(dEPJ
XaM\FO4VX&QMTASQ5NC9>GP/LDQK1^-\F(@)6W=_#EBde,P+FQ8Y2XJ:CW(0WYf:
6/Zc0]@)L>C22T_G:@W7DWc()5<_)/.ME5)-g#fB#@=(]RPI^2F@.SeK,R3AE_FI
HN)&eVCeIG[D-L43Sd5.:VN/C@-U6PMN&@8IeA4Z/[abT#WB[N9?B(JF@0M]GfF:
M\GX6H1NA2^E&IS52MCCI.)FHJJ:P5f&Z@XD&>)4?[#D4c5aDFO#)_TMY8RDOB<a
-cH1YDb?,edGEU:<[DO)Q23Y^BB6Q)SY[Va[#X=H8<^Jd14M(b]G+IJ584]]Ff=#
Q,.8\e(FKD@-A;WQ7I/<J/?4N-PDF=\fg=20^>,@R6f2:(dGN(7bOZVQ.OJ4Y6:G
VYR[b^bFYC:^G:bV6HZ];&;4A\;52->Oc]YTG5>4\@cI.=(8aLL>LRd7-;](ReNI
]J95X?Ze3Se==S;@W2L&1NF^)QA_9]ACTG7BUYX[W-)3f,G3VgSeA/HO(CEd3Ua,
7QR(39JI1U>eg(8>I;+MQ1D#(->8-c1Hc[.46MXK:(DFS>X2<G=(IE8_XG-Ig#Fg
>ZNNL]+@e_D[WYK@c+?TTU@@B@Y]NZOD[]NdeS(=+^EI7GA273PFX/@/#K=.QW#I
L),Y=D6;A;c<f6_@CVTTBaa<ZW^U?aY9OX(2L,0g91_Q(H6:e&C1U-=-6ge.VD16
Yg(fB#MId<U_)75TZAKgM8-Y8WU99V&Q9/NEM\+-;V=F=W^dc\,-]G#60O1G;U[T
T^Q<CHDD4.7TdG\B<.bZa>E#U;3,(Y,M(L_;d^G./,)6.\XK2TGF=ba/?Ub]+-:^
D+b7@G4B?ML\C/dIIG+,1e)CQeCU=gKGZ#U>d=EDc(L]43429LWB?TI4W4D\Xd/P
.^;\5L<dA)+12_FX..^9HHTIJf6>;MdTI),1-YEc?T.M:JBVY;IFG[DSbb/Xd,E5
N#1NV<1#JOAfE/Wd?_D1H:@_KJ;JO9Sa6,.\]-F3ZD7_]]d)W^O;N5b(GeN,I)J2
7b^CfH1Q_cTFFM]JKA27@Y<C(.ZB.]EGRO<.04]VMV+M&_\?IHb^&3A)K\1f8];W
YKR^_DX]4cA9.A3Tg#)1bfWI@Yc&_II>L+R^-L<Z_#GFF->(T:BI/509d:6QH7Pd
Jcb.e(,bEM:0Y8LFdM.P6)M^[LDa\A54=Oe-gEfd(EefX9[[UFA[Uc()4+?#85JP
PX=g&7g>U_4DW7TP>,.SU;LCE<8DU+@8?M)WD)O]e)3dDI4DbN=N;P9_151X,PL6
7O+_cC/EG_R=(./]I)S#>64?O2EGVc[\PSS22QQSbF1C<YOb@PS8BR9?YaH5,GSB
f592f.2#N9\eG<V<DRc^@X)2[@I7QcB#U^4W)QeANe0:KH#RWSA[fC_?P39BZ[>5
PbM0[GA^?2;G241>TP[g7D=I<9OF/1Xe^6PAFeK(X6BZ.HTc+]X?K.+;[>_&PA+O
c717+IMGOPODGH4I]Y>+5F..4,gXP54[#TM^F=;:909YMFSWHS/@6W:C?5He3,H+
J\5Od_eY@(A.gg>_B1:HF&;=W0UI9S&HLQR_<8LPb9Ogg<+6QHU5+Y)/^/Q+&?6Z
D_;.N55ZDHPMGT;eg>1JNM#KQ36(e+U09d8Ja-Y-H&&NY/.9:ZU\#cTK]SU/S;SI
0J#PeT0U3]R7f/c?7KCP39NO;V<E7F6F7AcH_HSa64,),Qa<-R2aBg<Egdf\=K,F
#3K-_VR5IEZ,[.A2W3<W[+]-WU=Ma(aF26JaW0C5);b,V(<]=83Oc<]Ed>_#HYcb
aBGca/^Y/O50DJFG40d8PIBS:ESN+Z_E)&_.c6Z@DB]4SP[ca1C>00_/g3^\_GPQ
/2)B/b/6NSK]_QB<D+5D8ZM_aTVUTT/_a65BeK?.J#<>dR(-E0e2R#0[5._R7H6c
1a(0VMW<>^.aH)8HVd>]CJ#/<A<VRPOZ=Ng5]ge(fR-+KH4_(>YVNMEa)[6_BT<V
@PbI@,gLOV,AKBY-C9H;\.E[cF8eedZ)[F^LR]2+IgP1UIVY(7AZ-OeIR2B3B3D(
/eW269=U\0DLB2g_3.R&,Jba+@C]MHXSa=C<:;I56?KC5;#M5VE&LN.b<,SJAXX]
/\<\3N#C:c0?^@H:YD##+P#3g:-H0bK92-/+<+UA0D.9-\J24;ON,\]eKBM,A8I6
UcGY/V83@R3Ae,/#e4(0g2d3,_ZW.]Q;fR#PgG7,IfKP1:KI5:L6aH_KD)[QH=D6
1KIQcU-IV/:V(&:Gf-I6Va382[XPL^dfS0\JLdM^GS[P(EdL8B/&2fN(JMBH\3KO
/2R713\;>Oa<W.;H]8,#Q,A;a@+egPd9=Dd5A#Z^JFgOG)=IFGfQY:<2.Nb=UXQ6
/HbXZ>6Y#-H6GWSX2=/3L\BPDKCDPFS&A^Z\JPGGDe?e9X#C<H7?S?](g25QZL=W
/cS^,d?aR2Gcc)\FY(eOQ]39VJ5FS[J54&#K(5DY#&/BHMA)KPTJ:^ASMKFI7W>X
&@NTe0H?,D1Z[?RPb\7W&O\;._Gc/C<+.D;@=T5,C-XbaG294C^@=gKA^;QMN6CY
g+;VbHH=XEXYeMSV9ED_XX0aWBc)Y96VF:3J#F1.d3=;+[^,DQ14K)FNdN9cY2:6
/65L&K]VFU66ZV3S;YIdA-7<PW<f+FIS-eFL3/TTJB\TXM(dOaCb/YFP>2^#P2#&
[W,OO29S@Q5)9NG-^Y-AX@N-+[LgEV&g_aYG</@JcTJf]I;Z6,2O6)_.ee7/[M5?
eM@AH9f\<cgNUXT[BHQ=3&>Z<GD-2B2(S_>C(1]V2J<[AgEGBO,(c\&BJ7KO)FPe
4N3;7M>6U,dZW#6AME?@6II/PG0GF#e=\bO7:&)cZD8QOLFQ39>1DP@dQFL(P.PB
,K8dMY-g@]M/,P/7f[a0G^J+^PA;T?/)LFS0If86I)NgZ]A(@&([KY7\^e@eK/WA
fH+J.\9J8,)=WeFd7(POU[Xf^O^R[?&):[e<PSBG>Ve-ZEQbQZTfHOLJ7=\V,DHV
X1_I^2e7d@>(5<>L3EbEFMSHRTX]VKc1TIH5<JgXaB?O&fcE^QKKaOA)Q?@3R(Ff
[HG4]UT_[02NSf\<MbQNNZCMZE)&0YZ=\>A-K+?+(.9W/AO:-XE4X6bT[K.,Rg>[
#a>Y<Nf;2#>I)d+73Y>6L.@-+J0aDVSZ&QZ@c=\2I5OKYNXTdA-MYDe,XW>dM.gD
]QG7TEHN[F0IUES,88S:N/T6M,2c^7#gdGPZW[:8D.<U\.CEK-\KYbK2.Ue8A-N,
PVEEEVI+3S1(^8&;5AFE(J/L/eX&EgO-?80e;9EXB5H/;VMdBE^We1AXIFVBI:YJ
S[R13#WJJOK?dO96JY23?./2Cb:8LEB3-[TQA?4Hd+^V,Fg4(K&743M>\YU3AC:S
Vg\=e/d6GR+?J\.IZIDO838Q^-.gZDD44PaEA-3GBW:g;#2K;a@H>B=#f@.0R))g
:;QdfJ1#I54FY<0\Z7cE[@0J&P&HOSeGR<6E1H-75g@/8[U=Y5ZL1/LB/WQaU+-2
I:b7+<Y.F#P:;GJG6XaGF>#SOZQdWWT##1b5Z99X9+53(H^KfES,0CAa)F)cFK&(
C.B+A;5G=#D8#TeZg[;WSA8@NTF]55#^DZB0D>b8UJTB&GFGdDQ9Q;N72D(&JdCI
\&LU[e#\Bd@S^/9B1)bQ<8)#LW8Ac#aPF0R,g3H1?\[]7aP49]KSI1c8QG&Q.OH#
\)7\a4]fJA+^a+6DYB,/700@BbO3QPd/a>f-7E-KdY53GcF-),&ACMCN#XZ9NC.J
G)J2308B_;YW\,0UB:8F.>>@P/.,gWT_;QC2?aWe1Af3-7e_X[g.0]8K65HPA#_/
Y9\eJQ(#P1-\450MHZNP:O\FN;gKKOVN65MM7EdM1TMCWHVWc7b<6O6ST/RQE<<L
>MgTH1GG11<XR#+DBKHeO<\\:X0:HX;20@@.41.YE((&(JWg.;5<6G_+>0[AMeGY
<MH)M(WA@R]>f<>BAF9;CGIY88B@H=8JTIGHTgWBVOATc:61N<1efL3F2NQS+#JS
4(2FL419V-E:V,c=]H9e2=GQ=K19A_C/^GM@.;+>5YH(#R]OON@g2FS?=][d2[9\
f=bA/^/,0IZ-HRR;LFB]V^4Q>4LM\2D:G(,D\cDd5.EgFB3CZHEMCS4DM.NNKETO
E=F#ceO:HD)cGL)#T\).L14H3ZR(AQ)20VE7J=ZB/?b0R-7^e/#.V,V)[TBU,FC6
/XLVFA>B=)8[XZ]&A)#e7c==)a(6D?dgW9XLFU4Wd[.2,Q&I&M=g02.M1WRB2@RC
Y.+aEK;G<A5CfD>gY#b,Z@D.0@ecO(?>O.PXJA?bAEb,U,a/3O;5EG@(3cO)=IE1
9-<b[GY\^,/[XLW\8NAMfP]1I(SL^@XdC;+2fTGVBRcBa/\RgYYfbcN#EOD<=<;)
gfA.TBdXX>QY^_2_>N9Ag\_PVK.J7@6=]IJQ:RQ3DY;A]3L&__E;5Y9DTU5VJFO+
PTB>_Xb&K#?OLKRE]KV]YB/&FBPfg6eH0N3ZOM&J,E7FXT[M:L4#=5e[T9HF.eZ)
A2)3Hf7bN^_Q4Ac2Y/OGAgK)W3aQW9>,/<+e8NM2T(PDA_f77f6;5RfP\JQSU>[5
^=S/BCa?)G3SRS280>04<8d^0Z2/8b-4,U[b83HHD_fMPE<85SF<]K9-CU4ZVK1-
CD[-8,5\JF)MP_#3d:KeVcQEN\(^<2Qc_\>T-2a)##H/[-9F9/VDKK;4aM#+/7S(
^e5W\5NX#9YDTd6.DS&V4^U8K.I)R2Xb9B-9J[YNdf+CFde?g.7L]_,?E9g)/9.8
]/30[:H47ZE64fHb[f+I+,Hd4gENS-[ZDDEX(C&cA37dbMFgCU.]1WPN,bESN]-M
G]1/><aL8cS]XdQAd1_\J]6?37CWF\?G^3B<2e,/COHL41T8]e7.f-baHN,Z5ZOK
.gE;;+S0SeEW2Q8?\cG=CRLJ_EZ6QZ]+H;9c/ID[[C0SSF&\_C(_/)a7[5g9Z]eN
YMI^,-5,CBFc2OZ1WIIC^D31B[TUc(a3;,4S9@JJEEB5CfCPc(4&(.5Vf@48^_95
7QA6(9g]XHV5YEg:a0L[;=VK?2Y33d/CRH&??=7XEG-b8VY18ROU8W1Q>PVV+=aB
JRAGg-.^FgL10770)Y,ZW-55\@cX:+5]Y(@8gIEGHD;62eF(DFEU?B]c#McV.1V1
;1[[K4&X_g6_(FXE:bH(38=IPH>gERa]gZ&H8^gOPACCaD-UaHM^b]e.4^X\.1R&
0a&<Web#ge,;)J><F=]+8gD)2KX2\#>H8fWXX0#)BEDV82RKK3_HP1,-)+H:,=Pb
R.^J,Q@]=F5JI?E,FB[0)8UbY95K)\/g)eXDD>@6g]33OUbU1QDC[.OEd?1g?+DO
gT]:ED-T;>G3YXOW#5cCVW,6J6]d64P>&/4AHF#g)2ACYRVG)#&O7-9QPWNJ1BaC
4\?>#(gU3a82Jf8KYdb2)P+:f/95cH0;g,K:1cd^BR36#,O)(CXIE2fdQ<def3-&
=Va8\&ZO(.CWXS[-#;efQ<C))f/)\e[e&MKKbKcXYfCLaU&?c(=6<<V;<CJ-P&VI
C9.J[U.c.5IR=KFS<R&3:&U:S/_g<c-eA^J2^?SE:6B[RJ0WUXL>&=AdbFK[Q25W
E9_c^3I5/(@;X#Xf.E[+4YJ>;?f-==+c>g7)/EY_FFT_S)XC&P=I;UQ;\TAc_-3c
968?Q+#_>5]3c481V<<DR@W/7=aY\a,38BOeFI&efD6)Y<3gQPVX3QH_5dgXP_H+
[/)_D<1aeWbWZ/\6_)(?09]K>NPL4&@eDWLg;7#6UV9PWFab0C/[a6_(cXQZO>4?
F]6[#M7E,]3^7B<Df:\F<^ISC:OI\0IQN1Ye)2WQg0YR+F(2H#T]d:HS_YH;aRM<
(RD2>[Q@e/ac52feSJO7UI7\<?[@=5Y1J778-=0G0PE8b3_R>R]EVEB^-cW,UB>>
MOAQNWQ-8_,Y0QY3&YY(_W1d(O:F4TWaIdD.B^2O])_(GN<NAE2JHJ8.M;S3bH.g
]+XVOWDB]f0/,A,bcZ[?]4@SUKF6W9[ggV#QUGdeQb5fac/;?4dTWZgcENRCOEUV
A15FHK3T@fgC\;HBDIH]4;2>9?4U_D8,?Z3_+.XMB:\@A8KYA.P7ADA:.00MeE_3
6^aHMM/81,f05A8R9+G5BRTXA.Wb82KIcQe][Z\5#QH-aDg<<>Kd4DWe:CGY4R(f
]a)5g2?K&Z3<,CQTeRMcN#dXg))CfS2(MA4cRcA;R&LbG,9?LDLVW6dc=Z&I[[4X
>=YKef&UNS(<,1ADGeZ2OT[gNTOeMVC21G3[a1La=<.d7aOUC\[dN8GYO,1MFSYA
=Ud2gb^:XO5BT2;?#f-,VT\f@S4)Tg9d88PNP27)#S1WW^HU5#=b<J2d:]FPC0cI
RI,GIV29-I-PV]K:+<0P/U\Z^(9gJYJ@A[<3;BOgJ8ETUBG42/Y4[<Rd:D<.2>E6
Q?.8T=[gVbT9g1aR(f8ZX\e7=4S9H[\RO2S:PY1SD-ge1R\31g?><+Z1d8[D@)QL
.0.I\U69\O365X4&WdG17KNB1A6cZ-V2,X(YH6S.5dLD-9df;(H8ZD;;a9PeabW[
?]e+?ef_0//\95d),O#SOBeL@D,#N)5(1G0RcC3c2dF#RYcQPP8T(e_&<Y&N0(5A
KEbR7a.._g+Z,PB<TdbYZSL[Q6:D,MV=<_aJAT:B;23Q-?RVFL]VMLL1-2SaK4.P
Z[WD?&W0[U\6c?[b5)0^N5Q0aE=dC1[>]6L47+7Y(A3WII+DX.1R6SG[R\Y6I,H6
(\@UNET7-3FO;?\@K^2KJL&U,F\(1AcgVL]e#??0X^)=V<DO3<bN,Wa.HS<UX+/8
7(7C.EVJ&JSBRa9F3QBN17+\PCWe+&<a8,-Ec#?ePA_S_#Z9fPYNe&_f-1=8ECX:
:F/^WH758B>X:&JRF6,>C[/Y>7cM16N<PKJ>4X_L?51PGB+RIZ>6&d4?SEZ.8b>Z
8F1OMNc:3ZWJ37)S(Ig&1(eb(ZIU<MO^YX,9GDV1=\2[1](ba3>7;S:X\3^Z(TV(
[)4EG?;[MCLV0Ie[8Vb7ZNF0\^QYJ/QDQb33\Ida_g5d0GGDGCT:D\a+Z(;6\C+e
JbQadX28df@F0OJ(V1dIVF1)DE_DT3SI@.+W<Od4X?;:bT9XO.B:JeW[=DT_U\HA
:)cG^]gbgd/c2+D>?G/24H^DW69G#DWX;Y>:Mg8gVY[;J^6BJVO\.740?.\O64Q(
QE^+7Ya>RQ][D#FI/G&ae(.D+5[1W(?Kc[f/d,+dJ>V&X.Cc>gX;_#L8W,,M0LI7
8@U+OC]/=;dE\&^VNgZS.Z@3[Q@@eg9ZdNWPBK#[fcZ5^+5<c^FNg<A22,N2,U(;
aKM9</,3LGVNa0:>R3&gH^AAQ,A5M&]bJg>HUbeWa^Y4XC4&TW+\a-MAe#_8(0#H
#ML#X+d#3,>4AE>8,6[P^8:[@SU6HDWX(aM_3fD1,APJ&U)8\=CX-;5TC_[dUaD3
/b#dZGMO(B+O#ae)(cM5QE/Vc/BX;A)V4BWX^A#9Q#g4NbJ(-NL=;#DI#8f-eVJ4
8LN=c:Y?_cP\,e7/;LK/R6[#bf>fH735,I)]&S/U^Pfeb3S&ef,LI]HdQ+;D5=WC
#;7__Z?0Q<FS52fQG:5a>S0eO\VLX@Ng3Vc]X86D,50M-..3NRcbd1/Zg#XP:K5+
&L.Wc6X7:Ab/gH\B7>SO&3H/O^,cYWIaX8:PV)ZKAB:Z8gI_gCU7:71Cf3>dH.I#
deU:\_BQDMcd+8MaeAVY=d#BEG<f>^L@KZLV)[EFF#^NSd4]2>K1fQ1]E)Bg^c=[
+452[89KX-:c/XdZ0(Rc3E9B,@R40H>L9,1W2]I0(+-H::]UEd:URUVb.M-fd>6I
E>=+))Vb&B.12.5We4cLOaS<3e1#eTKQE;LO5]eNTcKCP^8O+5IXTC=FNN-ZR<G.
?^W9SP3Oc629#AM@V?B2[P-COT2BN(U#Q[=7B/RaJFW(1PId3:UPD3KX2D_1:3Qc
5VSGeVC-;>);F[L5]2?)5KQTLJdN3)N\UDGDGF;\4a&(3QQHYFJS;\UWf2RG2TIa
(4=Bb<W=N[8(eaIPJ-Z[e5)SD1HaV;=6^2<5aAN-#-e75I=VJWAf?UKCOOg>;?:7
1f-0]>\.>Xa&:?5&6Fe7GH7COGYb3F#GO30ML>4,B]c#c;:LV5MdDU\GTe\,G2_a
Z>@fC=:99LST+Y@fLNQG\U]N=J.F]6S-ZS]?e@3.aCM1QG57Pf\Z(1G0]Ga@WZ43
8[.d>9;[?WAg=5AL)F_8[_UeHL5-c:WfGIg>Q2B5ZS]R.II?Z3A_1[Z+=-NJM=&#
UYKA?>ceT9:Ebc6L9#7(C#GD8ZeL)\+Uc^g=A-S_@b[/,2,_2R.=O6<]6^:G5&TD
K3a:LgD8_ISEfQ[R7U)4=eC57#@A7I2NI&>g)5A3Eb8f604/,W/^1PB?B7Z@\0++
V:OB5eDLJ7+EMA((_fD_.^FOGT#GgXaCE>+H#T@gS8L>[5D=H\9YUa8EA__U^0[V
2gf2PX,T\0I>/Y+R#-dE3@NZHCZBEZfEYI9J0,.5[VO1+;J4T\6EQC&gJ:9+FE79
g9K-fYc_\:XAg]P_b?]f6MNAdT1BM4LL:+GQbH/,bNKPA@G92I,DYD(B5&/00IF?
@7B4SMO;G6S6[S@Q\N-bF:R@^IM?bLCVcPO[GWS1GBeefYa(.P#g\\g;C2RQcf<F
_-&E27,;c=)7\fDc+<EP=LYVS>C9HFGM28/P-\3Q,c[0^7VOL[2O\C9I#+50=M]E
\U&\Ne9A(b/Q2Eg-8<<,]_YV3$
`endprotected


`endif // GUARD_SVT_CHI_PROTOCOL_ERR_CHECK_SV
