//=======================================================================
// COPYRIGHT (C) 2011-2016 SYNOPSYS INC.
// This software and the associated documentation are confidential and
// proprietary to Synopsys, Inc. Your use or disclosure of this software
// is subject to the terms and conditions of a written license agreement
// between you, or your company, and Synopsys, Inc. In the event of
// publications, the following notice is applicable:
//
// ALL RIGHTS RESERVED
//
// The entire notice above must be reproduced on all authorized copies.
//
//-----------------------------------------------------------------------

`ifndef GUARD_SVT_OVM_PKG
`define GUARD_SVT_OVM_PKG

/**
 * Clients wishing to pull in the OVM package manually have a couple of options for doing so.
 *
 *  - SVT_EXCLUDE_METHODOLOGY_PKG - If the goal is to avoid having to specify OVM_HOME on the
 *    command line, then the SVT package needs to exclude all OVM file references. The client
 *    can accomplish this by setting the SVT_EXCLUDE_METHODOLOGY_PKG define on the command
 *    line. This will cause both ovm_pkg.sv and ovm_macros.svh to be excluded from
 *    svt.ovm.pkg. The testbench must ensure that the OVM package has already been compiled
 *    and that the ovm_pkg is available to be imported before compiling the VIP package when
 *    using this option.  The ovm_macros.svh file must also be included by the testbench
 *    before compiling the VIP package.
 *
 *  - SVT_EXCLUDE_METHODOLOGY_PKG_INCLUDE - If the goal is to just externalize the compile,
 *    but to support the specification of an OVM_HOME on the command line, then the SVT
 *    package just needs to exclude the 'include' reference for the OVM package. The
 *    client can accomplish this by setting the SVT_EXCLUDE_METHODOLOGY_PKG_INCLUDE define on
 *    the command line.  This will cause ovm_pkg.sv to be excluded from svt.ovm.pkg, but
 *    ovm_macros.svh will still be included by the SVT package.  The testbench must ensure
 *    that the OVM package has already been compiled and that the ovm_pkg is available to be
 *    imported before compiling the VIP package when using this option.
 *  .
 */

`ifdef DESIGNWARE_INCDIR
   `define SVT_BOOTLOADER_SVI  `"`DESIGNWARE_INCDIR/vip/svt/common/latest/sverilog/include/svt_bootloader.svi`"
   `include `SVT_BOOTLOADER_SVI
`else
   `include "svt_bootloader.svi"
`endif

`ifdef SVT_EXCLUDE_METHODOLOGY_PKG
 `ifndef SVT_EXCLUDE_METHODOLOGY_PKG_INCLUDE
  `define SVT_EXCLUDE_METHODOLOGY_PKG_INCLUDE
 `endif
 `ifndef SVT_EXCLUDE_METHODOLOGY_PKG_MACROS
  `define SVT_EXCLUDE_METHODOLOGY_PKG_MACROS
 `endif
`endif

`ifndef SVT_EXCLUDE_METHODOLOGY_PKG_INCLUDE
 `ifndef OVM_PKG_SV
  `include "ovm_pkg.sv"
 `endif
`endif

`ifdef VCS
`ifndef SVT_FSDB_ENABLE
`ifdef VERDI_DUMPER_LIB_PRESENT
`define SVT_FSDB_ENABLE
`endif
`endif
`endif

`include `SVT_SOURCE_MAP_LIB_INCLUDE_SVI(R-2020.12,svt_gpio_if)

package svt_ovm_pkg;
 import ovm_pkg::*;
`ifndef SVT_EXCLUDE_METHODOLOGY_PKG_MACROS
 `ifndef OVM_MACROS_SVH
  `include "ovm_macros.svh"
 `endif
`endif

 typedef virtual svt_gpio_if svt_gpio_vif;

 // Loading directly, without an SVT_SOURCE_MAP macro, since this initial
 // load basically acts to bootstrap the loader subsystem.
`include `SVT_SOURCE_MAP_LIB_INCLUDE_SVI(R-2020.12,svt_source.ovm)

 const ovm_report_object reporter = ovm_root::get();

endpackage

// This macro must be unset so that a pure SVT model can be loaded after
// a SVT UVM Wrapper model.
`undef SVT_BFM_SOURCE_VMT_SUITE_STRUCTURE

// Load the svt_pkg_precursor AFTER the package so we have access to the loader macros
`include `SVT_SOURCE_MAP_LIB_MODULE(R-2020.12,svt_pkg_precursor)

`else

// If the svt.ovm.pkg file has already been loaded, then we must still
// load svt_loader_util.svi so that the SVT_SOURCE_MAP_* macros can be
// defined correctly.
`undef GUARD_SVT_LOADER_UTIL_SVI
`undef SVT_SOURCE_MAP_SUITE_ROOT
`undef SVT_SOURCE_MAP_MODEL_MODULE
`undef SVT_SOURCE_MAP_SUITE_MODULE
`undef SVT_SOURCE_MAP_LIB_MODULE
`undef SVT_SOURCE_MAP_MODEL_INCLUDE_SVI
`undef SVT_SOURCE_MAP_MODEL_CMD_INCLUDE_SVI
`undef SVT_SOURCE_MAP_AGENT_INCLUDE_SVI
`undef SVT_SOURCE_MAP_AGENT_CMD_INCLUDE_SVI
`undef SVT_SOURCE_MAP_ENV_INCLUDE_SVI
`undef SVT_SOURCE_MAP_ENV_CMD_INCLUDE_SVI
`undef SVT_SOURCE_MAP_MODEL_SRC_SVI
`undef SVT_SOURCE_MAP_SUITE_SRC_SVI
`undef SVT_SOURCE_MAP_LIB_SRC_SVI

`include `SVT_SOURCE_MAP_LIB_INCLUDE_SVI(R-2020.12,svt_loader_util)


// This macro must be unset so that a pure SVT model can be loaded after
// a SVT UVM Wrapper (yes, UVM wrapper -- not OVM wrapper) model.
`undef SVT_BFM_SOURCE_VMT_SUITE_STRUCTURE

`endif //GUARD_SVT_OVM_PKG
