//--------------------------------------------------------------------------
// COPYRIGHT (C) 2019 SYNOPSYS INC.
// This software and the associated documentation are confidential and
// proprietary to Synopsys, Inc. Your use or disclosure of this software
// is subject to the terms and conditions of a written license agreement
// between you, or your company, and Synopsys, Inc. In the event of
// publications, the following notice is applicable:
//
// ALL RIGHTS RESERVED
//
// The entire notice above must be reproduced on all authorized copies.
//--------------------------------------------------------------------------


// DESCRIPTION: This file is simply a convenience to allow the inclusion of both
// the common define symbols, and the port define symbols, from a single file.
// Also there is a `include to read in any user-overrides defined in a
// user-specified file, whose path has been assigned to the `SVT_CHI_USER_DEFINES
// symbol.

`ifndef GUARD_SVT_CHI_DEFINES_SVI
`define GUARD_SVT_CHI_DEFINES_SVI


`ifndef SVT_AMBA_VERSION
`define SVT_AMBA_VERSION R-2020.12
`endif

// First read in the user-specified defines (if any), that may take precedence
// over some of the following defaults...
`ifdef SVT_CHI_INCLUDE_USER_DEFINES
  `ifndef SVT_CHI_INCLUDED_USER_DEFINES
    `define SVT_CHI_INCLUDED_USER_DEFINES
    `include "svt_chi_user_defines.svi"
  `endif
`endif // SVT_CHI_INCLUDE_USER_DEFINES

//------------------------------------------
// Define internal spec issue macros
//------------------------------------------
`ifndef SVT_CHI_INTERNAL_SPEC_ISSUE_MACROS_DEFINED

  `define SVT_CHI_INTERNAL_SPEC_ISSUE_MACROS_DEFINED

  `ifdef SVT_CHI_ISSUE_E_ENABLE
    `define SVT_CHI_ISSUE_E_ONLY_FEATURES_ENABLE
    `define SVT_CHI_ISSUE_D_ENABLE
    `define SVT_CHI_ISSUE_C_ENABLE
    `define SVT_CHI_ISSUE_B_ENABLE
    `define SVT_CHI_ISSUE_A_ENABLE
  `elsif SVT_CHI_ISSUE_D_ENABLE
    `define SVT_CHI_ISSUE_D_ONLY_FEATURES_ENABLE
    `define SVT_CHI_ISSUE_C_ENABLE
    `define SVT_CHI_ISSUE_B_ENABLE
    `define SVT_CHI_ISSUE_A_ENABLE
  `elsif SVT_CHI_ISSUE_C_ENABLE
    `define SVT_CHI_ISSUE_C_ONLY_FEATURES_ENABLE
    `define SVT_CHI_ISSUE_B_ENABLE
    `define SVT_CHI_ISSUE_A_ENABLE
  `elsif SVT_CHI_ISSUE_B_ENABLE
    `define SVT_CHI_ISSUE_B_ONLY_FEATURES_ENABLE
    `define SVT_CHI_ISSUE_A_ENABLE
  `else
    `define SVT_CHI_ISSUE_A_ONLY_FEATURES_ENABLE
    `define SVT_CHI_ISSUE_A_ENABLE
  `endif

`endif //  `ifndef SVT_CHI_INTERNAL_SPEC_ISSUE_MACROS_DEFINED
//------------------------------------------

//------------------------------------------
// Define Coverage related Spec macro's based on internal spec issue macros
// SVT_CHI_ISSUE_B_ISSUE_C_ONLY_FEATURES_ENABLE: Used to guard CG's applicable from Issue B to Issue C only
// SVT_CHI_ISSUE_A_TO_ISSUE_C_ONLY_FEATURES_ENABLE: Used to guard CG's applicable from Issue A to Issue C only
//------------------------------------------
`ifdef SVT_CHI_ISSUE_C_ONLY_FEATURES_ENABLE
  `define SVT_CHI_ISSUE_B_ISSUE_C_ONLY_FEATURES_ENABLE
  `define SVT_CHI_ISSUE_A_TO_ISSUE_C_ONLY_FEATURES_ENABLE
`elsif SVT_CHI_ISSUE_B_ONLY_FEATURES_ENABLE
  `define SVT_CHI_ISSUE_B_ISSUE_C_ONLY_FEATURES_ENABLE
  `define SVT_CHI_ISSUE_A_TO_ISSUE_C_ONLY_FEATURES_ENABLE
`elsif SVT_CHI_ISSUE_A_ONLY_FEATURES_ENABLE
  `define SVT_CHI_ISSUE_A_TO_ISSUE_C_ONLY_FEATURES_ENABLE
`endif

// Read in the symbolic constants that control signal widths.
`include "svt_chi_port_defines.svi"

// Read in the symbolic constants for common values used by the CHI VIP.
`include "svt_chi_common_defines.svi"

// Read in the symbolic constants that define flit fields.
`include "svt_chi_flit_defines.svi"


`endif // GUARD_SVT_CHI_DEFINES_SVI
